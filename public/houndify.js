(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === 'object' && typeof module === 'object')
    module.exports = factory(require('WebSocket'));
  else if (typeof define === 'function' && define.amd)
    define(['WebSocket'], factory);
  else if (typeof exports === 'object')
    exports['Houndify'] = factory(require('WebSocket'));
  else root['Houndify'] = factory(root['WebSocket']);
})(
  typeof self !== 'undefined' ? self : this,
  function (__WEBPACK_EXTERNAL_MODULE_92__) {
    return /******/ (function (modules) {
      // webpackBootstrap
      /******/ // The module cache
      /******/ var installedModules = {};
      /******/
      /******/ // The require function
      /******/ function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/ if (installedModules[moduleId]) {
          /******/ return installedModules[moduleId].exports;
          /******/
        }
        /******/ // Create a new module (and put it into the cache)
        /******/ var module = (installedModules[moduleId] = {
          /******/ i: moduleId,
          /******/ l: false,
          /******/ exports: {},
          /******/
        });
        /******/
        /******/ // Execute the module function
        /******/ modules[moduleId].call(
          module.exports,
          module,
          module.exports,
          __webpack_require__
        );
        /******/
        /******/ // Flag the module as loaded
        /******/ module.l = true;
        /******/
        /******/ // Return the exports of the module
        /******/ return module.exports;
        /******/
      }
      /******/
      /******/
      /******/ // expose the modules object (__webpack_modules__)
      /******/ __webpack_require__.m = modules;
      /******/
      /******/ // expose the module cache
      /******/ __webpack_require__.c = installedModules;
      /******/
      /******/ // define getter function for harmony exports
      /******/ __webpack_require__.d = function (exports, name, getter) {
        /******/ if (!__webpack_require__.o(exports, name)) {
          /******/ Object.defineProperty(exports, name, {
            /******/ configurable: false,
            /******/ enumerable: true,
            /******/ get: getter,
            /******/
          });
          /******/
        }
        /******/
      };
      /******/
      /******/ // getDefaultExport function for compatibility with non-harmony modules
      /******/ __webpack_require__.n = function (module) {
        /******/ var getter =
          module && module.__esModule
            ? /******/ function getDefault() {
                return module['default'];
              }
            : /******/ function getModuleExports() {
                return module;
              };
        /******/ __webpack_require__.d(getter, 'a', getter);
        /******/ return getter;
        /******/
      };
      /******/
      /******/ // Object.prototype.hasOwnProperty.call
      /******/ __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/
      /******/ // __webpack_public_path__
      /******/ __webpack_require__.p = '';
      /******/
      /******/ // Load entry module and return exports
      /******/ return __webpack_require__((__webpack_require__.s = 49));
      /******/
    })(
      /************************************************************************/
      /******/ [
        /* 0 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                  value: ctor,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              });
            };
          } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function TempCtor() {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            };
          }

          /***/
        },
        /* 1 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /* eslint-disable node/no-deprecated-api */
          var buffer = __webpack_require__(4);
          var Buffer = buffer.Buffer;

          // alternative to using Object.keys for old browsers
          function copyProps(src, dst) {
            for (var key in src) {
              dst[key] = src[key];
            }
          }
          if (
            Buffer.from &&
            Buffer.alloc &&
            Buffer.allocUnsafe &&
            Buffer.allocUnsafeSlow
          ) {
            module.exports = buffer;
          } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports);
            exports.Buffer = SafeBuffer;
          }

          function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length);
          }

          // Copy static methods from Buffer
          copyProps(Buffer, SafeBuffer);

          SafeBuffer.from = function (arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
              throw new TypeError('Argument must not be a number');
            }
            return Buffer(arg, encodingOrOffset, length);
          };

          SafeBuffer.alloc = function (size, fill, encoding) {
            if (typeof size !== 'number') {
              throw new TypeError('Argument must be a number');
            }
            var buf = Buffer(size);
            if (fill !== undefined) {
              if (typeof encoding === 'string') {
                buf.fill(fill, encoding);
              } else {
                buf.fill(fill);
              }
            } else {
              buf.fill(0);
            }
            return buf;
          };

          SafeBuffer.allocUnsafe = function (size) {
            if (typeof size !== 'number') {
              throw new TypeError('Argument must be a number');
            }
            return Buffer(size);
          };

          SafeBuffer.allocUnsafeSlow = function (size) {
            if (typeof size !== 'number') {
              throw new TypeError('Argument must be a number');
            }
            return buffer.SlowBuffer(size);
          };

          /***/
        },
        /* 2 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var g;

          // This works in non-strict mode
          g = (function () {
            return this;
          })();

          try {
            // This works if eval is allowed (see CSP)
            g = g || Function('return this')() || (1, eval)('this');
          } catch (e) {
            // This works if the window reference is available
            if (
              (typeof window === 'undefined'
                ? 'undefined'
                : _typeof(window)) === 'object'
            )
              g = window;
          }

          // g can still be undefined, but nothing to do about it...
          // We return undefined, instead of nothing here, so it's
          // easier to handle this case. if(!global) { ...}

          module.exports = g;

          /***/
        },
        /* 3 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // shim for using process in browser
          var process = (module.exports = {});

          // cached from whatever global is present so that test runners that stub it
          // don't break things.  But we need to wrap it in a try catch in case it is
          // wrapped in strict mode code which doesn't define any globals.  It's inside a
          // function because try/catches deoptimize in certain engines.

          var cachedSetTimeout;
          var cachedClearTimeout;

          function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
          }
          function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
          }
          (function () {
            try {
              if (typeof setTimeout === 'function') {
                cachedSetTimeout = setTimeout;
              } else {
                cachedSetTimeout = defaultSetTimout;
              }
            } catch (e) {
              cachedSetTimeout = defaultSetTimout;
            }
            try {
              if (typeof clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout;
              } else {
                cachedClearTimeout = defaultClearTimeout;
              }
            } catch (e) {
              cachedClearTimeout = defaultClearTimeout;
            }
          })();
          function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
              //normal enviroments in sane situations
              return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if (
              (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
              setTimeout
            ) {
              cachedSetTimeout = setTimeout;
              return setTimeout(fun, 0);
            }
            try {
              // when when somebody has screwed with setTimeout but no I.E. maddness
              return cachedSetTimeout(fun, 0);
            } catch (e) {
              try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                return cachedSetTimeout.call(null, fun, 0);
              } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                return cachedSetTimeout.call(this, fun, 0);
              }
            }
          }
          function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
              //normal enviroments in sane situations
              return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if (
              (cachedClearTimeout === defaultClearTimeout ||
                !cachedClearTimeout) &&
              clearTimeout
            ) {
              cachedClearTimeout = clearTimeout;
              return clearTimeout(marker);
            }
            try {
              // when when somebody has screwed with setTimeout but no I.E. maddness
              return cachedClearTimeout(marker);
            } catch (e) {
              try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                return cachedClearTimeout.call(null, marker);
              } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                return cachedClearTimeout.call(this, marker);
              }
            }
          }
          var queue = [];
          var draining = false;
          var currentQueue;
          var queueIndex = -1;

          function cleanUpNextTick() {
            if (!draining || !currentQueue) {
              return;
            }
            draining = false;
            if (currentQueue.length) {
              queue = currentQueue.concat(queue);
            } else {
              queueIndex = -1;
            }
            if (queue.length) {
              drainQueue();
            }
          }

          function drainQueue() {
            if (draining) {
              return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
              currentQueue = queue;
              queue = [];
              while (++queueIndex < len) {
                if (currentQueue) {
                  currentQueue[queueIndex].run();
                }
              }
              queueIndex = -1;
              len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
          }

          process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
              for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
              }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
              runTimeout(drainQueue);
            }
          };

          // v8 likes predictible objects
          function Item(fun, array) {
            this.fun = fun;
            this.array = array;
          }
          Item.prototype.run = function () {
            this.fun.apply(null, this.array);
          };
          process.title = 'browser';
          process.browser = true;
          process.env = {};
          process.argv = [];
          process.version = ''; // empty string to avoid regexp issues
          process.versions = {};

          function noop() {}

          process.on = noop;
          process.addListener = noop;
          process.once = noop;
          process.off = noop;
          process.removeListener = noop;
          process.removeAllListeners = noop;
          process.emit = noop;
          process.prependListener = noop;
          process.prependOnceListener = noop;

          process.listeners = function (name) {
            return [];
          };

          process.binding = function (name) {
            throw new Error('process.binding is not supported');
          };

          process.cwd = function () {
            return '/';
          };
          process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
          };
          process.umask = function () {
            return 0;
          };

          /***/
        },
        /* 4 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
             * @license  MIT
             */

            var base64 = __webpack_require__(52);
            var ieee754 = __webpack_require__(53);
            var isArray = __webpack_require__(24);

            exports.Buffer = Buffer;
            exports.SlowBuffer = SlowBuffer;
            exports.INSPECT_MAX_BYTES = 50;

            /**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
            Buffer.TYPED_ARRAY_SUPPORT =
              global.TYPED_ARRAY_SUPPORT !== undefined
                ? global.TYPED_ARRAY_SUPPORT
                : typedArraySupport();

            /*
             * Export kMaxLength after typed array support is determined.
             */
            exports.kMaxLength = kMaxLength();

            function typedArraySupport() {
              try {
                var arr = new Uint8Array(1);
                arr.__proto__ = {
                  __proto__: Uint8Array.prototype,
                  foo: function foo() {
                    return 42;
                  },
                };
                return (
                  arr.foo() === 42 && // typed array instances can be augmented
                  typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
                  arr.subarray(1, 1).byteLength === 0
                ); // ie10 has broken `subarray`
              } catch (e) {
                return false;
              }
            }

            function kMaxLength() {
              return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
            }

            function createBuffer(that, length) {
              if (kMaxLength() < length) {
                throw new RangeError('Invalid typed array length');
              }
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                // Return an augmented `Uint8Array` instance, for best performance
                that = new Uint8Array(length);
                that.__proto__ = Buffer.prototype;
              } else {
                // Fallback: Return an object instance of the Buffer class
                if (that === null) {
                  that = new Buffer(length);
                }
                that.length = length;
              }

              return that;
            }

            /**
             * The Buffer constructor returns instances of `Uint8Array` that have their
             * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
             * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
             * and the `Uint8Array` methods. Square bracket notation works as expected -- it
             * returns a single octet.
             *
             * The `Uint8Array` prototype remains unmodified.
             */

            function Buffer(arg, encodingOrOffset, length) {
              if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
                return new Buffer(arg, encodingOrOffset, length);
              }

              // Common case.
              if (typeof arg === 'number') {
                if (typeof encodingOrOffset === 'string') {
                  throw new Error(
                    'If encoding is specified then the first argument must be a string'
                  );
                }
                return allocUnsafe(this, arg);
              }
              return from(this, arg, encodingOrOffset, length);
            }

            Buffer.poolSize = 8192; // not used by this implementation

            // TODO: Legacy, not needed anymore. Remove in next major version.
            Buffer._augment = function (arr) {
              arr.__proto__ = Buffer.prototype;
              return arr;
            };

            function from(that, value, encodingOrOffset, length) {
              if (typeof value === 'number') {
                throw new TypeError('"value" argument must not be a number');
              }

              if (
                typeof ArrayBuffer !== 'undefined' &&
                value instanceof ArrayBuffer
              ) {
                return fromArrayBuffer(that, value, encodingOrOffset, length);
              }

              if (typeof value === 'string') {
                return fromString(that, value, encodingOrOffset);
              }

              return fromObject(that, value);
            }

            /**
             * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
             * if value is a number.
             * Buffer.from(str[, encoding])
             * Buffer.from(array)
             * Buffer.from(buffer)
             * Buffer.from(arrayBuffer[, byteOffset[, length]])
             **/
            Buffer.from = function (value, encodingOrOffset, length) {
              return from(null, value, encodingOrOffset, length);
            };

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              Buffer.prototype.__proto__ = Uint8Array.prototype;
              Buffer.__proto__ = Uint8Array;
              if (
                typeof Symbol !== 'undefined' &&
                Symbol.species &&
                Buffer[Symbol.species] === Buffer
              ) {
                // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
                Object.defineProperty(Buffer, Symbol.species, {
                  value: null,
                  configurable: true,
                });
              }
            }

            function assertSize(size) {
              if (typeof size !== 'number') {
                throw new TypeError('"size" argument must be a number');
              } else if (size < 0) {
                throw new RangeError('"size" argument must not be negative');
              }
            }

            function alloc(that, size, fill, encoding) {
              assertSize(size);
              if (size <= 0) {
                return createBuffer(that, size);
              }
              if (fill !== undefined) {
                // Only pay attention to encoding if it's a string. This
                // prevents accidentally sending in a number that would
                // be interpretted as a start offset.
                return typeof encoding === 'string'
                  ? createBuffer(that, size).fill(fill, encoding)
                  : createBuffer(that, size).fill(fill);
              }
              return createBuffer(that, size);
            }

            /**
             * Creates a new filled Buffer instance.
             * alloc(size[, fill[, encoding]])
             **/
            Buffer.alloc = function (size, fill, encoding) {
              return alloc(null, size, fill, encoding);
            };

            function allocUnsafe(that, size) {
              assertSize(size);
              that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
              if (!Buffer.TYPED_ARRAY_SUPPORT) {
                for (var i = 0; i < size; ++i) {
                  that[i] = 0;
                }
              }
              return that;
            }

            /**
             * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
             * */
            Buffer.allocUnsafe = function (size) {
              return allocUnsafe(null, size);
            };
            /**
             * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
             */
            Buffer.allocUnsafeSlow = function (size) {
              return allocUnsafe(null, size);
            };

            function fromString(that, string, encoding) {
              if (typeof encoding !== 'string' || encoding === '') {
                encoding = 'utf8';
              }

              if (!Buffer.isEncoding(encoding)) {
                throw new TypeError(
                  '"encoding" must be a valid string encoding'
                );
              }

              var length = byteLength(string, encoding) | 0;
              that = createBuffer(that, length);

              var actual = that.write(string, encoding);

              if (actual !== length) {
                // Writing a hex string, for example, that contains invalid characters will
                // cause everything after the first invalid character to be ignored. (e.g.
                // 'abxxcd' will be treated as 'ab')
                that = that.slice(0, actual);
              }

              return that;
            }

            function fromArrayLike(that, array) {
              var length = array.length < 0 ? 0 : checked(array.length) | 0;
              that = createBuffer(that, length);
              for (var i = 0; i < length; i += 1) {
                that[i] = array[i] & 255;
              }
              return that;
            }

            function fromArrayBuffer(that, array, byteOffset, length) {
              array.byteLength; // this throws if `array` is not a valid ArrayBuffer

              if (byteOffset < 0 || array.byteLength < byteOffset) {
                throw new RangeError("'offset' is out of bounds");
              }

              if (array.byteLength < byteOffset + (length || 0)) {
                throw new RangeError("'length' is out of bounds");
              }

              if (byteOffset === undefined && length === undefined) {
                array = new Uint8Array(array);
              } else if (length === undefined) {
                array = new Uint8Array(array, byteOffset);
              } else {
                array = new Uint8Array(array, byteOffset, length);
              }

              if (Buffer.TYPED_ARRAY_SUPPORT) {
                // Return an augmented `Uint8Array` instance, for best performance
                that = array;
                that.__proto__ = Buffer.prototype;
              } else {
                // Fallback: Return an object instance of the Buffer class
                that = fromArrayLike(that, array);
              }
              return that;
            }

            function fromObject(that, obj) {
              if (Buffer.isBuffer(obj)) {
                var len = checked(obj.length) | 0;
                that = createBuffer(that, len);

                if (that.length === 0) {
                  return that;
                }

                obj.copy(that, 0, 0, len);
                return that;
              }

              if (obj) {
                if (
                  (typeof ArrayBuffer !== 'undefined' &&
                    obj.buffer instanceof ArrayBuffer) ||
                  'length' in obj
                ) {
                  if (typeof obj.length !== 'number' || isnan(obj.length)) {
                    return createBuffer(that, 0);
                  }
                  return fromArrayLike(that, obj);
                }

                if (obj.type === 'Buffer' && isArray(obj.data)) {
                  return fromArrayLike(that, obj.data);
                }
              }

              throw new TypeError(
                'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
              );
            }

            function checked(length) {
              // Note: cannot use `length < kMaxLength()` here because that fails when
              // length is NaN (which is otherwise coerced to zero.)
              if (length >= kMaxLength()) {
                throw new RangeError(
                  'Attempt to allocate Buffer larger than maximum ' +
                    'size: 0x' +
                    kMaxLength().toString(16) +
                    ' bytes'
                );
              }
              return length | 0;
            }

            function SlowBuffer(length) {
              if (+length != length) {
                length = 0;
              }
              return Buffer.alloc(+length);
            }

            Buffer.isBuffer = function isBuffer(b) {
              return !!(b != null && b._isBuffer);
            };

            Buffer.compare = function compare(a, b) {
              if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                throw new TypeError('Arguments must be Buffers');
              }

              if (a === b) return 0;

              var x = a.length;
              var y = b.length;

              for (var i = 0, len = Math.min(x, y); i < len; ++i) {
                if (a[i] !== b[i]) {
                  x = a[i];
                  y = b[i];
                  break;
                }
              }

              if (x < y) return -1;
              if (y < x) return 1;
              return 0;
            };

            Buffer.isEncoding = function isEncoding(encoding) {
              switch (String(encoding).toLowerCase()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'latin1':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return true;
                default:
                  return false;
              }
            };

            Buffer.concat = function concat(list, length) {
              if (!isArray(list)) {
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              }

              if (list.length === 0) {
                return Buffer.alloc(0);
              }

              var i;
              if (length === undefined) {
                length = 0;
                for (i = 0; i < list.length; ++i) {
                  length += list[i].length;
                }
              }

              var buffer = Buffer.allocUnsafe(length);
              var pos = 0;
              for (i = 0; i < list.length; ++i) {
                var buf = list[i];
                if (!Buffer.isBuffer(buf)) {
                  throw new TypeError(
                    '"list" argument must be an Array of Buffers'
                  );
                }
                buf.copy(buffer, pos);
                pos += buf.length;
              }
              return buffer;
            };

            function byteLength(string, encoding) {
              if (Buffer.isBuffer(string)) {
                return string.length;
              }
              if (
                typeof ArrayBuffer !== 'undefined' &&
                typeof ArrayBuffer.isView === 'function' &&
                (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)
              ) {
                return string.byteLength;
              }
              if (typeof string !== 'string') {
                string = '' + string;
              }

              var len = string.length;
              if (len === 0) return 0;

              // Use a for loop to avoid recursion
              var loweredCase = false;
              for (;;) {
                switch (encoding) {
                  case 'ascii':
                  case 'latin1':
                  case 'binary':
                    return len;
                  case 'utf8':
                  case 'utf-8':
                  case undefined:
                    return utf8ToBytes(string).length;
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return len * 2;
                  case 'hex':
                    return len >>> 1;
                  case 'base64':
                    return base64ToBytes(string).length;
                  default:
                    if (loweredCase) return utf8ToBytes(string).length; // assume utf8
                    encoding = ('' + encoding).toLowerCase();
                    loweredCase = true;
                }
              }
            }
            Buffer.byteLength = byteLength;

            function slowToString(encoding, start, end) {
              var loweredCase = false;

              // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
              // property of a typed array.

              // This behaves neither like String nor Uint8Array in that we set start/end
              // to their upper/lower bounds if the value passed is out of range.
              // undefined is handled specially as per ECMA-262 6th Edition,
              // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
              if (start === undefined || start < 0) {
                start = 0;
              }
              // Return early if start > this.length. Done here to prevent potential uint32
              // coercion fail below.
              if (start > this.length) {
                return '';
              }

              if (end === undefined || end > this.length) {
                end = this.length;
              }

              if (end <= 0) {
                return '';
              }

              // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
              end >>>= 0;
              start >>>= 0;

              if (end <= start) {
                return '';
              }

              if (!encoding) encoding = 'utf8';

              while (true) {
                switch (encoding) {
                  case 'hex':
                    return hexSlice(this, start, end);

                  case 'utf8':
                  case 'utf-8':
                    return utf8Slice(this, start, end);

                  case 'ascii':
                    return asciiSlice(this, start, end);

                  case 'latin1':
                  case 'binary':
                    return latin1Slice(this, start, end);

                  case 'base64':
                    return base64Slice(this, start, end);

                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return utf16leSlice(this, start, end);

                  default:
                    if (loweredCase)
                      throw new TypeError('Unknown encoding: ' + encoding);
                    encoding = (encoding + '').toLowerCase();
                    loweredCase = true;
                }
              }
            }

            // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
            // Buffer instances.
            Buffer.prototype._isBuffer = true;

            function swap(b, n, m) {
              var i = b[n];
              b[n] = b[m];
              b[m] = i;
            }

            Buffer.prototype.swap16 = function swap16() {
              var len = this.length;
              if (len % 2 !== 0) {
                throw new RangeError(
                  'Buffer size must be a multiple of 16-bits'
                );
              }
              for (var i = 0; i < len; i += 2) {
                swap(this, i, i + 1);
              }
              return this;
            };

            Buffer.prototype.swap32 = function swap32() {
              var len = this.length;
              if (len % 4 !== 0) {
                throw new RangeError(
                  'Buffer size must be a multiple of 32-bits'
                );
              }
              for (var i = 0; i < len; i += 4) {
                swap(this, i, i + 3);
                swap(this, i + 1, i + 2);
              }
              return this;
            };

            Buffer.prototype.swap64 = function swap64() {
              var len = this.length;
              if (len % 8 !== 0) {
                throw new RangeError(
                  'Buffer size must be a multiple of 64-bits'
                );
              }
              for (var i = 0; i < len; i += 8) {
                swap(this, i, i + 7);
                swap(this, i + 1, i + 6);
                swap(this, i + 2, i + 5);
                swap(this, i + 3, i + 4);
              }
              return this;
            };

            Buffer.prototype.toString = function toString() {
              var length = this.length | 0;
              if (length === 0) return '';
              if (arguments.length === 0) return utf8Slice(this, 0, length);
              return slowToString.apply(this, arguments);
            };

            Buffer.prototype.equals = function equals(b) {
              if (!Buffer.isBuffer(b))
                throw new TypeError('Argument must be a Buffer');
              if (this === b) return true;
              return Buffer.compare(this, b) === 0;
            };

            Buffer.prototype.inspect = function inspect() {
              var str = '';
              var max = exports.INSPECT_MAX_BYTES;
              if (this.length > 0) {
                str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
                if (this.length > max) str += ' ... ';
              }
              return '<Buffer ' + str + '>';
            };

            Buffer.prototype.compare = function compare(
              target,
              start,
              end,
              thisStart,
              thisEnd
            ) {
              if (!Buffer.isBuffer(target)) {
                throw new TypeError('Argument must be a Buffer');
              }

              if (start === undefined) {
                start = 0;
              }
              if (end === undefined) {
                end = target ? target.length : 0;
              }
              if (thisStart === undefined) {
                thisStart = 0;
              }
              if (thisEnd === undefined) {
                thisEnd = this.length;
              }

              if (
                start < 0 ||
                end > target.length ||
                thisStart < 0 ||
                thisEnd > this.length
              ) {
                throw new RangeError('out of range index');
              }

              if (thisStart >= thisEnd && start >= end) {
                return 0;
              }
              if (thisStart >= thisEnd) {
                return -1;
              }
              if (start >= end) {
                return 1;
              }

              start >>>= 0;
              end >>>= 0;
              thisStart >>>= 0;
              thisEnd >>>= 0;

              if (this === target) return 0;

              var x = thisEnd - thisStart;
              var y = end - start;
              var len = Math.min(x, y);

              var thisCopy = this.slice(thisStart, thisEnd);
              var targetCopy = target.slice(start, end);

              for (var i = 0; i < len; ++i) {
                if (thisCopy[i] !== targetCopy[i]) {
                  x = thisCopy[i];
                  y = targetCopy[i];
                  break;
                }
              }

              if (x < y) return -1;
              if (y < x) return 1;
              return 0;
            };

            // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
            // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
            //
            // Arguments:
            // - buffer - a Buffer to search
            // - val - a string, Buffer, or number
            // - byteOffset - an index into `buffer`; will be clamped to an int32
            // - encoding - an optional encoding, relevant is val is a string
            // - dir - true for indexOf, false for lastIndexOf
            function bidirectionalIndexOf(
              buffer,
              val,
              byteOffset,
              encoding,
              dir
            ) {
              // Empty buffer means no match
              if (buffer.length === 0) return -1;

              // Normalize byteOffset
              if (typeof byteOffset === 'string') {
                encoding = byteOffset;
                byteOffset = 0;
              } else if (byteOffset > 0x7fffffff) {
                byteOffset = 0x7fffffff;
              } else if (byteOffset < -0x80000000) {
                byteOffset = -0x80000000;
              }
              byteOffset = +byteOffset; // Coerce to Number.
              if (isNaN(byteOffset)) {
                // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
                byteOffset = dir ? 0 : buffer.length - 1;
              }

              // Normalize byteOffset: negative offsets start from the end of the buffer
              if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
              if (byteOffset >= buffer.length) {
                if (dir) return -1;
                else byteOffset = buffer.length - 1;
              } else if (byteOffset < 0) {
                if (dir) byteOffset = 0;
                else return -1;
              }

              // Normalize val
              if (typeof val === 'string') {
                val = Buffer.from(val, encoding);
              }

              // Finally, search either indexOf (if dir is true) or lastIndexOf
              if (Buffer.isBuffer(val)) {
                // Special case: looking for empty string/buffer always fails
                if (val.length === 0) {
                  return -1;
                }
                return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
              } else if (typeof val === 'number') {
                val = val & 0xff; // Search for a byte value [0-255]
                if (
                  Buffer.TYPED_ARRAY_SUPPORT &&
                  typeof Uint8Array.prototype.indexOf === 'function'
                ) {
                  if (dir) {
                    return Uint8Array.prototype.indexOf.call(
                      buffer,
                      val,
                      byteOffset
                    );
                  } else {
                    return Uint8Array.prototype.lastIndexOf.call(
                      buffer,
                      val,
                      byteOffset
                    );
                  }
                }
                return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
              }

              throw new TypeError('val must be string, number or Buffer');
            }

            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
              var indexSize = 1;
              var arrLength = arr.length;
              var valLength = val.length;

              if (encoding !== undefined) {
                encoding = String(encoding).toLowerCase();
                if (
                  encoding === 'ucs2' ||
                  encoding === 'ucs-2' ||
                  encoding === 'utf16le' ||
                  encoding === 'utf-16le'
                ) {
                  if (arr.length < 2 || val.length < 2) {
                    return -1;
                  }
                  indexSize = 2;
                  arrLength /= 2;
                  valLength /= 2;
                  byteOffset /= 2;
                }
              }

              function read(buf, i) {
                if (indexSize === 1) {
                  return buf[i];
                } else {
                  return buf.readUInt16BE(i * indexSize);
                }
              }

              var i;
              if (dir) {
                var foundIndex = -1;
                for (i = byteOffset; i < arrLength; i++) {
                  if (
                    read(arr, i) ===
                    read(val, foundIndex === -1 ? 0 : i - foundIndex)
                  ) {
                    if (foundIndex === -1) foundIndex = i;
                    if (i - foundIndex + 1 === valLength)
                      return foundIndex * indexSize;
                  } else {
                    if (foundIndex !== -1) i -= i - foundIndex;
                    foundIndex = -1;
                  }
                }
              } else {
                if (byteOffset + valLength > arrLength)
                  byteOffset = arrLength - valLength;
                for (i = byteOffset; i >= 0; i--) {
                  var found = true;
                  for (var j = 0; j < valLength; j++) {
                    if (read(arr, i + j) !== read(val, j)) {
                      found = false;
                      break;
                    }
                  }
                  if (found) return i;
                }
              }

              return -1;
            }

            Buffer.prototype.includes = function includes(
              val,
              byteOffset,
              encoding
            ) {
              return this.indexOf(val, byteOffset, encoding) !== -1;
            };

            Buffer.prototype.indexOf = function indexOf(
              val,
              byteOffset,
              encoding
            ) {
              return bidirectionalIndexOf(
                this,
                val,
                byteOffset,
                encoding,
                true
              );
            };

            Buffer.prototype.lastIndexOf = function lastIndexOf(
              val,
              byteOffset,
              encoding
            ) {
              return bidirectionalIndexOf(
                this,
                val,
                byteOffset,
                encoding,
                false
              );
            };

            function hexWrite(buf, string, offset, length) {
              offset = Number(offset) || 0;
              var remaining = buf.length - offset;
              if (!length) {
                length = remaining;
              } else {
                length = Number(length);
                if (length > remaining) {
                  length = remaining;
                }
              }

              // must be an even number of digits
              var strLen = string.length;
              if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

              if (length > strLen / 2) {
                length = strLen / 2;
              }
              for (var i = 0; i < length; ++i) {
                var parsed = parseInt(string.substr(i * 2, 2), 16);
                if (isNaN(parsed)) return i;
                buf[offset + i] = parsed;
              }
              return i;
            }

            function utf8Write(buf, string, offset, length) {
              return blitBuffer(
                utf8ToBytes(string, buf.length - offset),
                buf,
                offset,
                length
              );
            }

            function asciiWrite(buf, string, offset, length) {
              return blitBuffer(asciiToBytes(string), buf, offset, length);
            }

            function latin1Write(buf, string, offset, length) {
              return asciiWrite(buf, string, offset, length);
            }

            function base64Write(buf, string, offset, length) {
              return blitBuffer(base64ToBytes(string), buf, offset, length);
            }

            function ucs2Write(buf, string, offset, length) {
              return blitBuffer(
                utf16leToBytes(string, buf.length - offset),
                buf,
                offset,
                length
              );
            }

            Buffer.prototype.write = function write(
              string,
              offset,
              length,
              encoding
            ) {
              // Buffer#write(string)
              if (offset === undefined) {
                encoding = 'utf8';
                length = this.length;
                offset = 0;
                // Buffer#write(string, encoding)
              } else if (length === undefined && typeof offset === 'string') {
                encoding = offset;
                length = this.length;
                offset = 0;
                // Buffer#write(string, offset[, length][, encoding])
              } else if (isFinite(offset)) {
                offset = offset | 0;
                if (isFinite(length)) {
                  length = length | 0;
                  if (encoding === undefined) encoding = 'utf8';
                } else {
                  encoding = length;
                  length = undefined;
                }
                // legacy write(string, encoding, offset, length) - remove in v0.13
              } else {
                throw new Error(
                  'Buffer.write(string, encoding, offset[, length]) is no longer supported'
                );
              }

              var remaining = this.length - offset;
              if (length === undefined || length > remaining)
                length = remaining;

              if (
                (string.length > 0 && (length < 0 || offset < 0)) ||
                offset > this.length
              ) {
                throw new RangeError('Attempt to write outside buffer bounds');
              }

              if (!encoding) encoding = 'utf8';

              var loweredCase = false;
              for (;;) {
                switch (encoding) {
                  case 'hex':
                    return hexWrite(this, string, offset, length);

                  case 'utf8':
                  case 'utf-8':
                    return utf8Write(this, string, offset, length);

                  case 'ascii':
                    return asciiWrite(this, string, offset, length);

                  case 'latin1':
                  case 'binary':
                    return latin1Write(this, string, offset, length);

                  case 'base64':
                    // Warning: maxLength not taken into account in base64Write
                    return base64Write(this, string, offset, length);

                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return ucs2Write(this, string, offset, length);

                  default:
                    if (loweredCase)
                      throw new TypeError('Unknown encoding: ' + encoding);
                    encoding = ('' + encoding).toLowerCase();
                    loweredCase = true;
                }
              }
            };

            Buffer.prototype.toJSON = function toJSON() {
              return {
                type: 'Buffer',
                data: Array.prototype.slice.call(this._arr || this, 0),
              };
            };

            function base64Slice(buf, start, end) {
              if (start === 0 && end === buf.length) {
                return base64.fromByteArray(buf);
              } else {
                return base64.fromByteArray(buf.slice(start, end));
              }
            }

            function utf8Slice(buf, start, end) {
              end = Math.min(buf.length, end);
              var res = [];

              var i = start;
              while (i < end) {
                var firstByte = buf[i];
                var codePoint = null;
                var bytesPerSequence =
                  firstByte > 0xef
                    ? 4
                    : firstByte > 0xdf
                    ? 3
                    : firstByte > 0xbf
                    ? 2
                    : 1;

                if (i + bytesPerSequence <= end) {
                  var secondByte, thirdByte, fourthByte, tempCodePoint;

                  switch (bytesPerSequence) {
                    case 1:
                      if (firstByte < 0x80) {
                        codePoint = firstByte;
                      }
                      break;
                    case 2:
                      secondByte = buf[i + 1];
                      if ((secondByte & 0xc0) === 0x80) {
                        tempCodePoint =
                          ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f);
                        if (tempCodePoint > 0x7f) {
                          codePoint = tempCodePoint;
                        }
                      }
                      break;
                    case 3:
                      secondByte = buf[i + 1];
                      thirdByte = buf[i + 2];
                      if (
                        (secondByte & 0xc0) === 0x80 &&
                        (thirdByte & 0xc0) === 0x80
                      ) {
                        tempCodePoint =
                          ((firstByte & 0xf) << 0xc) |
                          ((secondByte & 0x3f) << 0x6) |
                          (thirdByte & 0x3f);
                        if (
                          tempCodePoint > 0x7ff &&
                          (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)
                        ) {
                          codePoint = tempCodePoint;
                        }
                      }
                      break;
                    case 4:
                      secondByte = buf[i + 1];
                      thirdByte = buf[i + 2];
                      fourthByte = buf[i + 3];
                      if (
                        (secondByte & 0xc0) === 0x80 &&
                        (thirdByte & 0xc0) === 0x80 &&
                        (fourthByte & 0xc0) === 0x80
                      ) {
                        tempCodePoint =
                          ((firstByte & 0xf) << 0x12) |
                          ((secondByte & 0x3f) << 0xc) |
                          ((thirdByte & 0x3f) << 0x6) |
                          (fourthByte & 0x3f);
                        if (
                          tempCodePoint > 0xffff &&
                          tempCodePoint < 0x110000
                        ) {
                          codePoint = tempCodePoint;
                        }
                      }
                  }
                }

                if (codePoint === null) {
                  // we did not generate a valid codePoint so insert a
                  // replacement char (U+FFFD) and advance only 1 byte
                  codePoint = 0xfffd;
                  bytesPerSequence = 1;
                } else if (codePoint > 0xffff) {
                  // encode to utf16 (surrogate pair dance)
                  codePoint -= 0x10000;
                  res.push(((codePoint >>> 10) & 0x3ff) | 0xd800);
                  codePoint = 0xdc00 | (codePoint & 0x3ff);
                }

                res.push(codePoint);
                i += bytesPerSequence;
              }

              return decodeCodePointsArray(res);
            }

            // Based on http://stackoverflow.com/a/22747272/680742, the browser with
            // the lowest limit is Chrome, with 0x10000 args.
            // We go 1 magnitude less, for safety
            var MAX_ARGUMENTS_LENGTH = 0x1000;

            function decodeCodePointsArray(codePoints) {
              var len = codePoints.length;
              if (len <= MAX_ARGUMENTS_LENGTH) {
                return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
              }

              // Decode in chunks to avoid "call stack size exceeded".
              var res = '';
              var i = 0;
              while (i < len) {
                res += String.fromCharCode.apply(
                  String,
                  codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH))
                );
              }
              return res;
            }

            function asciiSlice(buf, start, end) {
              var ret = '';
              end = Math.min(buf.length, end);

              for (var i = start; i < end; ++i) {
                ret += String.fromCharCode(buf[i] & 0x7f);
              }
              return ret;
            }

            function latin1Slice(buf, start, end) {
              var ret = '';
              end = Math.min(buf.length, end);

              for (var i = start; i < end; ++i) {
                ret += String.fromCharCode(buf[i]);
              }
              return ret;
            }

            function hexSlice(buf, start, end) {
              var len = buf.length;

              if (!start || start < 0) start = 0;
              if (!end || end < 0 || end > len) end = len;

              var out = '';
              for (var i = start; i < end; ++i) {
                out += toHex(buf[i]);
              }
              return out;
            }

            function utf16leSlice(buf, start, end) {
              var bytes = buf.slice(start, end);
              var res = '';
              for (var i = 0; i < bytes.length; i += 2) {
                res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
              }
              return res;
            }

            Buffer.prototype.slice = function slice(start, end) {
              var len = this.length;
              start = ~~start;
              end = end === undefined ? len : ~~end;

              if (start < 0) {
                start += len;
                if (start < 0) start = 0;
              } else if (start > len) {
                start = len;
              }

              if (end < 0) {
                end += len;
                if (end < 0) end = 0;
              } else if (end > len) {
                end = len;
              }

              if (end < start) end = start;

              var newBuf;
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                newBuf = this.subarray(start, end);
                newBuf.__proto__ = Buffer.prototype;
              } else {
                var sliceLen = end - start;
                newBuf = new Buffer(sliceLen, undefined);
                for (var i = 0; i < sliceLen; ++i) {
                  newBuf[i] = this[i + start];
                }
              }

              return newBuf;
            };

            /*
             * Need to make sure that buffer isn't trying to write out of bounds.
             */
            function checkOffset(offset, ext, length) {
              if (offset % 1 !== 0 || offset < 0)
                throw new RangeError('offset is not uint');
              if (offset + ext > length)
                throw new RangeError('Trying to access beyond buffer length');
            }

            Buffer.prototype.readUIntLE = function readUIntLE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset | 0;
              byteLength = byteLength | 0;
              if (!noAssert) checkOffset(offset, byteLength, this.length);

              var val = this[offset];
              var mul = 1;
              var i = 0;
              while (++i < byteLength && (mul *= 0x100)) {
                val += this[offset + i] * mul;
              }

              return val;
            };

            Buffer.prototype.readUIntBE = function readUIntBE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset | 0;
              byteLength = byteLength | 0;
              if (!noAssert) {
                checkOffset(offset, byteLength, this.length);
              }

              var val = this[offset + --byteLength];
              var mul = 1;
              while (byteLength > 0 && (mul *= 0x100)) {
                val += this[offset + --byteLength] * mul;
              }

              return val;
            };

            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
              if (!noAssert) checkOffset(offset, 1, this.length);
              return this[offset];
            };

            Buffer.prototype.readUInt16LE = function readUInt16LE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 2, this.length);
              return this[offset] | (this[offset + 1] << 8);
            };

            Buffer.prototype.readUInt16BE = function readUInt16BE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 2, this.length);
              return (this[offset] << 8) | this[offset + 1];
            };

            Buffer.prototype.readUInt32LE = function readUInt32LE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 4, this.length);

              return (
                (this[offset] |
                  (this[offset + 1] << 8) |
                  (this[offset + 2] << 16)) +
                this[offset + 3] * 0x1000000
              );
            };

            Buffer.prototype.readUInt32BE = function readUInt32BE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 4, this.length);

              return (
                this[offset] * 0x1000000 +
                ((this[offset + 1] << 16) |
                  (this[offset + 2] << 8) |
                  this[offset + 3])
              );
            };

            Buffer.prototype.readIntLE = function readIntLE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset | 0;
              byteLength = byteLength | 0;
              if (!noAssert) checkOffset(offset, byteLength, this.length);

              var val = this[offset];
              var mul = 1;
              var i = 0;
              while (++i < byteLength && (mul *= 0x100)) {
                val += this[offset + i] * mul;
              }
              mul *= 0x80;

              if (val >= mul) val -= Math.pow(2, 8 * byteLength);

              return val;
            };

            Buffer.prototype.readIntBE = function readIntBE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset | 0;
              byteLength = byteLength | 0;
              if (!noAssert) checkOffset(offset, byteLength, this.length);

              var i = byteLength;
              var mul = 1;
              var val = this[offset + --i];
              while (i > 0 && (mul *= 0x100)) {
                val += this[offset + --i] * mul;
              }
              mul *= 0x80;

              if (val >= mul) val -= Math.pow(2, 8 * byteLength);

              return val;
            };

            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
              if (!noAssert) checkOffset(offset, 1, this.length);
              if (!(this[offset] & 0x80)) return this[offset];
              return (0xff - this[offset] + 1) * -1;
            };

            Buffer.prototype.readInt16LE = function readInt16LE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 2, this.length);
              var val = this[offset] | (this[offset + 1] << 8);
              return val & 0x8000 ? val | 0xffff0000 : val;
            };

            Buffer.prototype.readInt16BE = function readInt16BE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 2, this.length);
              var val = this[offset + 1] | (this[offset] << 8);
              return val & 0x8000 ? val | 0xffff0000 : val;
            };

            Buffer.prototype.readInt32LE = function readInt32LE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 4, this.length);

              return (
                this[offset] |
                (this[offset + 1] << 8) |
                (this[offset + 2] << 16) |
                (this[offset + 3] << 24)
              );
            };

            Buffer.prototype.readInt32BE = function readInt32BE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 4, this.length);

              return (
                (this[offset] << 24) |
                (this[offset + 1] << 16) |
                (this[offset + 2] << 8) |
                this[offset + 3]
              );
            };

            Buffer.prototype.readFloatLE = function readFloatLE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 4, this.length);
              return ieee754.read(this, offset, true, 23, 4);
            };

            Buffer.prototype.readFloatBE = function readFloatBE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 4, this.length);
              return ieee754.read(this, offset, false, 23, 4);
            };

            Buffer.prototype.readDoubleLE = function readDoubleLE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 8, this.length);
              return ieee754.read(this, offset, true, 52, 8);
            };

            Buffer.prototype.readDoubleBE = function readDoubleBE(
              offset,
              noAssert
            ) {
              if (!noAssert) checkOffset(offset, 8, this.length);
              return ieee754.read(this, offset, false, 52, 8);
            };

            function checkInt(buf, value, offset, ext, max, min) {
              if (!Buffer.isBuffer(buf))
                throw new TypeError(
                  '"buffer" argument must be a Buffer instance'
                );
              if (value > max || value < min)
                throw new RangeError('"value" argument is out of bounds');
              if (offset + ext > buf.length)
                throw new RangeError('Index out of range');
            }

            Buffer.prototype.writeUIntLE = function writeUIntLE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              byteLength = byteLength | 0;
              if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength) - 1;
                checkInt(this, value, offset, byteLength, maxBytes, 0);
              }

              var mul = 1;
              var i = 0;
              this[offset] = value & 0xff;
              while (++i < byteLength && (mul *= 0x100)) {
                this[offset + i] = (value / mul) & 0xff;
              }

              return offset + byteLength;
            };

            Buffer.prototype.writeUIntBE = function writeUIntBE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              byteLength = byteLength | 0;
              if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength) - 1;
                checkInt(this, value, offset, byteLength, maxBytes, 0);
              }

              var i = byteLength - 1;
              var mul = 1;
              this[offset + i] = value & 0xff;
              while (--i >= 0 && (mul *= 0x100)) {
                this[offset + i] = (value / mul) & 0xff;
              }

              return offset + byteLength;
            };

            Buffer.prototype.writeUInt8 = function writeUInt8(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
              if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
              this[offset] = value & 0xff;
              return offset + 1;
            };

            function objectWriteUInt16(buf, value, offset, littleEndian) {
              if (value < 0) value = 0xffff + value + 1;
              for (
                var i = 0, j = Math.min(buf.length - offset, 2);
                i < j;
                ++i
              ) {
                buf[offset + i] =
                  (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
                  ((littleEndian ? i : 1 - i) * 8);
              }
            }

            Buffer.prototype.writeUInt16LE = function writeUInt16LE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value & 0xff;
                this[offset + 1] = value >>> 8;
              } else {
                objectWriteUInt16(this, value, offset, true);
              }
              return offset + 2;
            };

            Buffer.prototype.writeUInt16BE = function writeUInt16BE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value >>> 8;
                this[offset + 1] = value & 0xff;
              } else {
                objectWriteUInt16(this, value, offset, false);
              }
              return offset + 2;
            };

            function objectWriteUInt32(buf, value, offset, littleEndian) {
              if (value < 0) value = 0xffffffff + value + 1;
              for (
                var i = 0, j = Math.min(buf.length - offset, 4);
                i < j;
                ++i
              ) {
                buf[offset + i] =
                  (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff;
              }
            }

            Buffer.prototype.writeUInt32LE = function writeUInt32LE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset + 3] = value >>> 24;
                this[offset + 2] = value >>> 16;
                this[offset + 1] = value >>> 8;
                this[offset] = value & 0xff;
              } else {
                objectWriteUInt32(this, value, offset, true);
              }
              return offset + 4;
            };

            Buffer.prototype.writeUInt32BE = function writeUInt32BE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value >>> 24;
                this[offset + 1] = value >>> 16;
                this[offset + 2] = value >>> 8;
                this[offset + 3] = value & 0xff;
              } else {
                objectWriteUInt32(this, value, offset, false);
              }
              return offset + 4;
            };

            Buffer.prototype.writeIntLE = function writeIntLE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) {
                var limit = Math.pow(2, 8 * byteLength - 1);

                checkInt(this, value, offset, byteLength, limit - 1, -limit);
              }

              var i = 0;
              var mul = 1;
              var sub = 0;
              this[offset] = value & 0xff;
              while (++i < byteLength && (mul *= 0x100)) {
                if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                  sub = 1;
                }
                this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
              }

              return offset + byteLength;
            };

            Buffer.prototype.writeIntBE = function writeIntBE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) {
                var limit = Math.pow(2, 8 * byteLength - 1);

                checkInt(this, value, offset, byteLength, limit - 1, -limit);
              }

              var i = byteLength - 1;
              var mul = 1;
              var sub = 0;
              this[offset + i] = value & 0xff;
              while (--i >= 0 && (mul *= 0x100)) {
                if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                  sub = 1;
                }
                this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
              }

              return offset + byteLength;
            };

            Buffer.prototype.writeInt8 = function writeInt8(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
              if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
              if (value < 0) value = 0xff + value + 1;
              this[offset] = value & 0xff;
              return offset + 1;
            };

            Buffer.prototype.writeInt16LE = function writeInt16LE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value & 0xff;
                this[offset + 1] = value >>> 8;
              } else {
                objectWriteUInt16(this, value, offset, true);
              }
              return offset + 2;
            };

            Buffer.prototype.writeInt16BE = function writeInt16BE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value >>> 8;
                this[offset + 1] = value & 0xff;
              } else {
                objectWriteUInt16(this, value, offset, false);
              }
              return offset + 2;
            };

            Buffer.prototype.writeInt32LE = function writeInt32LE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert)
                checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value & 0xff;
                this[offset + 1] = value >>> 8;
                this[offset + 2] = value >>> 16;
                this[offset + 3] = value >>> 24;
              } else {
                objectWriteUInt32(this, value, offset, true);
              }
              return offset + 4;
            };

            Buffer.prototype.writeInt32BE = function writeInt32BE(
              value,
              offset,
              noAssert
            ) {
              value = +value;
              offset = offset | 0;
              if (!noAssert)
                checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
              if (value < 0) value = 0xffffffff + value + 1;
              if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = value >>> 24;
                this[offset + 1] = value >>> 16;
                this[offset + 2] = value >>> 8;
                this[offset + 3] = value & 0xff;
              } else {
                objectWriteUInt32(this, value, offset, false);
              }
              return offset + 4;
            };

            function checkIEEE754(buf, value, offset, ext, max, min) {
              if (offset + ext > buf.length)
                throw new RangeError('Index out of range');
              if (offset < 0) throw new RangeError('Index out of range');
            }

            function writeFloat(buf, value, offset, littleEndian, noAssert) {
              if (!noAssert) {
                checkIEEE754(
                  buf,
                  value,
                  offset,
                  4,
                  3.4028234663852886e38,
                  -3.4028234663852886e38
                );
              }
              ieee754.write(buf, value, offset, littleEndian, 23, 4);
              return offset + 4;
            }

            Buffer.prototype.writeFloatLE = function writeFloatLE(
              value,
              offset,
              noAssert
            ) {
              return writeFloat(this, value, offset, true, noAssert);
            };

            Buffer.prototype.writeFloatBE = function writeFloatBE(
              value,
              offset,
              noAssert
            ) {
              return writeFloat(this, value, offset, false, noAssert);
            };

            function writeDouble(buf, value, offset, littleEndian, noAssert) {
              if (!noAssert) {
                checkIEEE754(
                  buf,
                  value,
                  offset,
                  8,
                  1.7976931348623157e308,
                  -1.7976931348623157e308
                );
              }
              ieee754.write(buf, value, offset, littleEndian, 52, 8);
              return offset + 8;
            }

            Buffer.prototype.writeDoubleLE = function writeDoubleLE(
              value,
              offset,
              noAssert
            ) {
              return writeDouble(this, value, offset, true, noAssert);
            };

            Buffer.prototype.writeDoubleBE = function writeDoubleBE(
              value,
              offset,
              noAssert
            ) {
              return writeDouble(this, value, offset, false, noAssert);
            };

            // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
            Buffer.prototype.copy = function copy(
              target,
              targetStart,
              start,
              end
            ) {
              if (!start) start = 0;
              if (!end && end !== 0) end = this.length;
              if (targetStart >= target.length) targetStart = target.length;
              if (!targetStart) targetStart = 0;
              if (end > 0 && end < start) end = start;

              // Copy 0 bytes; we're done
              if (end === start) return 0;
              if (target.length === 0 || this.length === 0) return 0;

              // Fatal error conditions
              if (targetStart < 0) {
                throw new RangeError('targetStart out of bounds');
              }
              if (start < 0 || start >= this.length)
                throw new RangeError('sourceStart out of bounds');
              if (end < 0) throw new RangeError('sourceEnd out of bounds');

              // Are we oob?
              if (end > this.length) end = this.length;
              if (target.length - targetStart < end - start) {
                end = target.length - targetStart + start;
              }

              var len = end - start;
              var i;

              if (this === target && start < targetStart && targetStart < end) {
                // descending copy from end
                for (i = len - 1; i >= 0; --i) {
                  target[i + targetStart] = this[i + start];
                }
              } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
                // ascending copy from start
                for (i = 0; i < len; ++i) {
                  target[i + targetStart] = this[i + start];
                }
              } else {
                Uint8Array.prototype.set.call(
                  target,
                  this.subarray(start, start + len),
                  targetStart
                );
              }

              return len;
            };

            // Usage:
            //    buffer.fill(number[, offset[, end]])
            //    buffer.fill(buffer[, offset[, end]])
            //    buffer.fill(string[, offset[, end]][, encoding])
            Buffer.prototype.fill = function fill(val, start, end, encoding) {
              // Handle string cases:
              if (typeof val === 'string') {
                if (typeof start === 'string') {
                  encoding = start;
                  start = 0;
                  end = this.length;
                } else if (typeof end === 'string') {
                  encoding = end;
                  end = this.length;
                }
                if (val.length === 1) {
                  var code = val.charCodeAt(0);
                  if (code < 256) {
                    val = code;
                  }
                }
                if (encoding !== undefined && typeof encoding !== 'string') {
                  throw new TypeError('encoding must be a string');
                }
                if (
                  typeof encoding === 'string' &&
                  !Buffer.isEncoding(encoding)
                ) {
                  throw new TypeError('Unknown encoding: ' + encoding);
                }
              } else if (typeof val === 'number') {
                val = val & 255;
              }

              // Invalid ranges are not set to a default, so can range check early.
              if (start < 0 || this.length < start || this.length < end) {
                throw new RangeError('Out of range index');
              }

              if (end <= start) {
                return this;
              }

              start = start >>> 0;
              end = end === undefined ? this.length : end >>> 0;

              if (!val) val = 0;

              var i;
              if (typeof val === 'number') {
                for (i = start; i < end; ++i) {
                  this[i] = val;
                }
              } else {
                var bytes = Buffer.isBuffer(val)
                  ? val
                  : utf8ToBytes(new Buffer(val, encoding).toString());
                var len = bytes.length;
                for (i = 0; i < end - start; ++i) {
                  this[i + start] = bytes[i % len];
                }
              }

              return this;
            };

            // HELPER FUNCTIONS
            // ================

            var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

            function base64clean(str) {
              // Node strips out invalid characters like \n and \t from the string, base64-js does not
              str = stringtrim(str).replace(INVALID_BASE64_RE, '');
              // Node converts strings with length < 2 to ''
              if (str.length < 2) return '';
              // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
              while (str.length % 4 !== 0) {
                str = str + '=';
              }
              return str;
            }

            function stringtrim(str) {
              if (str.trim) return str.trim();
              return str.replace(/^\s+|\s+$/g, '');
            }

            function toHex(n) {
              if (n < 16) return '0' + n.toString(16);
              return n.toString(16);
            }

            function utf8ToBytes(string, units) {
              units = units || Infinity;
              var codePoint;
              var length = string.length;
              var leadSurrogate = null;
              var bytes = [];

              for (var i = 0; i < length; ++i) {
                codePoint = string.charCodeAt(i);

                // is surrogate component
                if (codePoint > 0xd7ff && codePoint < 0xe000) {
                  // last char was a lead
                  if (!leadSurrogate) {
                    // no lead yet
                    if (codePoint > 0xdbff) {
                      // unexpected trail
                      if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                      continue;
                    } else if (i + 1 === length) {
                      // unpaired lead
                      if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                      continue;
                    }

                    // valid lead
                    leadSurrogate = codePoint;

                    continue;
                  }

                  // 2 leads in a row
                  if (codePoint < 0xdc00) {
                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                    leadSurrogate = codePoint;
                    continue;
                  }

                  // valid surrogate pair
                  codePoint =
                    (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +
                    0x10000;
                } else if (leadSurrogate) {
                  // valid bmp char, but last char was a lead
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                }

                leadSurrogate = null;

                // encode utf8
                if (codePoint < 0x80) {
                  if ((units -= 1) < 0) break;
                  bytes.push(codePoint);
                } else if (codePoint < 0x800) {
                  if ((units -= 2) < 0) break;
                  bytes.push(
                    (codePoint >> 0x6) | 0xc0,
                    (codePoint & 0x3f) | 0x80
                  );
                } else if (codePoint < 0x10000) {
                  if ((units -= 3) < 0) break;
                  bytes.push(
                    (codePoint >> 0xc) | 0xe0,
                    ((codePoint >> 0x6) & 0x3f) | 0x80,
                    (codePoint & 0x3f) | 0x80
                  );
                } else if (codePoint < 0x110000) {
                  if ((units -= 4) < 0) break;
                  bytes.push(
                    (codePoint >> 0x12) | 0xf0,
                    ((codePoint >> 0xc) & 0x3f) | 0x80,
                    ((codePoint >> 0x6) & 0x3f) | 0x80,
                    (codePoint & 0x3f) | 0x80
                  );
                } else {
                  throw new Error('Invalid code point');
                }
              }

              return bytes;
            }

            function asciiToBytes(str) {
              var byteArray = [];
              for (var i = 0; i < str.length; ++i) {
                // Node's code seems to be doing this and not & 0x7F..
                byteArray.push(str.charCodeAt(i) & 0xff);
              }
              return byteArray;
            }

            function utf16leToBytes(str, units) {
              var c, hi, lo;
              var byteArray = [];
              for (var i = 0; i < str.length; ++i) {
                if ((units -= 2) < 0) break;

                c = str.charCodeAt(i);
                hi = c >> 8;
                lo = c % 256;
                byteArray.push(lo);
                byteArray.push(hi);
              }

              return byteArray;
            }

            function base64ToBytes(str) {
              return base64.toByteArray(base64clean(str));
            }

            function blitBuffer(src, dst, offset, length) {
              for (var i = 0; i < length; ++i) {
                if (i + offset >= dst.length || i >= src.length) break;
                dst[i + offset] = src[i];
              }
              return i;
            }

            function isnan(val) {
              return val !== val;
            }
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 5 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (Buffer) {
            var createHmac = __webpack_require__(58);
            var JSONbig = __webpack_require__(13);
            var uuid = __webpack_require__(25);
            __webpack_require__(79);

            var Module = __webpack_require__(80);
            var speex = __webpack_require__(39);
            var config = __webpack_require__(6);

            /*
             * We use the URL-encoded version of base64.  The conversion is very simple:
             */
            function convertBase64URL(encoded, isURL) {
              if (isURL) {
                encoded = encoded.replace(/-/g, '+');
                encoded = encoded.replace(/_/g, '/');
              } else {
                encoded = encoded.replace(/\+/g, '-');
                encoded = encoded.replace(/\//g, '_');
              }

              return encoded;
            }

            /* HMAC sign the token with the access key */
            function sign(token, accessKey) {
              var clientKeyBin = new Buffer(
                convertBase64URL(accessKey, true),
                'base64'
              );
              var hash = createHmac('sha256', clientKeyBin)
                .update(token)
                .digest('base64');
              return convertBase64URL(hash, false);
            }

            module.exports = {
              cloneObject: function cloneObject(obj) {
                if (!obj) return {};

                return JSONbig.parse(JSONbig.stringify(obj));
              },
              setDebug: function setDebug(isDebugging) {
                config.debug = !!isDebugging;
              },
              log: function log() {
                if (config.debug) {
                  console.log.apply(console, arguments);
                }
              },
              wrapListener: function wrapListener(fn, name) {
                return function () {
                  try {
                    if (fn) {
                      fn.apply(this, arguments);
                    }
                  } catch (e) {
                    console.log("Error in '" + name + "' handler: " + e);
                    if (e.stack) {
                      console.log(e.stack);
                    }
                  }
                };
              },
              signToken: function signToken(token, houndifyRequest, callback) {
                if (houndifyRequest.clientKey) {
                  var signed = sign(token, houndifyRequest.clientKey);
                  callback(null, signed);
                } else if (houndifyRequest.authURL) {
                  this.request(
                    {
                      uri: houndifyRequest.authURL,
                      qs: { token: token },
                    },
                    function (error, response, body) {
                      if (error) return callback(error, null);

                      if (response.statusCode !== 200)
                        return callback(body, null);

                      callback(null, body);
                    }
                  );
                } else {
                  throw new Error('Authentication failed');
                }
              },
              escapeUnicode: function escapeUnicode(string) {
                return string
                  .split('')
                  .map(function (char) {
                    var charCode = char.charCodeAt(0);
                    if (charCode > 127) {
                      var hex = charCode.toString(16);
                      var leadingZeros = new Array(5 - hex.length).join('0');
                      return '\\u' + leadingZeros + hex;
                    } else {
                      return char;
                    }
                  })
                  .join('');
              },
              request: function request(opts, callback) {
                // request "lite" for browser side (add more features as needed)

                var url = (opts.proxy || opts.uri) + '?';
                for (var query_key in opts.qs) {
                  url +=
                    query_key + '=' + encodeURIComponent(opts.qs[query_key]);
                }

                var reqOpts = {
                  method: opts.method || 'GET',
                  headers: opts.headers || {},
                };

                if (reqOpts.method !== 'GET') {
                  reqOpts.body = opts.body;
                }

                fetch(url, reqOpts)
                  .then(function (response) {
                    return response.text().then(function (responseText) {
                      callback(
                        null,
                        { statusCode: response.status },
                        responseText
                      );
                    });
                  })
                  .catch(function (error) {
                    callback(error, null, null);
                  });
              },
              decodeAudioData: function decodeAudioData(arrayBuffer, callback) {
                try {
                  if (typeof AudioContext === 'undefined')
                    AudioContext = webkitAudioContext;
                  config.audioCtx = config.audioCtx || new AudioContext();
                } catch (error) {
                  callback('Web Audio API is not supported by your browser.');
                }

                config.audioCtx.decodeAudioData(
                  arrayBuffer,
                  function (audioBuffer) {
                    callback(null, {
                      audioData: audioBuffer.getChannelData(0).slice(),
                      sampleRate: config.audioCtx.sampleRate,
                    });
                  },
                  callback
                );
              },
              decodeBase64: function decodeBase64(b64) {
                return new Buffer(b64, 'base64');
              },
              decodeSpeex: function decodeSpeex(buffer) {
                var inputSize = buffer.length;

                var inBuffer = new Uint8Array(
                  Module.HEAPU8.buffer,
                  Module._malloc(inputSize),
                  inputSize
                );
                for (var idx = 0; idx < inputSize; idx++) {
                  inBuffer[idx] = buffer[idx];
                }

                var outputPointerBuf = new Uint32Array(
                  Module.HEAPU32.buffer,
                  Module._malloc(Module.HEAPU32.BYTES_PER_ELEMENT),
                  1
                );
                var outputSizeBuf = new Uint32Array(
                  Module.HEAPU32.buffer,
                  Module._malloc(Module.HEAPU32.BYTES_PER_ELEMENT),
                  1
                );

                var isWB = speex.decodeSpeex(
                  inBuffer.byteOffset,
                  inputSize,
                  outputPointerBuf.byteOffset,
                  outputSizeBuf.byteOffset
                );

                var outputPointer = outputPointerBuf[0];
                var outputSize = outputSizeBuf[0] / 2; // in shorts
                var outBuffer = new Int16Array(
                  Module.HEAP16.buffer,
                  outputPointer,
                  outputSize
                );

                var result = {
                  sampleRate: isWB ? 16000 : 8000,
                  audioData: outBuffer.slice(),
                };

                Module._free(outputPointerBuf.byteOffset);
                Module._free(outputSizeBuf.byteOffset);
                Module._free(inBuffer.byteOffset);
                Module._free(outBuffer.byteOffset);

                return result;
              },
              generateAuthenticationHeaders:
                function generateAuthenticationHeaders(_ref) {
                  var clientId = _ref.clientId,
                    clientKey = _ref.clientKey,
                    userId = _ref.userId,
                    requestId = _ref.requestId,
                    timestamp = _ref.timestamp;

                  if (!clientId || !clientKey)
                    throw 'Error: clientId and clientKey are required to generate authentication headers.';

                  userId = userId || uuid.v1();
                  requestId = requestId || uuid.v1();
                  timestamp = timestamp || Math.floor(Date.now() / 1000);

                  var requestData = userId + ';' + requestId;
                  var token = requestData + timestamp;

                  return {
                    'Hound-Request-Authentication': requestData,
                    'Hound-Client-Authentication':
                      clientId + ';' + timestamp + ';' + sign(token, clientKey),
                  };
                },
              isString: function isString(obj) {
                try {
                  return typeof obj === 'string' || obj instanceof String;
                } catch (e) {
                  return false;
                }
              },
              isBlob: function isBlob(obj) {
                try {
                  return obj instanceof Blob;
                } catch (e) {
                  return false;
                }
              },
            };
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(4).Buffer);

          /***/
        },
        /* 6 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = {
            version: __webpack_require__(50).version,
            VOICE_ENDPOINT_WS: 'wss://apiws.houndify.com:443',
            TEXT_ENDPOINT: 'https://api.houndify.com/v1/text',
            debug: false,
          };

          /***/
        },
        /* 7 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var TYPED_OK =
            typeof Uint8Array !== 'undefined' &&
            typeof Uint16Array !== 'undefined' &&
            typeof Int32Array !== 'undefined';

          function _has(obj, key) {
            return Object.prototype.hasOwnProperty.call(obj, key);
          }

          exports.assign = function (obj /*from1, from2, from3, ...*/) {
            var sources = Array.prototype.slice.call(arguments, 1);
            while (sources.length) {
              var source = sources.shift();
              if (!source) {
                continue;
              }

              if (
                (typeof source === 'undefined'
                  ? 'undefined'
                  : _typeof(source)) !== 'object'
              ) {
                throw new TypeError(source + 'must be non-object');
              }

              for (var p in source) {
                if (_has(source, p)) {
                  obj[p] = source[p];
                }
              }
            }

            return obj;
          };

          // reduce buffer size, avoiding mem copy
          exports.shrinkBuf = function (buf, size) {
            if (buf.length === size) {
              return buf;
            }
            if (buf.subarray) {
              return buf.subarray(0, size);
            }
            buf.length = size;
            return buf;
          };

          var fnTyped = {
            arraySet: function arraySet(dest, src, src_offs, len, dest_offs) {
              if (src.subarray && dest.subarray) {
                dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
                return;
              }
              // Fallback to ordinary array
              for (var i = 0; i < len; i++) {
                dest[dest_offs + i] = src[src_offs + i];
              }
            },
            // Join array of chunks to single array.
            flattenChunks: function flattenChunks(chunks) {
              var i, l, len, pos, chunk, result;

              // calculate data length
              len = 0;
              for (i = 0, l = chunks.length; i < l; i++) {
                len += chunks[i].length;
              }

              // join chunks
              result = new Uint8Array(len);
              pos = 0;
              for (i = 0, l = chunks.length; i < l; i++) {
                chunk = chunks[i];
                result.set(chunk, pos);
                pos += chunk.length;
              }

              return result;
            },
          };

          var fnUntyped = {
            arraySet: function arraySet(dest, src, src_offs, len, dest_offs) {
              for (var i = 0; i < len; i++) {
                dest[dest_offs + i] = src[src_offs + i];
              }
            },
            // Join array of chunks to single array.
            flattenChunks: function flattenChunks(chunks) {
              return [].concat.apply([], chunks);
            },
          };

          // Enable/Disable typed arrays use, for testing
          //
          exports.setTyped = function (on) {
            if (on) {
              exports.Buf8 = Uint8Array;
              exports.Buf16 = Uint16Array;
              exports.Buf32 = Int32Array;
              exports.assign(exports, fnTyped);
            } else {
              exports.Buf8 = Array;
              exports.Buf16 = Array;
              exports.Buf32 = Array;
              exports.assign(exports, fnUntyped);
            }
          };

          exports.setTyped(TYPED_OK);

          /***/
        },
        /* 8 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // a duplex stream is just a stream that is both readable and writable.
          // Since JS doesn't have multiple prototypal inheritance, this class
          // prototypally inherits from Readable, and then parasitically from
          // Writable.

          /*<replacement>*/

          var pna = __webpack_require__(15);
          /*</replacement>*/

          /*<replacement>*/
          var objectKeys =
            Object.keys ||
            function (obj) {
              var keys = [];
              for (var key in obj) {
                keys.push(key);
              }
              return keys;
            };
          /*</replacement>*/

          module.exports = Duplex;

          /*<replacement>*/
          var util = __webpack_require__(11);
          util.inherits = __webpack_require__(0);
          /*</replacement>*/

          var Readable = __webpack_require__(32);
          var Writable = __webpack_require__(18);

          util.inherits(Duplex, Readable);

          {
            // avoid scope creep, the keys array can then be collected
            var keys = objectKeys(Writable.prototype);
            for (var v = 0; v < keys.length; v++) {
              var method = keys[v];
              if (!Duplex.prototype[method])
                Duplex.prototype[method] = Writable.prototype[method];
            }
          }

          function Duplex(options) {
            if (!(this instanceof Duplex)) return new Duplex(options);

            Readable.call(this, options);
            Writable.call(this, options);

            if (options && options.readable === false) this.readable = false;

            if (options && options.writable === false) this.writable = false;

            this.allowHalfOpen = true;
            if (options && options.allowHalfOpen === false)
              this.allowHalfOpen = false;

            this.once('end', onend);
          }

          Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.highWaterMark;
            },
          });

          // the no-half-open enforcer
          function onend() {
            // if we allow half-open state, or if the writable side ended,
            // then we're ok.
            if (this.allowHalfOpen || this._writableState.ended) return;

            // no more data can be written.
            // But allow more writes to happen in this tick.
            pna.nextTick(onEndNT, this);
          }

          function onEndNT(self) {
            self.end();
          }

          Object.defineProperty(Duplex.prototype, 'destroyed', {
            get: function get() {
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return false;
              }
              return (
                this._readableState.destroyed && this._writableState.destroyed
              );
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return;
              }

              // backward compatibility, the user is explicitly
              // managing destroyed
              this._readableState.destroyed = value;
              this._writableState.destroyed = value;
            },
          });

          Duplex.prototype._destroy = function (err, cb) {
            this.push(null);
            this.end();

            pna.nextTick(cb, err);
          };

          /***/
        },
        /* 9 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var Buffer = __webpack_require__(1).Buffer;

          // prototype class for hash functions
          function Hash(blockSize, finalSize) {
            this._block = Buffer.alloc(blockSize);
            this._finalSize = finalSize;
            this._blockSize = blockSize;
            this._len = 0;
          }

          Hash.prototype.update = function (data, enc) {
            if (typeof data === 'string') {
              enc = enc || 'utf8';
              data = Buffer.from(data, enc);
            }

            var block = this._block;
            var blockSize = this._blockSize;
            var length = data.length;
            var accum = this._len;

            for (var offset = 0; offset < length; ) {
              var assigned = accum % blockSize;
              var remainder = Math.min(length - offset, blockSize - assigned);

              for (var i = 0; i < remainder; i++) {
                block[assigned + i] = data[offset + i];
              }

              accum += remainder;
              offset += remainder;

              if (accum % blockSize === 0) {
                this._update(block);
              }
            }

            this._len += length;
            return this;
          };

          Hash.prototype.digest = function (enc) {
            var rem = this._len % this._blockSize;

            this._block[rem] = 0x80;

            // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
            // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
            this._block.fill(0, rem + 1);

            if (rem >= this._finalSize) {
              this._update(this._block);
              this._block.fill(0);
            }

            var bits = this._len * 8;

            // uint32
            if (bits <= 0xffffffff) {
              this._block.writeUInt32BE(bits, this._blockSize - 4);

              // uint64
            } else {
              var lowBits = (bits & 0xffffffff) >>> 0;
              var highBits = (bits - lowBits) / 0x100000000;

              this._block.writeUInt32BE(highBits, this._blockSize - 8);
              this._block.writeUInt32BE(lowBits, this._blockSize - 4);
            }

            this._update(this._block);
            var hash = this._hash();

            return enc ? hash.toString(enc) : hash;
          };

          Hash.prototype._update = function () {
            throw new Error('_update must be implemented by subclass');
          };

          module.exports = Hash;

          /***/
        },
        /* 10 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          exports = module.exports = __webpack_require__(32);
          exports.Stream = exports;
          exports.Readable = exports;
          exports.Writable = __webpack_require__(18);
          exports.Duplex = __webpack_require__(8);
          exports.Transform = __webpack_require__(35);
          exports.PassThrough = __webpack_require__(66);

          /***/
        },
        /* 11 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (Buffer) {
            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // NOTE: These type checking functions intentionally don't use `instanceof`
            // because it is fragile and can be easily faked with `Object.create()`.

            function isArray(arg) {
              if (Array.isArray) {
                return Array.isArray(arg);
              }
              return objectToString(arg) === '[object Array]';
            }
            exports.isArray = isArray;

            function isBoolean(arg) {
              return typeof arg === 'boolean';
            }
            exports.isBoolean = isBoolean;

            function isNull(arg) {
              return arg === null;
            }
            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
              return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
              return typeof arg === 'number';
            }
            exports.isNumber = isNumber;

            function isString(arg) {
              return typeof arg === 'string';
            }
            exports.isString = isString;

            function isSymbol(arg) {
              return (
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                'symbol'
              );
            }
            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
              return arg === void 0;
            }
            exports.isUndefined = isUndefined;

            function isRegExp(re) {
              return objectToString(re) === '[object RegExp]';
            }
            exports.isRegExp = isRegExp;

            function isObject(arg) {
              return (
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                  'object' && arg !== null
              );
            }
            exports.isObject = isObject;

            function isDate(d) {
              return objectToString(d) === '[object Date]';
            }
            exports.isDate = isDate;

            function isError(e) {
              return (
                objectToString(e) === '[object Error]' || e instanceof Error
              );
            }
            exports.isError = isError;

            function isFunction(arg) {
              return typeof arg === 'function';
            }
            exports.isFunction = isFunction;

            function isPrimitive(arg) {
              return (
                arg === null ||
                typeof arg === 'boolean' ||
                typeof arg === 'number' ||
                typeof arg === 'string' ||
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                  'symbol' || // ES6 symbol
                typeof arg === 'undefined'
              );
            }
            exports.isPrimitive = isPrimitive;

            exports.isBuffer = Buffer.isBuffer;

            function objectToString(o) {
              return Object.prototype.toString.call(o);
            }
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(4).Buffer);

          /***/
        },
        /* 12 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var punycode = __webpack_require__(94);
          var util = __webpack_require__(95);

          exports.parse = urlParse;
          exports.resolve = urlResolve;
          exports.resolveObject = urlResolveObject;
          exports.format = urlFormat;

          exports.Url = Url;

          function Url() {
            this.protocol = null;
            this.slashes = null;
            this.auth = null;
            this.host = null;
            this.port = null;
            this.hostname = null;
            this.hash = null;
            this.search = null;
            this.query = null;
            this.pathname = null;
            this.path = null;
            this.href = null;
          }

          // Reference: RFC 3986, RFC 1808, RFC 2396

          // define these here so at least they only have to be
          // compiled once on the first module load.
          var protocolPattern = /^([a-z0-9.+-]+:)/i,
            portPattern = /:[0-9]*$/,
            // Special case for a simple path URL
            simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
            // RFC 2396: characters reserved for delimiting URLs.
            // We actually just auto-escape these.
            delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
            // RFC 2396: characters not allowed for various reasons.
            unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
            // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
            autoEscape = ["'"].concat(unwise),
            // Characters that are never ever allowed in a hostname.
            // Note that any invalid chars are also handled, but these
            // are the ones that are *expected* to be seen, so we fast-path
            // them.
            nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
            hostEndingChars = ['/', '?', '#'],
            hostnameMaxLen = 255,
            hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
            hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
            // protocols that can allow "unsafe" and "unwise" chars.
            unsafeProtocol = {
              javascript: true,
              'javascript:': true,
            },
            // protocols that never have a hostname.
            hostlessProtocol = {
              javascript: true,
              'javascript:': true,
            },
            // protocols that always contain a // bit.
            slashedProtocol = {
              http: true,
              https: true,
              ftp: true,
              gopher: true,
              file: true,
              'http:': true,
              'https:': true,
              'ftp:': true,
              'gopher:': true,
              'file:': true,
            },
            querystring = __webpack_require__(96);

          function urlParse(url, parseQueryString, slashesDenoteHost) {
            if (url && util.isObject(url) && url instanceof Url) return url;

            var u = new Url();
            u.parse(url, parseQueryString, slashesDenoteHost);
            return u;
          }

          Url.prototype.parse = function (
            url,
            parseQueryString,
            slashesDenoteHost
          ) {
            if (!util.isString(url)) {
              throw new TypeError(
                "Parameter 'url' must be a string, not " +
                  (typeof url === 'undefined' ? 'undefined' : _typeof(url))
              );
            }

            // Copy chrome, IE, opera backslash-handling behavior.
            // Back slashes before the query string get converted to forward slashes
            // See: https://code.google.com/p/chromium/issues/detail?id=25916
            var queryIndex = url.indexOf('?'),
              splitter =
                queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',
              uSplit = url.split(splitter),
              slashRegex = /\\/g;
            uSplit[0] = uSplit[0].replace(slashRegex, '/');
            url = uSplit.join(splitter);

            var rest = url;

            // trim before proceeding.
            // This is to support parse stuff like "  http://foo.com  \n"
            rest = rest.trim();

            if (!slashesDenoteHost && url.split('#').length === 1) {
              // Try fast path regexp
              var simplePath = simplePathPattern.exec(rest);
              if (simplePath) {
                this.path = rest;
                this.href = rest;
                this.pathname = simplePath[1];
                if (simplePath[2]) {
                  this.search = simplePath[2];
                  if (parseQueryString) {
                    this.query = querystring.parse(this.search.substr(1));
                  } else {
                    this.query = this.search.substr(1);
                  }
                } else if (parseQueryString) {
                  this.search = '';
                  this.query = {};
                }
                return this;
              }
            }

            var proto = protocolPattern.exec(rest);
            if (proto) {
              proto = proto[0];
              var lowerProto = proto.toLowerCase();
              this.protocol = lowerProto;
              rest = rest.substr(proto.length);
            }

            // figure out if it's got a host
            // user@server is *always* interpreted as a hostname, and url
            // resolution will treat //foo/bar as host=foo,path=bar because that's
            // how the browser resolves relative URLs.
            if (
              slashesDenoteHost ||
              proto ||
              rest.match(/^\/\/[^@\/]+@[^@\/]+/)
            ) {
              var slashes = rest.substr(0, 2) === '//';
              if (slashes && !(proto && hostlessProtocol[proto])) {
                rest = rest.substr(2);
                this.slashes = true;
              }
            }

            if (
              !hostlessProtocol[proto] &&
              (slashes || (proto && !slashedProtocol[proto]))
            ) {
              // there's a hostname.
              // the first instance of /, ?, ;, or # ends the host.
              //
              // If there is an @ in the hostname, then non-host chars *are* allowed
              // to the left of the last @ sign, unless some host-ending character
              // comes *before* the @-sign.
              // URLs are obnoxious.
              //
              // ex:
              // http://a@b@c/ => user:a@b host:c
              // http://a@b?@c => user:a host:c path:/?@c

              // v0.12 TODO(isaacs): This is not quite how Chrome does things.
              // Review our test case against browsers more comprehensively.

              // find the first instance of any hostEndingChars
              var hostEnd = -1;
              for (var i = 0; i < hostEndingChars.length; i++) {
                var hec = rest.indexOf(hostEndingChars[i]);
                if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                  hostEnd = hec;
              }

              // at this point, either we have an explicit point where the
              // auth portion cannot go past, or the last @ char is the decider.
              var auth, atSign;
              if (hostEnd === -1) {
                // atSign can be anywhere.
                atSign = rest.lastIndexOf('@');
              } else {
                // atSign must be in auth portion.
                // http://a@b/c@d => host:b auth:a path:/c@d
                atSign = rest.lastIndexOf('@', hostEnd);
              }

              // Now we have a portion which is definitely the auth.
              // Pull that off.
              if (atSign !== -1) {
                auth = rest.slice(0, atSign);
                rest = rest.slice(atSign + 1);
                this.auth = decodeURIComponent(auth);
              }

              // the host is the remaining to the left of the first non-host char
              hostEnd = -1;
              for (var i = 0; i < nonHostChars.length; i++) {
                var hec = rest.indexOf(nonHostChars[i]);
                if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                  hostEnd = hec;
              }
              // if we still have not hit it, then the entire thing is a host.
              if (hostEnd === -1) hostEnd = rest.length;

              this.host = rest.slice(0, hostEnd);
              rest = rest.slice(hostEnd);

              // pull out port.
              this.parseHost();

              // we've indicated that there is a hostname,
              // so even if it's empty, it has to be present.
              this.hostname = this.hostname || '';

              // if hostname begins with [ and ends with ]
              // assume that it's an IPv6 address.
              var ipv6Hostname =
                this.hostname[0] === '[' &&
                this.hostname[this.hostname.length - 1] === ']';

              // validate a little.
              if (!ipv6Hostname) {
                var hostparts = this.hostname.split(/\./);
                for (var i = 0, l = hostparts.length; i < l; i++) {
                  var part = hostparts[i];
                  if (!part) continue;
                  if (!part.match(hostnamePartPattern)) {
                    var newpart = '';
                    for (var j = 0, k = part.length; j < k; j++) {
                      if (part.charCodeAt(j) > 127) {
                        // we replace non-ASCII char with a temporary placeholder
                        // we need this to make sure size of hostname is not
                        // broken by replacing non-ASCII by nothing
                        newpart += 'x';
                      } else {
                        newpart += part[j];
                      }
                    }
                    // we test again with ASCII char only
                    if (!newpart.match(hostnamePartPattern)) {
                      var validParts = hostparts.slice(0, i);
                      var notHost = hostparts.slice(i + 1);
                      var bit = part.match(hostnamePartStart);
                      if (bit) {
                        validParts.push(bit[1]);
                        notHost.unshift(bit[2]);
                      }
                      if (notHost.length) {
                        rest = '/' + notHost.join('.') + rest;
                      }
                      this.hostname = validParts.join('.');
                      break;
                    }
                  }
                }
              }

              if (this.hostname.length > hostnameMaxLen) {
                this.hostname = '';
              } else {
                // hostnames are always lower case.
                this.hostname = this.hostname.toLowerCase();
              }

              if (!ipv6Hostname) {
                // IDNA Support: Returns a punycoded representation of "domain".
                // It only converts parts of the domain name that
                // have non-ASCII characters, i.e. it doesn't matter if
                // you call it with a domain that already is ASCII-only.
                this.hostname = punycode.toASCII(this.hostname);
              }

              var p = this.port ? ':' + this.port : '';
              var h = this.hostname || '';
              this.host = h + p;
              this.href += this.host;

              // strip [ and ] from the hostname
              // the host field still retains them, though
              if (ipv6Hostname) {
                this.hostname = this.hostname.substr(
                  1,
                  this.hostname.length - 2
                );
                if (rest[0] !== '/') {
                  rest = '/' + rest;
                }
              }
            }

            // now rest is set to the post-host stuff.
            // chop off any delim chars.
            if (!unsafeProtocol[lowerProto]) {
              // First, make 100% sure that any "autoEscape" chars get
              // escaped, even if encodeURIComponent doesn't think they
              // need to be.
              for (var i = 0, l = autoEscape.length; i < l; i++) {
                var ae = autoEscape[i];
                if (rest.indexOf(ae) === -1) continue;
                var esc = encodeURIComponent(ae);
                if (esc === ae) {
                  esc = escape(ae);
                }
                rest = rest.split(ae).join(esc);
              }
            }

            // chop off from the tail first.
            var hash = rest.indexOf('#');
            if (hash !== -1) {
              // got a fragment string.
              this.hash = rest.substr(hash);
              rest = rest.slice(0, hash);
            }
            var qm = rest.indexOf('?');
            if (qm !== -1) {
              this.search = rest.substr(qm);
              this.query = rest.substr(qm + 1);
              if (parseQueryString) {
                this.query = querystring.parse(this.query);
              }
              rest = rest.slice(0, qm);
            } else if (parseQueryString) {
              // no query string, but parseQueryString still requested
              this.search = '';
              this.query = {};
            }
            if (rest) this.pathname = rest;
            if (
              slashedProtocol[lowerProto] &&
              this.hostname &&
              !this.pathname
            ) {
              this.pathname = '/';
            }

            //to support http.request
            if (this.pathname || this.search) {
              var p = this.pathname || '';
              var s = this.search || '';
              this.path = p + s;
            }

            // finally, reconstruct the href based on what has been validated.
            this.href = this.format();
            return this;
          };

          // format a parsed object into a url string
          function urlFormat(obj) {
            // ensure it's an object, and not a string url.
            // If it's an obj, this is a no-op.
            // this way, you can call url_format() on strings
            // to clean up potentially wonky urls.
            if (util.isString(obj)) obj = urlParse(obj);
            if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
            return obj.format();
          }

          Url.prototype.format = function () {
            var auth = this.auth || '';
            if (auth) {
              auth = encodeURIComponent(auth);
              auth = auth.replace(/%3A/i, ':');
              auth += '@';
            }

            var protocol = this.protocol || '',
              pathname = this.pathname || '',
              hash = this.hash || '',
              host = false,
              query = '';

            if (this.host) {
              host = auth + this.host;
            } else if (this.hostname) {
              host =
                auth +
                (this.hostname.indexOf(':') === -1
                  ? this.hostname
                  : '[' + this.hostname + ']');
              if (this.port) {
                host += ':' + this.port;
              }
            }

            if (
              this.query &&
              util.isObject(this.query) &&
              Object.keys(this.query).length
            ) {
              query = querystring.stringify(this.query);
            }

            var search = this.search || (query && '?' + query) || '';

            if (protocol && protocol.substr(-1) !== ':') protocol += ':';

            // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
            // unless they had them to begin with.
            if (
              this.slashes ||
              ((!protocol || slashedProtocol[protocol]) && host !== false)
            ) {
              host = '//' + (host || '');
              if (pathname && pathname.charAt(0) !== '/')
                pathname = '/' + pathname;
            } else if (!host) {
              host = '';
            }

            if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
            if (search && search.charAt(0) !== '?') search = '?' + search;

            pathname = pathname.replace(/[?#]/g, function (match) {
              return encodeURIComponent(match);
            });
            search = search.replace('#', '%23');

            return protocol + host + pathname + search + hash;
          };

          function urlResolve(source, relative) {
            return urlParse(source, false, true).resolve(relative);
          }

          Url.prototype.resolve = function (relative) {
            return this.resolveObject(urlParse(relative, false, true)).format();
          };

          function urlResolveObject(source, relative) {
            if (!source) return relative;
            return urlParse(source, false, true).resolveObject(relative);
          }

          Url.prototype.resolveObject = function (relative) {
            if (util.isString(relative)) {
              var rel = new Url();
              rel.parse(relative, false, true);
              relative = rel;
            }

            var result = new Url();
            var tkeys = Object.keys(this);
            for (var tk = 0; tk < tkeys.length; tk++) {
              var tkey = tkeys[tk];
              result[tkey] = this[tkey];
            }

            // hash is always overridden, no matter what.
            // even href="" will remove it.
            result.hash = relative.hash;

            // if the relative url is empty, then there's nothing left to do here.
            if (relative.href === '') {
              result.href = result.format();
              return result;
            }

            // hrefs like //foo/bar always cut to the protocol.
            if (relative.slashes && !relative.protocol) {
              // take everything except the protocol from relative
              var rkeys = Object.keys(relative);
              for (var rk = 0; rk < rkeys.length; rk++) {
                var rkey = rkeys[rk];
                if (rkey !== 'protocol') result[rkey] = relative[rkey];
              }

              //urlParse appends trailing / to urls like http://www.example.com
              if (
                slashedProtocol[result.protocol] &&
                result.hostname &&
                !result.pathname
              ) {
                result.path = result.pathname = '/';
              }

              result.href = result.format();
              return result;
            }

            if (relative.protocol && relative.protocol !== result.protocol) {
              // if it's a known url protocol, then changing
              // the protocol does weird things
              // first, if it's not file:, then we MUST have a host,
              // and if there was a path
              // to begin with, then we MUST have a path.
              // if it is file:, then the host is dropped,
              // because that's known to be hostless.
              // anything else is assumed to be absolute.
              if (!slashedProtocol[relative.protocol]) {
                var keys = Object.keys(relative);
                for (var v = 0; v < keys.length; v++) {
                  var k = keys[v];
                  result[k] = relative[k];
                }
                result.href = result.format();
                return result;
              }

              result.protocol = relative.protocol;
              if (!relative.host && !hostlessProtocol[relative.protocol]) {
                var relPath = (relative.pathname || '').split('/');
                while (relPath.length && !(relative.host = relPath.shift())) {}
                if (!relative.host) relative.host = '';
                if (!relative.hostname) relative.hostname = '';
                if (relPath[0] !== '') relPath.unshift('');
                if (relPath.length < 2) relPath.unshift('');
                result.pathname = relPath.join('/');
              } else {
                result.pathname = relative.pathname;
              }
              result.search = relative.search;
              result.query = relative.query;
              result.host = relative.host || '';
              result.auth = relative.auth;
              result.hostname = relative.hostname || relative.host;
              result.port = relative.port;
              // to support http.request
              if (result.pathname || result.search) {
                var p = result.pathname || '';
                var s = result.search || '';
                result.path = p + s;
              }
              result.slashes = result.slashes || relative.slashes;
              result.href = result.format();
              return result;
            }

            var isSourceAbs =
                result.pathname && result.pathname.charAt(0) === '/',
              isRelAbs =
                relative.host ||
                (relative.pathname && relative.pathname.charAt(0) === '/'),
              mustEndAbs =
                isRelAbs || isSourceAbs || (result.host && relative.pathname),
              removeAllDots = mustEndAbs,
              srcPath = (result.pathname && result.pathname.split('/')) || [],
              relPath =
                (relative.pathname && relative.pathname.split('/')) || [],
              psychotic = result.protocol && !slashedProtocol[result.protocol];

            // if the url is a non-slashed url, then relative
            // links like ../.. should be able
            // to crawl up to the hostname, as well.  This is strange.
            // result.protocol has already been set by now.
            // Later on, put the first path part into the host field.
            if (psychotic) {
              result.hostname = '';
              result.port = null;
              if (result.host) {
                if (srcPath[0] === '') srcPath[0] = result.host;
                else srcPath.unshift(result.host);
              }
              result.host = '';
              if (relative.protocol) {
                relative.hostname = null;
                relative.port = null;
                if (relative.host) {
                  if (relPath[0] === '') relPath[0] = relative.host;
                  else relPath.unshift(relative.host);
                }
                relative.host = null;
              }
              mustEndAbs =
                mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
            }

            if (isRelAbs) {
              // it's absolute.
              result.host =
                relative.host || relative.host === ''
                  ? relative.host
                  : result.host;
              result.hostname =
                relative.hostname || relative.hostname === ''
                  ? relative.hostname
                  : result.hostname;
              result.search = relative.search;
              result.query = relative.query;
              srcPath = relPath;
              // fall through to the dot-handling below.
            } else if (relPath.length) {
              // it's relative
              // throw away the existing file, and take the new path instead.
              if (!srcPath) srcPath = [];
              srcPath.pop();
              srcPath = srcPath.concat(relPath);
              result.search = relative.search;
              result.query = relative.query;
            } else if (!util.isNullOrUndefined(relative.search)) {
              // just pull out the search.
              // like href='?foo'.
              // Put this after the other two cases because it simplifies the booleans
              if (psychotic) {
                result.hostname = result.host = srcPath.shift();
                //occationaly the auth can get stuck only in host
                //this especially happens in cases like
                //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
                var authInHost =
                  result.host && result.host.indexOf('@') > 0
                    ? result.host.split('@')
                    : false;
                if (authInHost) {
                  result.auth = authInHost.shift();
                  result.host = result.hostname = authInHost.shift();
                }
              }
              result.search = relative.search;
              result.query = relative.query;
              //to support http.request
              if (
                !util.isNull(result.pathname) ||
                !util.isNull(result.search)
              ) {
                result.path =
                  (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
              }
              result.href = result.format();
              return result;
            }

            if (!srcPath.length) {
              // no path at all.  easy.
              // we've already handled the other stuff above.
              result.pathname = null;
              //to support http.request
              if (result.search) {
                result.path = '/' + result.search;
              } else {
                result.path = null;
              }
              result.href = result.format();
              return result;
            }

            // if a url ENDs in . or .., then it must get a trailing slash.
            // however, if it ends in anything else non-slashy,
            // then it must NOT get a trailing slash.
            var last = srcPath.slice(-1)[0];
            var hasTrailingSlash =
              ((result.host || relative.host || srcPath.length > 1) &&
                (last === '.' || last === '..')) ||
              last === '';

            // strip single dots, resolve double dots to parent dir
            // if the path tries to go above the root, `up` ends up > 0
            var up = 0;
            for (var i = srcPath.length; i >= 0; i--) {
              last = srcPath[i];
              if (last === '.') {
                srcPath.splice(i, 1);
              } else if (last === '..') {
                srcPath.splice(i, 1);
                up++;
              } else if (up) {
                srcPath.splice(i, 1);
                up--;
              }
            }

            // if the path is allowed to go above the root, restore leading ..s
            if (!mustEndAbs && !removeAllDots) {
              for (; up--; up) {
                srcPath.unshift('..');
              }
            }

            if (
              mustEndAbs &&
              srcPath[0] !== '' &&
              (!srcPath[0] || srcPath[0].charAt(0) !== '/')
            ) {
              srcPath.unshift('');
            }

            if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
              srcPath.push('');
            }

            var isAbsolute =
              srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');

            // put the host back
            if (psychotic) {
              result.hostname = result.host = isAbsolute
                ? ''
                : srcPath.length
                ? srcPath.shift()
                : '';
              //occationaly the auth can get stuck only in host
              //this especially happens in cases like
              //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
              var authInHost =
                result.host && result.host.indexOf('@') > 0
                  ? result.host.split('@')
                  : false;
              if (authInHost) {
                result.auth = authInHost.shift();
                result.host = result.hostname = authInHost.shift();
              }
            }

            mustEndAbs = mustEndAbs || (result.host && srcPath.length);

            if (mustEndAbs && !isAbsolute) {
              srcPath.unshift('');
            }

            if (!srcPath.length) {
              result.pathname = null;
              result.path = null;
            } else {
              result.pathname = srcPath.join('/');
            }

            //to support request.http
            if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
              result.path =
                (result.pathname ? result.pathname : '') +
                (result.search ? result.search : '');
            }
            result.auth = relative.auth || result.auth;
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
          };

          Url.prototype.parseHost = function () {
            var host = this.host;
            var port = portPattern.exec(host);
            if (port) {
              port = port[0];
              if (port !== ':') {
                this.port = port.substr(1);
              }
              host = host.substr(0, host.length - port.length);
            }
            if (host) this.hostname = host;
          };

          /***/
        },
        /* 13 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var json_stringify = __webpack_require__(56).stringify;
          var json_parse = __webpack_require__(57);

          module.exports = function (options) {
            return {
              parse: json_parse(options),
              stringify: json_stringify,
            };
          };
          //create the default method members with no options applied for backwards compatibility
          module.exports.parse = json_parse();
          module.exports.stringify = json_stringify;

          /***/
        },
        /* 14 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var R =
            (typeof Reflect === 'undefined'
              ? 'undefined'
              : _typeof(Reflect)) === 'object'
              ? Reflect
              : null;
          var ReflectApply =
            R && typeof R.apply === 'function'
              ? R.apply
              : function ReflectApply(target, receiver, args) {
                  return Function.prototype.apply.call(target, receiver, args);
                };

          var ReflectOwnKeys;
          if (R && typeof R.ownKeys === 'function') {
            ReflectOwnKeys = R.ownKeys;
          } else if (Object.getOwnPropertySymbols) {
            ReflectOwnKeys = function ReflectOwnKeys(target) {
              return Object.getOwnPropertyNames(target).concat(
                Object.getOwnPropertySymbols(target)
              );
            };
          } else {
            ReflectOwnKeys = function ReflectOwnKeys(target) {
              return Object.getOwnPropertyNames(target);
            };
          }

          function ProcessEmitWarning(warning) {
            if (console && console.warn) console.warn(warning);
          }

          var NumberIsNaN =
            Number.isNaN ||
            function NumberIsNaN(value) {
              return value !== value;
            };

          function EventEmitter() {
            EventEmitter.init.call(this);
          }
          module.exports = EventEmitter;

          // Backwards-compat with node 0.10.x
          EventEmitter.EventEmitter = EventEmitter;

          EventEmitter.prototype._events = undefined;
          EventEmitter.prototype._eventsCount = 0;
          EventEmitter.prototype._maxListeners = undefined;

          // By default EventEmitters will print a warning if more than 10 listeners are
          // added to it. This is a useful default which helps finding memory leaks.
          var defaultMaxListeners = 10;

          Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
            enumerable: true,
            get: function get() {
              return defaultMaxListeners;
            },
            set: function set(arg) {
              if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
                throw new RangeError(
                  'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                    arg +
                    '.'
                );
              }
              defaultMaxListeners = arg;
            },
          });

          EventEmitter.init = function () {
            if (
              this._events === undefined ||
              this._events === Object.getPrototypeOf(this)._events
            ) {
              this._events = Object.create(null);
              this._eventsCount = 0;
            }

            this._maxListeners = this._maxListeners || undefined;
          };

          // Obviously not all Emitters should be limited to 10. This function allows
          // that to be increased. Set to zero for unlimited.
          EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
            if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
              throw new RangeError(
                'The value of "n" is out of range. It must be a non-negative number. Received ' +
                  n +
                  '.'
              );
            }
            this._maxListeners = n;
            return this;
          };

          function $getMaxListeners(that) {
            if (that._maxListeners === undefined)
              return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
          }

          EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return $getMaxListeners(this);
          };

          EventEmitter.prototype.emit = function emit(type) {
            var args = [];
            for (var i = 1; i < arguments.length; i++) {
              args.push(arguments[i]);
            }
            var doError = type === 'error';

            var events = this._events;
            if (events !== undefined)
              doError = doError && events.error === undefined;
            else if (!doError) return false;

            // If there is no 'error' event listener then throw.
            if (doError) {
              var er;
              if (args.length > 0) er = args[0];
              if (er instanceof Error) {
                // Note: The comments on the `throw` lines are intentional, they show
                // up in Node's output if this results in an unhandled exception.
                throw er; // Unhandled 'error' event
              }
              // At least give some kind of context to the user
              var err = new Error(
                'Unhandled error.' + (er ? ' (' + er.message + ')' : '')
              );
              err.context = er;
              throw err; // Unhandled 'error' event
            }

            var handler = events[type];

            if (handler === undefined) return false;

            if (typeof handler === 'function') {
              ReflectApply(handler, this, args);
            } else {
              var len = handler.length;
              var listeners = arrayClone(handler, len);
              for (var i = 0; i < len; ++i) {
                ReflectApply(listeners[i], this, args);
              }
            }

            return true;
          };

          function _addListener(target, type, listener, prepend) {
            var m;
            var events;
            var existing;

            if (typeof listener !== 'function') {
              throw new TypeError(
                'The "listener" argument must be of type Function. Received type ' +
                  (typeof listener === 'undefined'
                    ? 'undefined'
                    : _typeof(listener))
              );
            }

            events = target._events;
            if (events === undefined) {
              events = target._events = Object.create(null);
              target._eventsCount = 0;
            } else {
              // To avoid recursion in the case that type === "newListener"! Before
              // adding it to the listeners, first emit "newListener".
              if (events.newListener !== undefined) {
                target.emit(
                  'newListener',
                  type,
                  listener.listener ? listener.listener : listener
                );

                // Re-assign `events` because a newListener handler could have caused the
                // this._events to be assigned to a new object
                events = target._events;
              }
              existing = events[type];
            }

            if (existing === undefined) {
              // Optimize the case of one listener. Don't need the extra array object.
              existing = events[type] = listener;
              ++target._eventsCount;
            } else {
              if (typeof existing === 'function') {
                // Adding the second element, need to change to array.
                existing = events[type] = prepend
                  ? [listener, existing]
                  : [existing, listener];
                // If we've already got an array, just append.
              } else if (prepend) {
                existing.unshift(listener);
              } else {
                existing.push(listener);
              }

              // Check for listener leak
              m = $getMaxListeners(target);
              if (m > 0 && existing.length > m && !existing.warned) {
                existing.warned = true;
                // No error code for this since it is a Warning

                var w = new Error(
                  'Possible EventEmitter memory leak detected. ' +
                    existing.length +
                    ' ' +
                    String(type) +
                    ' listeners ' +
                    'added. Use emitter.setMaxListeners() to ' +
                    'increase limit'
                );
                w.name = 'MaxListenersExceededWarning';
                w.emitter = target;
                w.type = type;
                w.count = existing.length;
                ProcessEmitWarning(w);
              }
            }

            return target;
          }

          EventEmitter.prototype.addListener = function addListener(
            type,
            listener
          ) {
            return _addListener(this, type, listener, false);
          };

          EventEmitter.prototype.on = EventEmitter.prototype.addListener;

          EventEmitter.prototype.prependListener = function prependListener(
            type,
            listener
          ) {
            return _addListener(this, type, listener, true);
          };

          function onceWrapper() {
            var args = [];
            for (var i = 0; i < arguments.length; i++) {
              args.push(arguments[i]);
            }
            if (!this.fired) {
              this.target.removeListener(this.type, this.wrapFn);
              this.fired = true;
              ReflectApply(this.listener, this.target, args);
            }
          }

          function _onceWrap(target, type, listener) {
            var state = {
              fired: false,
              wrapFn: undefined,
              target: target,
              type: type,
              listener: listener,
            };
            var wrapped = onceWrapper.bind(state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
          }

          EventEmitter.prototype.once = function once(type, listener) {
            if (typeof listener !== 'function') {
              throw new TypeError(
                'The "listener" argument must be of type Function. Received type ' +
                  (typeof listener === 'undefined'
                    ? 'undefined'
                    : _typeof(listener))
              );
            }
            this.on(type, _onceWrap(this, type, listener));
            return this;
          };

          EventEmitter.prototype.prependOnceListener =
            function prependOnceListener(type, listener) {
              if (typeof listener !== 'function') {
                throw new TypeError(
                  'The "listener" argument must be of type Function. Received type ' +
                    (typeof listener === 'undefined'
                      ? 'undefined'
                      : _typeof(listener))
                );
              }
              this.prependListener(type, _onceWrap(this, type, listener));
              return this;
            };

          // Emits a 'removeListener' event if and only if the listener was removed.
          EventEmitter.prototype.removeListener = function removeListener(
            type,
            listener
          ) {
            var list, events, position, i, originalListener;

            if (typeof listener !== 'function') {
              throw new TypeError(
                'The "listener" argument must be of type Function. Received type ' +
                  (typeof listener === 'undefined'
                    ? 'undefined'
                    : _typeof(listener))
              );
            }

            events = this._events;
            if (events === undefined) return this;

            list = events[type];
            if (list === undefined) return this;

            if (list === listener || list.listener === listener) {
              if (--this._eventsCount === 0) this._events = Object.create(null);
              else {
                delete events[type];
                if (events.removeListener)
                  this.emit('removeListener', type, list.listener || listener);
              }
            } else if (typeof list !== 'function') {
              position = -1;

              for (i = list.length - 1; i >= 0; i--) {
                if (list[i] === listener || list[i].listener === listener) {
                  originalListener = list[i].listener;
                  position = i;
                  break;
                }
              }

              if (position < 0) return this;

              if (position === 0) list.shift();
              else {
                spliceOne(list, position);
              }

              if (list.length === 1) events[type] = list[0];

              if (events.removeListener !== undefined)
                this.emit('removeListener', type, originalListener || listener);
            }

            return this;
          };

          EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

          EventEmitter.prototype.removeAllListeners =
            function removeAllListeners(type) {
              var listeners, events, i;

              events = this._events;
              if (events === undefined) return this;

              // not listening for removeListener, no need to emit
              if (events.removeListener === undefined) {
                if (arguments.length === 0) {
                  this._events = Object.create(null);
                  this._eventsCount = 0;
                } else if (events[type] !== undefined) {
                  if (--this._eventsCount === 0)
                    this._events = Object.create(null);
                  else delete events[type];
                }
                return this;
              }

              // emit removeListener for all listeners on all events
              if (arguments.length === 0) {
                var keys = Object.keys(events);
                var key;
                for (i = 0; i < keys.length; ++i) {
                  key = keys[i];
                  if (key === 'removeListener') continue;
                  this.removeAllListeners(key);
                }
                this.removeAllListeners('removeListener');
                this._events = Object.create(null);
                this._eventsCount = 0;
                return this;
              }

              listeners = events[type];

              if (typeof listeners === 'function') {
                this.removeListener(type, listeners);
              } else if (listeners !== undefined) {
                // LIFO order
                for (i = listeners.length - 1; i >= 0; i--) {
                  this.removeListener(type, listeners[i]);
                }
              }

              return this;
            };

          function _listeners(target, type, unwrap) {
            var events = target._events;

            if (events === undefined) return [];

            var evlistener = events[type];
            if (evlistener === undefined) return [];

            if (typeof evlistener === 'function')
              return unwrap
                ? [evlistener.listener || evlistener]
                : [evlistener];

            return unwrap
              ? unwrapListeners(evlistener)
              : arrayClone(evlistener, evlistener.length);
          }

          EventEmitter.prototype.listeners = function listeners(type) {
            return _listeners(this, type, true);
          };

          EventEmitter.prototype.rawListeners = function rawListeners(type) {
            return _listeners(this, type, false);
          };

          EventEmitter.listenerCount = function (emitter, type) {
            if (typeof emitter.listenerCount === 'function') {
              return emitter.listenerCount(type);
            } else {
              return listenerCount.call(emitter, type);
            }
          };

          EventEmitter.prototype.listenerCount = listenerCount;
          function listenerCount(type) {
            var events = this._events;

            if (events !== undefined) {
              var evlistener = events[type];

              if (typeof evlistener === 'function') {
                return 1;
              } else if (evlistener !== undefined) {
                return evlistener.length;
              }
            }

            return 0;
          }

          EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
          };

          function arrayClone(arr, n) {
            var copy = new Array(n);
            for (var i = 0; i < n; ++i) {
              copy[i] = arr[i];
            }
            return copy;
          }

          function spliceOne(list, index) {
            for (; index + 1 < list.length; index++) {
              list[index] = list[index + 1];
            }
            list.pop();
          }

          function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i = 0; i < ret.length; ++i) {
              ret[i] = arr[i].listener || arr[i];
            }
            return ret;
          }

          /***/
        },
        /* 15 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (process) {
            if (
              !process.version ||
              process.version.indexOf('v0.') === 0 ||
              (process.version.indexOf('v1.') === 0 &&
                process.version.indexOf('v1.8.') !== 0)
            ) {
              module.exports = { nextTick: nextTick };
            } else {
              module.exports = process;
            }

            function nextTick(fn, arg1, arg2, arg3) {
              if (typeof fn !== 'function') {
                throw new TypeError('"callback" argument must be a function');
              }
              var len = arguments.length;
              var args, i;
              switch (len) {
                case 0:
                case 1:
                  return process.nextTick(fn);
                case 2:
                  return process.nextTick(function afterTickOne() {
                    fn.call(null, arg1);
                  });
                case 3:
                  return process.nextTick(function afterTickTwo() {
                    fn.call(null, arg1, arg2);
                  });
                case 4:
                  return process.nextTick(function afterTickThree() {
                    fn.call(null, arg1, arg2, arg3);
                  });
                default:
                  args = new Array(len - 1);
                  i = 0;
                  while (i < args.length) {
                    args[i++] = arguments[i];
                  }
                  return process.nextTick(function afterTick() {
                    fn.apply(null, args);
                  });
              }
            }
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(3));

          /***/
        },
        /* 16 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (process) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // resolves . and .. elements in a path array with directory names there
            // must be no slashes, empty elements, or device names (c:\) in the array
            // (so also no leading and trailing slashes - it does not distinguish
            // relative and absolute paths)
            function normalizeArray(parts, allowAboveRoot) {
              // if the path tries to go above the root, `up` ends up > 0
              var up = 0;
              for (var i = parts.length - 1; i >= 0; i--) {
                var last = parts[i];
                if (last === '.') {
                  parts.splice(i, 1);
                } else if (last === '..') {
                  parts.splice(i, 1);
                  up++;
                } else if (up) {
                  parts.splice(i, 1);
                  up--;
                }
              }

              // if the path is allowed to go above the root, restore leading ..s
              if (allowAboveRoot) {
                for (; up--; up) {
                  parts.unshift('..');
                }
              }

              return parts;
            }

            // Split a filename into [root, dir, basename, ext], unix version
            // 'root' is just a slash, or nothing.
            var splitPathRe =
              /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
            var splitPath = function splitPath(filename) {
              return splitPathRe.exec(filename).slice(1);
            };

            // path.resolve([from ...], to)
            // posix version
            exports.resolve = function () {
              var resolvedPath = '',
                resolvedAbsolute = false;

              for (
                var i = arguments.length - 1;
                i >= -1 && !resolvedAbsolute;
                i--
              ) {
                var path = i >= 0 ? arguments[i] : process.cwd();

                // Skip empty and invalid entries
                if (typeof path !== 'string') {
                  throw new TypeError(
                    'Arguments to path.resolve must be strings'
                  );
                } else if (!path) {
                  continue;
                }

                resolvedPath = path + '/' + resolvedPath;
                resolvedAbsolute = path.charAt(0) === '/';
              }

              // At this point the path should be resolved to a full absolute path, but
              // handle relative paths to be safe (might happen when process.cwd() fails)

              // Normalize the path
              resolvedPath = normalizeArray(
                filter(resolvedPath.split('/'), function (p) {
                  return !!p;
                }),
                !resolvedAbsolute
              ).join('/');

              return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
            };

            // path.normalize(path)
            // posix version
            exports.normalize = function (path) {
              var isAbsolute = exports.isAbsolute(path),
                trailingSlash = substr(path, -1) === '/';

              // Normalize the path
              path = normalizeArray(
                filter(path.split('/'), function (p) {
                  return !!p;
                }),
                !isAbsolute
              ).join('/');

              if (!path && !isAbsolute) {
                path = '.';
              }
              if (path && trailingSlash) {
                path += '/';
              }

              return (isAbsolute ? '/' : '') + path;
            };

            // posix version
            exports.isAbsolute = function (path) {
              return path.charAt(0) === '/';
            };

            // posix version
            exports.join = function () {
              var paths = Array.prototype.slice.call(arguments, 0);
              return exports.normalize(
                filter(paths, function (p, index) {
                  if (typeof p !== 'string') {
                    throw new TypeError(
                      'Arguments to path.join must be strings'
                    );
                  }
                  return p;
                }).join('/')
              );
            };

            // path.relative(from, to)
            // posix version
            exports.relative = function (from, to) {
              from = exports.resolve(from).substr(1);
              to = exports.resolve(to).substr(1);

              function trim(arr) {
                var start = 0;
                for (; start < arr.length; start++) {
                  if (arr[start] !== '') break;
                }

                var end = arr.length - 1;
                for (; end >= 0; end--) {
                  if (arr[end] !== '') break;
                }

                if (start > end) return [];
                return arr.slice(start, end - start + 1);
              }

              var fromParts = trim(from.split('/'));
              var toParts = trim(to.split('/'));

              var length = Math.min(fromParts.length, toParts.length);
              var samePartsLength = length;
              for (var i = 0; i < length; i++) {
                if (fromParts[i] !== toParts[i]) {
                  samePartsLength = i;
                  break;
                }
              }

              var outputParts = [];
              for (var i = samePartsLength; i < fromParts.length; i++) {
                outputParts.push('..');
              }

              outputParts = outputParts.concat(toParts.slice(samePartsLength));

              return outputParts.join('/');
            };

            exports.sep = '/';
            exports.delimiter = ':';

            exports.dirname = function (path) {
              var result = splitPath(path),
                root = result[0],
                dir = result[1];

              if (!root && !dir) {
                // No dirname whatsoever
                return '.';
              }

              if (dir) {
                // It has a dirname, strip trailing slash
                dir = dir.substr(0, dir.length - 1);
              }

              return root + dir;
            };

            exports.basename = function (path, ext) {
              var f = splitPath(path)[2];
              // TODO: make this comparison case-insensitive on windows?
              if (ext && f.substr(-1 * ext.length) === ext) {
                f = f.substr(0, f.length - ext.length);
              }
              return f;
            };

            exports.extname = function (path) {
              return splitPath(path)[3];
            };

            function filter(xs, f) {
              if (xs.filter) return xs.filter(f);
              var res = [];
              for (var i = 0; i < xs.length; i++) {
                if (f(xs[i], i, xs)) res.push(xs[i]);
              }
              return res;
            }

            // String.prototype.substr - negative index don't work in IE8
            var substr =
              'ab'.substr(-1) === 'b'
                ? function (str, start, len) {
                    return str.substr(start, len);
                  }
                : function (str, start, len) {
                    if (start < 0) start = str.length + start;
                    return str.substr(start, len);
                  };
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(3));

          /***/
        },
        /* 17 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /***/
        },
        /* 18 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (
            process,
            setImmediate,
            global
          ) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // A bit simpler than readable streams.
            // Implement an async ._write(chunk, encoding, cb), and it'll handle all
            // the drain event emission and buffering.

            /*<replacement>*/

            var pna = __webpack_require__(15);
            /*</replacement>*/

            module.exports = Writable;

            /* <replacement> */
            function WriteReq(chunk, encoding, cb) {
              this.chunk = chunk;
              this.encoding = encoding;
              this.callback = cb;
              this.next = null;
            }

            // It seems a linked list but it is not
            // there will be only 2 of these for each stream
            function CorkedRequest(state) {
              var _this = this;

              this.next = null;
              this.entry = null;
              this.finish = function () {
                onCorkedFinish(_this, state);
              };
            }
            /* </replacement> */

            /*<replacement>*/
            var asyncWrite =
              !process.browser &&
              ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1
                ? setImmediate
                : pna.nextTick;
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Writable.WritableState = WritableState;

            /*<replacement>*/
            var util = __webpack_require__(11);
            util.inherits = __webpack_require__(0);
            /*</replacement>*/

            /*<replacement>*/
            var internalUtil = {
              deprecate: __webpack_require__(65),
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = __webpack_require__(33);
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = __webpack_require__(1).Buffer;
            var OurUint8Array = global.Uint8Array || function () {};
            function _uint8ArrayToBuffer(chunk) {
              return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
              return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            var destroyImpl = __webpack_require__(34);

            util.inherits(Writable, Stream);

            function nop() {}

            function WritableState(options, stream) {
              Duplex = Duplex || __webpack_require__(8);

              options = options || {};

              // Duplex streams are both readable and writable, but share
              // the same options object.
              // However, some cases require setting options to different
              // values for the readable and the writable sides of the duplex stream.
              // These options can be provided separately as readableXXX and writableXXX.
              var isDuplex = stream instanceof Duplex;

              // object stream flag to indicate whether or not this stream
              // contains buffers or objects.
              this.objectMode = !!options.objectMode;

              if (isDuplex)
                this.objectMode =
                  this.objectMode || !!options.writableObjectMode;

              // the point at which write() starts returning false
              // Note: 0 is a valid value, means that we always return false if
              // the entire buffer is not flushed immediately on write()
              var hwm = options.highWaterMark;
              var writableHwm = options.writableHighWaterMark;
              var defaultHwm = this.objectMode ? 16 : 16 * 1024;

              if (hwm || hwm === 0) this.highWaterMark = hwm;
              else if (isDuplex && (writableHwm || writableHwm === 0))
                this.highWaterMark = writableHwm;
              else this.highWaterMark = defaultHwm;

              // cast to ints.
              this.highWaterMark = Math.floor(this.highWaterMark);

              // if _final has been called
              this.finalCalled = false;

              // drain event flag.
              this.needDrain = false;
              // at the start of calling end()
              this.ending = false;
              // when end() has been called, and returned
              this.ended = false;
              // when 'finish' is emitted
              this.finished = false;

              // has it been destroyed
              this.destroyed = false;

              // should we decode strings into buffers before passing to _write?
              // this is here so that some node-core streams can optimize string
              // handling at a lower level.
              var noDecode = options.decodeStrings === false;
              this.decodeStrings = !noDecode;

              // Crypto is kind of old and crusty.  Historically, its default string
              // encoding is 'binary' so we have to make this configurable.
              // Everything else in the universe uses 'utf8', though.
              this.defaultEncoding = options.defaultEncoding || 'utf8';

              // not an actual buffer we keep track of, but a measurement
              // of how much we're waiting to get pushed to some underlying
              // socket or file.
              this.length = 0;

              // a flag to see when we're in the middle of a write.
              this.writing = false;

              // when true all writes will be buffered until .uncork() call
              this.corked = 0;

              // a flag to be able to tell if the onwrite cb is called immediately,
              // or on a later tick.  We set this to true at first, because any
              // actions that shouldn't happen until "later" should generally also
              // not happen before the first write call.
              this.sync = true;

              // a flag to know if we're processing previously buffered items, which
              // may call the _write() callback in the same tick, so that we don't
              // end up in an overlapped onwrite situation.
              this.bufferProcessing = false;

              // the callback that's passed to _write(chunk,cb)
              this.onwrite = function (er) {
                onwrite(stream, er);
              };

              // the callback that the user supplies to write(chunk,encoding,cb)
              this.writecb = null;

              // the amount that is being written when _write is called.
              this.writelen = 0;

              this.bufferedRequest = null;
              this.lastBufferedRequest = null;

              // number of pending user-supplied write callbacks
              // this must be 0 before 'finish' can be emitted
              this.pendingcb = 0;

              // emit prefinish if the only thing we're waiting for is _write cbs
              // This is relevant for synchronous Transform streams
              this.prefinished = false;

              // True if the error was already emitted and should not be thrown again
              this.errorEmitted = false;

              // count buffered requests
              this.bufferedRequestCount = 0;

              // allocate the first CorkedRequest, there is always
              // one allocated and free to use, and we maintain at most two
              this.corkedRequestsFree = new CorkedRequest(this);
            }

            WritableState.prototype.getBuffer = function getBuffer() {
              var current = this.bufferedRequest;
              var out = [];
              while (current) {
                out.push(current);
                current = current.next;
              }
              return out;
            };

            (function () {
              try {
                Object.defineProperty(WritableState.prototype, 'buffer', {
                  get: internalUtil.deprecate(
                    function () {
                      return this.getBuffer();
                    },
                    '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
                      'instead.',
                    'DEP0003'
                  ),
                });
              } catch (_) {}
            })();

            // Test _writableState for inheritance to account for Duplex streams,
            // whose prototype chain only points to Readable.
            var realHasInstance;
            if (
              typeof Symbol === 'function' &&
              Symbol.hasInstance &&
              typeof Function.prototype[Symbol.hasInstance] === 'function'
            ) {
              realHasInstance = Function.prototype[Symbol.hasInstance];
              Object.defineProperty(Writable, Symbol.hasInstance, {
                value: function value(object) {
                  if (realHasInstance.call(this, object)) return true;
                  if (this !== Writable) return false;

                  return (
                    object && object._writableState instanceof WritableState
                  );
                },
              });
            } else {
              realHasInstance = function realHasInstance(object) {
                return object instanceof this;
              };
            }

            function Writable(options) {
              Duplex = Duplex || __webpack_require__(8);

              // Writable ctor is applied to Duplexes, too.
              // `realHasInstance` is necessary because using plain `instanceof`
              // would return false, as no `_writableState` property is attached.

              // Trying to use the custom `instanceof` for Writable here will also break the
              // Node.js LazyTransform implementation, which has a non-trivial getter for
              // `_writableState` that would lead to infinite recursion.
              if (
                !realHasInstance.call(Writable, this) &&
                !(this instanceof Duplex)
              ) {
                return new Writable(options);
              }

              this._writableState = new WritableState(options, this);

              // legacy.
              this.writable = true;

              if (options) {
                if (typeof options.write === 'function')
                  this._write = options.write;

                if (typeof options.writev === 'function')
                  this._writev = options.writev;

                if (typeof options.destroy === 'function')
                  this._destroy = options.destroy;

                if (typeof options.final === 'function')
                  this._final = options.final;
              }

              Stream.call(this);
            }

            // Otherwise people can pipe Writable streams, which is just wrong.
            Writable.prototype.pipe = function () {
              this.emit('error', new Error('Cannot pipe, not readable'));
            };

            function writeAfterEnd(stream, cb) {
              var er = new Error('write after end');
              // TODO: defer error events consistently everywhere, not just the cb
              stream.emit('error', er);
              pna.nextTick(cb, er);
            }

            // Checks that a user-supplied chunk is valid, especially for the particular
            // mode the stream is in. Currently this means that `null` is never accepted
            // and undefined/non-string values are only allowed in object mode.
            function validChunk(stream, state, chunk, cb) {
              var valid = true;
              var er = false;

              if (chunk === null) {
                er = new TypeError('May not write null values to stream');
              } else if (
                typeof chunk !== 'string' &&
                chunk !== undefined &&
                !state.objectMode
              ) {
                er = new TypeError('Invalid non-string/buffer chunk');
              }
              if (er) {
                stream.emit('error', er);
                pna.nextTick(cb, er);
                valid = false;
              }
              return valid;
            }

            Writable.prototype.write = function (chunk, encoding, cb) {
              var state = this._writableState;
              var ret = false;
              var isBuf = !state.objectMode && _isUint8Array(chunk);

              if (isBuf && !Buffer.isBuffer(chunk)) {
                chunk = _uint8ArrayToBuffer(chunk);
              }

              if (typeof encoding === 'function') {
                cb = encoding;
                encoding = null;
              }

              if (isBuf) encoding = 'buffer';
              else if (!encoding) encoding = state.defaultEncoding;

              if (typeof cb !== 'function') cb = nop;

              if (state.ended) writeAfterEnd(this, cb);
              else if (isBuf || validChunk(this, state, chunk, cb)) {
                state.pendingcb++;
                ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
              }

              return ret;
            };

            Writable.prototype.cork = function () {
              var state = this._writableState;

              state.corked++;
            };

            Writable.prototype.uncork = function () {
              var state = this._writableState;

              if (state.corked) {
                state.corked--;

                if (
                  !state.writing &&
                  !state.corked &&
                  !state.finished &&
                  !state.bufferProcessing &&
                  state.bufferedRequest
                )
                  clearBuffer(this, state);
              }
            };

            Writable.prototype.setDefaultEncoding = function setDefaultEncoding(
              encoding
            ) {
              // node::ParseEncoding() requires lower case.
              if (typeof encoding === 'string')
                encoding = encoding.toLowerCase();
              if (
                !(
                  [
                    'hex',
                    'utf8',
                    'utf-8',
                    'ascii',
                    'binary',
                    'base64',
                    'ucs2',
                    'ucs-2',
                    'utf16le',
                    'utf-16le',
                    'raw',
                  ].indexOf((encoding + '').toLowerCase()) > -1
                )
              )
                throw new TypeError('Unknown encoding: ' + encoding);
              this._writableState.defaultEncoding = encoding;
              return this;
            };

            function decodeChunk(state, chunk, encoding) {
              if (
                !state.objectMode &&
                state.decodeStrings !== false &&
                typeof chunk === 'string'
              ) {
                chunk = Buffer.from(chunk, encoding);
              }
              return chunk;
            }

            Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
              // making it explicit this property is not enumerable
              // because otherwise some prototype manipulation in
              // userland will fail
              enumerable: false,
              get: function get() {
                return this._writableState.highWaterMark;
              },
            });

            // if we're already writing something, then just put this
            // in the queue, and wait our turn.  Otherwise, call _write
            // If we return false, then we need a drain event, so set that flag.
            function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
              if (!isBuf) {
                var newChunk = decodeChunk(state, chunk, encoding);
                if (chunk !== newChunk) {
                  isBuf = true;
                  encoding = 'buffer';
                  chunk = newChunk;
                }
              }
              var len = state.objectMode ? 1 : chunk.length;

              state.length += len;

              var ret = state.length < state.highWaterMark;
              // we must ensure that previous needDrain will not be reset to false.
              if (!ret) state.needDrain = true;

              if (state.writing || state.corked) {
                var last = state.lastBufferedRequest;
                state.lastBufferedRequest = {
                  chunk: chunk,
                  encoding: encoding,
                  isBuf: isBuf,
                  callback: cb,
                  next: null,
                };
                if (last) {
                  last.next = state.lastBufferedRequest;
                } else {
                  state.bufferedRequest = state.lastBufferedRequest;
                }
                state.bufferedRequestCount += 1;
              } else {
                doWrite(stream, state, false, len, chunk, encoding, cb);
              }

              return ret;
            }

            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
              state.writelen = len;
              state.writecb = cb;
              state.writing = true;
              state.sync = true;
              if (writev) stream._writev(chunk, state.onwrite);
              else stream._write(chunk, encoding, state.onwrite);
              state.sync = false;
            }

            function onwriteError(stream, state, sync, er, cb) {
              --state.pendingcb;

              if (sync) {
                // defer the callback if we are being called synchronously
                // to avoid piling up things on the stack
                pna.nextTick(cb, er);
                // this can emit finish, and it will always happen
                // after error
                pna.nextTick(finishMaybe, stream, state);
                stream._writableState.errorEmitted = true;
                stream.emit('error', er);
              } else {
                // the caller expect this to happen before if
                // it is async
                cb(er);
                stream._writableState.errorEmitted = true;
                stream.emit('error', er);
                // this can emit finish, but finish must
                // always follow error
                finishMaybe(stream, state);
              }
            }

            function onwriteStateUpdate(state) {
              state.writing = false;
              state.writecb = null;
              state.length -= state.writelen;
              state.writelen = 0;
            }

            function onwrite(stream, er) {
              var state = stream._writableState;
              var sync = state.sync;
              var cb = state.writecb;

              onwriteStateUpdate(state);

              if (er) onwriteError(stream, state, sync, er, cb);
              else {
                // Check if we're actually ready to finish, but don't emit yet
                var finished = needFinish(state);

                if (
                  !finished &&
                  !state.corked &&
                  !state.bufferProcessing &&
                  state.bufferedRequest
                ) {
                  clearBuffer(stream, state);
                }

                if (sync) {
                  /*<replacement>*/
                  asyncWrite(afterWrite, stream, state, finished, cb);
                  /*</replacement>*/
                } else {
                  afterWrite(stream, state, finished, cb);
                }
              }
            }

            function afterWrite(stream, state, finished, cb) {
              if (!finished) onwriteDrain(stream, state);
              state.pendingcb--;
              cb();
              finishMaybe(stream, state);
            }

            // Must force callback to be called on nextTick, so that we don't
            // emit 'drain' before the write() consumer gets the 'false' return
            // value, and has a chance to attach a 'drain' listener.
            function onwriteDrain(stream, state) {
              if (state.length === 0 && state.needDrain) {
                state.needDrain = false;
                stream.emit('drain');
              }
            }

            // if there's something in the buffer waiting, then process it
            function clearBuffer(stream, state) {
              state.bufferProcessing = true;
              var entry = state.bufferedRequest;

              if (stream._writev && entry && entry.next) {
                // Fast case, write everything using _writev()
                var l = state.bufferedRequestCount;
                var buffer = new Array(l);
                var holder = state.corkedRequestsFree;
                holder.entry = entry;

                var count = 0;
                var allBuffers = true;
                while (entry) {
                  buffer[count] = entry;
                  if (!entry.isBuf) allBuffers = false;
                  entry = entry.next;
                  count += 1;
                }
                buffer.allBuffers = allBuffers;

                doWrite(
                  stream,
                  state,
                  true,
                  state.length,
                  buffer,
                  '',
                  holder.finish
                );

                // doWrite is almost always async, defer these to save a bit of time
                // as the hot path ends with doWrite
                state.pendingcb++;
                state.lastBufferedRequest = null;
                if (holder.next) {
                  state.corkedRequestsFree = holder.next;
                  holder.next = null;
                } else {
                  state.corkedRequestsFree = new CorkedRequest(state);
                }
                state.bufferedRequestCount = 0;
              } else {
                // Slow case, write chunks one-by-one
                while (entry) {
                  var chunk = entry.chunk;
                  var encoding = entry.encoding;
                  var cb = entry.callback;
                  var len = state.objectMode ? 1 : chunk.length;

                  doWrite(stream, state, false, len, chunk, encoding, cb);
                  entry = entry.next;
                  state.bufferedRequestCount--;
                  // if we didn't call the onwrite immediately, then
                  // it means that we need to wait until it does.
                  // also, that means that the chunk and cb are currently
                  // being processed, so move the buffer counter past them.
                  if (state.writing) {
                    break;
                  }
                }

                if (entry === null) state.lastBufferedRequest = null;
              }

              state.bufferedRequest = entry;
              state.bufferProcessing = false;
            }

            Writable.prototype._write = function (chunk, encoding, cb) {
              cb(new Error('_write() is not implemented'));
            };

            Writable.prototype._writev = null;

            Writable.prototype.end = function (chunk, encoding, cb) {
              var state = this._writableState;

              if (typeof chunk === 'function') {
                cb = chunk;
                chunk = null;
                encoding = null;
              } else if (typeof encoding === 'function') {
                cb = encoding;
                encoding = null;
              }

              if (chunk !== null && chunk !== undefined)
                this.write(chunk, encoding);

              // .end() fully uncorks
              if (state.corked) {
                state.corked = 1;
                this.uncork();
              }

              // ignore unnecessary end() calls.
              if (!state.ending && !state.finished)
                endWritable(this, state, cb);
            };

            function needFinish(state) {
              return (
                state.ending &&
                state.length === 0 &&
                state.bufferedRequest === null &&
                !state.finished &&
                !state.writing
              );
            }
            function callFinal(stream, state) {
              stream._final(function (err) {
                state.pendingcb--;
                if (err) {
                  stream.emit('error', err);
                }
                state.prefinished = true;
                stream.emit('prefinish');
                finishMaybe(stream, state);
              });
            }
            function prefinish(stream, state) {
              if (!state.prefinished && !state.finalCalled) {
                if (typeof stream._final === 'function') {
                  state.pendingcb++;
                  state.finalCalled = true;
                  pna.nextTick(callFinal, stream, state);
                } else {
                  state.prefinished = true;
                  stream.emit('prefinish');
                }
              }
            }

            function finishMaybe(stream, state) {
              var need = needFinish(state);
              if (need) {
                prefinish(stream, state);
                if (state.pendingcb === 0) {
                  state.finished = true;
                  stream.emit('finish');
                }
              }
              return need;
            }

            function endWritable(stream, state, cb) {
              state.ending = true;
              finishMaybe(stream, state);
              if (cb) {
                if (state.finished) pna.nextTick(cb);
                else stream.once('finish', cb);
              }
              state.ended = true;
              stream.writable = false;
            }

            function onCorkedFinish(corkReq, state, err) {
              var entry = corkReq.entry;
              corkReq.entry = null;
              while (entry) {
                var cb = entry.callback;
                state.pendingcb--;
                cb(err);
                entry = entry.next;
              }
              if (state.corkedRequestsFree) {
                state.corkedRequestsFree.next = corkReq;
              } else {
                state.corkedRequestsFree = corkReq;
              }
            }

            Object.defineProperty(Writable.prototype, 'destroyed', {
              get: function get() {
                if (this._writableState === undefined) {
                  return false;
                }
                return this._writableState.destroyed;
              },
              set: function set(value) {
                // we ignore the value if the stream
                // has not been initialized yet
                if (!this._writableState) {
                  return;
                }

                // backward compatibility, the user is explicitly
                // managing destroyed
                this._writableState.destroyed = value;
              },
            });

            Writable.prototype.destroy = destroyImpl.destroy;
            Writable.prototype._undestroy = destroyImpl.undestroy;
            Writable.prototype._destroy = function (err, cb) {
              this.end();
              cb(err);
            };
            /* WEBPACK VAR INJECTION */
          }).call(
            exports,
            __webpack_require__(3),
            __webpack_require__(63).setImmediate,
            __webpack_require__(2)
          );

          /***/
        },
        /* 19 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          /*<replacement>*/

          var Buffer = __webpack_require__(1).Buffer;
          /*</replacement>*/

          var isEncoding =
            Buffer.isEncoding ||
            function (encoding) {
              encoding = '' + encoding;
              switch (encoding && encoding.toLowerCase()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                case 'raw':
                  return true;
                default:
                  return false;
              }
            };

          function _normalizeEncoding(enc) {
            if (!enc) return 'utf8';
            var retried;
            while (true) {
              switch (enc) {
                case 'utf8':
                case 'utf-8':
                  return 'utf8';
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return 'utf16le';
                case 'latin1':
                case 'binary':
                  return 'latin1';
                case 'base64':
                case 'ascii':
                case 'hex':
                  return enc;
                default:
                  if (retried) return; // undefined
                  enc = ('' + enc).toLowerCase();
                  retried = true;
              }
            }
          }

          // Do not cache `Buffer.isEncoding` when checking encoding names as some
          // modules monkey-patch it to support additional encodings
          function normalizeEncoding(enc) {
            var nenc = _normalizeEncoding(enc);
            if (
              typeof nenc !== 'string' &&
              (Buffer.isEncoding === isEncoding || !isEncoding(enc))
            )
              throw new Error('Unknown encoding: ' + enc);
            return nenc || enc;
          }

          // StringDecoder provides an interface for efficiently splitting a series of
          // buffers into a series of JS strings without breaking apart multi-byte
          // characters.
          exports.StringDecoder = StringDecoder;
          function StringDecoder(encoding) {
            this.encoding = normalizeEncoding(encoding);
            var nb;
            switch (this.encoding) {
              case 'utf16le':
                this.text = utf16Text;
                this.end = utf16End;
                nb = 4;
                break;
              case 'utf8':
                this.fillLast = utf8FillLast;
                nb = 4;
                break;
              case 'base64':
                this.text = base64Text;
                this.end = base64End;
                nb = 3;
                break;
              default:
                this.write = simpleWrite;
                this.end = simpleEnd;
                return;
            }
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = Buffer.allocUnsafe(nb);
          }

          StringDecoder.prototype.write = function (buf) {
            if (buf.length === 0) return '';
            var r;
            var i;
            if (this.lastNeed) {
              r = this.fillLast(buf);
              if (r === undefined) return '';
              i = this.lastNeed;
              this.lastNeed = 0;
            } else {
              i = 0;
            }
            if (i < buf.length)
              return r ? r + this.text(buf, i) : this.text(buf, i);
            return r || '';
          };

          StringDecoder.prototype.end = utf8End;

          // Returns only complete characters in a Buffer
          StringDecoder.prototype.text = utf8Text;

          // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
          StringDecoder.prototype.fillLast = function (buf) {
            if (this.lastNeed <= buf.length) {
              buf.copy(
                this.lastChar,
                this.lastTotal - this.lastNeed,
                0,
                this.lastNeed
              );
              return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(
              this.lastChar,
              this.lastTotal - this.lastNeed,
              0,
              buf.length
            );
            this.lastNeed -= buf.length;
          };

          // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
          // continuation byte. If an invalid byte is detected, -2 is returned.
          function utf8CheckByte(byte) {
            if (byte <= 0x7f) return 0;
            else if (byte >> 5 === 0x06) return 2;
            else if (byte >> 4 === 0x0e) return 3;
            else if (byte >> 3 === 0x1e) return 4;
            return byte >> 6 === 0x02 ? -1 : -2;
          }

          // Checks at most 3 bytes at the end of a Buffer in order to detect an
          // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
          // needed to complete the UTF-8 character (if applicable) are returned.
          function utf8CheckIncomplete(self, buf, i) {
            var j = buf.length - 1;
            if (j < i) return 0;
            var nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
              if (nb > 0) self.lastNeed = nb - 1;
              return nb;
            }
            if (--j < i || nb === -2) return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
              if (nb > 0) self.lastNeed = nb - 2;
              return nb;
            }
            if (--j < i || nb === -2) return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
              if (nb > 0) {
                if (nb === 2) nb = 0;
                else self.lastNeed = nb - 3;
              }
              return nb;
            }
            return 0;
          }

          // Validates as many continuation bytes for a multi-byte UTF-8 character as
          // needed or are available. If we see a non-continuation byte where we expect
          // one, we "replace" the validated continuation bytes we've seen so far with
          // a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
          // behavior. The continuation byte check is included three times in the case
          // where all of the continuation bytes for a character exist in the same buffer.
          // It is also done this way as a slight performance increase instead of using a
          // loop.
          function utf8CheckExtraBytes(self, buf, p) {
            if ((buf[0] & 0xc0) !== 0x80) {
              self.lastNeed = 0;
              return '\uFFFD';
            }
            if (self.lastNeed > 1 && buf.length > 1) {
              if ((buf[1] & 0xc0) !== 0x80) {
                self.lastNeed = 1;
                return '\uFFFD';
              }
              if (self.lastNeed > 2 && buf.length > 2) {
                if ((buf[2] & 0xc0) !== 0x80) {
                  self.lastNeed = 2;
                  return '\uFFFD';
                }
              }
            }
          }

          // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
          function utf8FillLast(buf) {
            var p = this.lastTotal - this.lastNeed;
            var r = utf8CheckExtraBytes(this, buf, p);
            if (r !== undefined) return r;
            if (this.lastNeed <= buf.length) {
              buf.copy(this.lastChar, p, 0, this.lastNeed);
              return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, p, 0, buf.length);
            this.lastNeed -= buf.length;
          }

          // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
          // partial character, the character's bytes are buffered until the required
          // number of bytes are available.
          function utf8Text(buf, i) {
            var total = utf8CheckIncomplete(this, buf, i);
            if (!this.lastNeed) return buf.toString('utf8', i);
            this.lastTotal = total;
            var end = buf.length - (total - this.lastNeed);
            buf.copy(this.lastChar, 0, end);
            return buf.toString('utf8', i, end);
          }

          // For UTF-8, a replacement character is added when ending on a partial
          // character.
          function utf8End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) return r + '\uFFFD';
            return r;
          }

          // UTF-16LE typically needs two bytes per character, but even if we have an even
          // number of bytes available, we need to check if we end on a leading/high
          // surrogate. In that case, we need to wait for the next two bytes in order to
          // decode the last character properly.
          function utf16Text(buf, i) {
            if ((buf.length - i) % 2 === 0) {
              var r = buf.toString('utf16le', i);
              if (r) {
                var c = r.charCodeAt(r.length - 1);
                if (c >= 0xd800 && c <= 0xdbff) {
                  this.lastNeed = 2;
                  this.lastTotal = 4;
                  this.lastChar[0] = buf[buf.length - 2];
                  this.lastChar[1] = buf[buf.length - 1];
                  return r.slice(0, -1);
                }
              }
              return r;
            }
            this.lastNeed = 1;
            this.lastTotal = 2;
            this.lastChar[0] = buf[buf.length - 1];
            return buf.toString('utf16le', i, buf.length - 1);
          }

          // For UTF-16LE we do not explicitly append special replacement characters if we
          // end on a partial character, we simply let v8 handle that.
          function utf16End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) {
              var end = this.lastTotal - this.lastNeed;
              return r + this.lastChar.toString('utf16le', 0, end);
            }
            return r;
          }

          function base64Text(buf, i) {
            var n = (buf.length - i) % 3;
            if (n === 0) return buf.toString('base64', i);
            this.lastNeed = 3 - n;
            this.lastTotal = 3;
            if (n === 1) {
              this.lastChar[0] = buf[buf.length - 1];
            } else {
              this.lastChar[0] = buf[buf.length - 2];
              this.lastChar[1] = buf[buf.length - 1];
            }
            return buf.toString('base64', i, buf.length - n);
          }

          function base64End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed)
              return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
            return r;
          }

          // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
          function simpleWrite(buf) {
            return buf.toString(this.encoding);
          }

          function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : '';
          }

          /***/
        },
        /* 20 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = function (module) {
            if (!module.webpackPolyfill) {
              module.deprecate = function () {};
              module.paths = [];
              // module.parent = undefined by default
              if (!module.children) module.children = [];
              Object.defineProperty(module, 'loaded', {
                enumerable: true,
                get: function get() {
                  return module.l;
                },
              });
              Object.defineProperty(module, 'id', {
                enumerable: true,
                get: function get() {
                  return module.i;
                },
              });
              module.webpackPolyfill = 1;
            }
            return module;
          };

          /***/
        },
        /* 21 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          module.exports = {
            2: 'need dictionary' /* Z_NEED_DICT       2  */,
            1: 'stream end' /* Z_STREAM_END      1  */,
            0: '' /* Z_OK              0  */,
            '-1': 'file error' /* Z_ERRNO         (-1) */,
            '-2': 'stream error' /* Z_STREAM_ERROR  (-2) */,
            '-3': 'data error' /* Z_DATA_ERROR    (-3) */,
            '-4': 'insufficient memory' /* Z_MEM_ERROR     (-4) */,
            '-5': 'buffer error' /* Z_BUF_ERROR     (-5) */,
            '-6': 'incompatible version' /* Z_VERSION_ERROR (-6) */,
          };

          /***/
        },
        /* 22 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (process) {
            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            var getOwnPropertyDescriptors =
              Object.getOwnPropertyDescriptors ||
              function getOwnPropertyDescriptors(obj) {
                var keys = Object.keys(obj);
                var descriptors = {};
                for (var i = 0; i < keys.length; i++) {
                  descriptors[keys[i]] = Object.getOwnPropertyDescriptor(
                    obj,
                    keys[i]
                  );
                }
                return descriptors;
              };

            var formatRegExp = /%[sdj%]/g;
            exports.format = function (f) {
              if (!isString(f)) {
                var objects = [];
                for (var i = 0; i < arguments.length; i++) {
                  objects.push(inspect(arguments[i]));
                }
                return objects.join(' ');
              }

              var i = 1;
              var args = arguments;
              var len = args.length;
              var str = String(f).replace(formatRegExp, function (x) {
                if (x === '%%') return '%';
                if (i >= len) return x;
                switch (x) {
                  case '%s':
                    return String(args[i++]);
                  case '%d':
                    return Number(args[i++]);
                  case '%j':
                    try {
                      return JSON.stringify(args[i++]);
                    } catch (_) {
                      return '[Circular]';
                    }
                  default:
                    return x;
                }
              });
              for (var x = args[i]; i < len; x = args[++i]) {
                if (isNull(x) || !isObject(x)) {
                  str += ' ' + x;
                } else {
                  str += ' ' + inspect(x);
                }
              }
              return str;
            };

            // Mark that a method should not be used.
            // Returns a modified function which warns once by default.
            // If --no-deprecation is set, then it is a no-op.
            exports.deprecate = function (fn, msg) {
              if (
                typeof process !== 'undefined' &&
                process.noDeprecation === true
              ) {
                return fn;
              }

              // Allow for deprecating things in the process of starting up.
              if (typeof process === 'undefined') {
                return function () {
                  return exports.deprecate(fn, msg).apply(this, arguments);
                };
              }

              var warned = false;
              function deprecated() {
                if (!warned) {
                  if (process.throwDeprecation) {
                    throw new Error(msg);
                  } else if (process.traceDeprecation) {
                    console.trace(msg);
                  } else {
                    console.error(msg);
                  }
                  warned = true;
                }
                return fn.apply(this, arguments);
              }

              return deprecated;
            };

            var debugs = {};
            var debugEnviron;
            exports.debuglog = function (set) {
              if (isUndefined(debugEnviron))
                debugEnviron = process.env.NODE_DEBUG || '';
              set = set.toUpperCase();
              if (!debugs[set]) {
                if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
                  var pid = process.pid;
                  debugs[set] = function () {
                    var msg = exports.format.apply(exports, arguments);
                    console.error('%s %d: %s', set, pid, msg);
                  };
                } else {
                  debugs[set] = function () {};
                }
              }
              return debugs[set];
            };

            /**
             * Echos the value of a value. Trys to print the value out
             * in the best way possible given the different types.
             *
             * @param {Object} obj The object to print out.
             * @param {Object} opts Optional options object that alters the output.
             */
            /* legacy: obj, showHidden, depth, colors*/
            function inspect(obj, opts) {
              // default options
              var ctx = {
                seen: [],
                stylize: stylizeNoColor,
              };
              // legacy...
              if (arguments.length >= 3) ctx.depth = arguments[2];
              if (arguments.length >= 4) ctx.colors = arguments[3];
              if (isBoolean(opts)) {
                // legacy...
                ctx.showHidden = opts;
              } else if (opts) {
                // got an "options" object
                exports._extend(ctx, opts);
              }
              // set default options
              if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
              if (isUndefined(ctx.depth)) ctx.depth = 2;
              if (isUndefined(ctx.colors)) ctx.colors = false;
              if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
              if (ctx.colors) ctx.stylize = stylizeWithColor;
              return formatValue(ctx, obj, ctx.depth);
            }
            exports.inspect = inspect;

            // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
            inspect.colors = {
              bold: [1, 22],
              italic: [3, 23],
              underline: [4, 24],
              inverse: [7, 27],
              white: [37, 39],
              grey: [90, 39],
              black: [30, 39],
              blue: [34, 39],
              cyan: [36, 39],
              green: [32, 39],
              magenta: [35, 39],
              red: [31, 39],
              yellow: [33, 39],
            };

            // Don't use 'blue' not visible on cmd.exe
            inspect.styles = {
              special: 'cyan',
              number: 'yellow',
              boolean: 'yellow',
              undefined: 'grey',
              null: 'bold',
              string: 'green',
              date: 'magenta',
              // "name": intentionally not styling
              regexp: 'red',
            };

            function stylizeWithColor(str, styleType) {
              var style = inspect.styles[styleType];

              if (style) {
                return (
                  '\x1B[' +
                  inspect.colors[style][0] +
                  'm' +
                  str +
                  '\x1B[' +
                  inspect.colors[style][1] +
                  'm'
                );
              } else {
                return str;
              }
            }

            function stylizeNoColor(str, styleType) {
              return str;
            }

            function arrayToHash(array) {
              var hash = {};

              array.forEach(function (val, idx) {
                hash[val] = true;
              });

              return hash;
            }

            function formatValue(ctx, value, recurseTimes) {
              // Provide a hook for user-specified inspect functions.
              // Check that value is an object with an inspect function on it
              if (
                ctx.customInspect &&
                value &&
                isFunction(value.inspect) &&
                // Filter out the util module, it's inspect function is special
                value.inspect !== exports.inspect &&
                // Also filter out any prototype objects using the circular check.
                !(value.constructor && value.constructor.prototype === value)
              ) {
                var ret = value.inspect(recurseTimes, ctx);
                if (!isString(ret)) {
                  ret = formatValue(ctx, ret, recurseTimes);
                }
                return ret;
              }

              // Primitive types cannot have properties
              var primitive = formatPrimitive(ctx, value);
              if (primitive) {
                return primitive;
              }

              // Look up the keys of the object.
              var keys = Object.keys(value);
              var visibleKeys = arrayToHash(keys);

              if (ctx.showHidden) {
                keys = Object.getOwnPropertyNames(value);
              }

              // IE doesn't make error fields non-enumerable
              // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
              if (
                isError(value) &&
                (keys.indexOf('message') >= 0 ||
                  keys.indexOf('description') >= 0)
              ) {
                return formatError(value);
              }

              // Some type of object without properties can be shortcutted.
              if (keys.length === 0) {
                if (isFunction(value)) {
                  var name = value.name ? ': ' + value.name : '';
                  return ctx.stylize('[Function' + name + ']', 'special');
                }
                if (isRegExp(value)) {
                  return ctx.stylize(
                    RegExp.prototype.toString.call(value),
                    'regexp'
                  );
                }
                if (isDate(value)) {
                  return ctx.stylize(
                    Date.prototype.toString.call(value),
                    'date'
                  );
                }
                if (isError(value)) {
                  return formatError(value);
                }
              }

              var base = '',
                array = false,
                braces = ['{', '}'];

              // Make Array say that they are Array
              if (isArray(value)) {
                array = true;
                braces = ['[', ']'];
              }

              // Make functions say that they are functions
              if (isFunction(value)) {
                var n = value.name ? ': ' + value.name : '';
                base = ' [Function' + n + ']';
              }

              // Make RegExps say that they are RegExps
              if (isRegExp(value)) {
                base = ' ' + RegExp.prototype.toString.call(value);
              }

              // Make dates with properties first say the date
              if (isDate(value)) {
                base = ' ' + Date.prototype.toUTCString.call(value);
              }

              // Make error with message first say the error
              if (isError(value)) {
                base = ' ' + formatError(value);
              }

              if (keys.length === 0 && (!array || value.length == 0)) {
                return braces[0] + base + braces[1];
              }

              if (recurseTimes < 0) {
                if (isRegExp(value)) {
                  return ctx.stylize(
                    RegExp.prototype.toString.call(value),
                    'regexp'
                  );
                } else {
                  return ctx.stylize('[Object]', 'special');
                }
              }

              ctx.seen.push(value);

              var output;
              if (array) {
                output = formatArray(
                  ctx,
                  value,
                  recurseTimes,
                  visibleKeys,
                  keys
                );
              } else {
                output = keys.map(function (key) {
                  return formatProperty(
                    ctx,
                    value,
                    recurseTimes,
                    visibleKeys,
                    key,
                    array
                  );
                });
              }

              ctx.seen.pop();

              return reduceToSingleString(output, base, braces);
            }

            function formatPrimitive(ctx, value) {
              if (isUndefined(value))
                return ctx.stylize('undefined', 'undefined');
              if (isString(value)) {
                var simple =
                  "'" +
                  JSON.stringify(value)
                    .replace(/^"|"$/g, '')
                    .replace(/'/g, "\\'")
                    .replace(/\\"/g, '"') +
                  "'";
                return ctx.stylize(simple, 'string');
              }
              if (isNumber(value)) return ctx.stylize('' + value, 'number');
              if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
              // For some reason typeof null is "object", so special case here.
              if (isNull(value)) return ctx.stylize('null', 'null');
            }

            function formatError(value) {
              return '[' + Error.prototype.toString.call(value) + ']';
            }

            function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
              var output = [];
              for (var i = 0, l = value.length; i < l; ++i) {
                if (hasOwnProperty(value, String(i))) {
                  output.push(
                    formatProperty(
                      ctx,
                      value,
                      recurseTimes,
                      visibleKeys,
                      String(i),
                      true
                    )
                  );
                } else {
                  output.push('');
                }
              }
              keys.forEach(function (key) {
                if (!key.match(/^\d+$/)) {
                  output.push(
                    formatProperty(
                      ctx,
                      value,
                      recurseTimes,
                      visibleKeys,
                      key,
                      true
                    )
                  );
                }
              });
              return output;
            }

            function formatProperty(
              ctx,
              value,
              recurseTimes,
              visibleKeys,
              key,
              array
            ) {
              var name, str, desc;
              desc = Object.getOwnPropertyDescriptor(value, key) || {
                value: value[key],
              };
              if (desc.get) {
                if (desc.set) {
                  str = ctx.stylize('[Getter/Setter]', 'special');
                } else {
                  str = ctx.stylize('[Getter]', 'special');
                }
              } else {
                if (desc.set) {
                  str = ctx.stylize('[Setter]', 'special');
                }
              }
              if (!hasOwnProperty(visibleKeys, key)) {
                name = '[' + key + ']';
              }
              if (!str) {
                if (ctx.seen.indexOf(desc.value) < 0) {
                  if (isNull(recurseTimes)) {
                    str = formatValue(ctx, desc.value, null);
                  } else {
                    str = formatValue(ctx, desc.value, recurseTimes - 1);
                  }
                  if (str.indexOf('\n') > -1) {
                    if (array) {
                      str = str
                        .split('\n')
                        .map(function (line) {
                          return '  ' + line;
                        })
                        .join('\n')
                        .substr(2);
                    } else {
                      str =
                        '\n' +
                        str
                          .split('\n')
                          .map(function (line) {
                            return '   ' + line;
                          })
                          .join('\n');
                    }
                  }
                } else {
                  str = ctx.stylize('[Circular]', 'special');
                }
              }
              if (isUndefined(name)) {
                if (array && key.match(/^\d+$/)) {
                  return str;
                }
                name = JSON.stringify('' + key);
                if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                  name = name.substr(1, name.length - 2);
                  name = ctx.stylize(name, 'name');
                } else {
                  name = name
                    .replace(/'/g, "\\'")
                    .replace(/\\"/g, '"')
                    .replace(/(^"|"$)/g, "'");
                  name = ctx.stylize(name, 'string');
                }
              }

              return name + ': ' + str;
            }

            function reduceToSingleString(output, base, braces) {
              var numLinesEst = 0;
              var length = output.reduce(function (prev, cur) {
                numLinesEst++;
                if (cur.indexOf('\n') >= 0) numLinesEst++;
                return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
              }, 0);

              if (length > 60) {
                return (
                  braces[0] +
                  (base === '' ? '' : base + '\n ') +
                  ' ' +
                  output.join(',\n  ') +
                  ' ' +
                  braces[1]
                );
              }

              return (
                braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1]
              );
            }

            // NOTE: These type checking functions intentionally don't use `instanceof`
            // because it is fragile and can be easily faked with `Object.create()`.
            function isArray(ar) {
              return Array.isArray(ar);
            }
            exports.isArray = isArray;

            function isBoolean(arg) {
              return typeof arg === 'boolean';
            }
            exports.isBoolean = isBoolean;

            function isNull(arg) {
              return arg === null;
            }
            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
              return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
              return typeof arg === 'number';
            }
            exports.isNumber = isNumber;

            function isString(arg) {
              return typeof arg === 'string';
            }
            exports.isString = isString;

            function isSymbol(arg) {
              return (
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                'symbol'
              );
            }
            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
              return arg === void 0;
            }
            exports.isUndefined = isUndefined;

            function isRegExp(re) {
              return isObject(re) && objectToString(re) === '[object RegExp]';
            }
            exports.isRegExp = isRegExp;

            function isObject(arg) {
              return (
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                  'object' && arg !== null
              );
            }
            exports.isObject = isObject;

            function isDate(d) {
              return isObject(d) && objectToString(d) === '[object Date]';
            }
            exports.isDate = isDate;

            function isError(e) {
              return (
                isObject(e) &&
                (objectToString(e) === '[object Error]' || e instanceof Error)
              );
            }
            exports.isError = isError;

            function isFunction(arg) {
              return typeof arg === 'function';
            }
            exports.isFunction = isFunction;

            function isPrimitive(arg) {
              return (
                arg === null ||
                typeof arg === 'boolean' ||
                typeof arg === 'number' ||
                typeof arg === 'string' ||
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                  'symbol' || // ES6 symbol
                typeof arg === 'undefined'
              );
            }
            exports.isPrimitive = isPrimitive;

            exports.isBuffer = __webpack_require__(100);

            function objectToString(o) {
              return Object.prototype.toString.call(o);
            }

            function pad(n) {
              return n < 10 ? '0' + n.toString(10) : n.toString(10);
            }

            var months = [
              'Jan',
              'Feb',
              'Mar',
              'Apr',
              'May',
              'Jun',
              'Jul',
              'Aug',
              'Sep',
              'Oct',
              'Nov',
              'Dec',
            ];

            // 26 Feb 16:19:34
            function timestamp() {
              var d = new Date();
              var time = [
                pad(d.getHours()),
                pad(d.getMinutes()),
                pad(d.getSeconds()),
              ].join(':');
              return [d.getDate(), months[d.getMonth()], time].join(' ');
            }

            // log is just a thin wrapper to console.log that prepends a timestamp
            exports.log = function () {
              console.log(
                '%s - %s',
                timestamp(),
                exports.format.apply(exports, arguments)
              );
            };

            /**
             * Inherit the prototype methods from one constructor into another.
             *
             * The Function.prototype.inherits from lang.js rewritten as a standalone
             * function (not on Function.prototype). NOTE: If this file is to be loaded
             * during bootstrapping this function needs to be rewritten using some native
             * functions as prototype setup using normal JavaScript does not work as
             * expected during bootstrapping (see mirror.js in r114903).
             *
             * @param {function} ctor Constructor function which needs to inherit the
             *     prototype.
             * @param {function} superCtor Constructor function to inherit prototype from.
             */
            exports.inherits = __webpack_require__(0);

            exports._extend = function (origin, add) {
              // Don't do anything if add isn't an object
              if (!add || !isObject(add)) return origin;

              var keys = Object.keys(add);
              var i = keys.length;
              while (i--) {
                origin[keys[i]] = add[keys[i]];
              }
              return origin;
            };

            function hasOwnProperty(obj, prop) {
              return Object.prototype.hasOwnProperty.call(obj, prop);
            }

            var kCustomPromisifiedSymbol =
              typeof Symbol !== 'undefined'
                ? Symbol('util.promisify.custom')
                : undefined;

            exports.promisify = function promisify(original) {
              if (typeof original !== 'function')
                throw new TypeError(
                  'The "original" argument must be of type Function'
                );

              if (
                kCustomPromisifiedSymbol &&
                original[kCustomPromisifiedSymbol]
              ) {
                var fn = original[kCustomPromisifiedSymbol];
                if (typeof fn !== 'function') {
                  throw new TypeError(
                    'The "util.promisify.custom" argument must be of type Function'
                  );
                }
                Object.defineProperty(fn, kCustomPromisifiedSymbol, {
                  value: fn,
                  enumerable: false,
                  writable: false,
                  configurable: true,
                });
                return fn;
              }

              function fn() {
                var promiseResolve, promiseReject;
                var promise = new Promise(function (resolve, reject) {
                  promiseResolve = resolve;
                  promiseReject = reject;
                });

                var args = [];
                for (var i = 0; i < arguments.length; i++) {
                  args.push(arguments[i]);
                }
                args.push(function (err, value) {
                  if (err) {
                    promiseReject(err);
                  } else {
                    promiseResolve(value);
                  }
                });

                try {
                  original.apply(this, args);
                } catch (err) {
                  promiseReject(err);
                }

                return promise;
              }

              Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

              if (kCustomPromisifiedSymbol)
                Object.defineProperty(fn, kCustomPromisifiedSymbol, {
                  value: fn,
                  enumerable: false,
                  writable: false,
                  configurable: true,
                });
              return Object.defineProperties(
                fn,
                getOwnPropertyDescriptors(original)
              );
            };

            exports.promisify.custom = kCustomPromisifiedSymbol;

            function callbackifyOnRejected(reason, cb) {
              // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
              // Because `null` is a special error value in callbacks which means "no error
              // occurred", we error-wrap so the callback consumer can distinguish between
              // "the promise rejected with null" or "the promise fulfilled with undefined".
              if (!reason) {
                var newReason = new Error(
                  'Promise was rejected with a falsy value'
                );
                newReason.reason = reason;
                reason = newReason;
              }
              return cb(reason);
            }

            function callbackify(original) {
              if (typeof original !== 'function') {
                throw new TypeError(
                  'The "original" argument must be of type Function'
                );
              }

              // We DO NOT return the promise as it gives the user a false sense that
              // the promise is actually somehow related to the callback's execution
              // and that the callback throwing will reject the promise.
              function callbackified() {
                var args = [];
                for (var i = 0; i < arguments.length; i++) {
                  args.push(arguments[i]);
                }

                var maybeCb = args.pop();
                if (typeof maybeCb !== 'function') {
                  throw new TypeError(
                    'The last argument must be of type Function'
                  );
                }
                var self = this;
                var cb = function cb() {
                  return maybeCb.apply(self, arguments);
                };
                // In true node style we process the callback on `nextTick` with all the
                // implications (stack, `uncaughtException`, `async_hooks`)
                original.apply(this, args).then(
                  function (ret) {
                    process.nextTick(cb, null, ret);
                  },
                  function (rej) {
                    process.nextTick(callbackifyOnRejected, rej, cb);
                  }
                );
              }

              Object.setPrototypeOf(
                callbackified,
                Object.getPrototypeOf(original)
              );
              Object.defineProperties(
                callbackified,
                getOwnPropertyDescriptors(original)
              );
              return callbackified;
            }
            exports.callbackify = callbackify;
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(3));

          /***/
        },
        /* 23 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          var StateEventDispatcher = (function () {
            function StateEventDispatcher(state) {
              _classCallCheck(this, StateEventDispatcher);

              this.events = {};
              this.state = state;
            }

            _createClass(StateEventDispatcher, [
              {
                key: 'on',
                value: function on(state, listener) {
                  if (!this.events[state]) {
                    this.events[state] = [];
                  }

                  var idx = this.getListeners(state).indexOf(listener);
                  if (idx === -1) {
                    this.events[state] = this.getListeners(state);
                    this.events[state].push(listener);
                  }

                  return this;
                },
              },
              {
                key: 'getListeners',
                value: function getListeners(state) {
                  return this.events[state] || [];
                },
              },
              {
                key: 'off',
                value: function off(state, listener) {
                  var idx = this.getListeners(state).indexOf(listener);
                  if (idx > -1) {
                    this.events[state].splice(idx, 1);
                  }

                  return this;
                },
              },
              {
                key: 'setState',
                value: function setState(state, data) {
                  this.state = state;
                  this.fire(state, data);
                },
              },
              {
                key: 'setStateSilent',
                value: function setStateSilent(state) {
                  this.state = state;
                },
              },
              {
                key: 'fire',
                value: function fire(evt, data) {
                  var _this = this;

                  var listeners = this.events[evt];
                  if (listeners) {
                    listeners.forEach(function (listener) {
                      try {
                        listener.call(_this, data);
                      } catch (e) {
                        console.log("Error in '" + evt + "' handler: " + e);
                        if (e.stack) {
                          console.log(e.stack);
                        }
                      }
                    });
                  }
                },
              },
              {
                key: 'isState',
                value: function isState(state) {
                  return this.state == state;
                },
              },
            ]);

            return StateEventDispatcher;
          })();

          module.exports = StateEventDispatcher;

          /***/
        },
        /* 24 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var toString = {}.toString;

          module.exports =
            Array.isArray ||
            function (arr) {
              return toString.call(arr) == '[object Array]';
            };

          /***/
        },
        /* 25 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var v1 = __webpack_require__(54);
          var v4 = __webpack_require__(55);

          var uuid = v4;
          uuid.v1 = v1;
          uuid.v4 = v4;

          module.exports = uuid;

          /***/
        },
        /* 26 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // Unique ID creation requires a high quality random # generator.  In the
          // browser this is a little complicated due to unknown quality of Math.random()
          // and inconsistent support for the `crypto` API.  We do the best we can via
          // feature-detection

          // getRandomValues needs to be invoked in a context where "this" is a Crypto
          // implementation. Also, find the complete implementation of crypto on IE11.
          var getRandomValues =
            (typeof crypto != 'undefined' &&
              crypto.getRandomValues &&
              crypto.getRandomValues.bind(crypto)) ||
            (typeof msCrypto != 'undefined' &&
              typeof window.msCrypto.getRandomValues == 'function' &&
              msCrypto.getRandomValues.bind(msCrypto));

          if (getRandomValues) {
            // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
            var rnds8 = new Uint8Array(16);

            module.exports = function whatwgRNG() {
              getRandomValues(rnds8);
              return rnds8;
            };
          } else {
            // Math.random()-based (RNG)
            //
            // If all else fails, use Math.random().  It's fast, but is of unspecified
            // quality.
            var rnds = new Array(16);

            module.exports = function mathRNG() {
              for (var i = 0, r; i < 16; i++) {
                if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
                rnds[i] = (r >>> ((i & 0x03) << 3)) & 0xff;
              }

              return rnds;
            };
          }

          /***/
        },
        /* 27 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /**
           * Convert array of 16 byte values to UUID string format of the form:
           * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
           */
          var byteToHex = [];
          for (var i = 0; i < 256; ++i) {
            byteToHex[i] = (i + 0x100).toString(16).substr(1);
          }

          function bytesToUuid(buf, offset) {
            var i = offset || 0;
            var bth = byteToHex;
            // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
            return [
              bth[buf[i++]],
              bth[buf[i++]],
              bth[buf[i++]],
              bth[buf[i++]],
              '-',
              bth[buf[i++]],
              bth[buf[i++]],
              '-',
              bth[buf[i++]],
              bth[buf[i++]],
              '-',
              bth[buf[i++]],
              bth[buf[i++]],
              '-',
              bth[buf[i++]],
              bth[buf[i++]],
              bth[buf[i++]],
              bth[buf[i++]],
              bth[buf[i++]],
              bth[buf[i++]],
            ].join('');
          }

          module.exports = bytesToUuid;

          /***/
        },
        /* 28 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          var __WEBPACK_AMD_DEFINE_RESULT__;

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          (function (globalObject) {
            'use strict';

            /*
             *      bignumber.js v9.0.2
             *      A JavaScript library for arbitrary-precision arithmetic.
             *      https://github.com/MikeMcl/bignumber.js
             *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>
             *      MIT Licensed.
             *
             *      BigNumber.prototype methods     |  BigNumber methods
             *                                      |
             *      absoluteValue            abs    |  clone
             *      comparedTo                      |  config               set
             *      decimalPlaces            dp     |      DECIMAL_PLACES
             *      dividedBy                div    |      ROUNDING_MODE
             *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT
             *      exponentiatedBy          pow    |      RANGE
             *      integerValue                    |      CRYPTO
             *      isEqualTo                eq     |      MODULO_MODE
             *      isFinite                        |      POW_PRECISION
             *      isGreaterThan            gt     |      FORMAT
             *      isGreaterThanOrEqualTo   gte    |      ALPHABET
             *      isInteger                       |  isBigNumber
             *      isLessThan               lt     |  maximum              max
             *      isLessThanOrEqualTo      lte    |  minimum              min
             *      isNaN                           |  random
             *      isNegative                      |  sum
             *      isPositive                      |
             *      isZero                          |
             *      minus                           |
             *      modulo                   mod    |
             *      multipliedBy             times  |
             *      negated                         |
             *      plus                            |
             *      precision                sd     |
             *      shiftedBy                       |
             *      squareRoot               sqrt   |
             *      toExponential                   |
             *      toFixed                         |
             *      toFormat                        |
             *      toFraction                      |
             *      toJSON                          |
             *      toNumber                        |
             *      toPrecision                     |
             *      toString                        |
             *      valueOf                         |
             *
             */

            var BigNumber,
              isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
              mathceil = Math.ceil,
              mathfloor = Math.floor,
              bignumberError = '[BigNumber Error] ',
              tooManyDigits =
                bignumberError +
                'Number primitive has more than 15 significant digits: ',
              BASE = 1e14,
              LOG_BASE = 14,
              MAX_SAFE_INTEGER = 0x1fffffffffffff,
              // 2^53 - 1
              // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
              POWS_TEN = [
                1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12,
                1e13,
              ],
              SQRT_BASE = 1e7,
              // EDITABLE
              // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
              // the arguments to toExponential, toFixed, toFormat, and toPrecision.
              MAX = 1e9; // 0 to MAX_INT32

            /*
             * Create and return a BigNumber constructor.
             */
            function clone(configObject) {
              var div,
                convertBase,
                parseNumeric,
                P = (BigNumber.prototype = {
                  constructor: BigNumber,
                  toString: null,
                  valueOf: null,
                }),
                ONE = new BigNumber(1),
                //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------

                // The default values below must be integers within the inclusive ranges stated.
                // The values can also be changed at run-time using BigNumber.set.

                // The maximum number of decimal places for operations involving division.
                DECIMAL_PLACES = 20,
                // 0 to MAX

                // The rounding mode used when rounding to the above decimal places, and when using
                // toExponential, toFixed, toFormat and toPrecision, and round (default value).
                // UP         0 Away from zero.
                // DOWN       1 Towards zero.
                // CEIL       2 Towards +Infinity.
                // FLOOR      3 Towards -Infinity.
                // HALF_UP    4 Towards nearest neighbour. If equidistant, up.
                // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
                // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
                // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
                // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
                ROUNDING_MODE = 4,
                // 0 to 8

                // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

                // The exponent value at and beneath which toString returns exponential notation.
                // Number type: -7
                TO_EXP_NEG = -7,
                // 0 to -MAX

                // The exponent value at and above which toString returns exponential notation.
                // Number type: 21
                TO_EXP_POS = 21,
                // 0 to MAX

                // RANGE : [MIN_EXP, MAX_EXP]

                // The minimum exponent value, beneath which underflow to zero occurs.
                // Number type: -324  (5e-324)
                MIN_EXP = -1e7,
                // -1 to -MAX

                // The maximum exponent value, above which overflow to Infinity occurs.
                // Number type:  308  (1.7976931348623157e+308)
                // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
                MAX_EXP = 1e7,
                // 1 to MAX

                // Whether to use cryptographically-secure random number generation, if available.
                CRYPTO = false,
                // true or false

                // The modulo mode used when calculating the modulus: a mod n.
                // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
                // The remainder (r) is calculated as: r = a - n * q.
                //
                // UP        0 The remainder is positive if the dividend is negative, else is negative.
                // DOWN      1 The remainder has the same sign as the dividend.
                //             This modulo mode is commonly known as 'truncated division' and is
                //             equivalent to (a % n) in JavaScript.
                // FLOOR     3 The remainder has the same sign as the divisor (Python %).
                // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
                // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
                //             The remainder is always positive.
                //
                // The truncated division, floored division, Euclidian division and IEEE 754 remainder
                // modes are commonly used for the modulus operation.
                // Although the other rounding modes can also be used, they may not give useful results.
                MODULO_MODE = 1,
                // 0 to 9

                // The maximum number of significant digits of the result of the exponentiatedBy operation.
                // If POW_PRECISION is 0, there will be unlimited significant digits.
                POW_PRECISION = 0,
                // 0 to MAX

                // The format specification used by the BigNumber.prototype.toFormat method.
                FORMAT = {
                  prefix: '',
                  groupSize: 3,
                  secondaryGroupSize: 0,
                  groupSeparator: ',',
                  decimalSeparator: '.',
                  fractionGroupSize: 0,
                  fractionGroupSeparator: '\xA0', // non-breaking space
                  suffix: '',
                },
                // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',
                // '-', '.', whitespace, or repeated character.
                // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
                ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',
                alphabetHasNormalDecimalDigits = true;

              //------------------------------------------------------------------------------------------

              // CONSTRUCTOR

              /*
               * The BigNumber constructor and exported function.
               * Create and return a new instance of a BigNumber object.
               *
               * v {number|string|BigNumber} A numeric value.
               * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.
               */
              function BigNumber(v, b) {
                var alphabet,
                  c,
                  caseChanged,
                  e,
                  i,
                  isNum,
                  len,
                  str,
                  x = this;

                // Enable constructor call without `new`.
                if (!(x instanceof BigNumber)) return new BigNumber(v, b);

                if (b == null) {
                  if (v && v._isBigNumber === true) {
                    x.s = v.s;

                    if (!v.c || v.e > MAX_EXP) {
                      x.c = x.e = null;
                    } else if (v.e < MIN_EXP) {
                      x.c = [(x.e = 0)];
                    } else {
                      x.e = v.e;
                      x.c = v.c.slice();
                    }

                    return;
                  }

                  if ((isNum = typeof v == 'number') && v * 0 == 0) {
                    // Use `1 / n` to handle minus zero also.
                    x.s = 1 / v < 0 ? ((v = -v), -1) : 1;

                    // Fast path for integers, where n < 2147483648 (2**31).
                    if (v === ~~v) {
                      for (e = 0, i = v; i >= 10; i /= 10, e++) {}

                      if (e > MAX_EXP) {
                        x.c = x.e = null;
                      } else {
                        x.e = e;
                        x.c = [v];
                      }

                      return;
                    }

                    str = String(v);
                  } else {
                    if (!isNumeric.test((str = String(v))))
                      return parseNumeric(x, str, isNum);

                    x.s =
                      str.charCodeAt(0) == 45 ? ((str = str.slice(1)), -1) : 1;
                  }

                  // Decimal point?
                  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

                  // Exponential form?
                  if ((i = str.search(/e/i)) > 0) {
                    // Determine exponent.
                    if (e < 0) e = i;
                    e += +str.slice(i + 1);
                    str = str.substring(0, i);
                  } else if (e < 0) {
                    // Integer.
                    e = str.length;
                  }
                } else {
                  // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
                  intCheck(b, 2, ALPHABET.length, 'Base');

                  // Allow exponential notation to be used with base 10 argument, while
                  // also rounding to DECIMAL_PLACES as with other bases.
                  if (b == 10 && alphabetHasNormalDecimalDigits) {
                    x = new BigNumber(v);
                    return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
                  }

                  str = String(v);

                  if ((isNum = typeof v == 'number')) {
                    // Avoid potential interpretation of Infinity and NaN as base 44+ values.
                    if (v * 0 != 0) return parseNumeric(x, str, isNum, b);

                    x.s = 1 / v < 0 ? ((str = str.slice(1)), -1) : 1;

                    // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
                    if (
                      BigNumber.DEBUG &&
                      str.replace(/^0\.0*|\./, '').length > 15
                    ) {
                      throw Error(tooManyDigits + v);
                    }
                  } else {
                    x.s =
                      str.charCodeAt(0) === 45 ? ((str = str.slice(1)), -1) : 1;
                  }

                  alphabet = ALPHABET.slice(0, b);
                  e = i = 0;

                  // Check that str is a valid base b number.
                  // Don't use RegExp, so alphabet can contain special characters.
                  for (len = str.length; i < len; i++) {
                    if (alphabet.indexOf((c = str.charAt(i))) < 0) {
                      if (c == '.') {
                        // If '.' is not the first character and it has not be found before.
                        if (i > e) {
                          e = len;
                          continue;
                        }
                      } else if (!caseChanged) {
                        // Allow e.g. hexadecimal 'FF' as well as 'ff'.
                        if (
                          (str == str.toUpperCase() &&
                            (str = str.toLowerCase())) ||
                          (str == str.toLowerCase() &&
                            (str = str.toUpperCase()))
                        ) {
                          caseChanged = true;
                          i = -1;
                          e = 0;
                          continue;
                        }
                      }

                      return parseNumeric(x, String(v), isNum, b);
                    }
                  }

                  // Prevent later check for length on converted number.
                  isNum = false;
                  str = convertBase(str, b, 10, x.s);

                  // Decimal point?
                  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');
                  else e = str.length;
                }

                // Determine leading zeros.
                for (i = 0; str.charCodeAt(i) === 48; i++) {}

                // Determine trailing zeros.
                for (len = str.length; str.charCodeAt(--len) === 48; ) {}

                if ((str = str.slice(i, ++len))) {
                  len -= i;

                  // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
                  if (
                    isNum &&
                    BigNumber.DEBUG &&
                    len > 15 &&
                    (v > MAX_SAFE_INTEGER || v !== mathfloor(v))
                  ) {
                    throw Error(tooManyDigits + x.s * v);
                  }

                  // Overflow?
                  if ((e = e - i - 1) > MAX_EXP) {
                    // Infinity.
                    x.c = x.e = null;

                    // Underflow?
                  } else if (e < MIN_EXP) {
                    // Zero.
                    x.c = [(x.e = 0)];
                  } else {
                    x.e = e;
                    x.c = [];

                    // Transform base

                    // e is the base 10 exponent.
                    // i is where to slice str to get the first element of the coefficient array.
                    i = (e + 1) % LOG_BASE;
                    if (e < 0) i += LOG_BASE; // i < 1

                    if (i < len) {
                      if (i) x.c.push(+str.slice(0, i));

                      for (len -= LOG_BASE; i < len; ) {
                        x.c.push(+str.slice(i, (i += LOG_BASE)));
                      }

                      i = LOG_BASE - (str = str.slice(i)).length;
                    } else {
                      i -= len;
                    }

                    for (; i--; str += '0') {}
                    x.c.push(+str);
                  }
                } else {
                  // Zero.
                  x.c = [(x.e = 0)];
                }
              }

              // CONSTRUCTOR PROPERTIES

              BigNumber.clone = clone;

              BigNumber.ROUND_UP = 0;
              BigNumber.ROUND_DOWN = 1;
              BigNumber.ROUND_CEIL = 2;
              BigNumber.ROUND_FLOOR = 3;
              BigNumber.ROUND_HALF_UP = 4;
              BigNumber.ROUND_HALF_DOWN = 5;
              BigNumber.ROUND_HALF_EVEN = 6;
              BigNumber.ROUND_HALF_CEIL = 7;
              BigNumber.ROUND_HALF_FLOOR = 8;
              BigNumber.EUCLID = 9;

              /*
               * Configure infrequently-changing library-wide settings.
               *
               * Accept an object with the following optional properties (if the value of a property is
               * a number, it must be an integer within the inclusive range stated):
               *
               *   DECIMAL_PLACES   {number}           0 to MAX
               *   ROUNDING_MODE    {number}           0 to 8
               *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]
               *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]
               *   CRYPTO           {boolean}          true or false
               *   MODULO_MODE      {number}           0 to 9
               *   POW_PRECISION       {number}           0 to MAX
               *   ALPHABET         {string}           A string of two or more unique characters which does
               *                                       not contain '.'.
               *   FORMAT           {object}           An object with some of the following properties:
               *     prefix                 {string}
               *     groupSize              {number}
               *     secondaryGroupSize     {number}
               *     groupSeparator         {string}
               *     decimalSeparator       {string}
               *     fractionGroupSize      {number}
               *     fractionGroupSeparator {string}
               *     suffix                 {string}
               *
               * (The values assigned to the above FORMAT object properties are not checked for validity.)
               *
               * E.g.
               * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
               *
               * Ignore properties/parameters set to null or undefined, except for ALPHABET.
               *
               * Return an object with the properties current values.
               */
              BigNumber.config = BigNumber.set = function (obj) {
                var p, v;

                if (obj != null) {
                  if (
                    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) ==
                    'object'
                  ) {
                    // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
                    // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'
                    if (obj.hasOwnProperty((p = 'DECIMAL_PLACES'))) {
                      v = obj[p];
                      intCheck(v, 0, MAX, p);
                      DECIMAL_PLACES = v;
                    }

                    // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
                    // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'
                    if (obj.hasOwnProperty((p = 'ROUNDING_MODE'))) {
                      v = obj[p];
                      intCheck(v, 0, 8, p);
                      ROUNDING_MODE = v;
                    }

                    // EXPONENTIAL_AT {number|number[]}
                    // Integer, -MAX to MAX inclusive or
                    // [integer -MAX to 0 inclusive, 0 to MAX inclusive].
                    // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'
                    if (obj.hasOwnProperty((p = 'EXPONENTIAL_AT'))) {
                      v = obj[p];
                      if (v && v.pop) {
                        intCheck(v[0], -MAX, 0, p);
                        intCheck(v[1], 0, MAX, p);
                        TO_EXP_NEG = v[0];
                        TO_EXP_POS = v[1];
                      } else {
                        intCheck(v, -MAX, MAX, p);
                        TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
                      }
                    }

                    // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
                    // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
                    // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'
                    if (obj.hasOwnProperty((p = 'RANGE'))) {
                      v = obj[p];
                      if (v && v.pop) {
                        intCheck(v[0], -MAX, -1, p);
                        intCheck(v[1], 1, MAX, p);
                        MIN_EXP = v[0];
                        MAX_EXP = v[1];
                      } else {
                        intCheck(v, -MAX, MAX, p);
                        if (v) {
                          MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                        } else {
                          throw Error(
                            bignumberError + p + ' cannot be zero: ' + v
                          );
                        }
                      }
                    }

                    // CRYPTO {boolean} true or false.
                    // '[BigNumber Error] CRYPTO not true or false: {v}'
                    // '[BigNumber Error] crypto unavailable'
                    if (obj.hasOwnProperty((p = 'CRYPTO'))) {
                      v = obj[p];
                      if (v === !!v) {
                        if (v) {
                          if (
                            typeof crypto != 'undefined' &&
                            crypto &&
                            (crypto.getRandomValues || crypto.randomBytes)
                          ) {
                            CRYPTO = v;
                          } else {
                            CRYPTO = !v;
                            throw Error(bignumberError + 'crypto unavailable');
                          }
                        } else {
                          CRYPTO = v;
                        }
                      } else {
                        throw Error(
                          bignumberError + p + ' not true or false: ' + v
                        );
                      }
                    }

                    // MODULO_MODE {number} Integer, 0 to 9 inclusive.
                    // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'
                    if (obj.hasOwnProperty((p = 'MODULO_MODE'))) {
                      v = obj[p];
                      intCheck(v, 0, 9, p);
                      MODULO_MODE = v;
                    }

                    // POW_PRECISION {number} Integer, 0 to MAX inclusive.
                    // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'
                    if (obj.hasOwnProperty((p = 'POW_PRECISION'))) {
                      v = obj[p];
                      intCheck(v, 0, MAX, p);
                      POW_PRECISION = v;
                    }

                    // FORMAT {object}
                    // '[BigNumber Error] FORMAT not an object: {v}'
                    if (obj.hasOwnProperty((p = 'FORMAT'))) {
                      v = obj[p];
                      if (
                        (typeof v === 'undefined' ? 'undefined' : _typeof(v)) ==
                        'object'
                      )
                        FORMAT = v;
                      else
                        throw Error(
                          bignumberError + p + ' not an object: ' + v
                        );
                    }

                    // ALPHABET {string}
                    // '[BigNumber Error] ALPHABET invalid: {v}'
                    if (obj.hasOwnProperty((p = 'ALPHABET'))) {
                      v = obj[p];

                      // Disallow if less than two characters,
                      // or if it contains '+', '-', '.', whitespace, or a repeated character.
                      if (
                        typeof v == 'string' &&
                        !/^.?$|[+\-.\s]|(.).*\1/.test(v)
                      ) {
                        alphabetHasNormalDecimalDigits =
                          v.slice(0, 10) == '0123456789';
                        ALPHABET = v;
                      } else {
                        throw Error(bignumberError + p + ' invalid: ' + v);
                      }
                    }
                  } else {
                    // '[BigNumber Error] Object expected: {v}'
                    throw Error(bignumberError + 'Object expected: ' + obj);
                  }
                }

                return {
                  DECIMAL_PLACES: DECIMAL_PLACES,
                  ROUNDING_MODE: ROUNDING_MODE,
                  EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
                  RANGE: [MIN_EXP, MAX_EXP],
                  CRYPTO: CRYPTO,
                  MODULO_MODE: MODULO_MODE,
                  POW_PRECISION: POW_PRECISION,
                  FORMAT: FORMAT,
                  ALPHABET: ALPHABET,
                };
              };

              /*
               * Return true if v is a BigNumber instance, otherwise return false.
               *
               * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.
               *
               * v {any}
               *
               * '[BigNumber Error] Invalid BigNumber: {v}'
               */
              BigNumber.isBigNumber = function (v) {
                if (!v || v._isBigNumber !== true) return false;
                if (!BigNumber.DEBUG) return true;

                var i,
                  n,
                  c = v.c,
                  e = v.e,
                  s = v.s;

                out: if ({}.toString.call(c) == '[object Array]') {
                  if (
                    (s === 1 || s === -1) &&
                    e >= -MAX &&
                    e <= MAX &&
                    e === mathfloor(e)
                  ) {
                    // If the first element is zero, the BigNumber value must be zero.
                    if (c[0] === 0) {
                      if (e === 0 && c.length === 1) return true;
                      break out;
                    }

                    // Calculate number of digits that c[0] should have, based on the exponent.
                    i = (e + 1) % LOG_BASE;
                    if (i < 1) i += LOG_BASE;

                    // Calculate number of digits of c[0].
                    //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {
                    if (String(c[0]).length == i) {
                      for (i = 0; i < c.length; i++) {
                        n = c[i];
                        if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
                      }

                      // Last element cannot be zero, unless it is the only element.
                      if (n !== 0) return true;
                    }
                  }

                  // Infinity/NaN
                } else if (
                  c === null &&
                  e === null &&
                  (s === null || s === 1 || s === -1)
                ) {
                  return true;
                }

                throw Error(bignumberError + 'Invalid BigNumber: ' + v);
              };

              /*
               * Return a new BigNumber whose value is the maximum of the arguments.
               *
               * arguments {number|string|BigNumber}
               */
              BigNumber.maximum = BigNumber.max = function () {
                return maxOrMin(arguments, P.lt);
              };

              /*
               * Return a new BigNumber whose value is the minimum of the arguments.
               *
               * arguments {number|string|BigNumber}
               */
              BigNumber.minimum = BigNumber.min = function () {
                return maxOrMin(arguments, P.gt);
              };

              /*
               * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
               * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
               * zeros are produced).
               *
               * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'
               * '[BigNumber Error] crypto unavailable'
               */
              BigNumber.random = (function () {
                var pow2_53 = 0x20000000000000;

                // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
                // Check if Math.random() produces more than 32 bits of randomness.
                // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
                // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
                var random53bitInt =
                  (Math.random() * pow2_53) & 0x1fffff
                    ? function () {
                        return mathfloor(Math.random() * pow2_53);
                      }
                    : function () {
                        return (
                          ((Math.random() * 0x40000000) | 0) * 0x800000 +
                          ((Math.random() * 0x800000) | 0)
                        );
                      };

                return function (dp) {
                  var a,
                    b,
                    e,
                    k,
                    v,
                    i = 0,
                    c = [],
                    rand = new BigNumber(ONE);

                  if (dp == null) dp = DECIMAL_PLACES;
                  else intCheck(dp, 0, MAX);

                  k = mathceil(dp / LOG_BASE);

                  if (CRYPTO) {
                    // Browsers supporting crypto.getRandomValues.
                    if (crypto.getRandomValues) {
                      a = crypto.getRandomValues(new Uint32Array((k *= 2)));

                      for (; i < k; ) {
                        // 53 bits:
                        // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
                        // 11111 11111111 11111111 11111111 11100000 00000000 00000000
                        // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
                        //                                     11111 11111111 11111111
                        // 0x20000 is 2^21.
                        v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                        // Rejection sampling:
                        // 0 <= v < 9007199254740992
                        // Probability that v >= 9e15, is
                        // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
                        if (v >= 9e15) {
                          b = crypto.getRandomValues(new Uint32Array(2));
                          a[i] = b[0];
                          a[i + 1] = b[1];
                        } else {
                          // 0 <= v <= 8999999999999999
                          // 0 <= (v % 1e14) <= 99999999999999
                          c.push(v % 1e14);
                          i += 2;
                        }
                      }
                      i = k / 2;

                      // Node.js supporting crypto.randomBytes.
                    } else if (crypto.randomBytes) {
                      // buffer
                      a = crypto.randomBytes((k *= 7));

                      for (; i < k; ) {
                        // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
                        // 0x100000000 is 2^32, 0x1000000 is 2^24
                        // 11111 11111111 11111111 11111111 11111111 11111111 11111111
                        // 0 <= v < 9007199254740992
                        v =
                          (a[i] & 31) * 0x1000000000000 +
                          a[i + 1] * 0x10000000000 +
                          a[i + 2] * 0x100000000 +
                          a[i + 3] * 0x1000000 +
                          (a[i + 4] << 16) +
                          (a[i + 5] << 8) +
                          a[i + 6];

                        if (v >= 9e15) {
                          crypto.randomBytes(7).copy(a, i);
                        } else {
                          // 0 <= (v % 1e14) <= 99999999999999
                          c.push(v % 1e14);
                          i += 7;
                        }
                      }
                      i = k / 7;
                    } else {
                      CRYPTO = false;
                      throw Error(bignumberError + 'crypto unavailable');
                    }
                  }

                  // Use Math.random.
                  if (!CRYPTO) {
                    for (; i < k; ) {
                      v = random53bitInt();
                      if (v < 9e15) c[i++] = v % 1e14;
                    }
                  }

                  k = c[--i];
                  dp %= LOG_BASE;

                  // Convert trailing digits to zeros according to dp.
                  if (k && dp) {
                    v = POWS_TEN[LOG_BASE - dp];
                    c[i] = mathfloor(k / v) * v;
                  }

                  // Remove trailing elements which are zero.
                  for (; c[i] === 0; c.pop(), i--) {}

                  // Zero?
                  if (i < 0) {
                    c = [(e = 0)];
                  } else {
                    // Remove leading elements which are zero and adjust exponent accordingly.
                    for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {}

                    // Count the digits of the first element of c to determine leading zeros, and...
                    for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {}

                    // adjust the exponent accordingly.
                    if (i < LOG_BASE) e -= LOG_BASE - i;
                  }

                  rand.e = e;
                  rand.c = c;
                  return rand;
                };
              })();

              /*
               * Return a BigNumber whose value is the sum of the arguments.
               *
               * arguments {number|string|BigNumber}
               */
              BigNumber.sum = function () {
                var i = 1,
                  args = arguments,
                  sum = new BigNumber(args[0]);
                for (; i < args.length; ) {
                  sum = sum.plus(args[i++]);
                }
                return sum;
              };

              // PRIVATE FUNCTIONS

              // Called by BigNumber and BigNumber.prototype.toString.
              convertBase = (function () {
                var decimal = '0123456789';

                /*
                 * Convert string of baseIn to an array of numbers of baseOut.
                 * Eg. toBaseOut('255', 10, 16) returns [15, 15].
                 * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].
                 */
                function toBaseOut(str, baseIn, baseOut, alphabet) {
                  var j,
                    arr = [0],
                    arrL,
                    i = 0,
                    len = str.length;

                  for (; i < len; ) {
                    for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {}

                    arr[0] += alphabet.indexOf(str.charAt(i++));

                    for (j = 0; j < arr.length; j++) {
                      if (arr[j] > baseOut - 1) {
                        if (arr[j + 1] == null) arr[j + 1] = 0;
                        arr[j + 1] += (arr[j] / baseOut) | 0;
                        arr[j] %= baseOut;
                      }
                    }
                  }

                  return arr.reverse();
                }

                // Convert a numeric string of baseIn to a numeric string of baseOut.
                // If the caller is toString, we are converting from base 10 to baseOut.
                // If the caller is BigNumber, we are converting from baseIn to base 10.
                return function (str, baseIn, baseOut, sign, callerIsToString) {
                  var alphabet,
                    d,
                    e,
                    k,
                    r,
                    x,
                    xc,
                    y,
                    i = str.indexOf('.'),
                    dp = DECIMAL_PLACES,
                    rm = ROUNDING_MODE;

                  // Non-integer.
                  if (i >= 0) {
                    k = POW_PRECISION;

                    // Unlimited precision.
                    POW_PRECISION = 0;
                    str = str.replace('.', '');
                    y = new BigNumber(baseIn);
                    x = y.pow(str.length - i);
                    POW_PRECISION = k;

                    // Convert str as if an integer, then restore the fraction part by dividing the
                    // result by its base raised to a power.

                    y.c = toBaseOut(
                      toFixedPoint(coeffToString(x.c), x.e, '0'),
                      10,
                      baseOut,
                      decimal
                    );
                    y.e = y.c.length;
                  }

                  // Convert the number as integer.

                  xc = toBaseOut(
                    str,
                    baseIn,
                    baseOut,
                    callerIsToString
                      ? ((alphabet = ALPHABET), decimal)
                      : ((alphabet = decimal), ALPHABET)
                  );

                  // xc now represents str as an integer and converted to baseOut. e is the exponent.
                  e = k = xc.length;

                  // Remove trailing zeros.
                  for (; xc[--k] == 0; xc.pop()) {}

                  // Zero?
                  if (!xc[0]) return alphabet.charAt(0);

                  // Does str represent an integer? If so, no need for the division.
                  if (i < 0) {
                    --e;
                  } else {
                    x.c = xc;
                    x.e = e;

                    // The sign is needed for correct rounding.
                    x.s = sign;
                    x = div(x, y, dp, rm, baseOut);
                    xc = x.c;
                    r = x.r;
                    e = x.e;
                  }

                  // xc now represents str converted to baseOut.

                  // THe index of the rounding digit.
                  d = e + dp + 1;

                  // The rounding digit: the digit to the right of the digit that may be rounded up.
                  i = xc[d];

                  // Look at the rounding digits and mode to determine whether to round up.

                  k = baseOut / 2;
                  r = r || d < 0 || xc[d + 1] != null;

                  r =
                    rm < 4
                      ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
                      : i > k ||
                        (i == k &&
                          (rm == 4 ||
                            r ||
                            (rm == 6 && xc[d - 1] & 1) ||
                            rm == (x.s < 0 ? 8 : 7)));

                  // If the index of the rounding digit is not greater than zero, or xc represents
                  // zero, then the result of the base conversion is zero or, if rounding up, a value
                  // such as 0.00001.
                  if (d < 1 || !xc[0]) {
                    // 1^-dp or 0
                    str = r
                      ? toFixedPoint(
                          alphabet.charAt(1),
                          -dp,
                          alphabet.charAt(0)
                        )
                      : alphabet.charAt(0);
                  } else {
                    // Truncate xc to the required number of decimal places.
                    xc.length = d;

                    // Round up?
                    if (r) {
                      // Rounding up may mean the previous digit has to be rounded up and so on.
                      for (--baseOut; ++xc[--d] > baseOut; ) {
                        xc[d] = 0;

                        if (!d) {
                          ++e;
                          xc = [1].concat(xc);
                        }
                      }
                    }

                    // Determine trailing zeros.
                    for (k = xc.length; !xc[--k]; ) {}

                    // E.g. [4, 11, 15] becomes 4bf.
                    for (
                      i = 0, str = '';
                      i <= k;
                      str += alphabet.charAt(xc[i++])
                    ) {}

                    // Add leading zeros, decimal point and trailing zeros as required.
                    str = toFixedPoint(str, e, alphabet.charAt(0));
                  }

                  // The caller will add the sign.
                  return str;
                };
              })();

              // Perform division in the specified base. Called by div and convertBase.
              div = (function () {
                // Assume non-zero x and k.
                function multiply(x, k, base) {
                  var m,
                    temp,
                    xlo,
                    xhi,
                    carry = 0,
                    i = x.length,
                    klo = k % SQRT_BASE,
                    khi = (k / SQRT_BASE) | 0;

                  for (x = x.slice(); i--; ) {
                    xlo = x[i] % SQRT_BASE;
                    xhi = (x[i] / SQRT_BASE) | 0;
                    m = khi * xlo + xhi * klo;
                    temp = klo * xlo + (m % SQRT_BASE) * SQRT_BASE + carry;
                    carry =
                      ((temp / base) | 0) + ((m / SQRT_BASE) | 0) + khi * xhi;
                    x[i] = temp % base;
                  }

                  if (carry) x = [carry].concat(x);

                  return x;
                }

                function compare(a, b, aL, bL) {
                  var i, cmp;

                  if (aL != bL) {
                    cmp = aL > bL ? 1 : -1;
                  } else {
                    for (i = cmp = 0; i < aL; i++) {
                      if (a[i] != b[i]) {
                        cmp = a[i] > b[i] ? 1 : -1;
                        break;
                      }
                    }
                  }

                  return cmp;
                }

                function subtract(a, b, aL, base) {
                  var i = 0;

                  // Subtract b from a.
                  for (; aL--; ) {
                    a[aL] -= i;
                    i = a[aL] < b[aL] ? 1 : 0;
                    a[aL] = i * base + a[aL] - b[aL];
                  }

                  // Remove leading zeros.
                  for (; !a[0] && a.length > 1; a.splice(0, 1)) {}
                }

                // x: dividend, y: divisor.
                return function (x, y, dp, rm, base) {
                  var cmp,
                    e,
                    i,
                    more,
                    n,
                    prod,
                    prodL,
                    q,
                    qc,
                    rem,
                    remL,
                    rem0,
                    xi,
                    xL,
                    yc0,
                    yL,
                    yz,
                    s = x.s == y.s ? 1 : -1,
                    xc = x.c,
                    yc = y.c;

                  // Either NaN, Infinity or 0?
                  if (!xc || !xc[0] || !yc || !yc[0]) {
                    return new BigNumber(
                      // Return NaN if either NaN, or both Infinity or 0.
                      !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc)
                        ? NaN
                        : // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
                        (xc && xc[0] == 0) || !yc
                        ? s * 0
                        : s / 0
                    );
                  }

                  q = new BigNumber(s);
                  qc = q.c = [];
                  e = x.e - y.e;
                  s = dp + e + 1;

                  if (!base) {
                    base = BASE;
                    e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
                    s = (s / LOG_BASE) | 0;
                  }

                  // Result exponent may be one less then the current value of e.
                  // The coefficients of the BigNumbers from convertBase may have trailing zeros.
                  for (i = 0; yc[i] == (xc[i] || 0); i++) {}

                  if (yc[i] > (xc[i] || 0)) e--;

                  if (s < 0) {
                    qc.push(1);
                    more = true;
                  } else {
                    xL = xc.length;
                    yL = yc.length;
                    i = 0;
                    s += 2;

                    // Normalise xc and yc so highest order digit of yc is >= base / 2.

                    n = mathfloor(base / (yc[0] + 1));

                    // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.
                    // if (n > 1 || n++ == 1 && yc[0] < base / 2) {
                    if (n > 1) {
                      yc = multiply(yc, n, base);
                      xc = multiply(xc, n, base);
                      yL = yc.length;
                      xL = xc.length;
                    }

                    xi = yL;
                    rem = xc.slice(0, yL);
                    remL = rem.length;

                    // Add zeros to make remainder as long as divisor.
                    for (; remL < yL; rem[remL++] = 0) {}
                    yz = yc.slice();
                    yz = [0].concat(yz);
                    yc0 = yc[0];
                    if (yc[1] >= base / 2) yc0++;
                    // Not necessary, but to prevent trial digit n > base, when using base 3.
                    // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;

                    do {
                      n = 0;

                      // Compare divisor and remainder.
                      cmp = compare(yc, rem, yL, remL);

                      // If divisor < remainder.
                      if (cmp < 0) {
                        // Calculate trial digit, n.

                        rem0 = rem[0];
                        if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

                        // n is how many times the divisor goes into the current remainder.
                        n = mathfloor(rem0 / yc0);

                        //  Algorithm:
                        //  product = divisor multiplied by trial digit (n).
                        //  Compare product and remainder.
                        //  If product is greater than remainder:
                        //    Subtract divisor from product, decrement trial digit.
                        //  Subtract product from remainder.
                        //  If product was less than remainder at the last compare:
                        //    Compare new remainder and divisor.
                        //    If remainder is greater than divisor:
                        //      Subtract divisor from remainder, increment trial digit.

                        if (n > 1) {
                          // n may be > base only when base is 3.
                          if (n >= base) n = base - 1;

                          // product = divisor * trial digit.
                          prod = multiply(yc, n, base);
                          prodL = prod.length;
                          remL = rem.length;

                          // Compare product and remainder.
                          // If product > remainder then trial digit n too high.
                          // n is 1 too high about 5% of the time, and is not known to have
                          // ever been more than 1 too high.
                          while (compare(prod, rem, prodL, remL) == 1) {
                            n--;

                            // Subtract divisor from product.
                            subtract(prod, yL < prodL ? yz : yc, prodL, base);
                            prodL = prod.length;
                            cmp = 1;
                          }
                        } else {
                          // n is 0 or 1, cmp is -1.
                          // If n is 0, there is no need to compare yc and rem again below,
                          // so change cmp to 1 to avoid it.
                          // If n is 1, leave cmp as -1, so yc and rem are compared again.
                          if (n == 0) {
                            // divisor < remainder, so n must be at least 1.
                            cmp = n = 1;
                          }

                          // product = divisor
                          prod = yc.slice();
                          prodL = prod.length;
                        }

                        if (prodL < remL) prod = [0].concat(prod);

                        // Subtract product from remainder.
                        subtract(rem, prod, remL, base);
                        remL = rem.length;

                        // If product was < remainder.
                        if (cmp == -1) {
                          // Compare divisor and new remainder.
                          // If divisor < new remainder, subtract divisor from remainder.
                          // Trial digit n too low.
                          // n is 1 too low about 5% of the time, and very rarely 2 too low.
                          while (compare(yc, rem, yL, remL) < 1) {
                            n++;

                            // Subtract divisor from remainder.
                            subtract(rem, yL < remL ? yz : yc, remL, base);
                            remL = rem.length;
                          }
                        }
                      } else if (cmp === 0) {
                        n++;
                        rem = [0];
                      } // else cmp === 1 and n will be 0

                      // Add the next digit, n, to the result array.
                      qc[i++] = n;

                      // Update the remainder.
                      if (rem[0]) {
                        rem[remL++] = xc[xi] || 0;
                      } else {
                        rem = [xc[xi]];
                        remL = 1;
                      }
                    } while ((xi++ < xL || rem[0] != null) && s--);

                    more = rem[0] != null;

                    // Leading zero?
                    if (!qc[0]) qc.splice(0, 1);
                  }

                  if (base == BASE) {
                    // To calculate q.e, first get the number of digits of qc[0].
                    for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {}

                    round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);

                    // Caller is convertBase.
                  } else {
                    q.e = e;
                    q.r = +more;
                  }

                  return q;
                };
              })();

              /*
               * Return a string representing the value of BigNumber n in fixed-point or exponential
               * notation rounded to the specified decimal places or significant digits.
               *
               * n: a BigNumber.
               * i: the index of the last digit required (i.e. the digit that may be rounded up).
               * rm: the rounding mode.
               * id: 1 (toExponential) or 2 (toPrecision).
               */
              function format(n, i, rm, id) {
                var c0, e, ne, len, str;

                if (rm == null) rm = ROUNDING_MODE;
                else intCheck(rm, 0, 8);

                if (!n.c) return n.toString();

                c0 = n.c[0];
                ne = n.e;

                if (i == null) {
                  str = coeffToString(n.c);
                  str =
                    id == 1 ||
                    (id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS))
                      ? toExponential(str, ne)
                      : toFixedPoint(str, ne, '0');
                } else {
                  n = round(new BigNumber(n), i, rm);

                  // n.e may have changed if the value was rounded up.
                  e = n.e;

                  str = coeffToString(n.c);
                  len = str.length;

                  // toPrecision returns exponential notation if the number of significant digits
                  // specified is less than the number of digits necessary to represent the integer
                  // part of the value in fixed-point notation.

                  // Exponential notation.
                  if (id == 1 || (id == 2 && (i <= e || e <= TO_EXP_NEG))) {
                    // Append zeros?
                    for (; len < i; str += '0', len++) {}
                    str = toExponential(str, e);

                    // Fixed-point notation.
                  } else {
                    i -= ne;
                    str = toFixedPoint(str, e, '0');

                    // Append zeros?
                    if (e + 1 > len) {
                      if (--i > 0) for (str += '.'; i--; str += '0') {}
                    } else {
                      i += e - len;
                      if (i > 0) {
                        if (e + 1 == len) str += '.';
                        for (; i--; str += '0') {}
                      }
                    }
                  }
                }

                return n.s < 0 && c0 ? '-' + str : str;
              }

              // Handle BigNumber.max and BigNumber.min.
              function maxOrMin(args, method) {
                var n,
                  i = 1,
                  m = new BigNumber(args[0]);

                for (; i < args.length; i++) {
                  n = new BigNumber(args[i]);

                  // If any number is NaN, return NaN.
                  if (!n.s) {
                    m = n;
                    break;
                  } else if (method.call(m, n)) {
                    m = n;
                  }
                }

                return m;
              }

              /*
               * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
               * Called by minus, plus and times.
               */
              function normalise(n, c, e) {
                var i = 1,
                  j = c.length;

                // Remove trailing zeros.
                for (; !c[--j]; c.pop()) {}

                // Calculate the base 10 exponent. First get the number of digits of c[0].
                for (j = c[0]; j >= 10; j /= 10, i++) {}

                // Overflow?
                if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
                  // Infinity.
                  n.c = n.e = null;

                  // Underflow?
                } else if (e < MIN_EXP) {
                  // Zero.
                  n.c = [(n.e = 0)];
                } else {
                  n.e = e;
                  n.c = c;
                }

                return n;
              }

              // Handle values that fail the validity test in BigNumber.
              parseNumeric = (function () {
                var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                  dotAfter = /^([^.]+)\.$/,
                  dotBefore = /^\.([^.]+)$/,
                  isInfinityOrNaN = /^-?(Infinity|NaN)$/,
                  whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;

                return function (x, str, isNum, b) {
                  var base,
                    s = isNum ? str : str.replace(whitespaceOrPlus, '');

                  // No exception on ±Infinity or NaN.
                  if (isInfinityOrNaN.test(s)) {
                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                  } else {
                    if (!isNum) {
                      // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
                      s = s.replace(basePrefix, function (m, p1, p2) {
                        base =
                          (p2 = p2.toLowerCase()) == 'x'
                            ? 16
                            : p2 == 'b'
                            ? 2
                            : 8;
                        return !b || b == base ? p1 : m;
                      });

                      if (b) {
                        base = b;

                        // E.g. '1.' to '1', '.1' to '0.1'
                        s = s
                          .replace(dotAfter, '$1')
                          .replace(dotBefore, '0.$1');
                      }

                      if (str != s) return new BigNumber(s, base);
                    }

                    // '[BigNumber Error] Not a number: {n}'
                    // '[BigNumber Error] Not a base {b} number: {n}'
                    if (BigNumber.DEBUG) {
                      throw Error(
                        bignumberError +
                          'Not a' +
                          (b ? ' base ' + b : '') +
                          ' number: ' +
                          str
                      );
                    }

                    // NaN
                    x.s = null;
                  }

                  x.c = x.e = null;
                };
              })();

              /*
               * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
               * If r is truthy, it is known that there are more digits after the rounding digit.
               */
              function round(x, sd, rm, r) {
                var d,
                  i,
                  j,
                  k,
                  n,
                  ni,
                  rd,
                  xc = x.c,
                  pows10 = POWS_TEN;

                // if x is not Infinity or NaN...
                if (xc) {
                  // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
                  // n is a base 1e14 number, the value of the element of array x.c containing rd.
                  // ni is the index of n within x.c.
                  // d is the number of digits of n.
                  // i is the index of rd within n including leading zeros.
                  // j is the actual index of rd within n (if < 0, rd is a leading zero).
                  out: {
                    // Get the number of digits of the first element of xc.
                    for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {}
                    i = sd - d;

                    // If the rounding digit is in the first element of xc...
                    if (i < 0) {
                      i += LOG_BASE;
                      j = sd;
                      n = xc[(ni = 0)];

                      // Get the rounding digit at index j of n.
                      rd = (n / pows10[d - j - 1]) % 10 | 0;
                    } else {
                      ni = mathceil((i + 1) / LOG_BASE);

                      if (ni >= xc.length) {
                        if (r) {
                          // Needed by sqrt.
                          for (; xc.length <= ni; xc.push(0)) {}
                          n = rd = 0;
                          d = 1;
                          i %= LOG_BASE;
                          j = i - LOG_BASE + 1;
                        } else {
                          break out;
                        }
                      } else {
                        n = k = xc[ni];

                        // Get the number of digits of n.
                        for (d = 1; k >= 10; k /= 10, d++) {}

                        // Get the index of rd within n.
                        i %= LOG_BASE;

                        // Get the index of rd within n, adjusted for leading zeros.
                        // The number of leading zeros of n is given by LOG_BASE - d.
                        j = i - LOG_BASE + d;

                        // Get the rounding digit at index j of n.
                        rd = j < 0 ? 0 : (n / pows10[d - j - 1]) % 10 | 0;
                      }
                    }

                    r =
                      r ||
                      sd < 0 ||
                      // Are there any non-zero digits after the rounding digit?
                      // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
                      // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
                      xc[ni + 1] != null ||
                      (j < 0 ? n : n % pows10[d - j - 1]);

                    r =
                      rm < 4
                        ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
                        : rd > 5 ||
                          (rd == 5 &&
                            (rm == 4 ||
                              r ||
                              (rm == 6 &&
                                // Check whether the digit to the left of the rounding digit is odd.
                                (i > 0
                                  ? j > 0
                                    ? n / pows10[d - j]
                                    : 0
                                  : xc[ni - 1]) %
                                  10 &
                                  1) ||
                              rm == (x.s < 0 ? 8 : 7)));

                    if (sd < 1 || !xc[0]) {
                      xc.length = 0;

                      if (r) {
                        // Convert sd to decimal places.
                        sd -= x.e + 1;

                        // 1, 0.1, 0.01, 0.001, 0.0001 etc.
                        xc[0] = pows10[(LOG_BASE - (sd % LOG_BASE)) % LOG_BASE];
                        x.e = -sd || 0;
                      } else {
                        // Zero.
                        xc[0] = x.e = 0;
                      }

                      return x;
                    }

                    // Remove excess digits.
                    if (i == 0) {
                      xc.length = ni;
                      k = 1;
                      ni--;
                    } else {
                      xc.length = ni + 1;
                      k = pows10[LOG_BASE - i];

                      // E.g. 56700 becomes 56000 if 7 is the rounding digit.
                      // j > 0 means i > number of leading zeros of n.
                      xc[ni] =
                        j > 0
                          ? mathfloor((n / pows10[d - j]) % pows10[j]) * k
                          : 0;
                    }

                    // Round up?
                    if (r) {
                      for (;;) {
                        // If the digit to be rounded up is in the first element of xc...
                        if (ni == 0) {
                          // i will be the length of xc[0] before k is added.
                          for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {}
                          j = xc[0] += k;
                          for (k = 1; j >= 10; j /= 10, k++) {}

                          // if i != k the length has increased.
                          if (i != k) {
                            x.e++;
                            if (xc[0] == BASE) xc[0] = 1;
                          }

                          break;
                        } else {
                          xc[ni] += k;
                          if (xc[ni] != BASE) break;
                          xc[ni--] = 0;
                          k = 1;
                        }
                      }
                    }

                    // Remove trailing zeros.
                    for (i = xc.length; xc[--i] === 0; xc.pop()) {}
                  }

                  // Overflow? Infinity.
                  if (x.e > MAX_EXP) {
                    x.c = x.e = null;

                    // Underflow? Zero.
                  } else if (x.e < MIN_EXP) {
                    x.c = [(x.e = 0)];
                  }
                }

                return x;
              }

              function valueOf(n) {
                var str,
                  e = n.e;

                if (e === null) return n.toString();

                str = coeffToString(n.c);

                str =
                  e <= TO_EXP_NEG || e >= TO_EXP_POS
                    ? toExponential(str, e)
                    : toFixedPoint(str, e, '0');

                return n.s < 0 ? '-' + str : str;
              }

              // PROTOTYPE/INSTANCE METHODS

              /*
               * Return a new BigNumber whose value is the absolute value of this BigNumber.
               */
              P.absoluteValue = P.abs = function () {
                var x = new BigNumber(this);
                if (x.s < 0) x.s = 1;
                return x;
              };

              /*
               * Return
               *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
               *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
               *   0 if they have the same value,
               *   or null if the value of either is NaN.
               */
              P.comparedTo = function (y, b) {
                return compare(this, new BigNumber(y, b));
              };

              /*
               * If dp is undefined or null or true or false, return the number of decimal places of the
               * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
               *
               * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this
               * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or
               * ROUNDING_MODE if rm is omitted.
               *
               * [dp] {number} Decimal places: integer, 0 to MAX inclusive.
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
               */
              P.decimalPlaces = P.dp = function (dp, rm) {
                var c,
                  n,
                  v,
                  x = this;

                if (dp != null) {
                  intCheck(dp, 0, MAX);
                  if (rm == null) rm = ROUNDING_MODE;
                  else intCheck(rm, 0, 8);

                  return round(new BigNumber(x), dp + x.e + 1, rm);
                }

                if (!(c = x.c)) return null;
                n =
                  ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;

                // Subtract the number of trailing zeros of the last number.
                if ((v = c[v])) for (; v % 10 == 0; v /= 10, n--) {}
                if (n < 0) n = 0;

                return n;
              };

              /*
               *  n / 0 = I
               *  n / N = N
               *  n / I = 0
               *  0 / n = 0
               *  0 / 0 = N
               *  0 / N = N
               *  0 / I = 0
               *  N / n = N
               *  N / 0 = N
               *  N / N = N
               *  N / I = N
               *  I / n = I
               *  I / 0 = I
               *  I / N = N
               *  I / I = N
               *
               * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
               * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
               */
              P.dividedBy = P.div = function (y, b) {
                return div(
                  this,
                  new BigNumber(y, b),
                  DECIMAL_PLACES,
                  ROUNDING_MODE
                );
              };

              /*
               * Return a new BigNumber whose value is the integer part of dividing the value of this
               * BigNumber by the value of BigNumber(y, b).
               */
              P.dividedToIntegerBy = P.idiv = function (y, b) {
                return div(this, new BigNumber(y, b), 0, 1);
              };

              /*
               * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.
               *
               * If m is present, return the result modulo m.
               * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
               * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.
               *
               * The modular power operation works efficiently when x, n, and m are integers, otherwise it
               * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.
               *
               * n {number|string|BigNumber} The exponent. An integer.
               * [m] {number|string|BigNumber} The modulus.
               *
               * '[BigNumber Error] Exponent not an integer: {n}'
               */
              P.exponentiatedBy = P.pow = function (n, m) {
                var half,
                  isModExp,
                  i,
                  k,
                  more,
                  nIsBig,
                  nIsNeg,
                  nIsOdd,
                  y,
                  x = this;

                n = new BigNumber(n);

                // Allow NaN and ±Infinity, but not other non-integers.
                if (n.c && !n.isInteger()) {
                  throw Error(
                    bignumberError + 'Exponent not an integer: ' + valueOf(n)
                  );
                }

                if (m != null) m = new BigNumber(m);

                // Exponent of MAX_SAFE_INTEGER is 15.
                nIsBig = n.e > 14;

                // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.
                if (
                  !x.c ||
                  !x.c[0] ||
                  (x.c[0] == 1 && !x.e && x.c.length == 1) ||
                  !n.c ||
                  !n.c[0]
                ) {
                  // The sign of the result of pow when x is negative depends on the evenness of n.
                  // If +n overflows to ±Infinity, the evenness of n would be not be known.
                  y = new BigNumber(
                    Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n))
                  );
                  return m ? y.mod(m) : y;
                }

                nIsNeg = n.s < 0;

                if (m) {
                  // x % m returns NaN if abs(m) is zero, or m is NaN.
                  if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);

                  isModExp = !nIsNeg && x.isInteger() && m.isInteger();

                  if (isModExp) x = x.mod(m);

                  // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.
                  // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.
                } else if (
                  n.e > 9 &&
                  (x.e > 0 ||
                    x.e < -1 ||
                    (x.e == 0
                      ? // [1, 240000000]
                        x.c[0] > 1 || (nIsBig && x.c[1] >= 24e7)
                      : // [80000000000000]  [99999750000000]
                        x.c[0] < 8e13 || (nIsBig && x.c[0] <= 9999975e7)))
                ) {
                  // If x is negative and n is odd, k = -0, else k = 0.
                  k = x.s < 0 && isOdd(n) ? -0 : 0;

                  // If x >= 1, k = ±Infinity.
                  if (x.e > -1) k = 1 / k;

                  // If n is negative return ±0, else return ±Infinity.
                  return new BigNumber(nIsNeg ? 1 / k : k);
                } else if (POW_PRECISION) {
                  // Truncating each coefficient array to a length of k after each multiplication
                  // equates to truncating significant digits to POW_PRECISION + [28, 41],
                  // i.e. there will be a minimum of 28 guard digits retained.
                  k = mathceil(POW_PRECISION / LOG_BASE + 2);
                }

                if (nIsBig) {
                  half = new BigNumber(0.5);
                  if (nIsNeg) n.s = 1;
                  nIsOdd = isOdd(n);
                } else {
                  i = Math.abs(+valueOf(n));
                  nIsOdd = i % 2;
                }

                y = new BigNumber(ONE);

                // Performs 54 loop iterations for n of 9007199254740991.
                for (;;) {
                  if (nIsOdd) {
                    y = y.times(x);
                    if (!y.c) break;

                    if (k) {
                      if (y.c.length > k) y.c.length = k;
                    } else if (isModExp) {
                      y = y.mod(m); //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));
                    }
                  }

                  if (i) {
                    i = mathfloor(i / 2);
                    if (i === 0) break;
                    nIsOdd = i % 2;
                  } else {
                    n = n.times(half);
                    round(n, n.e + 1, 1);

                    if (n.e > 14) {
                      nIsOdd = isOdd(n);
                    } else {
                      i = +valueOf(n);
                      if (i === 0) break;
                      nIsOdd = i % 2;
                    }
                  }

                  x = x.times(x);

                  if (k) {
                    if (x.c && x.c.length > k) x.c.length = k;
                  } else if (isModExp) {
                    x = x.mod(m); //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));
                  }
                }

                if (isModExp) return y;
                if (nIsNeg) y = ONE.div(y);

                return m
                  ? y.mod(m)
                  : k
                  ? round(y, POW_PRECISION, ROUNDING_MODE, more)
                  : y;
              };

              /*
               * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer
               * using rounding mode rm, or ROUNDING_MODE if rm is omitted.
               *
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'
               */
              P.integerValue = function (rm) {
                var n = new BigNumber(this);
                if (rm == null) rm = ROUNDING_MODE;
                else intCheck(rm, 0, 8);
                return round(n, n.e + 1, rm);
              };

              /*
               * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
               * otherwise return false.
               */
              P.isEqualTo = P.eq = function (y, b) {
                return compare(this, new BigNumber(y, b)) === 0;
              };

              /*
               * Return true if the value of this BigNumber is a finite number, otherwise return false.
               */
              P.isFinite = function () {
                return !!this.c;
              };

              /*
               * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
               * otherwise return false.
               */
              P.isGreaterThan = P.gt = function (y, b) {
                return compare(this, new BigNumber(y, b)) > 0;
              };

              /*
               * Return true if the value of this BigNumber is greater than or equal to the value of
               * BigNumber(y, b), otherwise return false.
               */
              P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
                return (
                  (b = compare(this, new BigNumber(y, b))) === 1 || b === 0
                );
              };

              /*
               * Return true if the value of this BigNumber is an integer, otherwise return false.
               */
              P.isInteger = function () {
                return (
                  !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2
                );
              };

              /*
               * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
               * otherwise return false.
               */
              P.isLessThan = P.lt = function (y, b) {
                return compare(this, new BigNumber(y, b)) < 0;
              };

              /*
               * Return true if the value of this BigNumber is less than or equal to the value of
               * BigNumber(y, b), otherwise return false.
               */
              P.isLessThanOrEqualTo = P.lte = function (y, b) {
                return (
                  (b = compare(this, new BigNumber(y, b))) === -1 || b === 0
                );
              };

              /*
               * Return true if the value of this BigNumber is NaN, otherwise return false.
               */
              P.isNaN = function () {
                return !this.s;
              };

              /*
               * Return true if the value of this BigNumber is negative, otherwise return false.
               */
              P.isNegative = function () {
                return this.s < 0;
              };

              /*
               * Return true if the value of this BigNumber is positive, otherwise return false.
               */
              P.isPositive = function () {
                return this.s > 0;
              };

              /*
               * Return true if the value of this BigNumber is 0 or -0, otherwise return false.
               */
              P.isZero = function () {
                return !!this.c && this.c[0] == 0;
              };

              /*
               *  n - 0 = n
               *  n - N = N
               *  n - I = -I
               *  0 - n = -n
               *  0 - 0 = 0
               *  0 - N = N
               *  0 - I = -I
               *  N - n = N
               *  N - 0 = N
               *  N - N = N
               *  N - I = N
               *  I - n = I
               *  I - 0 = I
               *  I - N = N
               *  I - I = N
               *
               * Return a new BigNumber whose value is the value of this BigNumber minus the value of
               * BigNumber(y, b).
               */
              P.minus = function (y, b) {
                var i,
                  j,
                  t,
                  xLTy,
                  x = this,
                  a = x.s;

                y = new BigNumber(y, b);
                b = y.s;

                // Either NaN?
                if (!a || !b) return new BigNumber(NaN);

                // Signs differ?
                if (a != b) {
                  y.s = -b;
                  return x.plus(y);
                }

                var xe = x.e / LOG_BASE,
                  ye = y.e / LOG_BASE,
                  xc = x.c,
                  yc = y.c;

                if (!xe || !ye) {
                  // Either Infinity?
                  if (!xc || !yc)
                    return xc ? ((y.s = -b), y) : new BigNumber(yc ? x : NaN);

                  // Either zero?
                  if (!xc[0] || !yc[0]) {
                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
                    return yc[0]
                      ? ((y.s = -b), y)
                      : new BigNumber(
                          xc[0]
                            ? x
                            : // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
                            ROUNDING_MODE == 3
                            ? -0
                            : 0
                        );
                  }
                }

                xe = bitFloor(xe);
                ye = bitFloor(ye);
                xc = xc.slice();

                // Determine which is the bigger number.
                if ((a = xe - ye)) {
                  if ((xLTy = a < 0)) {
                    a = -a;
                    t = xc;
                  } else {
                    ye = xe;
                    t = yc;
                  }

                  t.reverse();

                  // Prepend zeros to equalise exponents.
                  for (b = a; b--; t.push(0)) {}
                  t.reverse();
                } else {
                  // Exponents equal. Check digit by digit.
                  j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

                  for (a = b = 0; b < j; b++) {
                    if (xc[b] != yc[b]) {
                      xLTy = xc[b] < yc[b];
                      break;
                    }
                  }
                }

                // x < y? Point xc to the array of the bigger number.
                if (xLTy) (t = xc), (xc = yc), (yc = t), (y.s = -y.s);

                b = (j = yc.length) - (i = xc.length);

                // Append zeros to xc if shorter.
                // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
                if (b > 0) for (; b--; xc[i++] = 0) {}
                b = BASE - 1;

                // Subtract yc from xc.
                for (; j > a; ) {
                  if (xc[--j] < yc[j]) {
                    for (i = j; i && !xc[--i]; xc[i] = b) {}
                    --xc[i];
                    xc[j] += BASE;
                  }

                  xc[j] -= yc[j];
                }

                // Remove leading zeros and adjust exponent accordingly.
                for (; xc[0] == 0; xc.splice(0, 1), --ye) {}

                // Zero?
                if (!xc[0]) {
                  // Following IEEE 754 (2008) 6.3,
                  // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
                  y.s = ROUNDING_MODE == 3 ? -1 : 1;
                  y.c = [(y.e = 0)];
                  return y;
                }

                // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
                // for finite x and y.
                return normalise(y, xc, ye);
              };

              /*
               *   n % 0 =  N
               *   n % N =  N
               *   n % I =  n
               *   0 % n =  0
               *  -0 % n = -0
               *   0 % 0 =  N
               *   0 % N =  N
               *   0 % I =  0
               *   N % n =  N
               *   N % 0 =  N
               *   N % N =  N
               *   N % I =  N
               *   I % n =  N
               *   I % 0 =  N
               *   I % N =  N
               *   I % I =  N
               *
               * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
               * BigNumber(y, b). The result depends on the value of MODULO_MODE.
               */
              P.modulo = P.mod = function (y, b) {
                var q,
                  s,
                  x = this;

                y = new BigNumber(y, b);

                // Return NaN if x is Infinity or NaN, or y is NaN or zero.
                if (!x.c || !y.s || (y.c && !y.c[0])) {
                  return new BigNumber(NaN);

                  // Return x if y is Infinity or x is zero.
                } else if (!y.c || (x.c && !x.c[0])) {
                  return new BigNumber(x);
                }

                if (MODULO_MODE == 9) {
                  // Euclidian division: q = sign(y) * floor(x / abs(y))
                  // r = x - qy    where  0 <= r < abs(y)
                  s = y.s;
                  y.s = 1;
                  q = div(x, y, 0, 3);
                  y.s = s;
                  q.s *= s;
                } else {
                  q = div(x, y, 0, MODULO_MODE);
                }

                y = x.minus(q.times(y));

                // To match JavaScript %, ensure sign of zero is sign of dividend.
                if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;

                return y;
              };

              /*
               *  n * 0 = 0
               *  n * N = N
               *  n * I = I
               *  0 * n = 0
               *  0 * 0 = 0
               *  0 * N = N
               *  0 * I = N
               *  N * n = N
               *  N * 0 = N
               *  N * N = N
               *  N * I = N
               *  I * n = I
               *  I * 0 = N
               *  I * N = N
               *  I * I = I
               *
               * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value
               * of BigNumber(y, b).
               */
              P.multipliedBy = P.times = function (y, b) {
                var c,
                  e,
                  i,
                  j,
                  k,
                  m,
                  xcL,
                  xlo,
                  xhi,
                  ycL,
                  ylo,
                  yhi,
                  zc,
                  base,
                  sqrtBase,
                  x = this,
                  xc = x.c,
                  yc = (y = new BigNumber(y, b)).c;

                // Either NaN, ±Infinity or ±0?
                if (!xc || !yc || !xc[0] || !yc[0]) {
                  // Return NaN if either is NaN, or one is 0 and the other is Infinity.
                  if (
                    !x.s ||
                    !y.s ||
                    (xc && !xc[0] && !yc) ||
                    (yc && !yc[0] && !xc)
                  ) {
                    y.c = y.e = y.s = null;
                  } else {
                    y.s *= x.s;

                    // Return ±Infinity if either is ±Infinity.
                    if (!xc || !yc) {
                      y.c = y.e = null;

                      // Return ±0 if either is ±0.
                    } else {
                      y.c = [0];
                      y.e = 0;
                    }
                  }

                  return y;
                }

                e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
                y.s *= x.s;
                xcL = xc.length;
                ycL = yc.length;

                // Ensure xc points to longer array and xcL to its length.
                if (xcL < ycL)
                  (zc = xc),
                    (xc = yc),
                    (yc = zc),
                    (i = xcL),
                    (xcL = ycL),
                    (ycL = i);

                // Initialise the result array with zeros.
                for (i = xcL + ycL, zc = []; i--; zc.push(0)) {}

                base = BASE;
                sqrtBase = SQRT_BASE;

                for (i = ycL; --i >= 0; ) {
                  c = 0;
                  ylo = yc[i] % sqrtBase;
                  yhi = (yc[i] / sqrtBase) | 0;

                  for (k = xcL, j = i + k; j > i; ) {
                    xlo = xc[--k] % sqrtBase;
                    xhi = (xc[k] / sqrtBase) | 0;
                    m = yhi * xlo + xhi * ylo;
                    xlo = ylo * xlo + (m % sqrtBase) * sqrtBase + zc[j] + c;
                    c = ((xlo / base) | 0) + ((m / sqrtBase) | 0) + yhi * xhi;
                    zc[j--] = xlo % base;
                  }

                  zc[j] = c;
                }

                if (c) {
                  ++e;
                } else {
                  zc.splice(0, 1);
                }

                return normalise(y, zc, e);
              };

              /*
               * Return a new BigNumber whose value is the value of this BigNumber negated,
               * i.e. multiplied by -1.
               */
              P.negated = function () {
                var x = new BigNumber(this);
                x.s = -x.s || null;
                return x;
              };

              /*
               *  n + 0 = n
               *  n + N = N
               *  n + I = I
               *  0 + n = n
               *  0 + 0 = 0
               *  0 + N = N
               *  0 + I = I
               *  N + n = N
               *  N + 0 = N
               *  N + N = N
               *  N + I = N
               *  I + n = I
               *  I + 0 = I
               *  I + N = N
               *  I + I = I
               *
               * Return a new BigNumber whose value is the value of this BigNumber plus the value of
               * BigNumber(y, b).
               */
              P.plus = function (y, b) {
                var t,
                  x = this,
                  a = x.s;

                y = new BigNumber(y, b);
                b = y.s;

                // Either NaN?
                if (!a || !b) return new BigNumber(NaN);

                // Signs differ?
                if (a != b) {
                  y.s = -b;
                  return x.minus(y);
                }

                var xe = x.e / LOG_BASE,
                  ye = y.e / LOG_BASE,
                  xc = x.c,
                  yc = y.c;

                if (!xe || !ye) {
                  // Return ±Infinity if either ±Infinity.
                  if (!xc || !yc) return new BigNumber(a / 0);

                  // Either zero?
                  // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
                  if (!xc[0] || !yc[0])
                    return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
                }

                xe = bitFloor(xe);
                ye = bitFloor(ye);
                xc = xc.slice();

                // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
                if ((a = xe - ye)) {
                  if (a > 0) {
                    ye = xe;
                    t = yc;
                  } else {
                    a = -a;
                    t = xc;
                  }

                  t.reverse();
                  for (; a--; t.push(0)) {}
                  t.reverse();
                }

                a = xc.length;
                b = yc.length;

                // Point xc to the longer array, and b to the shorter length.
                if (a - b < 0) (t = yc), (yc = xc), (xc = t), (b = a);

                // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
                for (a = 0; b; ) {
                  a = ((xc[--b] = xc[b] + yc[b] + a) / BASE) | 0;
                  xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
                }

                if (a) {
                  xc = [a].concat(xc);
                  ++ye;
                }

                // No need to check for zero, as +x + +y != 0 && -x + -y != 0
                // ye = MAX_EXP + 1 possible
                return normalise(y, xc, ye);
              };

              /*
               * If sd is undefined or null or true or false, return the number of significant digits of
               * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
               * If sd is true include integer-part trailing zeros in the count.
               *
               * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this
               * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or
               * ROUNDING_MODE if rm is omitted.
               *
               * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.
               *                     boolean: whether to count integer-part trailing zeros: true or false.
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
               */
              P.precision = P.sd = function (sd, rm) {
                var c,
                  n,
                  v,
                  x = this;

                if (sd != null && sd !== !!sd) {
                  intCheck(sd, 1, MAX);
                  if (rm == null) rm = ROUNDING_MODE;
                  else intCheck(rm, 0, 8);

                  return round(new BigNumber(x), sd, rm);
                }

                if (!(c = x.c)) return null;
                v = c.length - 1;
                n = v * LOG_BASE + 1;

                if ((v = c[v])) {
                  // Subtract the number of trailing zeros of the last element.
                  for (; v % 10 == 0; v /= 10, n--) {}

                  // Add the number of digits of the first element.
                  for (v = c[0]; v >= 10; v /= 10, n++) {}
                }

                if (sd && x.e + 1 > n) n = x.e + 1;

                return n;
              };

              /*
               * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
               * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
               *
               * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'
               */
              P.shiftedBy = function (k) {
                intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
                return this.times('1e' + k);
              };

              /*
               *  sqrt(-n) =  N
               *  sqrt(N) =  N
               *  sqrt(-I) =  N
               *  sqrt(I) =  I
               *  sqrt(0) =  0
               *  sqrt(-0) = -0
               *
               * Return a new BigNumber whose value is the square root of the value of this BigNumber,
               * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
               */
              P.squareRoot = P.sqrt = function () {
                var m,
                  n,
                  r,
                  rep,
                  t,
                  x = this,
                  c = x.c,
                  s = x.s,
                  e = x.e,
                  dp = DECIMAL_PLACES + 4,
                  half = new BigNumber('0.5');

                // Negative/NaN/Infinity/zero?
                if (s !== 1 || !c || !c[0]) {
                  return new BigNumber(
                    !s || (s < 0 && (!c || c[0])) ? NaN : c ? x : 1 / 0
                  );
                }

                // Initial estimate.
                s = Math.sqrt(+valueOf(x));

                // Math.sqrt underflow/overflow?
                // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
                if (s == 0 || s == 1 / 0) {
                  n = coeffToString(c);
                  if ((n.length + e) % 2 == 0) n += '0';
                  s = Math.sqrt(+n);
                  e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

                  if (s == 1 / 0) {
                    n = '5e' + e;
                  } else {
                    n = s.toExponential();
                    n = n.slice(0, n.indexOf('e') + 1) + e;
                  }

                  r = new BigNumber(n);
                } else {
                  r = new BigNumber(s + '');
                }

                // Check for zero.
                // r could be zero if MIN_EXP is changed after the this value was created.
                // This would cause a division by zero (x/t) and hence Infinity below, which would cause
                // coeffToString to throw.
                if (r.c[0]) {
                  e = r.e;
                  s = e + dp;
                  if (s < 3) s = 0;

                  // Newton-Raphson iteration.
                  for (;;) {
                    t = r;
                    r = half.times(t.plus(div(x, t, dp, 1)));

                    if (
                      coeffToString(t.c).slice(0, s) ===
                      (n = coeffToString(r.c)).slice(0, s)
                    ) {
                      // The exponent of r may here be one less than the final result exponent,
                      // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
                      // are indexed correctly.
                      if (r.e < e) --s;
                      n = n.slice(s - 3, s + 1);

                      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
                      // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
                      // iteration.
                      if (n == '9999' || (!rep && n == '4999')) {
                        // On the first iteration only, check to see if rounding up gives the
                        // exact result as the nines may infinitely repeat.
                        if (!rep) {
                          round(t, t.e + DECIMAL_PLACES + 2, 0);

                          if (t.times(t).eq(x)) {
                            r = t;
                            break;
                          }
                        }

                        dp += 4;
                        s += 4;
                        rep = 1;
                      } else {
                        // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
                        // result. If not, then there are further digits and m will be truthy.
                        if (!+n || (!+n.slice(1) && n.charAt(0) == '5')) {
                          // Truncate to the first rounding digit.
                          round(r, r.e + DECIMAL_PLACES + 2, 1);
                          m = !r.times(r).eq(x);
                        }

                        break;
                      }
                    }
                  }
                }

                return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
              };

              /*
               * Return a string representing the value of this BigNumber in exponential notation and
               * rounded using ROUNDING_MODE to dp fixed decimal places.
               *
               * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
               */
              P.toExponential = function (dp, rm) {
                if (dp != null) {
                  intCheck(dp, 0, MAX);
                  dp++;
                }
                return format(this, dp, rm, 1);
              };

              /*
               * Return a string representing the value of this BigNumber in fixed-point notation rounding
               * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
               *
               * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
               * but e.g. (-0.00001).toFixed(0) is '-0'.
               *
               * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
               */
              P.toFixed = function (dp, rm) {
                if (dp != null) {
                  intCheck(dp, 0, MAX);
                  dp = dp + this.e + 1;
                }
                return format(this, dp, rm);
              };

              /*
               * Return a string representing the value of this BigNumber in fixed-point notation rounded
               * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
               * of the format or FORMAT object (see BigNumber.set).
               *
               * The formatting object may contain some or all of the properties shown below.
               *
               * FORMAT = {
               *   prefix: '',
               *   groupSize: 3,
               *   secondaryGroupSize: 0,
               *   groupSeparator: ',',
               *   decimalSeparator: '.',
               *   fractionGroupSize: 0,
               *   fractionGroupSeparator: '\xA0',      // non-breaking space
               *   suffix: ''
               * };
               *
               * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               * [format] {object} Formatting options. See FORMAT pbject above.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
               * '[BigNumber Error] Argument not an object: {format}'
               */
              P.toFormat = function (dp, rm, format) {
                var str,
                  x = this;

                if (format == null) {
                  if (
                    dp != null &&
                    rm &&
                    (typeof rm === 'undefined' ? 'undefined' : _typeof(rm)) ==
                      'object'
                  ) {
                    format = rm;
                    rm = null;
                  } else if (
                    dp &&
                    (typeof dp === 'undefined' ? 'undefined' : _typeof(dp)) ==
                      'object'
                  ) {
                    format = dp;
                    dp = rm = null;
                  } else {
                    format = FORMAT;
                  }
                } else if (
                  (typeof format === 'undefined'
                    ? 'undefined'
                    : _typeof(format)) != 'object'
                ) {
                  throw Error(
                    bignumberError + 'Argument not an object: ' + format
                  );
                }

                str = x.toFixed(dp, rm);

                if (x.c) {
                  var i,
                    arr = str.split('.'),
                    g1 = +format.groupSize,
                    g2 = +format.secondaryGroupSize,
                    groupSeparator = format.groupSeparator || '',
                    intPart = arr[0],
                    fractionPart = arr[1],
                    isNeg = x.s < 0,
                    intDigits = isNeg ? intPart.slice(1) : intPart,
                    len = intDigits.length;

                  if (g2) (i = g1), (g1 = g2), (g2 = i), (len -= i);

                  if (g1 > 0 && len > 0) {
                    i = len % g1 || g1;
                    intPart = intDigits.substr(0, i);
                    for (; i < len; i += g1) {
                      intPart += groupSeparator + intDigits.substr(i, g1);
                    }
                    if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
                    if (isNeg) intPart = '-' + intPart;
                  }

                  str = fractionPart
                    ? intPart +
                      (format.decimalSeparator || '') +
                      ((g2 = +format.fractionGroupSize)
                        ? fractionPart.replace(
                            new RegExp('\\d{' + g2 + '}\\B', 'g'),
                            '$&' + (format.fractionGroupSeparator || '')
                          )
                        : fractionPart)
                    : intPart;
                }

                return (format.prefix || '') + str + (format.suffix || '');
              };

              /*
               * Return an array of two BigNumbers representing the value of this BigNumber as a simple
               * fraction with an integer numerator and an integer denominator.
               * The denominator will be a positive non-zero value less than or equal to the specified
               * maximum denominator. If a maximum denominator is not specified, the denominator will be
               * the lowest value necessary to represent the number exactly.
               *
               * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.
               *
               * '[BigNumber Error] Argument {not an integer|out of range} : {md}'
               */
              P.toFraction = function (md) {
                var d,
                  d0,
                  d1,
                  d2,
                  e,
                  exp,
                  n,
                  n0,
                  n1,
                  q,
                  r,
                  s,
                  x = this,
                  xc = x.c;

                if (md != null) {
                  n = new BigNumber(md);

                  // Throw if md is less than one or is not an integer, unless it is Infinity.
                  if ((!n.isInteger() && (n.c || n.s !== 1)) || n.lt(ONE)) {
                    throw Error(
                      bignumberError +
                        'Argument ' +
                        (n.isInteger()
                          ? 'out of range: '
                          : 'not an integer: ') +
                        valueOf(n)
                    );
                  }
                }

                if (!xc) return new BigNumber(x);

                d = new BigNumber(ONE);
                n1 = d0 = new BigNumber(ONE);
                d1 = n0 = new BigNumber(ONE);
                s = coeffToString(xc);

                // Determine initial denominator.
                // d is a power of 10 and the minimum max denominator that specifies the value exactly.
                e = d.e = s.length - x.e - 1;
                d.c[0] =
                  POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
                md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;

                exp = MAX_EXP;
                MAX_EXP = 1 / 0;
                n = new BigNumber(s);

                // n0 = d1 = 0
                n0.c[0] = 0;

                for (;;) {
                  q = div(n, d, 0, 1);
                  d2 = d0.plus(q.times(d1));
                  if (d2.comparedTo(md) == 1) break;
                  d0 = d1;
                  d1 = d2;
                  n1 = n0.plus(q.times((d2 = n1)));
                  n0 = d2;
                  d = n.minus(q.times((d2 = d)));
                  n = d2;
                }

                d2 = div(md.minus(d0), d1, 0, 1);
                n0 = n0.plus(d2.times(n1));
                d0 = d0.plus(d2.times(d1));
                n0.s = n1.s = x.s;
                e = e * 2;

                // Determine which fraction is closer to x, n0/d0 or n1/d1
                r =
                  div(n1, d1, e, ROUNDING_MODE)
                    .minus(x)
                    .abs()
                    .comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) <
                  1
                    ? [n1, d1]
                    : [n0, d0];

                MAX_EXP = exp;

                return r;
              };

              /*
               * Return the value of this BigNumber converted to a number primitive.
               */
              P.toNumber = function () {
                return +valueOf(this);
              };

              /*
               * Return a string representing the value of this BigNumber rounded to sd significant digits
               * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
               * necessary to represent the integer part of the value in fixed-point notation, then use
               * exponential notation.
               *
               * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
               * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
               *
               * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
               */
              P.toPrecision = function (sd, rm) {
                if (sd != null) intCheck(sd, 1, MAX);
                return format(this, sd, rm, 2);
              };

              /*
               * Return a string representing the value of this BigNumber in base b, or base 10 if b is
               * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
               * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
               * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
               * TO_EXP_NEG, return exponential notation.
               *
               * [b] {number} Integer, 2 to ALPHABET.length inclusive.
               *
               * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
               */
              P.toString = function (b) {
                var str,
                  n = this,
                  s = n.s,
                  e = n.e;

                // Infinity or NaN?
                if (e === null) {
                  if (s) {
                    str = 'Infinity';
                    if (s < 0) str = '-' + str;
                  } else {
                    str = 'NaN';
                  }
                } else {
                  if (b == null) {
                    str =
                      e <= TO_EXP_NEG || e >= TO_EXP_POS
                        ? toExponential(coeffToString(n.c), e)
                        : toFixedPoint(coeffToString(n.c), e, '0');
                  } else if (b === 10 && alphabetHasNormalDecimalDigits) {
                    n = round(
                      new BigNumber(n),
                      DECIMAL_PLACES + e + 1,
                      ROUNDING_MODE
                    );
                    str = toFixedPoint(coeffToString(n.c), n.e, '0');
                  } else {
                    intCheck(b, 2, ALPHABET.length, 'Base');
                    str = convertBase(
                      toFixedPoint(coeffToString(n.c), e, '0'),
                      10,
                      b,
                      s,
                      true
                    );
                  }

                  if (s < 0 && n.c[0]) str = '-' + str;
                }

                return str;
              };

              /*
               * Return as toString, but do not accept a base argument, and include the minus sign for
               * negative zero.
               */
              P.valueOf = P.toJSON = function () {
                return valueOf(this);
              };

              P._isBigNumber = true;

              if (configObject != null) BigNumber.set(configObject);

              return BigNumber;
            }

            // PRIVATE HELPER FUNCTIONS

            // These functions don't need access to variables,
            // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.

            function bitFloor(n) {
              var i = n | 0;
              return n > 0 || n === i ? i : i - 1;
            }

            // Return a coefficient array as a string of base 10 digits.
            function coeffToString(a) {
              var s,
                z,
                i = 1,
                j = a.length,
                r = a[0] + '';

              for (; i < j; ) {
                s = a[i++] + '';
                z = LOG_BASE - s.length;
                for (; z--; s = '0' + s) {}
                r += s;
              }

              // Determine trailing zeros.
              for (j = r.length; r.charCodeAt(--j) === 48; ) {}

              return r.slice(0, j + 1 || 1);
            }

            // Compare the value of BigNumbers x and y.
            function compare(x, y) {
              var a,
                b,
                xc = x.c,
                yc = y.c,
                i = x.s,
                j = y.s,
                k = x.e,
                l = y.e;

              // Either NaN?
              if (!i || !j) return null;

              a = xc && !xc[0];
              b = yc && !yc[0];

              // Either zero?
              if (a || b) return a ? (b ? 0 : -j) : i;

              // Signs differ?
              if (i != j) return i;

              a = i < 0;
              b = k == l;

              // Either Infinity?
              if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;

              // Compare exponents.
              if (!b) return (k > l) ^ a ? 1 : -1;

              j = (k = xc.length) < (l = yc.length) ? k : l;

              // Compare digit by digit.
              for (i = 0; i < j; i++) {
                if (xc[i] != yc[i]) return (xc[i] > yc[i]) ^ a ? 1 : -1;
              } // Compare lengths.
              return k == l ? 0 : (k > l) ^ a ? 1 : -1;
            }

            /*
             * Check that n is a primitive number, an integer, and in range, otherwise throw.
             */
            function intCheck(n, min, max, name) {
              if (n < min || n > max || n !== mathfloor(n)) {
                throw Error(
                  bignumberError +
                    (name || 'Argument') +
                    (typeof n == 'number'
                      ? n < min || n > max
                        ? ' out of range: '
                        : ' not an integer: '
                      : ' not a primitive number: ') +
                    String(n)
                );
              }
            }

            // Assumes finite n.
            function isOdd(n) {
              var k = n.c.length - 1;
              return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
            }

            function toExponential(str, e) {
              return (
                (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +
                (e < 0 ? 'e' : 'e+') +
                e
              );
            }

            function toFixedPoint(str, e, z) {
              var len, zs;

              // Negative exponent?
              if (e < 0) {
                // Prepend zeros.
                for (zs = z + '.'; ++e; zs += z) {}
                str = zs + str;

                // Positive exponent
              } else {
                len = str.length;

                // Append zeros.
                if (++e > len) {
                  for (zs = z, e -= len; --e; zs += z) {}
                  str += zs;
                } else if (e < len) {
                  str = str.slice(0, e) + '.' + str.slice(e);
                }
              }

              return str;
            }

            // EXPORT

            BigNumber = clone();
            BigNumber['default'] = BigNumber.BigNumber = BigNumber;

            // AMD.
            if (true) {
              !((__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                return BigNumber;
              }.call(exports, __webpack_require__, exports, module)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

              // Node.js and other environments that support module.exports.
            } else if (typeof module != 'undefined' && module.exports) {
              module.exports = BigNumber;

              // Browser.
            } else {
              if (!globalObject) {
                globalObject =
                  typeof self != 'undefined' && self ? self : window;
              }

              globalObject.BigNumber = BigNumber;
            }
          })(undefined);

          /***/
        },
        /* 29 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          var JSONbig = __webpack_require__(13);

          var config = __webpack_require__(6);

          var Response = (function () {
            function Response(body) {
              _classCallCheck(this, Response);

              var _json = JSONbig.parse(body);
              for (var key in _json) {
                this[key] = _json[key];
              }
            }

            _createClass(Response, [
              {
                key: 'stringify',
                value: function stringify(replacer, space) {
                  return JSONbig.stringify(this, replacer, space);
                },
              },
              {
                key: 'getConversationStates',
                value: function getConversationStates() {
                  if (!this['AllResults']) return [];

                  return this.AllResults.map(function (result) {
                    var obj = {};

                    obj.CommandKind = result.CommandKind;

                    if (result.ConversationState) {
                      obj.Default = result.ConversationState;
                    }

                    for (var key in result) {
                      if (result[key].ConversationState) {
                        obj[key] = result[key].ConversationState;
                      }
                    }

                    return obj;
                  });
                },
              },
            ]);

            return Response;
          })();

          module.exports = Response;

          /***/
        },
        /* 30 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var Buffer = __webpack_require__(1).Buffer;
          var Transform = __webpack_require__(31).Transform;
          var StringDecoder = __webpack_require__(19).StringDecoder;
          var inherits = __webpack_require__(0);

          function CipherBase(hashMode) {
            Transform.call(this);
            this.hashMode = typeof hashMode === 'string';
            if (this.hashMode) {
              this[hashMode] = this._finalOrDigest;
            } else {
              this.final = this._finalOrDigest;
            }
            if (this._final) {
              this.__final = this._final;
              this._final = null;
            }
            this._decoder = null;
            this._encoding = null;
          }
          inherits(CipherBase, Transform);

          CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
            if (typeof data === 'string') {
              data = Buffer.from(data, inputEnc);
            }

            var outData = this._update(data);
            if (this.hashMode) return this;

            if (outputEnc) {
              outData = this._toString(outData, outputEnc);
            }

            return outData;
          };

          CipherBase.prototype.setAutoPadding = function () {};
          CipherBase.prototype.getAuthTag = function () {
            throw new Error('trying to get auth tag in unsupported state');
          };

          CipherBase.prototype.setAuthTag = function () {
            throw new Error('trying to set auth tag in unsupported state');
          };

          CipherBase.prototype.setAAD = function () {
            throw new Error('trying to set aad in unsupported state');
          };

          CipherBase.prototype._transform = function (data, _, next) {
            var err;
            try {
              if (this.hashMode) {
                this._update(data);
              } else {
                this.push(this._update(data));
              }
            } catch (e) {
              err = e;
            } finally {
              next(err);
            }
          };
          CipherBase.prototype._flush = function (done) {
            var err;
            try {
              this.push(this.__final());
            } catch (e) {
              err = e;
            }

            done(err);
          };
          CipherBase.prototype._finalOrDigest = function (outputEnc) {
            var outData = this.__final() || Buffer.alloc(0);
            if (outputEnc) {
              outData = this._toString(outData, outputEnc, true);
            }
            return outData;
          };

          CipherBase.prototype._toString = function (value, enc, fin) {
            if (!this._decoder) {
              this._decoder = new StringDecoder(enc);
              this._encoding = enc;
            }

            if (this._encoding !== enc)
              throw new Error("can't switch encodings");

            var out = this._decoder.write(value);
            if (fin) {
              out += this._decoder.end();
            }

            return out;
          };

          module.exports = CipherBase;

          /***/
        },
        /* 31 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          module.exports = Stream;

          var EE = __webpack_require__(14).EventEmitter;
          var inherits = __webpack_require__(0);

          inherits(Stream, EE);
          Stream.Readable = __webpack_require__(10);
          Stream.Writable = __webpack_require__(67);
          Stream.Duplex = __webpack_require__(68);
          Stream.Transform = __webpack_require__(69);
          Stream.PassThrough = __webpack_require__(70);

          // Backwards-compat with node 0.4.x
          Stream.Stream = Stream;

          // old-style streams.  Note that the pipe method (the only relevant
          // part of this class) is overridden in the Readable class.

          function Stream() {
            EE.call(this);
          }

          Stream.prototype.pipe = function (dest, options) {
            var source = this;

            function ondata(chunk) {
              if (dest.writable) {
                if (false === dest.write(chunk) && source.pause) {
                  source.pause();
                }
              }
            }

            source.on('data', ondata);

            function ondrain() {
              if (source.readable && source.resume) {
                source.resume();
              }
            }

            dest.on('drain', ondrain);

            // If the 'end' option is not supplied, dest.end() will be called when
            // source gets the 'end' or 'close' events.  Only dest.end() once.
            if (!dest._isStdio && (!options || options.end !== false)) {
              source.on('end', onend);
              source.on('close', onclose);
            }

            var didOnEnd = false;
            function onend() {
              if (didOnEnd) return;
              didOnEnd = true;

              dest.end();
            }

            function onclose() {
              if (didOnEnd) return;
              didOnEnd = true;

              if (typeof dest.destroy === 'function') dest.destroy();
            }

            // don't leave dangling pipes when there are errors.
            function onerror(er) {
              cleanup();
              if (EE.listenerCount(this, 'error') === 0) {
                throw er; // Unhandled stream error in pipe.
              }
            }

            source.on('error', onerror);
            dest.on('error', onerror);

            // remove all the event listeners that were added.
            function cleanup() {
              source.removeListener('data', ondata);
              dest.removeListener('drain', ondrain);

              source.removeListener('end', onend);
              source.removeListener('close', onclose);

              source.removeListener('error', onerror);
              dest.removeListener('error', onerror);

              source.removeListener('end', cleanup);
              source.removeListener('close', cleanup);

              dest.removeListener('close', cleanup);
            }

            source.on('end', cleanup);
            source.on('close', cleanup);

            dest.on('close', cleanup);

            dest.emit('pipe', source);

            // Allow for unix-like usage: A.pipe(B).pipe(C)
            return dest;
          };

          /***/
        },
        /* 32 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global, process) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            /*<replacement>*/

            var pna = __webpack_require__(15);
            /*</replacement>*/

            module.exports = Readable;

            /*<replacement>*/
            var isArray = __webpack_require__(24);
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Readable.ReadableState = ReadableState;

            /*<replacement>*/
            var EE = __webpack_require__(14).EventEmitter;

            var EElistenerCount = function EElistenerCount(emitter, type) {
              return emitter.listeners(type).length;
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = __webpack_require__(33);
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = __webpack_require__(1).Buffer;
            var OurUint8Array = global.Uint8Array || function () {};
            function _uint8ArrayToBuffer(chunk) {
              return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
              return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            /*<replacement>*/
            var util = __webpack_require__(11);
            util.inherits = __webpack_require__(0);
            /*</replacement>*/

            /*<replacement>*/
            var debugUtil = __webpack_require__(60);
            var debug = void 0;
            if (debugUtil && debugUtil.debuglog) {
              debug = debugUtil.debuglog('stream');
            } else {
              debug = function debug() {};
            }
            /*</replacement>*/

            var BufferList = __webpack_require__(61);
            var destroyImpl = __webpack_require__(34);
            var StringDecoder;

            util.inherits(Readable, Stream);

            var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

            function prependListener(emitter, event, fn) {
              // Sadly this is not cacheable as some libraries bundle their own
              // event emitter implementation with them.
              if (typeof emitter.prependListener === 'function')
                return emitter.prependListener(event, fn);

              // This is a hack to make sure that our error handler is attached before any
              // userland ones.  NEVER DO THIS. This is here only because this code needs
              // to continue to work with older versions of Node.js that do not include
              // the prependListener() method. The goal is to eventually remove this hack.
              if (!emitter._events || !emitter._events[event])
                emitter.on(event, fn);
              else if (isArray(emitter._events[event]))
                emitter._events[event].unshift(fn);
              else emitter._events[event] = [fn, emitter._events[event]];
            }

            function ReadableState(options, stream) {
              Duplex = Duplex || __webpack_require__(8);

              options = options || {};

              // Duplex streams are both readable and writable, but share
              // the same options object.
              // However, some cases require setting options to different
              // values for the readable and the writable sides of the duplex stream.
              // These options can be provided separately as readableXXX and writableXXX.
              var isDuplex = stream instanceof Duplex;

              // object stream flag. Used to make read(n) ignore n and to
              // make all the buffer merging and length checks go away
              this.objectMode = !!options.objectMode;

              if (isDuplex)
                this.objectMode =
                  this.objectMode || !!options.readableObjectMode;

              // the point at which it stops calling _read() to fill the buffer
              // Note: 0 is a valid value, means "don't call _read preemptively ever"
              var hwm = options.highWaterMark;
              var readableHwm = options.readableHighWaterMark;
              var defaultHwm = this.objectMode ? 16 : 16 * 1024;

              if (hwm || hwm === 0) this.highWaterMark = hwm;
              else if (isDuplex && (readableHwm || readableHwm === 0))
                this.highWaterMark = readableHwm;
              else this.highWaterMark = defaultHwm;

              // cast to ints.
              this.highWaterMark = Math.floor(this.highWaterMark);

              // A linked list is used to store data chunks instead of an array because the
              // linked list can remove elements from the beginning faster than
              // array.shift()
              this.buffer = new BufferList();
              this.length = 0;
              this.pipes = null;
              this.pipesCount = 0;
              this.flowing = null;
              this.ended = false;
              this.endEmitted = false;
              this.reading = false;

              // a flag to be able to tell if the event 'readable'/'data' is emitted
              // immediately, or on a later tick.  We set this to true at first, because
              // any actions that shouldn't happen until "later" should generally also
              // not happen before the first read call.
              this.sync = true;

              // whenever we return null, then we set a flag to say
              // that we're awaiting a 'readable' event emission.
              this.needReadable = false;
              this.emittedReadable = false;
              this.readableListening = false;
              this.resumeScheduled = false;

              // has it been destroyed
              this.destroyed = false;

              // Crypto is kind of old and crusty.  Historically, its default string
              // encoding is 'binary' so we have to make this configurable.
              // Everything else in the universe uses 'utf8', though.
              this.defaultEncoding = options.defaultEncoding || 'utf8';

              // the number of writers that are awaiting a drain event in .pipe()s
              this.awaitDrain = 0;

              // if true, a maybeReadMore has been scheduled
              this.readingMore = false;

              this.decoder = null;
              this.encoding = null;
              if (options.encoding) {
                if (!StringDecoder)
                  StringDecoder = __webpack_require__(19).StringDecoder;
                this.decoder = new StringDecoder(options.encoding);
                this.encoding = options.encoding;
              }
            }

            function Readable(options) {
              Duplex = Duplex || __webpack_require__(8);

              if (!(this instanceof Readable)) return new Readable(options);

              this._readableState = new ReadableState(options, this);

              // legacy
              this.readable = true;

              if (options) {
                if (typeof options.read === 'function')
                  this._read = options.read;

                if (typeof options.destroy === 'function')
                  this._destroy = options.destroy;
              }

              Stream.call(this);
            }

            Object.defineProperty(Readable.prototype, 'destroyed', {
              get: function get() {
                if (this._readableState === undefined) {
                  return false;
                }
                return this._readableState.destroyed;
              },
              set: function set(value) {
                // we ignore the value if the stream
                // has not been initialized yet
                if (!this._readableState) {
                  return;
                }

                // backward compatibility, the user is explicitly
                // managing destroyed
                this._readableState.destroyed = value;
              },
            });

            Readable.prototype.destroy = destroyImpl.destroy;
            Readable.prototype._undestroy = destroyImpl.undestroy;
            Readable.prototype._destroy = function (err, cb) {
              this.push(null);
              cb(err);
            };

            // Manually shove something into the read() buffer.
            // This returns true if the highWaterMark has not been hit yet,
            // similar to how Writable.write() returns true if you should
            // write() some more.
            Readable.prototype.push = function (chunk, encoding) {
              var state = this._readableState;
              var skipChunkCheck;

              if (!state.objectMode) {
                if (typeof chunk === 'string') {
                  encoding = encoding || state.defaultEncoding;
                  if (encoding !== state.encoding) {
                    chunk = Buffer.from(chunk, encoding);
                    encoding = '';
                  }
                  skipChunkCheck = true;
                }
              } else {
                skipChunkCheck = true;
              }

              return readableAddChunk(
                this,
                chunk,
                encoding,
                false,
                skipChunkCheck
              );
            };

            // Unshift should *always* be something directly out of read()
            Readable.prototype.unshift = function (chunk) {
              return readableAddChunk(this, chunk, null, true, false);
            };

            function readableAddChunk(
              stream,
              chunk,
              encoding,
              addToFront,
              skipChunkCheck
            ) {
              var state = stream._readableState;
              if (chunk === null) {
                state.reading = false;
                onEofChunk(stream, state);
              } else {
                var er;
                if (!skipChunkCheck) er = chunkInvalid(state, chunk);
                if (er) {
                  stream.emit('error', er);
                } else if (state.objectMode || (chunk && chunk.length > 0)) {
                  if (
                    typeof chunk !== 'string' &&
                    !state.objectMode &&
                    Object.getPrototypeOf(chunk) !== Buffer.prototype
                  ) {
                    chunk = _uint8ArrayToBuffer(chunk);
                  }

                  if (addToFront) {
                    if (state.endEmitted)
                      stream.emit(
                        'error',
                        new Error('stream.unshift() after end event')
                      );
                    else addChunk(stream, state, chunk, true);
                  } else if (state.ended) {
                    stream.emit('error', new Error('stream.push() after EOF'));
                  } else {
                    state.reading = false;
                    if (state.decoder && !encoding) {
                      chunk = state.decoder.write(chunk);
                      if (state.objectMode || chunk.length !== 0)
                        addChunk(stream, state, chunk, false);
                      else maybeReadMore(stream, state);
                    } else {
                      addChunk(stream, state, chunk, false);
                    }
                  }
                } else if (!addToFront) {
                  state.reading = false;
                }
              }

              return needMoreData(state);
            }

            function addChunk(stream, state, chunk, addToFront) {
              if (state.flowing && state.length === 0 && !state.sync) {
                stream.emit('data', chunk);
                stream.read(0);
              } else {
                // update the buffer info.
                state.length += state.objectMode ? 1 : chunk.length;
                if (addToFront) state.buffer.unshift(chunk);
                else state.buffer.push(chunk);

                if (state.needReadable) emitReadable(stream);
              }
              maybeReadMore(stream, state);
            }

            function chunkInvalid(state, chunk) {
              var er;
              if (
                !_isUint8Array(chunk) &&
                typeof chunk !== 'string' &&
                chunk !== undefined &&
                !state.objectMode
              ) {
                er = new TypeError('Invalid non-string/buffer chunk');
              }
              return er;
            }

            // if it's past the high water mark, we can push in some more.
            // Also, if we have no data yet, we can stand some
            // more bytes.  This is to work around cases where hwm=0,
            // such as the repl.  Also, if the push() triggered a
            // readable event, and the user called read(largeNumber) such that
            // needReadable was set, then we ought to push more, so that another
            // 'readable' event will be triggered.
            function needMoreData(state) {
              return (
                !state.ended &&
                (state.needReadable ||
                  state.length < state.highWaterMark ||
                  state.length === 0)
              );
            }

            Readable.prototype.isPaused = function () {
              return this._readableState.flowing === false;
            };

            // backwards compatibility.
            Readable.prototype.setEncoding = function (enc) {
              if (!StringDecoder)
                StringDecoder = __webpack_require__(19).StringDecoder;
              this._readableState.decoder = new StringDecoder(enc);
              this._readableState.encoding = enc;
              return this;
            };

            // Don't raise the hwm > 8MB
            var MAX_HWM = 0x800000;
            function computeNewHighWaterMark(n) {
              if (n >= MAX_HWM) {
                n = MAX_HWM;
              } else {
                // Get the next highest power of 2 to prevent increasing hwm excessively in
                // tiny amounts
                n--;
                n |= n >>> 1;
                n |= n >>> 2;
                n |= n >>> 4;
                n |= n >>> 8;
                n |= n >>> 16;
                n++;
              }
              return n;
            }

            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function howMuchToRead(n, state) {
              if (n <= 0 || (state.length === 0 && state.ended)) return 0;
              if (state.objectMode) return 1;
              if (n !== n) {
                // Only flow one buffer at a time
                if (state.flowing && state.length)
                  return state.buffer.head.data.length;
                else return state.length;
              }
              // If we're asking for more than the current hwm, then raise the hwm.
              if (n > state.highWaterMark)
                state.highWaterMark = computeNewHighWaterMark(n);
              if (n <= state.length) return n;
              // Don't have enough
              if (!state.ended) {
                state.needReadable = true;
                return 0;
              }
              return state.length;
            }

            // you can override either this method, or the async _read(n) below.
            Readable.prototype.read = function (n) {
              debug('read', n);
              n = parseInt(n, 10);
              var state = this._readableState;
              var nOrig = n;

              if (n !== 0) state.emittedReadable = false;

              // if we're doing read(0) to trigger a readable event, but we
              // already have a bunch of data in the buffer, then just trigger
              // the 'readable' event and move on.
              if (
                n === 0 &&
                state.needReadable &&
                (state.length >= state.highWaterMark || state.ended)
              ) {
                debug('read: emitReadable', state.length, state.ended);
                if (state.length === 0 && state.ended) endReadable(this);
                else emitReadable(this);
                return null;
              }

              n = howMuchToRead(n, state);

              // if we've ended, and we're now clear, then finish it up.
              if (n === 0 && state.ended) {
                if (state.length === 0) endReadable(this);
                return null;
              }

              // All the actual chunk generation logic needs to be
              // *below* the call to _read.  The reason is that in certain
              // synthetic stream cases, such as passthrough streams, _read
              // may be a completely synchronous operation which may change
              // the state of the read buffer, providing enough data when
              // before there was *not* enough.
              //
              // So, the steps are:
              // 1. Figure out what the state of things will be after we do
              // a read from the buffer.
              //
              // 2. If that resulting state will trigger a _read, then call _read.
              // Note that this may be asynchronous, or synchronous.  Yes, it is
              // deeply ugly to write APIs this way, but that still doesn't mean
              // that the Readable class should behave improperly, as streams are
              // designed to be sync/async agnostic.
              // Take note if the _read call is sync or async (ie, if the read call
              // has returned yet), so that we know whether or not it's safe to emit
              // 'readable' etc.
              //
              // 3. Actually pull the requested chunks out of the buffer and return.

              // if we need a readable event, then we need to do some reading.
              var doRead = state.needReadable;
              debug('need readable', doRead);

              // if we currently have less than the highWaterMark, then also read some
              if (
                state.length === 0 ||
                state.length - n < state.highWaterMark
              ) {
                doRead = true;
                debug('length less than watermark', doRead);
              }

              // however, if we've ended, then there's no point, and if we're already
              // reading, then it's unnecessary.
              if (state.ended || state.reading) {
                doRead = false;
                debug('reading or ended', doRead);
              } else if (doRead) {
                debug('do read');
                state.reading = true;
                state.sync = true;
                // if the length is currently zero, then we *need* a readable event.
                if (state.length === 0) state.needReadable = true;
                // call internal read method
                this._read(state.highWaterMark);
                state.sync = false;
                // If _read pushed data synchronously, then `reading` will be false,
                // and we need to re-evaluate how much data we can return to the user.
                if (!state.reading) n = howMuchToRead(nOrig, state);
              }

              var ret;
              if (n > 0) ret = fromList(n, state);
              else ret = null;

              if (ret === null) {
                state.needReadable = true;
                n = 0;
              } else {
                state.length -= n;
              }

              if (state.length === 0) {
                // If we have nothing in the buffer, then we want to know
                // as soon as we *do* get something into the buffer.
                if (!state.ended) state.needReadable = true;

                // If we tried to read() past the EOF, then emit end on the next tick.
                if (nOrig !== n && state.ended) endReadable(this);
              }

              if (ret !== null) this.emit('data', ret);

              return ret;
            };

            function onEofChunk(stream, state) {
              if (state.ended) return;
              if (state.decoder) {
                var chunk = state.decoder.end();
                if (chunk && chunk.length) {
                  state.buffer.push(chunk);
                  state.length += state.objectMode ? 1 : chunk.length;
                }
              }
              state.ended = true;

              // emit 'readable' now to make sure it gets picked up.
              emitReadable(stream);
            }

            // Don't emit readable right away in sync mode, because this can trigger
            // another read() call => stack overflow.  This way, it might trigger
            // a nextTick recursion warning, but that's not so bad.
            function emitReadable(stream) {
              var state = stream._readableState;
              state.needReadable = false;
              if (!state.emittedReadable) {
                debug('emitReadable', state.flowing);
                state.emittedReadable = true;
                if (state.sync) pna.nextTick(emitReadable_, stream);
                else emitReadable_(stream);
              }
            }

            function emitReadable_(stream) {
              debug('emit readable');
              stream.emit('readable');
              flow(stream);
            }

            // at this point, the user has presumably seen the 'readable' event,
            // and called read() to consume some data.  that may have triggered
            // in turn another _read(n) call, in which case reading = true if
            // it's in progress.
            // However, if we're not ended, or reading, and the length < hwm,
            // then go ahead and try to read some more preemptively.
            function maybeReadMore(stream, state) {
              if (!state.readingMore) {
                state.readingMore = true;
                pna.nextTick(maybeReadMore_, stream, state);
              }
            }

            function maybeReadMore_(stream, state) {
              var len = state.length;
              while (
                !state.reading &&
                !state.flowing &&
                !state.ended &&
                state.length < state.highWaterMark
              ) {
                debug('maybeReadMore read 0');
                stream.read(0);
                if (len === state.length)
                  // didn't get any data, stop spinning.
                  break;
                else len = state.length;
              }
              state.readingMore = false;
            }

            // abstract method.  to be overridden in specific implementation classes.
            // call cb(er, data) where data is <= n in length.
            // for virtual (non-string, non-buffer) streams, "length" is somewhat
            // arbitrary, and perhaps not very meaningful.
            Readable.prototype._read = function (n) {
              this.emit('error', new Error('_read() is not implemented'));
            };

            Readable.prototype.pipe = function (dest, pipeOpts) {
              var src = this;
              var state = this._readableState;

              switch (state.pipesCount) {
                case 0:
                  state.pipes = dest;
                  break;
                case 1:
                  state.pipes = [state.pipes, dest];
                  break;
                default:
                  state.pipes.push(dest);
                  break;
              }
              state.pipesCount += 1;
              debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

              var doEnd =
                (!pipeOpts || pipeOpts.end !== false) &&
                dest !== process.stdout &&
                dest !== process.stderr;

              var endFn = doEnd ? onend : unpipe;
              if (state.endEmitted) pna.nextTick(endFn);
              else src.once('end', endFn);

              dest.on('unpipe', onunpipe);
              function onunpipe(readable, unpipeInfo) {
                debug('onunpipe');
                if (readable === src) {
                  if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                    unpipeInfo.hasUnpiped = true;
                    cleanup();
                  }
                }
              }

              function onend() {
                debug('onend');
                dest.end();
              }

              // when the dest drains, it reduces the awaitDrain counter
              // on the source.  This would be more elegant with a .once()
              // handler in flow(), but adding and removing repeatedly is
              // too slow.
              var ondrain = pipeOnDrain(src);
              dest.on('drain', ondrain);

              var cleanedUp = false;
              function cleanup() {
                debug('cleanup');
                // cleanup event handlers once the pipe is broken
                dest.removeListener('close', onclose);
                dest.removeListener('finish', onfinish);
                dest.removeListener('drain', ondrain);
                dest.removeListener('error', onerror);
                dest.removeListener('unpipe', onunpipe);
                src.removeListener('end', onend);
                src.removeListener('end', unpipe);
                src.removeListener('data', ondata);

                cleanedUp = true;

                // if the reader is waiting for a drain event from this
                // specific writer, then it would cause it to never start
                // flowing again.
                // So, if this is awaiting a drain, then we just call it now.
                // If we don't know, then assume that we are waiting for one.
                if (
                  state.awaitDrain &&
                  (!dest._writableState || dest._writableState.needDrain)
                )
                  ondrain();
              }

              // If the user pushes more data while we're writing to dest then we'll end up
              // in ondata again. However, we only want to increase awaitDrain once because
              // dest will only emit one 'drain' event for the multiple writes.
              // => Introduce a guard on increasing awaitDrain.
              var increasedAwaitDrain = false;
              src.on('data', ondata);
              function ondata(chunk) {
                debug('ondata');
                increasedAwaitDrain = false;
                var ret = dest.write(chunk);
                if (false === ret && !increasedAwaitDrain) {
                  // If the user unpiped during `dest.write()`, it is possible
                  // to get stuck in a permanently paused state if that write
                  // also returned false.
                  // => Check whether `dest` is still a piping destination.
                  if (
                    ((state.pipesCount === 1 && state.pipes === dest) ||
                      (state.pipesCount > 1 &&
                        indexOf(state.pipes, dest) !== -1)) &&
                    !cleanedUp
                  ) {
                    debug(
                      'false write response, pause',
                      src._readableState.awaitDrain
                    );
                    src._readableState.awaitDrain++;
                    increasedAwaitDrain = true;
                  }
                  src.pause();
                }
              }

              // if the dest has an error, then stop piping into it.
              // however, don't suppress the throwing behavior for this.
              function onerror(er) {
                debug('onerror', er);
                unpipe();
                dest.removeListener('error', onerror);
                if (EElistenerCount(dest, 'error') === 0)
                  dest.emit('error', er);
              }

              // Make sure our error handler is attached before userland ones.
              prependListener(dest, 'error', onerror);

              // Both close and finish should trigger unpipe, but only once.
              function onclose() {
                dest.removeListener('finish', onfinish);
                unpipe();
              }
              dest.once('close', onclose);
              function onfinish() {
                debug('onfinish');
                dest.removeListener('close', onclose);
                unpipe();
              }
              dest.once('finish', onfinish);

              function unpipe() {
                debug('unpipe');
                src.unpipe(dest);
              }

              // tell the dest that it's being piped to
              dest.emit('pipe', src);

              // start the flow if it hasn't been started already.
              if (!state.flowing) {
                debug('pipe resume');
                src.resume();
              }

              return dest;
            };

            function pipeOnDrain(src) {
              return function () {
                var state = src._readableState;
                debug('pipeOnDrain', state.awaitDrain);
                if (state.awaitDrain) state.awaitDrain--;
                if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                  state.flowing = true;
                  flow(src);
                }
              };
            }

            Readable.prototype.unpipe = function (dest) {
              var state = this._readableState;
              var unpipeInfo = { hasUnpiped: false };

              // if we're not piping anywhere, then do nothing.
              if (state.pipesCount === 0) return this;

              // just one destination.  most common case.
              if (state.pipesCount === 1) {
                // passed in one, but it's not the right one.
                if (dest && dest !== state.pipes) return this;

                if (!dest) dest = state.pipes;

                // got a match.
                state.pipes = null;
                state.pipesCount = 0;
                state.flowing = false;
                if (dest) dest.emit('unpipe', this, unpipeInfo);
                return this;
              }

              // slow case. multiple pipe destinations.

              if (!dest) {
                // remove all.
                var dests = state.pipes;
                var len = state.pipesCount;
                state.pipes = null;
                state.pipesCount = 0;
                state.flowing = false;

                for (var i = 0; i < len; i++) {
                  dests[i].emit('unpipe', this, unpipeInfo);
                }
                return this;
              }

              // try to find the right one.
              var index = indexOf(state.pipes, dest);
              if (index === -1) return this;

              state.pipes.splice(index, 1);
              state.pipesCount -= 1;
              if (state.pipesCount === 1) state.pipes = state.pipes[0];

              dest.emit('unpipe', this, unpipeInfo);

              return this;
            };

            // set up data events if they are asked for
            // Ensure readable listeners eventually get something
            Readable.prototype.on = function (ev, fn) {
              var res = Stream.prototype.on.call(this, ev, fn);

              if (ev === 'data') {
                // Start flowing on next tick if stream isn't explicitly paused
                if (this._readableState.flowing !== false) this.resume();
              } else if (ev === 'readable') {
                var state = this._readableState;
                if (!state.endEmitted && !state.readableListening) {
                  state.readableListening = state.needReadable = true;
                  state.emittedReadable = false;
                  if (!state.reading) {
                    pna.nextTick(nReadingNextTick, this);
                  } else if (state.length) {
                    emitReadable(this);
                  }
                }
              }

              return res;
            };
            Readable.prototype.addListener = Readable.prototype.on;

            function nReadingNextTick(self) {
              debug('readable nexttick read 0');
              self.read(0);
            }

            // pause() and resume() are remnants of the legacy readable stream API
            // If the user uses them, then switch into old mode.
            Readable.prototype.resume = function () {
              var state = this._readableState;
              if (!state.flowing) {
                debug('resume');
                state.flowing = true;
                resume(this, state);
              }
              return this;
            };

            function resume(stream, state) {
              if (!state.resumeScheduled) {
                state.resumeScheduled = true;
                pna.nextTick(resume_, stream, state);
              }
            }

            function resume_(stream, state) {
              if (!state.reading) {
                debug('resume read 0');
                stream.read(0);
              }

              state.resumeScheduled = false;
              state.awaitDrain = 0;
              stream.emit('resume');
              flow(stream);
              if (state.flowing && !state.reading) stream.read(0);
            }

            Readable.prototype.pause = function () {
              debug('call pause flowing=%j', this._readableState.flowing);
              if (false !== this._readableState.flowing) {
                debug('pause');
                this._readableState.flowing = false;
                this.emit('pause');
              }
              return this;
            };

            function flow(stream) {
              var state = stream._readableState;
              debug('flow', state.flowing);
              while (state.flowing && stream.read() !== null) {}
            }

            // wrap an old-style stream as the async data source.
            // This is *not* part of the readable stream interface.
            // It is an ugly unfortunate mess of history.
            Readable.prototype.wrap = function (stream) {
              var _this = this;

              var state = this._readableState;
              var paused = false;

              stream.on('end', function () {
                debug('wrapped end');
                if (state.decoder && !state.ended) {
                  var chunk = state.decoder.end();
                  if (chunk && chunk.length) _this.push(chunk);
                }

                _this.push(null);
              });

              stream.on('data', function (chunk) {
                debug('wrapped data');
                if (state.decoder) chunk = state.decoder.write(chunk);

                // don't skip over falsy values in objectMode
                if (state.objectMode && (chunk === null || chunk === undefined))
                  return;
                else if (!state.objectMode && (!chunk || !chunk.length)) return;

                var ret = _this.push(chunk);
                if (!ret) {
                  paused = true;
                  stream.pause();
                }
              });

              // proxy all the other methods.
              // important when wrapping filters and duplexes.
              for (var i in stream) {
                if (this[i] === undefined && typeof stream[i] === 'function') {
                  this[i] = (function (method) {
                    return function () {
                      return stream[method].apply(stream, arguments);
                    };
                  })(i);
                }
              }

              // proxy certain important events.
              for (var n = 0; n < kProxyEvents.length; n++) {
                stream.on(
                  kProxyEvents[n],
                  this.emit.bind(this, kProxyEvents[n])
                );
              }

              // when we try to consume some more bytes, simply unpause the
              // underlying stream.
              this._read = function (n) {
                debug('wrapped _read', n);
                if (paused) {
                  paused = false;
                  stream.resume();
                }
              };

              return this;
            };

            Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
              // making it explicit this property is not enumerable
              // because otherwise some prototype manipulation in
              // userland will fail
              enumerable: false,
              get: function get() {
                return this._readableState.highWaterMark;
              },
            });

            // exposed for testing purposes only.
            Readable._fromList = fromList;

            // Pluck off n bytes from an array of buffers.
            // Length is the combined lengths of all the buffers in the list.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function fromList(n, state) {
              // nothing buffered
              if (state.length === 0) return null;

              var ret;
              if (state.objectMode) ret = state.buffer.shift();
              else if (!n || n >= state.length) {
                // read it all, truncate the list
                if (state.decoder) ret = state.buffer.join('');
                else if (state.buffer.length === 1)
                  ret = state.buffer.head.data;
                else ret = state.buffer.concat(state.length);
                state.buffer.clear();
              } else {
                // read part of list
                ret = fromListPartial(n, state.buffer, state.decoder);
              }

              return ret;
            }

            // Extracts only enough buffered data to satisfy the amount requested.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function fromListPartial(n, list, hasStrings) {
              var ret;
              if (n < list.head.data.length) {
                // slice is the same for buffers and strings
                ret = list.head.data.slice(0, n);
                list.head.data = list.head.data.slice(n);
              } else if (n === list.head.data.length) {
                // first chunk is a perfect match
                ret = list.shift();
              } else {
                // result spans more than one buffer
                ret = hasStrings
                  ? copyFromBufferString(n, list)
                  : copyFromBuffer(n, list);
              }
              return ret;
            }

            // Copies a specified amount of characters from the list of buffered data
            // chunks.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function copyFromBufferString(n, list) {
              var p = list.head;
              var c = 1;
              var ret = p.data;
              n -= ret.length;
              while ((p = p.next)) {
                var str = p.data;
                var nb = n > str.length ? str.length : n;
                if (nb === str.length) ret += str;
                else ret += str.slice(0, n);
                n -= nb;
                if (n === 0) {
                  if (nb === str.length) {
                    ++c;
                    if (p.next) list.head = p.next;
                    else list.head = list.tail = null;
                  } else {
                    list.head = p;
                    p.data = str.slice(nb);
                  }
                  break;
                }
                ++c;
              }
              list.length -= c;
              return ret;
            }

            // Copies a specified amount of bytes from the list of buffered data chunks.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function copyFromBuffer(n, list) {
              var ret = Buffer.allocUnsafe(n);
              var p = list.head;
              var c = 1;
              p.data.copy(ret);
              n -= p.data.length;
              while ((p = p.next)) {
                var buf = p.data;
                var nb = n > buf.length ? buf.length : n;
                buf.copy(ret, ret.length - n, 0, nb);
                n -= nb;
                if (n === 0) {
                  if (nb === buf.length) {
                    ++c;
                    if (p.next) list.head = p.next;
                    else list.head = list.tail = null;
                  } else {
                    list.head = p;
                    p.data = buf.slice(nb);
                  }
                  break;
                }
                ++c;
              }
              list.length -= c;
              return ret;
            }

            function endReadable(stream) {
              var state = stream._readableState;

              // If we get here before consuming all the bytes, then that is a
              // bug in node.  Should never happen.
              if (state.length > 0)
                throw new Error('"endReadable()" called on non-empty stream');

              if (!state.endEmitted) {
                state.ended = true;
                pna.nextTick(endReadableNT, state, stream);
              }
            }

            function endReadableNT(state, stream) {
              // Check that we didn't get one last unshift.
              if (!state.endEmitted && state.length === 0) {
                state.endEmitted = true;
                stream.readable = false;
                stream.emit('end');
              }
            }

            function indexOf(xs, x) {
              for (var i = 0, l = xs.length; i < l; i++) {
                if (xs[i] === x) return i;
              }
              return -1;
            }
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2), __webpack_require__(3));

          /***/
        },
        /* 33 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = __webpack_require__(14).EventEmitter;

          /***/
        },
        /* 34 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /*<replacement>*/

          var pna = __webpack_require__(15);
          /*</replacement>*/

          // undocumented cb() API, needed for core, not for public API
          function destroy(err, cb) {
            var _this = this;

            var readableDestroyed =
              this._readableState && this._readableState.destroyed;
            var writableDestroyed =
              this._writableState && this._writableState.destroyed;

            if (readableDestroyed || writableDestroyed) {
              if (cb) {
                cb(err);
              } else if (
                err &&
                (!this._writableState || !this._writableState.errorEmitted)
              ) {
                pna.nextTick(emitErrorNT, this, err);
              }
              return this;
            }

            // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
              this._readableState.destroyed = true;
            }

            // if this is a duplex stream mark the writable part as destroyed as well
            if (this._writableState) {
              this._writableState.destroyed = true;
            }

            this._destroy(err || null, function (err) {
              if (!cb && err) {
                pna.nextTick(emitErrorNT, _this, err);
                if (_this._writableState) {
                  _this._writableState.errorEmitted = true;
                }
              } else if (cb) {
                cb(err);
              }
            });

            return this;
          }

          function undestroy() {
            if (this._readableState) {
              this._readableState.destroyed = false;
              this._readableState.reading = false;
              this._readableState.ended = false;
              this._readableState.endEmitted = false;
            }

            if (this._writableState) {
              this._writableState.destroyed = false;
              this._writableState.ended = false;
              this._writableState.ending = false;
              this._writableState.finished = false;
              this._writableState.errorEmitted = false;
            }
          }

          function emitErrorNT(self, err) {
            self.emit('error', err);
          }

          module.exports = {
            destroy: destroy,
            undestroy: undestroy,
          };

          /***/
        },
        /* 35 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // a transform stream is a readable/writable stream where you do
          // something with the data.  Sometimes it's called a "filter",
          // but that's not a great name for it, since that implies a thing where
          // some bits pass through, and others are simply ignored.  (That would
          // be a valid example of a transform, of course.)
          //
          // While the output is causally related to the input, it's not a
          // necessarily symmetric or synchronous transformation.  For example,
          // a zlib stream might take multiple plain-text writes(), and then
          // emit a single compressed chunk some time in the future.
          //
          // Here's how this works:
          //
          // The Transform stream has all the aspects of the readable and writable
          // stream classes.  When you write(chunk), that calls _write(chunk,cb)
          // internally, and returns false if there's a lot of pending writes
          // buffered up.  When you call read(), that calls _read(n) until
          // there's enough pending readable data buffered up.
          //
          // In a transform stream, the written data is placed in a buffer.  When
          // _read(n) is called, it transforms the queued up data, calling the
          // buffered _write cb's as it consumes chunks.  If consuming a single
          // written chunk would result in multiple output chunks, then the first
          // outputted bit calls the readcb, and subsequent chunks just go into
          // the read buffer, and will cause it to emit 'readable' if necessary.
          //
          // This way, back-pressure is actually determined by the reading side,
          // since _read has to be called to start processing a new chunk.  However,
          // a pathological inflate type of transform can cause excessive buffering
          // here.  For example, imagine a stream where every byte of input is
          // interpreted as an integer from 0-255, and then results in that many
          // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
          // 1kb of data being output.  In this case, you could write a very small
          // amount of input, and end up with a very large amount of output.  In
          // such a pathological inflating mechanism, there'd be no way to tell
          // the system to stop doing the transform.  A single 4MB write could
          // cause the system to run out of memory.
          //
          // However, even in such a pathological case, only a single written chunk
          // would be consumed, and then the rest would wait (un-transformed) until
          // the results of the previous transformed chunk were consumed.

          module.exports = Transform;

          var Duplex = __webpack_require__(8);

          /*<replacement>*/
          var util = __webpack_require__(11);
          util.inherits = __webpack_require__(0);
          /*</replacement>*/

          util.inherits(Transform, Duplex);

          function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = false;

            var cb = ts.writecb;

            if (!cb) {
              return this.emit(
                'error',
                new Error('write callback called multiple times')
              );
            }

            ts.writechunk = null;
            ts.writecb = null;

            if (data != null)
              // single equals check for both `null` and `undefined`
              this.push(data);

            cb(er);

            var rs = this._readableState;
            rs.reading = false;
            if (rs.needReadable || rs.length < rs.highWaterMark) {
              this._read(rs.highWaterMark);
            }
          }

          function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options);

            Duplex.call(this, options);

            this._transformState = {
              afterTransform: afterTransform.bind(this),
              needTransform: false,
              transforming: false,
              writecb: null,
              writechunk: null,
              writeencoding: null,
            };

            // start out asking for a readable event once data is transformed.
            this._readableState.needReadable = true;

            // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.
            this._readableState.sync = false;

            if (options) {
              if (typeof options.transform === 'function')
                this._transform = options.transform;

              if (typeof options.flush === 'function')
                this._flush = options.flush;
            }

            // When the writable side finishes, then flush out anything remaining.
            this.on('prefinish', prefinish);
          }

          function prefinish() {
            var _this = this;

            if (typeof this._flush === 'function') {
              this._flush(function (er, data) {
                done(_this, er, data);
              });
            } else {
              done(this, null, null);
            }
          }

          Transform.prototype.push = function (chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
          };

          // This is the part where you do stuff!
          // override this function in implementation classes.
          // 'chunk' is an input chunk.
          //
          // Call `push(newChunk)` to pass along transformed output
          // to the readable side.  You may call 'push' zero or more times.
          //
          // Call `cb(err)` when you are done with this chunk.  If you pass
          // an error, then that'll put the hurt on the whole operation.  If you
          // never call cb(), then you'll never get another chunk.
          Transform.prototype._transform = function (chunk, encoding, cb) {
            throw new Error('_transform() is not implemented');
          };

          Transform.prototype._write = function (chunk, encoding, cb) {
            var ts = this._transformState;
            ts.writecb = cb;
            ts.writechunk = chunk;
            ts.writeencoding = encoding;
            if (!ts.transforming) {
              var rs = this._readableState;
              if (
                ts.needTransform ||
                rs.needReadable ||
                rs.length < rs.highWaterMark
              )
                this._read(rs.highWaterMark);
            }
          };

          // Doesn't matter what the args are here.
          // _transform does all the work.
          // That we got here means that the readable side wants more data.
          Transform.prototype._read = function (n) {
            var ts = this._transformState;

            if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
              ts.transforming = true;
              this._transform(
                ts.writechunk,
                ts.writeencoding,
                ts.afterTransform
              );
            } else {
              // mark that we need a transform, so that any data that comes in
              // will get processed, now that we've asked for it.
              ts.needTransform = true;
            }
          };

          Transform.prototype._destroy = function (err, cb) {
            var _this2 = this;

            Duplex.prototype._destroy.call(this, err, function (err2) {
              cb(err2);
              _this2.emit('close');
            });
          };

          function done(stream, er, data) {
            if (er) return stream.emit('error', er);

            if (data != null)
              // single equals check for both `null` and `undefined`
              stream.push(data);

            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided
            if (stream._writableState.length)
              throw new Error('Calling transform done when ws.length != 0');

            if (stream._transformState.transforming)
              throw new Error('Calling transform done when still transforming');

            return stream.push(null);
          }

          /***/
        },
        /* 36 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var Buffer = __webpack_require__(1).Buffer;
          var Transform = __webpack_require__(31).Transform;
          var inherits = __webpack_require__(0);

          function throwIfNotStringOrBuffer(val, prefix) {
            if (!Buffer.isBuffer(val) && typeof val !== 'string') {
              throw new TypeError(prefix + ' must be a string or a buffer');
            }
          }

          function HashBase(blockSize) {
            Transform.call(this);

            this._block = Buffer.allocUnsafe(blockSize);
            this._blockSize = blockSize;
            this._blockOffset = 0;
            this._length = [0, 0, 0, 0];

            this._finalized = false;
          }

          inherits(HashBase, Transform);

          HashBase.prototype._transform = function (chunk, encoding, callback) {
            var error = null;
            try {
              this.update(chunk, encoding);
            } catch (err) {
              error = err;
            }

            callback(error);
          };

          HashBase.prototype._flush = function (callback) {
            var error = null;
            try {
              this.push(this.digest());
            } catch (err) {
              error = err;
            }

            callback(error);
          };

          HashBase.prototype.update = function (data, encoding) {
            throwIfNotStringOrBuffer(data, 'Data');
            if (this._finalized) throw new Error('Digest already called');
            if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);

            // consume data
            var block = this._block;
            var offset = 0;
            while (
              this._blockOffset + data.length - offset >=
              this._blockSize
            ) {
              for (var i = this._blockOffset; i < this._blockSize; ) {
                block[i++] = data[offset++];
              }
              this._update();
              this._blockOffset = 0;
            }
            while (offset < data.length) {
              block[this._blockOffset++] = data[offset++];
            } // update length
            for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
              this._length[j] += carry;
              carry = (this._length[j] / 0x0100000000) | 0;
              if (carry > 0) this._length[j] -= 0x0100000000 * carry;
            }

            return this;
          };

          HashBase.prototype._update = function () {
            throw new Error('_update is not implemented');
          };

          HashBase.prototype.digest = function (encoding) {
            if (this._finalized) throw new Error('Digest already called');
            this._finalized = true;

            var digest = this._digest();
            if (encoding !== undefined) digest = digest.toString(encoding);

            // reset state
            this._block.fill(0);
            this._blockOffset = 0;
            for (var i = 0; i < 4; ++i) {
              this._length[i] = 0;
            }
            return digest;
          };

          HashBase.prototype._digest = function () {
            throw new Error('_digest is not implemented');
          };

          module.exports = HashBase;

          /***/
        },
        /* 37 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /**
           * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
           * in FIPS 180-2
           * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
           * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
           *
           */

          var inherits = __webpack_require__(0);
          var Hash = __webpack_require__(9);
          var Buffer = __webpack_require__(1).Buffer;

          var K = [
            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
            0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
            0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
            0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
            0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,
            0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,
            0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,
            0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,
            0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,
            0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,
            0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
            0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,
          ];

          var W = new Array(64);

          function Sha256() {
            this.init();

            this._w = W; // new Array(64)

            Hash.call(this, 64, 56);
          }

          inherits(Sha256, Hash);

          Sha256.prototype.init = function () {
            this._a = 0x6a09e667;
            this._b = 0xbb67ae85;
            this._c = 0x3c6ef372;
            this._d = 0xa54ff53a;
            this._e = 0x510e527f;
            this._f = 0x9b05688c;
            this._g = 0x1f83d9ab;
            this._h = 0x5be0cd19;

            return this;
          };

          function ch(x, y, z) {
            return z ^ (x & (y ^ z));
          }

          function maj(x, y, z) {
            return (x & y) | (z & (x | y));
          }

          function sigma0(x) {
            return (
              ((x >>> 2) | (x << 30)) ^
              ((x >>> 13) | (x << 19)) ^
              ((x >>> 22) | (x << 10))
            );
          }

          function sigma1(x) {
            return (
              ((x >>> 6) | (x << 26)) ^
              ((x >>> 11) | (x << 21)) ^
              ((x >>> 25) | (x << 7))
            );
          }

          function gamma0(x) {
            return (
              ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3)
            );
          }

          function gamma1(x) {
            return (
              ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10)
            );
          }

          Sha256.prototype._update = function (M) {
            var W = this._w;

            var a = this._a | 0;
            var b = this._b | 0;
            var c = this._c | 0;
            var d = this._d | 0;
            var e = this._e | 0;
            var f = this._f | 0;
            var g = this._g | 0;
            var h = this._h | 0;

            for (var i = 0; i < 16; ++i) {
              W[i] = M.readInt32BE(i * 4);
            }
            for (; i < 64; ++i) {
              W[i] =
                (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) |
                0;
            }
            for (var j = 0; j < 64; ++j) {
              var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0;
              var T2 = (sigma0(a) + maj(a, b, c)) | 0;

              h = g;
              g = f;
              f = e;
              e = (d + T1) | 0;
              d = c;
              c = b;
              b = a;
              a = (T1 + T2) | 0;
            }

            this._a = (a + this._a) | 0;
            this._b = (b + this._b) | 0;
            this._c = (c + this._c) | 0;
            this._d = (d + this._d) | 0;
            this._e = (e + this._e) | 0;
            this._f = (f + this._f) | 0;
            this._g = (g + this._g) | 0;
            this._h = (h + this._h) | 0;
          };

          Sha256.prototype._hash = function () {
            var H = Buffer.allocUnsafe(32);

            H.writeInt32BE(this._a, 0);
            H.writeInt32BE(this._b, 4);
            H.writeInt32BE(this._c, 8);
            H.writeInt32BE(this._d, 12);
            H.writeInt32BE(this._e, 16);
            H.writeInt32BE(this._f, 20);
            H.writeInt32BE(this._g, 24);
            H.writeInt32BE(this._h, 28);

            return H;
          };

          module.exports = Sha256;

          /***/
        },
        /* 38 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var inherits = __webpack_require__(0);
          var Hash = __webpack_require__(9);
          var Buffer = __webpack_require__(1).Buffer;

          var K = [
            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf,
            0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538,
            0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5,
            0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
            0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74,
            0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235,
            0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786,
            0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc,
            0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab,
            0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7,
            0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
            0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85,
            0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed,
            0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb,
            0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70,
            0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218,
            0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070,
            0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
            0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3,
            0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373,
            0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f,
            0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7,
            0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c,
            0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f,
            0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
            0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5,
            0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc,
            0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c,
            0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817,
          ];

          var W = new Array(160);

          function Sha512() {
            this.init();
            this._w = W;

            Hash.call(this, 128, 112);
          }

          inherits(Sha512, Hash);

          Sha512.prototype.init = function () {
            this._ah = 0x6a09e667;
            this._bh = 0xbb67ae85;
            this._ch = 0x3c6ef372;
            this._dh = 0xa54ff53a;
            this._eh = 0x510e527f;
            this._fh = 0x9b05688c;
            this._gh = 0x1f83d9ab;
            this._hh = 0x5be0cd19;

            this._al = 0xf3bcc908;
            this._bl = 0x84caa73b;
            this._cl = 0xfe94f82b;
            this._dl = 0x5f1d36f1;
            this._el = 0xade682d1;
            this._fl = 0x2b3e6c1f;
            this._gl = 0xfb41bd6b;
            this._hl = 0x137e2179;

            return this;
          };

          function Ch(x, y, z) {
            return z ^ (x & (y ^ z));
          }

          function maj(x, y, z) {
            return (x & y) | (z & (x | y));
          }

          function sigma0(x, xl) {
            return (
              ((x >>> 28) | (xl << 4)) ^
              ((xl >>> 2) | (x << 30)) ^
              ((xl >>> 7) | (x << 25))
            );
          }

          function sigma1(x, xl) {
            return (
              ((x >>> 14) | (xl << 18)) ^
              ((x >>> 18) | (xl << 14)) ^
              ((xl >>> 9) | (x << 23))
            );
          }

          function Gamma0(x, xl) {
            return (
              ((x >>> 1) | (xl << 31)) ^ ((x >>> 8) | (xl << 24)) ^ (x >>> 7)
            );
          }

          function Gamma0l(x, xl) {
            return (
              ((x >>> 1) | (xl << 31)) ^
              ((x >>> 8) | (xl << 24)) ^
              ((x >>> 7) | (xl << 25))
            );
          }

          function Gamma1(x, xl) {
            return (
              ((x >>> 19) | (xl << 13)) ^ ((xl >>> 29) | (x << 3)) ^ (x >>> 6)
            );
          }

          function Gamma1l(x, xl) {
            return (
              ((x >>> 19) | (xl << 13)) ^
              ((xl >>> 29) | (x << 3)) ^
              ((x >>> 6) | (xl << 26))
            );
          }

          function getCarry(a, b) {
            return a >>> 0 < b >>> 0 ? 1 : 0;
          }

          Sha512.prototype._update = function (M) {
            var W = this._w;

            var ah = this._ah | 0;
            var bh = this._bh | 0;
            var ch = this._ch | 0;
            var dh = this._dh | 0;
            var eh = this._eh | 0;
            var fh = this._fh | 0;
            var gh = this._gh | 0;
            var hh = this._hh | 0;

            var al = this._al | 0;
            var bl = this._bl | 0;
            var cl = this._cl | 0;
            var dl = this._dl | 0;
            var el = this._el | 0;
            var fl = this._fl | 0;
            var gl = this._gl | 0;
            var hl = this._hl | 0;

            for (var i = 0; i < 32; i += 2) {
              W[i] = M.readInt32BE(i * 4);
              W[i + 1] = M.readInt32BE(i * 4 + 4);
            }
            for (; i < 160; i += 2) {
              var xh = W[i - 15 * 2];
              var xl = W[i - 15 * 2 + 1];
              var gamma0 = Gamma0(xh, xl);
              var gamma0l = Gamma0l(xl, xh);

              xh = W[i - 2 * 2];
              xl = W[i - 2 * 2 + 1];
              var gamma1 = Gamma1(xh, xl);
              var gamma1l = Gamma1l(xl, xh);

              // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
              var Wi7h = W[i - 7 * 2];
              var Wi7l = W[i - 7 * 2 + 1];

              var Wi16h = W[i - 16 * 2];
              var Wi16l = W[i - 16 * 2 + 1];

              var Wil = (gamma0l + Wi7l) | 0;
              var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0;
              Wil = (Wil + gamma1l) | 0;
              Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0;
              Wil = (Wil + Wi16l) | 0;
              Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0;

              W[i] = Wih;
              W[i + 1] = Wil;
            }

            for (var j = 0; j < 160; j += 2) {
              Wih = W[j];
              Wil = W[j + 1];

              var majh = maj(ah, bh, ch);
              var majl = maj(al, bl, cl);

              var sigma0h = sigma0(ah, al);
              var sigma0l = sigma0(al, ah);
              var sigma1h = sigma1(eh, el);
              var sigma1l = sigma1(el, eh);

              // t1 = h + sigma1 + ch + K[j] + W[j]
              var Kih = K[j];
              var Kil = K[j + 1];

              var chh = Ch(eh, fh, gh);
              var chl = Ch(el, fl, gl);

              var t1l = (hl + sigma1l) | 0;
              var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0;
              t1l = (t1l + chl) | 0;
              t1h = (t1h + chh + getCarry(t1l, chl)) | 0;
              t1l = (t1l + Kil) | 0;
              t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0;
              t1l = (t1l + Wil) | 0;
              t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0;

              // t2 = sigma0 + maj
              var t2l = (sigma0l + majl) | 0;
              var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0;

              hh = gh;
              hl = gl;
              gh = fh;
              gl = fl;
              fh = eh;
              fl = el;
              el = (dl + t1l) | 0;
              eh = (dh + t1h + getCarry(el, dl)) | 0;
              dh = ch;
              dl = cl;
              ch = bh;
              cl = bl;
              bh = ah;
              bl = al;
              al = (t1l + t2l) | 0;
              ah = (t1h + t2h + getCarry(al, t1l)) | 0;
            }

            this._al = (this._al + al) | 0;
            this._bl = (this._bl + bl) | 0;
            this._cl = (this._cl + cl) | 0;
            this._dl = (this._dl + dl) | 0;
            this._el = (this._el + el) | 0;
            this._fl = (this._fl + fl) | 0;
            this._gl = (this._gl + gl) | 0;
            this._hl = (this._hl + hl) | 0;

            this._ah = (this._ah + ah + getCarry(this._al, al)) | 0;
            this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0;
            this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0;
            this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0;
            this._eh = (this._eh + eh + getCarry(this._el, el)) | 0;
            this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0;
            this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0;
            this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0;
          };

          Sha512.prototype._hash = function () {
            var H = Buffer.allocUnsafe(64);

            function writeInt64BE(h, l, offset) {
              H.writeInt32BE(h, offset);
              H.writeInt32BE(l, offset + 4);
            }

            writeInt64BE(this._ah, this._al, 0);
            writeInt64BE(this._bh, this._bl, 8);
            writeInt64BE(this._ch, this._cl, 16);
            writeInt64BE(this._dh, this._dl, 24);
            writeInt64BE(this._eh, this._el, 32);
            writeInt64BE(this._fh, this._fl, 40);
            writeInt64BE(this._gh, this._gl, 48);
            writeInt64BE(this._hh, this._hl, 56);

            return H;
          };

          module.exports = Sha512;

          /***/
        },
        /* 39 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var factory = __webpack_require__(81);

          var speexInstance = null;

          var onReady = function onReady() {
            return new Promise(function (resolve, reject) {
              if (speexInstance) {
                resolve(speexInstance);
              } else {
                factory()
                  .then(function (speexModule) {
                    var init = speexModule.cwrap('SH_speex_init', 'number', [
                      'number',
                      'number',
                      'number',
                      'number',
                      'number',
                    ]);
                    var _encodeFrame = speexModule.cwrap(
                      'SH_speex_encode_frame',
                      'number',
                      ['number', 'number', 'number']
                    );
                    var speexToRaw = speexModule.cwrap(
                      'SH_speex_speex_to_raw',
                      'boolean',
                      ['number', 'number', 'number', 'number']
                    );

                    var headerSize = 80;
                    var headerPtrNB = speexModule._malloc(headerSize);
                    var headerPtrWB = speexModule._malloc(headerSize);
                    var headerBufferNB = new Uint8Array(
                      speexModule.HEAPU8.buffer,
                      headerPtrNB,
                      headerSize
                    );
                    var headerBufferWB = new Uint8Array(
                      speexModule.HEAPU8.buffer,
                      headerPtrWB,
                      headerSize
                    );

                    var FRAMESIZE_NB = 160;
                    var framePtrNB = speexModule._malloc(FRAMESIZE_NB * 2);
                    var frameBufferNB = new Int16Array(
                      speexModule.HEAP16.buffer,
                      framePtrNB,
                      FRAMESIZE_NB
                    );

                    var FRAMESIZE_WB = 320;
                    var framePtrWB = speexModule._malloc(FRAMESIZE_WB * 2);
                    var frameBufferWB = new Int16Array(
                      speexModule.HEAP16.buffer,
                      framePtrWB,
                      FRAMESIZE_WB
                    );

                    var OUTBUFSIZE = 202; // Each Speex frame is a maximum of 200 bytes + 2 bytes for the size prefix
                    var outBytesPtr = speexModule._malloc(OUTBUFSIZE);
                    var outBytesBuffer = new Uint8Array(
                      speexModule.HEAPU8.buffer,
                      outBytesBuffer,
                      OUTBUFSIZE
                    );

                    var speexSize = 40;
                    var speexPtrNB = speexModule._malloc(speexSize);
                    var speexPtrWB = speexModule._malloc(speexSize);

                    init(10, headerPtrNB, headerSize, 1, speexPtrNB);
                    init(10, headerPtrWB, headerSize, 0, speexPtrWB);

                    speexInstance = {
                      encodeFrame: function encodeFrame(
                        framePtr,
                        outBytesPtr,
                        isNB
                      ) {
                        return _encodeFrame(
                          framePtr,
                          outBytesPtr,
                          isNB ? speexPtrNB : speexPtrWB
                        );
                      },
                      decodeSpeex: function decodeSpeex(
                        inputBufferPtr,
                        inputSize,
                        outputBufferPtr,
                        outputSizePtr
                      ) {
                        return speexToRaw(
                          inputBufferPtr,
                          inputSize,
                          outputBufferPtr,
                          outputSizePtr
                        );
                      },
                      headerNB: headerBufferNB,
                      headerWB: headerBufferWB,
                      frameSizeNB: FRAMESIZE_NB,
                      frameSizeWB: FRAMESIZE_WB,
                      frameBufferNB: frameBufferNB,
                      frameBufferWB: frameBufferWB,
                      outBytesBuffer: outBytesBuffer,
                    };

                    resolve(speexInstance);
                  })
                  .catch(function (error) {
                    return reject(error);
                  });
              }
            });
          };

          module.exports = {
            onReady: onReady,
          };

          /***/
        },
        /* 40 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Top level file is just a mixin of submodules & constants

          var assign = __webpack_require__(7).assign;

          var deflate = __webpack_require__(83);
          var inflate = __webpack_require__(86);
          var constants = __webpack_require__(45);

          var pako = {};

          assign(pako, deflate, inflate, constants);

          module.exports = pako;

          /***/
        },
        /* 41 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // Note: adler32 takes 12% for level 0 and 2% for level 6.
          // It isn't worth it to make additional optimizations as in original.
          // Small size is preferable.

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          function adler32(adler, buf, len, pos) {
            var s1 = (adler & 0xffff) | 0,
              s2 = ((adler >>> 16) & 0xffff) | 0,
              n = 0;

            while (len !== 0) {
              // Set limit ~ twice less than 5552, to keep
              // s2 in 31-bits, because we force signed ints.
              // in other case %= will fail.
              n = len > 2000 ? 2000 : len;
              len -= n;

              do {
                s1 = (s1 + buf[pos++]) | 0;
                s2 = (s2 + s1) | 0;
              } while (--n);

              s1 %= 65521;
              s2 %= 65521;
            }

            return s1 | (s2 << 16) | 0;
          }

          module.exports = adler32;

          /***/
        },
        /* 42 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // Note: we can't get significant speed boost here.
          // So write code to minimize size - no pregenerated tables
          // and array tools dependencies.

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          // Use ordinary array, since untyped makes no boost here

          function makeTable() {
            var c,
              table = [];

            for (var n = 0; n < 256; n++) {
              c = n;
              for (var k = 0; k < 8; k++) {
                c = c & 1 ? 0xedb88320 ^ (c >>> 1) : c >>> 1;
              }
              table[n] = c;
            }

            return table;
          }

          // Create table on load. Just 255 signed longs. Not a problem.
          var crcTable = makeTable();

          function crc32(crc, buf, len, pos) {
            var t = crcTable,
              end = pos + len;

            crc ^= -1;

            for (var i = pos; i < end; i++) {
              crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xff];
            }

            return crc ^ -1; // >>> 0;
          }

          module.exports = crc32;

          /***/
        },
        /* 43 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // String encode/decode helpers

          var utils = __webpack_require__(7);

          // Quick check if we can use fast array to bin string conversion
          //
          // - apply(Array) can fail on Android 2.2
          // - apply(Uint8Array) can fail on iOS 5.1 Safari
          //
          var STR_APPLY_OK = true;
          var STR_APPLY_UIA_OK = true;

          try {
            String.fromCharCode.apply(null, [0]);
          } catch (__) {
            STR_APPLY_OK = false;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (__) {
            STR_APPLY_UIA_OK = false;
          }

          // Table with utf8 lengths (calculated by first byte of sequence)
          // Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
          // because max possible codepoint is 0x10ffff
          var _utf8len = new utils.Buf8(256);
          for (var q = 0; q < 256; q++) {
            _utf8len[q] =
              q >= 252
                ? 6
                : q >= 248
                ? 5
                : q >= 240
                ? 4
                : q >= 224
                ? 3
                : q >= 192
                ? 2
                : 1;
          }
          _utf8len[254] = _utf8len[254] = 1; // Invalid sequence start

          // convert string to array (typed, when possible)
          exports.string2buf = function (str) {
            var buf,
              c,
              c2,
              m_pos,
              i,
              str_len = str.length,
              buf_len = 0;

            // count binary size
            for (m_pos = 0; m_pos < str_len; m_pos++) {
              c = str.charCodeAt(m_pos);
              if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {
                c2 = str.charCodeAt(m_pos + 1);
                if ((c2 & 0xfc00) === 0xdc00) {
                  c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
                  m_pos++;
                }
              }
              buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
            }

            // allocate buffer
            buf = new utils.Buf8(buf_len);

            // convert
            for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
              c = str.charCodeAt(m_pos);
              if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {
                c2 = str.charCodeAt(m_pos + 1);
                if ((c2 & 0xfc00) === 0xdc00) {
                  c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
                  m_pos++;
                }
              }
              if (c < 0x80) {
                /* one byte */
                buf[i++] = c;
              } else if (c < 0x800) {
                /* two bytes */
                buf[i++] = 0xc0 | (c >>> 6);
                buf[i++] = 0x80 | (c & 0x3f);
              } else if (c < 0x10000) {
                /* three bytes */
                buf[i++] = 0xe0 | (c >>> 12);
                buf[i++] = 0x80 | ((c >>> 6) & 0x3f);
                buf[i++] = 0x80 | (c & 0x3f);
              } else {
                /* four bytes */
                buf[i++] = 0xf0 | (c >>> 18);
                buf[i++] = 0x80 | ((c >>> 12) & 0x3f);
                buf[i++] = 0x80 | ((c >>> 6) & 0x3f);
                buf[i++] = 0x80 | (c & 0x3f);
              }
            }

            return buf;
          };

          // Helper (used in 2 places)
          function buf2binstring(buf, len) {
            // On Chrome, the arguments in a function call that are allowed is `65534`.
            // If the length of the buffer is smaller than that, we can use this optimization,
            // otherwise we will take a slower path.
            if (len < 65534) {
              if (
                (buf.subarray && STR_APPLY_UIA_OK) ||
                (!buf.subarray && STR_APPLY_OK)
              ) {
                return String.fromCharCode.apply(
                  null,
                  utils.shrinkBuf(buf, len)
                );
              }
            }

            var result = '';
            for (var i = 0; i < len; i++) {
              result += String.fromCharCode(buf[i]);
            }
            return result;
          }

          // Convert byte array to binary string
          exports.buf2binstring = function (buf) {
            return buf2binstring(buf, buf.length);
          };

          // Convert binary string (typed, when possible)
          exports.binstring2buf = function (str) {
            var buf = new utils.Buf8(str.length);
            for (var i = 0, len = buf.length; i < len; i++) {
              buf[i] = str.charCodeAt(i);
            }
            return buf;
          };

          // convert array to string
          exports.buf2string = function (buf, max) {
            var i, out, c, c_len;
            var len = max || buf.length;

            // Reserve max possible length (2 words per char)
            // NB: by unknown reasons, Array is significantly faster for
            //     String.fromCharCode.apply than Uint16Array.
            var utf16buf = new Array(len * 2);

            for (out = 0, i = 0; i < len; ) {
              c = buf[i++];
              // quick process ascii
              if (c < 0x80) {
                utf16buf[out++] = c;
                continue;
              }

              c_len = _utf8len[c];
              // skip 5 & 6 byte codes
              if (c_len > 4) {
                utf16buf[out++] = 0xfffd;
                i += c_len - 1;
                continue;
              }

              // apply mask on first byte
              c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
              // join the rest
              while (c_len > 1 && i < len) {
                c = (c << 6) | (buf[i++] & 0x3f);
                c_len--;
              }

              // terminated by end of string?
              if (c_len > 1) {
                utf16buf[out++] = 0xfffd;
                continue;
              }

              if (c < 0x10000) {
                utf16buf[out++] = c;
              } else {
                c -= 0x10000;
                utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
                utf16buf[out++] = 0xdc00 | (c & 0x3ff);
              }
            }

            return buf2binstring(utf16buf, out);
          };

          // Calculate max possible position in utf8 buffer,
          // that will not break sequence. If that's not possible
          // - (very small limits) return max size as is.
          //
          // buf[] - utf8 bytes array
          // max   - length limit (mandatory);
          exports.utf8border = function (buf, max) {
            var pos;

            max = max || buf.length;
            if (max > buf.length) {
              max = buf.length;
            }

            // go back from last position, until start of sequence found
            pos = max - 1;
            while (pos >= 0 && (buf[pos] & 0xc0) === 0x80) {
              pos--;
            }

            // Very small and broken sequence,
            // return max, because we should return something anyway.
            if (pos < 0) {
              return max;
            }

            // If we came to start of buffer - that means buffer is too small,
            // return max too.
            if (pos === 0) {
              return max;
            }

            return pos + _utf8len[buf[pos]] > max ? pos : max;
          };

          /***/
        },
        /* 44 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          function ZStream() {
            /* next input byte */
            this.input = null; // JS specific, because we have no pointers
            this.next_in = 0;
            /* number of bytes available at input */
            this.avail_in = 0;
            /* total number of input bytes read so far */
            this.total_in = 0;
            /* next output byte should be put there */
            this.output = null; // JS specific, because we have no pointers
            this.next_out = 0;
            /* remaining free space at output */
            this.avail_out = 0;
            /* total number of bytes output so far */
            this.total_out = 0;
            /* last error message, NULL if no error */
            this.msg = '' /*Z_NULL*/;
            /* not visible by applications */
            this.state = null;
            /* best guess about the data type: binary or text */
            this.data_type = 2 /*Z_UNKNOWN*/;
            /* adler32 value of the uncompressed data */
            this.adler = 0;
          }

          module.exports = ZStream;

          /***/
        },
        /* 45 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          module.exports = {
            /* Allowed flush values; see deflate() and inflate() below for details */
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,

            /* Return codes for the compression/decompression functions. Negative values
             * are errors, positive values are used for special but normal events.
             */
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            //Z_MEM_ERROR:     -4,
            Z_BUF_ERROR: -5,
            //Z_VERSION_ERROR: -6,

            /* compression levels */
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,

            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,

            /* Possible values of the data_type field (though see inflate()) */
            Z_BINARY: 0,
            Z_TEXT: 1,
            //Z_ASCII:                1, // = Z_TEXT (deprecated)
            Z_UNKNOWN: 2,

            /* The deflate compression method */
            Z_DEFLATED: 8,
            //Z_NULL:                 null // Use -1 or null inline, depending on var type
          };

          /***/
        },
        /* 46 */
        /***/ function (module, exports) {
          /* WEBPACK VAR INJECTION */ (function (__webpack_amd_options__) {
            /* globals __webpack_amd_options__ */
            module.exports = __webpack_amd_options__;

            /* WEBPACK VAR INJECTION */
          }).call(exports, {});

          /***/
        },
        /* 47 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            exports.fetch =
              isFunction(global.fetch) && isFunction(global.ReadableStream);

            exports.writableStream = isFunction(global.WritableStream);

            exports.abortController = isFunction(global.AbortController);

            exports.blobConstructor = false;
            try {
              new Blob([new ArrayBuffer(1)]);
              exports.blobConstructor = true;
            } catch (e) {}

            // The xhr request to example.com may violate some restrictive CSP configurations,
            // so if we're running in a browser that supports `fetch`, avoid calling getXHR()
            // and assume support for certain features below.
            var xhr;
            function getXHR() {
              // Cache the xhr value
              if (xhr !== undefined) return xhr;

              if (global.XMLHttpRequest) {
                xhr = new global.XMLHttpRequest();
                // If XDomainRequest is available (ie only, where xhr might not work
                // cross domain), use the page location. Otherwise use example.com
                // Note: this doesn't actually make an http request.
                try {
                  xhr.open(
                    'GET',
                    global.XDomainRequest ? '/' : 'https://example.com'
                  );
                } catch (e) {
                  xhr = null;
                }
              } else {
                // Service workers don't have XHR
                xhr = null;
              }
              return xhr;
            }

            function checkTypeSupport(type) {
              var xhr = getXHR();
              if (!xhr) return false;
              try {
                xhr.responseType = type;
                return xhr.responseType === type;
              } catch (e) {}
              return false;
            }

            // For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.
            // Safari 7.1 appears to have fixed this bug.
            var haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined';
            var haveSlice =
              haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice);

            // If fetch is supported, then arraybuffer will be supported too. Skip calling
            // checkTypeSupport(), since that calls getXHR().
            exports.arraybuffer =
              exports.fetch ||
              (haveArrayBuffer && checkTypeSupport('arraybuffer'));

            // These next two tests unavoidably show warnings in Chrome. Since fetch will always
            // be used if it's available, just return false for these to avoid the warnings.
            exports.msstream =
              !exports.fetch && haveSlice && checkTypeSupport('ms-stream');
            exports.mozchunkedarraybuffer =
              !exports.fetch &&
              haveArrayBuffer &&
              checkTypeSupport('moz-chunked-arraybuffer');

            // If fetch is supported, then overrideMimeType will be supported too. Skip calling
            // getXHR().
            exports.overrideMimeType =
              exports.fetch ||
              (getXHR() ? isFunction(getXHR().overrideMimeType) : false);

            exports.vbArray = isFunction(global.VBArray);

            function isFunction(value) {
              return typeof value === 'function';
            }

            xhr = null; // Help gc
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 48 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (process, global, Buffer) {
            var capability = __webpack_require__(47);
            var inherits = __webpack_require__(0);
            var stream = __webpack_require__(10);

            var rStates = (exports.readyStates = {
              UNSENT: 0,
              OPENED: 1,
              HEADERS_RECEIVED: 2,
              LOADING: 3,
              DONE: 4,
            });

            var IncomingMessage = (exports.IncomingMessage = function (
              xhr,
              response,
              mode,
              fetchTimer
            ) {
              var self = this;
              stream.Readable.call(self);

              self._mode = mode;
              self.headers = {};
              self.rawHeaders = [];
              self.trailers = {};
              self.rawTrailers = [];

              // Fake the 'close' event, but only once 'end' fires
              self.on('end', function () {
                // The nextTick is necessary to prevent the 'request' module from causing an infinite loop
                process.nextTick(function () {
                  self.emit('close');
                });
              });

              if (mode === 'fetch') {
                var read = function read() {
                  reader
                    .read()
                    .then(function (result) {
                      if (self._destroyed) return;
                      if (result.done) {
                        global.clearTimeout(fetchTimer);
                        self.push(null);
                        return;
                      }
                      self.push(new Buffer(result.value));
                      read();
                    })
                    .catch(function (err) {
                      global.clearTimeout(fetchTimer);
                      if (!self._destroyed) self.emit('error', err);
                    });
                };

                self._fetchResponse = response;

                self.url = response.url;
                self.statusCode = response.status;
                self.statusMessage = response.statusText;

                response.headers.forEach(function (header, key) {
                  self.headers[key.toLowerCase()] = header;
                  self.rawHeaders.push(key, header);
                });

                if (capability.writableStream) {
                  var writable = new WritableStream({
                    write: function write(chunk) {
                      return new Promise(function (resolve, reject) {
                        if (self._destroyed) {
                          reject();
                        } else if (self.push(new Buffer(chunk))) {
                          resolve();
                        } else {
                          self._resumeFetch = resolve;
                        }
                      });
                    },
                    close: function close() {
                      global.clearTimeout(fetchTimer);
                      if (!self._destroyed) self.push(null);
                    },
                    abort: function abort(err) {
                      if (!self._destroyed) self.emit('error', err);
                    },
                  });

                  try {
                    response.body.pipeTo(writable).catch(function (err) {
                      global.clearTimeout(fetchTimer);
                      if (!self._destroyed) self.emit('error', err);
                    });
                    return;
                  } catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this
                }
                // fallback for when writableStream or pipeTo aren't available
                var reader = response.body.getReader();

                read();
              } else {
                self._xhr = xhr;
                self._pos = 0;

                self.url = xhr.responseURL;
                self.statusCode = xhr.status;
                self.statusMessage = xhr.statusText;
                var headers = xhr.getAllResponseHeaders().split(/\r?\n/);
                headers.forEach(function (header) {
                  var matches = header.match(/^([^:]+):\s*(.*)/);
                  if (matches) {
                    var key = matches[1].toLowerCase();
                    if (key === 'set-cookie') {
                      if (self.headers[key] === undefined) {
                        self.headers[key] = [];
                      }
                      self.headers[key].push(matches[2]);
                    } else if (self.headers[key] !== undefined) {
                      self.headers[key] += ', ' + matches[2];
                    } else {
                      self.headers[key] = matches[2];
                    }
                    self.rawHeaders.push(matches[1], matches[2]);
                  }
                });

                self._charset = 'x-user-defined';
                if (!capability.overrideMimeType) {
                  var mimeType = self.rawHeaders['mime-type'];
                  if (mimeType) {
                    var charsetMatch = mimeType.match(
                      /;\s*charset=([^;])(;|$)/
                    );
                    if (charsetMatch) {
                      self._charset = charsetMatch[1].toLowerCase();
                    }
                  }
                  if (!self._charset) self._charset = 'utf-8'; // best guess
                }
              }
            });

            inherits(IncomingMessage, stream.Readable);

            IncomingMessage.prototype._read = function () {
              var self = this;

              var resolve = self._resumeFetch;
              if (resolve) {
                self._resumeFetch = null;
                resolve();
              }
            };

            IncomingMessage.prototype._onXHRProgress = function () {
              var self = this;

              var xhr = self._xhr;

              var response = null;
              switch (self._mode) {
                case 'text:vbarray':
                  // For IE9
                  if (xhr.readyState !== rStates.DONE) break;
                  try {
                    // This fails in IE8
                    response = new global.VBArray(xhr.responseBody).toArray();
                  } catch (e) {}
                  if (response !== null) {
                    self.push(new Buffer(response));
                    break;
                  }
                // Falls through in IE8
                case 'text':
                  try {
                    // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4
                    response = xhr.responseText;
                  } catch (e) {
                    self._mode = 'text:vbarray';
                    break;
                  }
                  if (response.length > self._pos) {
                    var newData = response.substr(self._pos);
                    if (self._charset === 'x-user-defined') {
                      var buffer = new Buffer(newData.length);
                      for (var i = 0; i < newData.length; i++) {
                        buffer[i] = newData.charCodeAt(i) & 0xff;
                      }
                      self.push(buffer);
                    } else {
                      self.push(newData, self._charset);
                    }
                    self._pos = response.length;
                  }
                  break;
                case 'arraybuffer':
                  if (xhr.readyState !== rStates.DONE || !xhr.response) break;
                  response = xhr.response;
                  self.push(new Buffer(new Uint8Array(response)));
                  break;
                case 'moz-chunked-arraybuffer':
                  // take whole
                  response = xhr.response;
                  if (xhr.readyState !== rStates.LOADING || !response) break;
                  self.push(new Buffer(new Uint8Array(response)));
                  break;
                case 'ms-stream':
                  response = xhr.response;
                  if (xhr.readyState !== rStates.LOADING) break;
                  var reader = new global.MSStreamReader();
                  reader.onprogress = function () {
                    if (reader.result.byteLength > self._pos) {
                      self.push(
                        new Buffer(
                          new Uint8Array(reader.result.slice(self._pos))
                        )
                      );
                      self._pos = reader.result.byteLength;
                    }
                  };
                  reader.onload = function () {
                    self.push(null);
                  };
                  // reader.onerror = ??? // TODO: this
                  reader.readAsArrayBuffer(response);
                  break;
              }

              // The ms-stream case handles end separately in reader.onload()
              if (
                self._xhr.readyState === rStates.DONE &&
                self._mode !== 'ms-stream'
              ) {
                self.push(null);
              }
            };
            /* WEBPACK VAR INJECTION */
          }).call(
            exports,
            __webpack_require__(3),
            __webpack_require__(2),
            __webpack_require__(4).Buffer
          );

          /***/
        },
        /* 49 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var config = __webpack_require__(6);

          module.exports = {
            version: config.version,

            TextRequest: __webpack_require__(51),

            VoiceRequest: __webpack_require__(82),

            AudioRecorder: __webpack_require__(117),

            decodeAudioData: __webpack_require__(5).decodeAudioData,

            decodeSpeex: __webpack_require__(5).decodeSpeex,

            decodeBase64: __webpack_require__(5).decodeBase64,

            generateAuthenticationHeaders:
              __webpack_require__(5).generateAuthenticationHeaders,

            setDebug: __webpack_require__(5).setDebug,
          };

          /***/
        },
        /* 50 */
        /***/ function (module, exports) {
          module.exports = {
            name: 'houndify',
            version: '3.1.13',
            description:
              'The Houndify JavaScript SDK allows you to make voice and text queries to the Houndify API from your browser or Node.js script.',
            main: 'index.js',
            scripts: {
              build: 'grunt build',
              test: 'jest --runInBand; rm -rf example',
              'test:build': 'node pullExamples',
              'posttest:build': 'grunt distTest',
            },
            devDependencies: {
              'babel-core': '^6.26.0',
              'babel-loader': '^7.1.2',
              'babel-preset-env': '^1.6.1',
              'exports-loader': '^0.6.4',
              'fs-extra': '^4.0.2',
              grunt: '^1.3.0',
              'grunt-contrib-clean': '^1.0.0',
              'grunt-contrib-copy': '^1.0.0',
              'grunt-contrib-watch': '^1.0.0',
              'grunt-shell': '^1.3.1',
              'grunt-webpack': '^3.0.2',
              jest: '^28.1.3',
              'node-libs-browser': '^2.1.0',
              'selenium-webdriver': '^3.6.0',
              'uglifyjs-webpack-plugin': '^1.2.4',
              webpack: '^3.11.0',
              'webpack-dev-server': '^2.11.5',
            },
            license: 'MIT',
            dependencies: {
              axios: '^0.21.4',
              'create-hmac': '^1.1.6',
              'cross-fetch': '^3.1.5',
              express: '^4.17.0',
              'express-ws': '^5.0.2',
              'https-proxy-agent': '^2.2.4',
              'json-bigint': '^1.0.0',
              pako: '^1.0.5',
              uuid: '^3.1.0',
              wav: '^1.0.2',
              ws: '^7.5.7',
            },
            author: { name: 'Asif Amirguliyev <aamirgul@soundhound.com>' },
          };

          /***/
        },
        /* 51 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (Buffer) {
            function _classCallCheck(instance, Constructor) {
              if (!(instance instanceof Constructor)) {
                throw new TypeError('Cannot call a class as a function');
              }
            }

            var uuid = __webpack_require__(25);
            var JSONbig = __webpack_require__(13);

            var Response = __webpack_require__(29);
            var utils = __webpack_require__(5);
            var request = utils.request;
            var config = __webpack_require__(6);

            var TextRequest = function TextRequest(opts) {
              _classCallCheck(this, TextRequest);

              if (opts['clientId']) {
                this.clientId = opts['clientId'];
              } else {
                throw new Error(
                  "TextRequest requires Houndify Client ID 'clientId'."
                );
              }

              if (opts['clientKey']) {
                this.clientKey = opts['clientKey'];
              } else if (opts['authURL']) {
                this.authURL = opts['authURL'];
              } else {
                throw new Error(
                  "TextRequest requires either 'clientKey' or 'authURL' for authentication."
                );
              }

              if (opts['query']) {
                this.query = opts['query'];
              } else {
                throw new Error("TextRequest requires 'query'.");
              }

              this.onResponse = utils.wrapListener(
                opts['onResponse'],
                'onResponse'
              );
              this.onError = utils.wrapListener(opts['onError'], 'onError');

              this.requestInfo = utils.cloneObject(opts['requestInfo']);
              this.conversationState = opts['conversationState'];

              this.proxy = utils.cloneObject(opts['proxy'] || {});
              this.endpoint = opts['endpoint'] || config.TEXT_ENDPOINT;
              this.method = opts['method'] || 'GET';

              _runQuery.apply(this);
            };

            function _runQuery() {
              var _this = this;

              //Set SDK fields
              this.requestInfo['ClientID'] = this.clientId;
              this.requestInfo['SDK'] = 'web';
              this.requestInfo['SDKVersion'] = config.version;

              //Set Conversation State
              if (this.conversationState) {
                this.requestInfo['ConversationState'] = this.conversationState;
                this.requestInfo['ConversationStateTime'] =
                  this.conversationState.ConversationStateTime;
              }

              //Create Search Info object
              var searchInfo = {
                type: 'text',
                startTime: new Date(),
                endTime: -1,
                requestInfo: this.requestInfo,
                getTotalDuration: function getTotalDuration() {
                  return this['endTime'] - this['startTime'];
                },
              };

              //onError wrapper
              var _onError = function _onError(errorObj) {
                searchInfo['error'] = errorObj;
                searchInfo['endTime'] = new Date();
                _this.onError(errorObj, searchInfo);
              };

              var requestInfoString = JSONbig.stringify(this.requestInfo);
              var requestInfoHeader = utils.escapeUnicode(requestInfoString);

              var endpoint = this.endpoint;
              var method = this.method;
              var headers = {};
              var proxyHeaderExclusiveList = [];

              if (this.proxy && this.proxy.url) {
                method = this.proxy.method || method;
                if (this.proxy.headers) {
                  for (var headerName in this.proxy.headers) {
                    proxyHeaderExclusiveList.push(headerName);
                    headers[headerName] = this.proxy.headers[headerName];
                  }
                }

                if (this.proxy.url.indexOf('http') !== 0 && window) {
                  if (!window.location.origin) {
                    window.location.origin =
                      window.location.protocol +
                      '//' +
                      window.location.hostname;
                    if (window.location.port)
                      window.location.origin += ':' + window.location.port;
                  }
                  this.proxy.url = window.location.origin + this.proxy.url;
                }
              }

              headers['Content-Type'] = 'text/plain';

              if (method === 'GET')
                headers['Hound-Request-Info'] = requestInfoHeader;

              if (method === 'POST') {
                headers['Hound-Request-Info-Length'] = Buffer.byteLength(
                  requestInfoHeader,
                  'utf8'
                );
              }

              if (this.requestInfo['InputLanguageEnglishName'])
                headers['Hound-Input-Language-English-Name'] =
                  this.requestInfo['InputLanguageEnglishName'];
              if (this.requestInfo['InputLanguageIETFTag'])
                headers['Hound-Input-Language-IETF-Tag'] =
                  this.requestInfo['InputLanguageIETFTag'];

              utils.log('Generating authentication headers...');
              generateAuthHeaders(this, function (err, authHeaders) {
                if (err) {
                  return _onError({ type: 'AUTHENTICATION', exception: err });
                }

                headers['Hound-Request-Authentication'] =
                  authHeaders['Hound-Request-Authentication'];
                headers['Hound-Client-Authentication'] =
                  authHeaders['Hound-Client-Authentication'];

                var opts = {
                  method: method,
                  uri: endpoint,
                  qs: { query: _this.query },
                  headers: headers,
                  body: requestInfoHeader,
                };

                if (_this.proxy && _this.proxy.url) {
                  opts.proxy = _this.proxy.url;
                  opts.proxyHeaderExclusiveList = proxyHeaderExclusiveList;
                }

                utils.log('Sending request with this opts object:', opts);
                request(opts, function (error, response, body) {
                  utils.log('Request came back with following objects:');
                  utils.log('error: ', error);
                  utils.log('response: ', response);
                  if (error) {
                    return _onError({ type: 'CONNECTION', exception: error });
                  }

                  if (response.statusCode === 403) {
                    return _onError({
                      type: 'AUTHENTICATION',
                      exception: body,
                    });
                  }

                  if (response.statusCode === 400) {
                    return _onError({ type: 'BAD_REQUEST', exception: body });
                  }

                  var parsedResponse = null;
                  try {
                    parsedResponse = new Response(body);
                    utils.log('parsedResponse: ', parsedResponse);
                  } catch (e) {
                    utils.log('body: ', body);
                    return _onError({ type: 'PROXY', exception: body });
                  }

                  if (
                    'Format' in parsedResponse &&
                    parsedResponse['Status'] !== 'Error'
                  ) {
                    searchInfo['endTime'] = new Date();
                    searchInfo['contentBody'] = body;

                    _this.onResponse(parsedResponse, searchInfo);
                  } else {
                    return _onError({
                      type: 'SERVER',
                      exception: parsedResponse,
                    });
                  }
                });
              });
            }

            function generateAuthHeaders(textRequest, callback) {
              var clientId = textRequest.clientId;
              var userId = textRequest.requestInfo['UserID'] || uuid.v1();
              var requestId = textRequest.requestInfo['RequestID'] || uuid.v1();
              var timeStamp =
                textRequest.requestInfo['TimeStamp'] ||
                Math.floor(Date.now() / 1000);

              var requestData = userId + ';' + requestId;
              var token = requestData + timeStamp;
              var headers = {
                'Hound-Request-Authentication': requestData,
              };
              utils.log('Signing authentication token...');
              utils.log('token: ', token);
              utils.log('textRequest: ', textRequest);
              utils.signToken(token, textRequest, function (err, encodedData) {
                utils.log('Token signed and returned with these objects:');
                utils.log('err: ', err);
                utils.log('encodedData: ', encodedData);
                headers['Hound-Client-Authentication'] =
                  clientId + ';' + timeStamp + ';' + encodedData;
                utils.log('Authentication headers: ', headers);
                callback(err, headers);
              });
            }

            module.exports = TextRequest;
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(4).Buffer);

          /***/
        },
        /* 52 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          exports.byteLength = byteLength;
          exports.toByteArray = toByteArray;
          exports.fromByteArray = fromByteArray;

          var lookup = [];
          var revLookup = [];
          var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

          var code =
            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
          for (var i = 0, len = code.length; i < len; ++i) {
            lookup[i] = code[i];
            revLookup[code.charCodeAt(i)] = i;
          }

          // Support decoding URL-safe base64 strings, as Node.js does.
          // See: https://en.wikipedia.org/wiki/Base64#URL_applications
          revLookup['-'.charCodeAt(0)] = 62;
          revLookup['_'.charCodeAt(0)] = 63;

          function getLens(b64) {
            var len = b64.length;

            if (len % 4 > 0) {
              throw new Error('Invalid string. Length must be a multiple of 4');
            }

            // Trim off extra bytes after placeholder bytes are found
            // See: https://github.com/beatgammit/base64-js/issues/42
            var validLen = b64.indexOf('=');
            if (validLen === -1) validLen = len;

            var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);

            return [validLen, placeHoldersLen];
          }

          // base64 is 4/3 + up to two characters of the original data
          function byteLength(b64) {
            var lens = getLens(b64);
            var validLen = lens[0];
            var placeHoldersLen = lens[1];
            return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
          }

          function _byteLength(b64, validLen, placeHoldersLen) {
            return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
          }

          function toByteArray(b64) {
            var tmp;
            var lens = getLens(b64);
            var validLen = lens[0];
            var placeHoldersLen = lens[1];

            var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

            var curByte = 0;

            // if there are placeholders, only get up to the last complete 4 chars
            var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

            for (var i = 0; i < len; i += 4) {
              tmp =
                (revLookup[b64.charCodeAt(i)] << 18) |
                (revLookup[b64.charCodeAt(i + 1)] << 12) |
                (revLookup[b64.charCodeAt(i + 2)] << 6) |
                revLookup[b64.charCodeAt(i + 3)];
              arr[curByte++] = (tmp >> 16) & 0xff;
              arr[curByte++] = (tmp >> 8) & 0xff;
              arr[curByte++] = tmp & 0xff;
            }

            if (placeHoldersLen === 2) {
              tmp =
                (revLookup[b64.charCodeAt(i)] << 2) |
                (revLookup[b64.charCodeAt(i + 1)] >> 4);
              arr[curByte++] = tmp & 0xff;
            }

            if (placeHoldersLen === 1) {
              tmp =
                (revLookup[b64.charCodeAt(i)] << 10) |
                (revLookup[b64.charCodeAt(i + 1)] << 4) |
                (revLookup[b64.charCodeAt(i + 2)] >> 2);
              arr[curByte++] = (tmp >> 8) & 0xff;
              arr[curByte++] = tmp & 0xff;
            }

            return arr;
          }

          function tripletToBase64(num) {
            return (
              lookup[(num >> 18) & 0x3f] +
              lookup[(num >> 12) & 0x3f] +
              lookup[(num >> 6) & 0x3f] +
              lookup[num & 0x3f]
            );
          }

          function encodeChunk(uint8, start, end) {
            var tmp;
            var output = [];
            for (var i = start; i < end; i += 3) {
              tmp =
                ((uint8[i] << 16) & 0xff0000) +
                ((uint8[i + 1] << 8) & 0xff00) +
                (uint8[i + 2] & 0xff);
              output.push(tripletToBase64(tmp));
            }
            return output.join('');
          }

          function fromByteArray(uint8) {
            var tmp;
            var len = uint8.length;
            var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
            var parts = [];
            var maxChunkLength = 16383; // must be multiple of 3

            // go through the array every three bytes, we'll deal with trailing stuff later
            for (
              var i = 0, len2 = len - extraBytes;
              i < len2;
              i += maxChunkLength
            ) {
              parts.push(
                encodeChunk(
                  uint8,
                  i,
                  i + maxChunkLength > len2 ? len2 : i + maxChunkLength
                )
              );
            }

            // pad the end with zeros, but make sure to not forget the extra bytes
            if (extraBytes === 1) {
              tmp = uint8[len - 1];
              parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f] + '==');
            } else if (extraBytes === 2) {
              tmp = (uint8[len - 2] << 8) + uint8[len - 1];
              parts.push(
                lookup[tmp >> 10] +
                  lookup[(tmp >> 4) & 0x3f] +
                  lookup[(tmp << 2) & 0x3f] +
                  '='
              );
            }

            return parts.join('');
          }

          /***/
        },
        /* 53 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          exports.read = function (buffer, offset, isLE, mLen, nBytes) {
            var e, m;
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var nBits = -7;
            var i = isLE ? nBytes - 1 : 0;
            var d = isLE ? -1 : 1;
            var s = buffer[offset + i];

            i += d;

            e = s & ((1 << -nBits) - 1);
            s >>= -nBits;
            nBits += eLen;
            for (
              ;
              nBits > 0;
              e = e * 256 + buffer[offset + i], i += d, nBits -= 8
            ) {}

            m = e & ((1 << -nBits) - 1);
            e >>= -nBits;
            nBits += mLen;
            for (
              ;
              nBits > 0;
              m = m * 256 + buffer[offset + i], i += d, nBits -= 8
            ) {}

            if (e === 0) {
              e = 1 - eBias;
            } else if (e === eMax) {
              return m ? NaN : (s ? -1 : 1) * Infinity;
            } else {
              m = m + Math.pow(2, mLen);
              e = e - eBias;
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
          };

          exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
            var e, m, c;
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
            var i = isLE ? 0 : nBytes - 1;
            var d = isLE ? 1 : -1;
            var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

            value = Math.abs(value);

            if (isNaN(value) || value === Infinity) {
              m = isNaN(value) ? 1 : 0;
              e = eMax;
            } else {
              e = Math.floor(Math.log(value) / Math.LN2);
              if (value * (c = Math.pow(2, -e)) < 1) {
                e--;
                c *= 2;
              }
              if (e + eBias >= 1) {
                value += rt / c;
              } else {
                value += rt * Math.pow(2, 1 - eBias);
              }
              if (value * c >= 2) {
                e++;
                c /= 2;
              }

              if (e + eBias >= eMax) {
                m = 0;
                e = eMax;
              } else if (e + eBias >= 1) {
                m = (value * c - 1) * Math.pow(2, mLen);
                e = e + eBias;
              } else {
                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
                e = 0;
              }
            }

            for (
              ;
              mLen >= 8;
              buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8
            ) {}

            e = (e << mLen) | m;
            eLen += mLen;
            for (
              ;
              eLen > 0;
              buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8
            ) {}

            buffer[offset + i - d] |= s * 128;
          };

          /***/
        },
        /* 54 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var rng = __webpack_require__(26);
          var bytesToUuid = __webpack_require__(27);

          // **`v1()` - Generate time-based UUID**
          //
          // Inspired by https://github.com/LiosK/UUID.js
          // and http://docs.python.org/library/uuid.html

          var _nodeId;
          var _clockseq;

          // Previous uuid creation time
          var _lastMSecs = 0;
          var _lastNSecs = 0;

          // See https://github.com/broofa/node-uuid for API details
          function v1(options, buf, offset) {
            var i = (buf && offset) || 0;
            var b = buf || [];

            options = options || {};
            var node = options.node || _nodeId;
            var clockseq =
              options.clockseq !== undefined ? options.clockseq : _clockseq;

            // node and clockseq need to be initialized to random values if they're not
            // specified.  We do this lazily to minimize issues related to insufficient
            // system entropy.  See #189
            if (node == null || clockseq == null) {
              var seedBytes = rng();
              if (node == null) {
                // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
                node = _nodeId = [
                  seedBytes[0] | 0x01,
                  seedBytes[1],
                  seedBytes[2],
                  seedBytes[3],
                  seedBytes[4],
                  seedBytes[5],
                ];
              }
              if (clockseq == null) {
                // Per 4.2.2, randomize (14 bit) clockseq
                clockseq = _clockseq =
                  ((seedBytes[6] << 8) | seedBytes[7]) & 0x3fff;
              }
            }

            // UUID timestamps are 100 nano-second units since the Gregorian epoch,
            // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
            // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
            // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
            var msecs =
              options.msecs !== undefined
                ? options.msecs
                : new Date().getTime();

            // Per 4.2.1.2, use count of uuid's generated during the current clock
            // cycle to simulate higher resolution clock
            var nsecs =
              options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

            // Time since last uuid creation (in msecs)
            var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;

            // Per 4.2.1.2, Bump clockseq on clock regression
            if (dt < 0 && options.clockseq === undefined) {
              clockseq = (clockseq + 1) & 0x3fff;
            }

            // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
            // time interval
            if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
              nsecs = 0;
            }

            // Per 4.2.1.2 Throw error if too many uuids are requested
            if (nsecs >= 10000) {
              throw new Error(
                "uuid.v1(): Can't create more than 10M uuids/sec"
              );
            }

            _lastMSecs = msecs;
            _lastNSecs = nsecs;
            _clockseq = clockseq;

            // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
            msecs += 12219292800000;

            // `time_low`
            var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
            b[i++] = (tl >>> 24) & 0xff;
            b[i++] = (tl >>> 16) & 0xff;
            b[i++] = (tl >>> 8) & 0xff;
            b[i++] = tl & 0xff;

            // `time_mid`
            var tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;
            b[i++] = (tmh >>> 8) & 0xff;
            b[i++] = tmh & 0xff;

            // `time_high_and_version`
            b[i++] = ((tmh >>> 24) & 0xf) | 0x10; // include version
            b[i++] = (tmh >>> 16) & 0xff;

            // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
            b[i++] = (clockseq >>> 8) | 0x80;

            // `clock_seq_low`
            b[i++] = clockseq & 0xff;

            // `node`
            for (var n = 0; n < 6; ++n) {
              b[i + n] = node[n];
            }

            return buf ? buf : bytesToUuid(b);
          }

          module.exports = v1;

          /***/
        },
        /* 55 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var rng = __webpack_require__(26);
          var bytesToUuid = __webpack_require__(27);

          function v4(options, buf, offset) {
            var i = (buf && offset) || 0;

            if (typeof options == 'string') {
              buf = options === 'binary' ? new Array(16) : null;
              options = null;
            }
            options = options || {};

            var rnds = options.random || (options.rng || rng)();

            // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
            rnds[6] = (rnds[6] & 0x0f) | 0x40;
            rnds[8] = (rnds[8] & 0x3f) | 0x80;

            // Copy bytes to buffer, if provided
            if (buf) {
              for (var ii = 0; ii < 16; ++ii) {
                buf[i + ii] = rnds[ii];
              }
            }

            return buf || bytesToUuid(rnds);
          }

          module.exports = v4;

          /***/
        },
        /* 56 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var BigNumber = __webpack_require__(28);

          /*
    json2.js
    2013-05-26

    Public Domain.

    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.

    See http://www.JSON.org/js.html


    This code should be minified before deployment.
    See http://javascript.crockford.com/jsmin.html

    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
    NOT CONTROL.


    This file creates a global JSON object containing two methods: stringify
    and parse.

        JSON.stringify(value, replacer, space)
            value       any JavaScript value, usually an object or array.

            replacer    an optional parameter that determines how object
                        values are stringified for objects. It can be a
                        function or an array of strings.

            space       an optional parameter that specifies the indentation
                        of nested structures. If it is omitted, the text will
                        be packed without extra whitespace. If it is a number,
                        it will specify the number of spaces to indent at each
                        level. If it is a string (such as '\t' or '&nbsp;'),
                        it contains the characters used to indent at each level.

            This method produces a JSON text from a JavaScript value.

            When an object value is found, if the object contains a toJSON
            method, its toJSON method will be called and the result will be
            stringified. A toJSON method does not serialize: it returns the
            value represented by the name/value pair that should be serialized,
            or undefined if nothing should be serialized. The toJSON method
            will be passed the key associated with the value, and this will be
            bound to the value

            For example, this would serialize Dates as ISO strings.

                Date.prototype.toJSON = function (key) {
                    function f(n) {
                        // Format integers to have at least two digits.
                        return n < 10 ? '0' + n : n;
                    }

                    return this.getUTCFullYear()   + '-' +
                         f(this.getUTCMonth() + 1) + '-' +
                         f(this.getUTCDate())      + 'T' +
                         f(this.getUTCHours())     + ':' +
                         f(this.getUTCMinutes())   + ':' +
                         f(this.getUTCSeconds())   + 'Z';
                };

            You can provide an optional replacer method. It will be passed the
            key and value of each member, with this bound to the containing
            object. The value that is returned from your method will be
            serialized. If your method returns undefined, then the member will
            be excluded from the serialization.

            If the replacer parameter is an array of strings, then it will be
            used to select the members to be serialized. It filters the results
            such that only members with keys listed in the replacer array are
            stringified.

            Values that do not have JSON representations, such as undefined or
            functions, will not be serialized. Such values in objects will be
            dropped; in arrays they will be replaced with null. You can use
            a replacer function to replace those with JSON values.
            JSON.stringify(undefined) returns undefined.

            The optional space parameter produces a stringification of the
            value that is filled with line breaks and indentation to make it
            easier to read.

            If the space parameter is a non-empty string, then that string will
            be used for indentation. If the space parameter is a number, then
            the indentation will be that many spaces.

            Example:

            text = JSON.stringify(['e', {pluribus: 'unum'}]);
            // text is '["e",{"pluribus":"unum"}]'


            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\t');
            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

            text = JSON.stringify([new Date()], function (key, value) {
                return this[key] instanceof Date ?
                    'Date(' + this[key] + ')' : value;
            });
            // text is '["Date(---current time---)"]'


        JSON.parse(text, reviver)
            This method parses a JSON text to produce an object or array.
            It can throw a SyntaxError exception.

            The optional reviver parameter is a function that can filter and
            transform the results. It receives each of the keys and values,
            and its return value is used instead of the original value.
            If it returns what it received, then the structure is not modified.
            If it returns undefined then the member is deleted.

            Example:

            // Parse the text. Values that look like ISO date strings will
            // be converted to Date objects.

            myData = JSON.parse(text, function (key, value) {
                var a;
                if (typeof value === 'string') {
                    a =
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
                    if (a) {
                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
                            +a[5], +a[6]));
                    }
                }
                return value;
            });

            myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
                var d;
                if (typeof value === 'string' &&
                        value.slice(0, 5) === 'Date(' &&
                        value.slice(-1) === ')') {
                    d = new Date(value.slice(5, -1));
                    if (d) {
                        return d;
                    }
                }
                return value;
            });


    This is a reference implementation. You are free to copy, modify, or
    redistribute.
*/

          /*jslint evil: true, regexp: true */

          /*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,
    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
    lastIndex, length, parse, prototype, push, replace, slice, stringify,
    test, toJSON, toString, valueOf
*/

          // Create a JSON object only if one does not already exist. We create the
          // methods in a closure to avoid creating global variables.

          var JSON = module.exports;

          (function () {
            'use strict';

            function f(n) {
              // Format integers to have at least two digits.
              return n < 10 ? '0' + n : n;
            }

            var cx =
                /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
              escapable =
                /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
              gap,
              indent,
              meta = {
                // table of character substitutions
                '\b': '\\b',
                '\t': '\\t',
                '\n': '\\n',
                '\f': '\\f',
                '\r': '\\r',
                '"': '\\"',
                '\\': '\\\\',
              },
              rep;

            function quote(string) {
              // If the string contains no control characters, no quote characters, and no
              // backslash characters, then we can safely slap some quotes around it.
              // Otherwise we must also replace the offending characters with safe escape
              // sequences.

              escapable.lastIndex = 0;
              return escapable.test(string)
                ? '"' +
                    string.replace(escapable, function (a) {
                      var c = meta[a];
                      return typeof c === 'string'
                        ? c
                        : '\\u' +
                            ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                    }) +
                    '"'
                : '"' + string + '"';
            }

            function str(key, holder) {
              // Produce a string from holder[key].

              var i,
                // The loop counter.
                k,
                // The member key.
                v,
                // The member value.
                length,
                mind = gap,
                partial,
                value = holder[key],
                isBigNumber =
                  value != null &&
                  (value instanceof BigNumber || BigNumber.isBigNumber(value));

              // If the value has a toJSON method, call it to obtain a replacement value.

              if (
                value &&
                (typeof value === 'undefined'
                  ? 'undefined'
                  : _typeof(value)) === 'object' &&
                typeof value.toJSON === 'function'
              ) {
                value = value.toJSON(key);
              }

              // If we were called with a replacer function, then call the replacer to
              // obtain a replacement value.

              if (typeof rep === 'function') {
                value = rep.call(holder, key, value);
              }

              // What happens next depends on the value's type.

              switch (
                typeof value === 'undefined' ? 'undefined' : _typeof(value)
              ) {
                case 'string':
                  if (isBigNumber) {
                    return value;
                  } else {
                    return quote(value);
                  }

                case 'number':
                  // JSON numbers must be finite. Encode non-finite numbers as null.

                  return isFinite(value) ? String(value) : 'null';

                case 'boolean':
                case 'null':
                case 'bigint':
                  // If the value is a boolean or null, convert it to a string. Note:
                  // typeof null does not produce 'null'. The case is included here in
                  // the remote chance that this gets fixed someday.

                  return String(value);

                // If the type is 'object', we might be dealing with an object or an array or
                // null.

                case 'object':
                  // Due to a specification blunder in ECMAScript, typeof null is 'object',
                  // so watch out for that case.

                  if (!value) {
                    return 'null';
                  }

                  // Make an array to hold the partial results of stringifying this object value.

                  gap += indent;
                  partial = [];

                  // Is the value an array?

                  if (
                    Object.prototype.toString.apply(value) === '[object Array]'
                  ) {
                    // The value is an array. Stringify every element. Use null as a placeholder
                    // for non-JSON values.

                    length = value.length;
                    for (i = 0; i < length; i += 1) {
                      partial[i] = str(i, value) || 'null';
                    }

                    // Join all of the elements together, separated with commas, and wrap them in
                    // brackets.

                    v =
                      partial.length === 0
                        ? '[]'
                        : gap
                        ? '[\n' +
                          gap +
                          partial.join(',\n' + gap) +
                          '\n' +
                          mind +
                          ']'
                        : '[' + partial.join(',') + ']';
                    gap = mind;
                    return v;
                  }

                  // If the replacer is an array, use it to select the members to be stringified.

                  if (
                    rep &&
                    (typeof rep === 'undefined'
                      ? 'undefined'
                      : _typeof(rep)) === 'object'
                  ) {
                    length = rep.length;
                    for (i = 0; i < length; i += 1) {
                      if (typeof rep[i] === 'string') {
                        k = rep[i];
                        v = str(k, value);
                        if (v) {
                          partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                      }
                    }
                  } else {
                    // Otherwise, iterate through all of the keys in the object.

                    Object.keys(value).forEach(function (k) {
                      var v = str(k, value);
                      if (v) {
                        partial.push(quote(k) + (gap ? ': ' : ':') + v);
                      }
                    });
                  }

                  // Join all of the member texts together, separated with commas,
                  // and wrap them in braces.

                  v =
                    partial.length === 0
                      ? '{}'
                      : gap
                      ? '{\n' +
                        gap +
                        partial.join(',\n' + gap) +
                        '\n' +
                        mind +
                        '}'
                      : '{' + partial.join(',') + '}';
                  gap = mind;
                  return v;
              }
            }

            // If the JSON object does not yet have a stringify method, give it one.

            if (typeof JSON.stringify !== 'function') {
              JSON.stringify = function (value, replacer, space) {
                // The stringify method takes a value and an optional replacer, and an optional
                // space parameter, and returns a JSON text. The replacer can be a function
                // that can replace values, or an array of strings that will select the keys.
                // A default replacer method can be provided. Use of the space parameter can
                // produce text that is more easily readable.

                var i;
                gap = '';
                indent = '';

                // If the space parameter is a number, make an indent string containing that
                // many spaces.

                if (typeof space === 'number') {
                  for (i = 0; i < space; i += 1) {
                    indent += ' ';
                  }

                  // If the space parameter is a string, it will be used as the indent string.
                } else if (typeof space === 'string') {
                  indent = space;
                }

                // If there is a replacer, it must be a function or an array.
                // Otherwise, throw an error.

                rep = replacer;
                if (
                  replacer &&
                  typeof replacer !== 'function' &&
                  ((typeof replacer === 'undefined'
                    ? 'undefined'
                    : _typeof(replacer)) !== 'object' ||
                    typeof replacer.length !== 'number')
                ) {
                  throw new Error('JSON.stringify');
                }

                // Make a fake root object containing our value under the key of ''.
                // Return the result of stringifying the value.

                return str('', { '': value });
              };
            }
          })();

          /***/
        },
        /* 57 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var BigNumber = null;

          // regexpxs extracted from
          // (c) BSD-3-Clause
          // https://github.com/fastify/secure-json-parse/graphs/contributors and https://github.com/hapijs/bourne/graphs/contributors

          var suspectProtoRx =
            /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
          var suspectConstructorRx =
            /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

          /*
    json_parse.js
    2012-06-20

    Public Domain.

    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.

    This file creates a json_parse function.
    During create you can (optionally) specify some behavioural switches

        require('json-bigint')(options)

            The optional options parameter holds switches that drive certain
            aspects of the parsing process:
            * options.strict = true will warn about duplicate-key usage in the json.
              The default (strict = false) will silently ignore those and overwrite
              values for keys that are in duplicate use.

    The resulting function follows this signature:
        json_parse(text, reviver)
            This method parses a JSON text to produce an object or array.
            It can throw a SyntaxError exception.

            The optional reviver parameter is a function that can filter and
            transform the results. It receives each of the keys and values,
            and its return value is used instead of the original value.
            If it returns what it received, then the structure is not modified.
            If it returns undefined then the member is deleted.

            Example:

            // Parse the text. Values that look like ISO date strings will
            // be converted to Date objects.

            myData = json_parse(text, function (key, value) {
                var a;
                if (typeof value === 'string') {
                    a =
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
                    if (a) {
                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
                            +a[5], +a[6]));
                    }
                }
                return value;
            });

    This is a reference implementation. You are free to copy, modify, or
    redistribute.

    This code should be minified before deployment.
    See http://javascript.crockford.com/jsmin.html

    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
    NOT CONTROL.
*/

          /*members "", "\"", "\/", "\\", at, b, call, charAt, f, fromCharCode,
    hasOwnProperty, message, n, name, prototype, push, r, t, text
*/

          var json_parse = function json_parse(options) {
            'use strict';

            // This is a function that can parse a JSON text, producing a JavaScript
            // data structure. It is a simple, recursive descent parser. It does not use
            // eval or regular expressions, so it can be used as a model for implementing
            // a JSON parser in other languages.

            // We are defining the function inside of another function to avoid creating
            // global variables.

            // Default options one can override by passing options to the parse()

            var _options = {
              strict: false, // not being strict means do not generate syntax errors for "duplicate key"
              storeAsString: false, // toggles whether the values should be stored as BigNumber (default) or a string
              alwaysParseAsBig: false, // toggles whether all numbers should be Big
              useNativeBigInt: false, // toggles whether to use native BigInt instead of bignumber.js
              protoAction: 'error',
              constructorAction: 'error',
            };

            // If there are options, then use them to override the default _options
            if (options !== undefined && options !== null) {
              if (options.strict === true) {
                _options.strict = true;
              }
              if (options.storeAsString === true) {
                _options.storeAsString = true;
              }
              _options.alwaysParseAsBig =
                options.alwaysParseAsBig === true
                  ? options.alwaysParseAsBig
                  : false;
              _options.useNativeBigInt =
                options.useNativeBigInt === true
                  ? options.useNativeBigInt
                  : false;

              if (typeof options.constructorAction !== 'undefined') {
                if (
                  options.constructorAction === 'error' ||
                  options.constructorAction === 'ignore' ||
                  options.constructorAction === 'preserve'
                ) {
                  _options.constructorAction = options.constructorAction;
                } else {
                  throw new Error(
                    'Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ' +
                      options.constructorAction
                  );
                }
              }

              if (typeof options.protoAction !== 'undefined') {
                if (
                  options.protoAction === 'error' ||
                  options.protoAction === 'ignore' ||
                  options.protoAction === 'preserve'
                ) {
                  _options.protoAction = options.protoAction;
                } else {
                  throw new Error(
                    'Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ' +
                      options.protoAction
                  );
                }
              }
            }

            var at,
              // The index of the current character
              ch,
              // The current character
              escapee = {
                '"': '"',
                '\\': '\\',
                '/': '/',
                b: '\b',
                f: '\f',
                n: '\n',
                r: '\r',
                t: '\t',
              },
              text,
              error = function error(m) {
                // Call error when something is wrong.

                throw {
                  name: 'SyntaxError',
                  message: m,
                  at: at,
                  text: text,
                };
              },
              next = function next(c) {
                // If a c parameter is provided, verify that it matches the current character.

                if (c && c !== ch) {
                  error("Expected '" + c + "' instead of '" + ch + "'");
                }

                // Get the next character. When there are no more characters,
                // return the empty string.

                ch = text.charAt(at);
                at += 1;
                return ch;
              },
              number = function number() {
                // Parse a number value.

                var number,
                  string = '';

                if (ch === '-') {
                  string = '-';
                  next('-');
                }
                while (ch >= '0' && ch <= '9') {
                  string += ch;
                  next();
                }
                if (ch === '.') {
                  string += '.';
                  while (next() && ch >= '0' && ch <= '9') {
                    string += ch;
                  }
                }
                if (ch === 'e' || ch === 'E') {
                  string += ch;
                  next();
                  if (ch === '-' || ch === '+') {
                    string += ch;
                    next();
                  }
                  while (ch >= '0' && ch <= '9') {
                    string += ch;
                    next();
                  }
                }
                number = +string;
                if (!isFinite(number)) {
                  error('Bad number');
                } else {
                  if (BigNumber == null) BigNumber = __webpack_require__(28);
                  //if (number > 9007199254740992 || number < -9007199254740992)
                  // Bignumber has stricter check: everything with length > 15 digits disallowed
                  if (string.length > 15)
                    return _options.storeAsString
                      ? string
                      : _options.useNativeBigInt
                      ? BigInt(string)
                      : new BigNumber(string);
                  else
                    return !_options.alwaysParseAsBig
                      ? number
                      : _options.useNativeBigInt
                      ? BigInt(number)
                      : new BigNumber(number);
                }
              },
              string = function string() {
                // Parse a string value.

                var hex,
                  i,
                  string = '',
                  uffff;

                // When parsing for string values, we must look for " and \ characters.

                if (ch === '"') {
                  var startAt = at;
                  while (next()) {
                    if (ch === '"') {
                      if (at - 1 > startAt)
                        string += text.substring(startAt, at - 1);
                      next();
                      return string;
                    }
                    if (ch === '\\') {
                      if (at - 1 > startAt)
                        string += text.substring(startAt, at - 1);
                      next();
                      if (ch === 'u') {
                        uffff = 0;
                        for (i = 0; i < 4; i += 1) {
                          hex = parseInt(next(), 16);
                          if (!isFinite(hex)) {
                            break;
                          }
                          uffff = uffff * 16 + hex;
                        }
                        string += String.fromCharCode(uffff);
                      } else if (typeof escapee[ch] === 'string') {
                        string += escapee[ch];
                      } else {
                        break;
                      }
                      startAt = at;
                    }
                  }
                }
                error('Bad string');
              },
              white = function white() {
                // Skip whitespace.

                while (ch && ch <= ' ') {
                  next();
                }
              },
              word = function word() {
                // true, false, or null.

                switch (ch) {
                  case 't':
                    next('t');
                    next('r');
                    next('u');
                    next('e');
                    return true;
                  case 'f':
                    next('f');
                    next('a');
                    next('l');
                    next('s');
                    next('e');
                    return false;
                  case 'n':
                    next('n');
                    next('u');
                    next('l');
                    next('l');
                    return null;
                }
                error("Unexpected '" + ch + "'");
              },
              value,
              // Place holder for the value function.
              array = function array() {
                // Parse an array value.

                var array = [];

                if (ch === '[') {
                  next('[');
                  white();
                  if (ch === ']') {
                    next(']');
                    return array; // empty array
                  }
                  while (ch) {
                    array.push(value());
                    white();
                    if (ch === ']') {
                      next(']');
                      return array;
                    }
                    next(',');
                    white();
                  }
                }
                error('Bad array');
              },
              object = function object() {
                // Parse an object value.

                var key,
                  object = Object.create(null);

                if (ch === '{') {
                  next('{');
                  white();
                  if (ch === '}') {
                    next('}');
                    return object; // empty object
                  }
                  while (ch) {
                    key = string();
                    white();
                    next(':');
                    if (
                      _options.strict === true &&
                      Object.hasOwnProperty.call(object, key)
                    ) {
                      error('Duplicate key "' + key + '"');
                    }

                    if (suspectProtoRx.test(key) === true) {
                      if (_options.protoAction === 'error') {
                        error('Object contains forbidden prototype property');
                      } else if (_options.protoAction === 'ignore') {
                        value();
                      } else {
                        object[key] = value();
                      }
                    } else if (suspectConstructorRx.test(key) === true) {
                      if (_options.constructorAction === 'error') {
                        error('Object contains forbidden constructor property');
                      } else if (_options.constructorAction === 'ignore') {
                        value();
                      } else {
                        object[key] = value();
                      }
                    } else {
                      object[key] = value();
                    }

                    white();
                    if (ch === '}') {
                      next('}');
                      return object;
                    }
                    next(',');
                    white();
                  }
                }
                error('Bad object');
              };

            value = function value() {
              // Parse a JSON value. It could be an object, an array, a string, a number,
              // or a word.

              white();
              switch (ch) {
                case '{':
                  return object();
                case '[':
                  return array();
                case '"':
                  return string();
                case '-':
                  return number();
                default:
                  return ch >= '0' && ch <= '9' ? number() : word();
              }
            };

            // Return the json_parse function. It will have access to all of the above
            // functions and variables.

            return function (source, reviver) {
              var result;

              text = source + '';
              at = 0;
              ch = ' ';
              result = value();
              white();
              if (ch) {
                error('Syntax error');
              }

              // If there is a reviver function, we recursively walk the new structure,
              // passing each name/value pair to the reviver function for possible
              // transformation, starting with a temporary root object that holds the result
              // in an empty key. If there is not a reviver function, we simply return the
              // result.

              return typeof reviver === 'function'
                ? (function walk(holder, key) {
                    var k,
                      v,
                      value = holder[key];
                    if (
                      value &&
                      (typeof value === 'undefined'
                        ? 'undefined'
                        : _typeof(value)) === 'object'
                    ) {
                      Object.keys(value).forEach(function (k) {
                        v = walk(value, k);
                        if (v !== undefined) {
                          value[k] = v;
                        } else {
                          delete value[k];
                        }
                      });
                    }
                    return reviver.call(holder, key, value);
                  })({ '': result }, '')
                : result;
            };
          };

          module.exports = json_parse;

          /***/
        },
        /* 58 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var inherits = __webpack_require__(0);
          var Legacy = __webpack_require__(59);
          var Base = __webpack_require__(30);
          var Buffer = __webpack_require__(1).Buffer;
          var md5 = __webpack_require__(71);
          var RIPEMD160 = __webpack_require__(73);

          var sha = __webpack_require__(74);

          var ZEROS = Buffer.alloc(128);

          function Hmac(alg, key) {
            Base.call(this, 'digest');
            if (typeof key === 'string') {
              key = Buffer.from(key);
            }

            var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;

            this._alg = alg;
            this._key = key;
            if (key.length > blocksize) {
              var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);
              key = hash.update(key).digest();
            } else if (key.length < blocksize) {
              key = Buffer.concat([key, ZEROS], blocksize);
            }

            var ipad = (this._ipad = Buffer.allocUnsafe(blocksize));
            var opad = (this._opad = Buffer.allocUnsafe(blocksize));

            for (var i = 0; i < blocksize; i++) {
              ipad[i] = key[i] ^ 0x36;
              opad[i] = key[i] ^ 0x5c;
            }
            this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);
            this._hash.update(ipad);
          }

          inherits(Hmac, Base);

          Hmac.prototype._update = function (data) {
            this._hash.update(data);
          };

          Hmac.prototype._final = function () {
            var h = this._hash.digest();
            var hash =
              this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg);
            return hash.update(this._opad).update(h).digest();
          };

          module.exports = function createHmac(alg, key) {
            alg = alg.toLowerCase();
            if (alg === 'rmd160' || alg === 'ripemd160') {
              return new Hmac('rmd160', key);
            }
            if (alg === 'md5') {
              return new Legacy(md5, key);
            }
            return new Hmac(alg, key);
          };

          /***/
        },
        /* 59 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var inherits = __webpack_require__(0);
          var Buffer = __webpack_require__(1).Buffer;

          var Base = __webpack_require__(30);

          var ZEROS = Buffer.alloc(128);
          var blocksize = 64;

          function Hmac(alg, key) {
            Base.call(this, 'digest');
            if (typeof key === 'string') {
              key = Buffer.from(key);
            }

            this._alg = alg;
            this._key = key;

            if (key.length > blocksize) {
              key = alg(key);
            } else if (key.length < blocksize) {
              key = Buffer.concat([key, ZEROS], blocksize);
            }

            var ipad = (this._ipad = Buffer.allocUnsafe(blocksize));
            var opad = (this._opad = Buffer.allocUnsafe(blocksize));

            for (var i = 0; i < blocksize; i++) {
              ipad[i] = key[i] ^ 0x36;
              opad[i] = key[i] ^ 0x5c;
            }

            this._hash = [ipad];
          }

          inherits(Hmac, Base);

          Hmac.prototype._update = function (data) {
            this._hash.push(data);
          };

          Hmac.prototype._final = function () {
            var h = this._alg(Buffer.concat(this._hash));
            return this._alg(Buffer.concat([this._opad, h]));
          };
          module.exports = Hmac;

          /***/
        },
        /* 60 */
        /***/ function (module, exports) {
          /* (ignored) */
          /***/
        },
        /* 61 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          var Buffer = __webpack_require__(1).Buffer;
          var util = __webpack_require__(62);

          function copyBuffer(src, target, offset) {
            src.copy(target, offset);
          }

          module.exports = (function () {
            function BufferList() {
              _classCallCheck(this, BufferList);

              this.head = null;
              this.tail = null;
              this.length = 0;
            }

            BufferList.prototype.push = function push(v) {
              var entry = { data: v, next: null };
              if (this.length > 0) this.tail.next = entry;
              else this.head = entry;
              this.tail = entry;
              ++this.length;
            };

            BufferList.prototype.unshift = function unshift(v) {
              var entry = { data: v, next: this.head };
              if (this.length === 0) this.tail = entry;
              this.head = entry;
              ++this.length;
            };

            BufferList.prototype.shift = function shift() {
              if (this.length === 0) return;
              var ret = this.head.data;
              if (this.length === 1) this.head = this.tail = null;
              else this.head = this.head.next;
              --this.length;
              return ret;
            };

            BufferList.prototype.clear = function clear() {
              this.head = this.tail = null;
              this.length = 0;
            };

            BufferList.prototype.join = function join(s) {
              if (this.length === 0) return '';
              var p = this.head;
              var ret = '' + p.data;
              while ((p = p.next)) {
                ret += s + p.data;
              }
              return ret;
            };

            BufferList.prototype.concat = function concat(n) {
              if (this.length === 0) return Buffer.alloc(0);
              if (this.length === 1) return this.head.data;
              var ret = Buffer.allocUnsafe(n >>> 0);
              var p = this.head;
              var i = 0;
              while (p) {
                copyBuffer(p.data, ret, i);
                i += p.data.length;
                p = p.next;
              }
              return ret;
            };

            return BufferList;
          })();

          if (util && util.inspect && util.inspect.custom) {
            module.exports.prototype[util.inspect.custom] = function () {
              var obj = util.inspect({ length: this.length });
              return this.constructor.name + ' ' + obj;
            };
          }

          /***/
        },
        /* 62 */
        /***/ function (module, exports) {
          /* (ignored) */
          /***/
        },
        /* 63 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            var scope =
              (typeof global !== 'undefined' && global) ||
              (typeof self !== 'undefined' && self) ||
              window;
            var apply = Function.prototype.apply;

            // DOM APIs, for completeness

            exports.setTimeout = function () {
              return new Timeout(
                apply.call(setTimeout, scope, arguments),
                clearTimeout
              );
            };
            exports.setInterval = function () {
              return new Timeout(
                apply.call(setInterval, scope, arguments),
                clearInterval
              );
            };
            exports.clearTimeout = exports.clearInterval = function (timeout) {
              if (timeout) {
                timeout.close();
              }
            };

            function Timeout(id, clearFn) {
              this._id = id;
              this._clearFn = clearFn;
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function () {};
            Timeout.prototype.close = function () {
              this._clearFn.call(scope, this._id);
            };

            // Does not start the time, just sets up the members needed.
            exports.enroll = function (item, msecs) {
              clearTimeout(item._idleTimeoutId);
              item._idleTimeout = msecs;
            };

            exports.unenroll = function (item) {
              clearTimeout(item._idleTimeoutId);
              item._idleTimeout = -1;
            };

            exports._unrefActive = exports.active = function (item) {
              clearTimeout(item._idleTimeoutId);

              var msecs = item._idleTimeout;
              if (msecs >= 0) {
                item._idleTimeoutId = setTimeout(function onTimeout() {
                  if (item._onTimeout) item._onTimeout();
                }, msecs);
              }
            };

            // setimmediate attaches itself to the global object
            __webpack_require__(64);
            // On some exotic environments, it's not clear which object `setimmediate` was
            // able to install onto.  Search each possibility in the same order as the
            // `setimmediate` library.
            exports.setImmediate =
              (typeof self !== 'undefined' && self.setImmediate) ||
              (typeof global !== 'undefined' && global.setImmediate) ||
              (undefined && undefined.setImmediate);
            exports.clearImmediate =
              (typeof self !== 'undefined' && self.clearImmediate) ||
              (typeof global !== 'undefined' && global.clearImmediate) ||
              (undefined && undefined.clearImmediate);
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 64 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global, process) {
            (function (global, undefined) {
              'use strict';

              if (global.setImmediate) {
                return;
              }

              var nextHandle = 1; // Spec says greater than zero
              var tasksByHandle = {};
              var currentlyRunningATask = false;
              var doc = global.document;
              var registerImmediate;

              function setImmediate(callback) {
                // Callback can either be a function or a string
                if (typeof callback !== 'function') {
                  callback = new Function('' + callback);
                }
                // Copy function arguments
                var args = new Array(arguments.length - 1);
                for (var i = 0; i < args.length; i++) {
                  args[i] = arguments[i + 1];
                }
                // Store and register the task
                var task = { callback: callback, args: args };
                tasksByHandle[nextHandle] = task;
                registerImmediate(nextHandle);
                return nextHandle++;
              }

              function clearImmediate(handle) {
                delete tasksByHandle[handle];
              }

              function run(task) {
                var callback = task.callback;
                var args = task.args;
                switch (args.length) {
                  case 0:
                    callback();
                    break;
                  case 1:
                    callback(args[0]);
                    break;
                  case 2:
                    callback(args[0], args[1]);
                    break;
                  case 3:
                    callback(args[0], args[1], args[2]);
                    break;
                  default:
                    callback.apply(undefined, args);
                    break;
                }
              }

              function runIfPresent(handle) {
                // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
                // So if we're currently running a task, we'll need to delay this invocation.
                if (currentlyRunningATask) {
                  // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                  // "too much recursion" error.
                  setTimeout(runIfPresent, 0, handle);
                } else {
                  var task = tasksByHandle[handle];
                  if (task) {
                    currentlyRunningATask = true;
                    try {
                      run(task);
                    } finally {
                      clearImmediate(handle);
                      currentlyRunningATask = false;
                    }
                  }
                }
              }

              function installNextTickImplementation() {
                registerImmediate = function registerImmediate(handle) {
                  process.nextTick(function () {
                    runIfPresent(handle);
                  });
                };
              }

              function canUsePostMessage() {
                // The test against `importScripts` prevents this implementation from being installed inside a web worker,
                // where `global.postMessage` means something completely different and can't be used for this purpose.
                if (global.postMessage && !global.importScripts) {
                  var postMessageIsAsynchronous = true;
                  var oldOnMessage = global.onmessage;
                  global.onmessage = function () {
                    postMessageIsAsynchronous = false;
                  };
                  global.postMessage('', '*');
                  global.onmessage = oldOnMessage;
                  return postMessageIsAsynchronous;
                }
              }

              function installPostMessageImplementation() {
                // Installs an event handler on `global` for the `message` event: see
                // * https://developer.mozilla.org/en/DOM/window.postMessage
                // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

                var messagePrefix = 'setImmediate$' + Math.random() + '$';
                var onGlobalMessage = function onGlobalMessage(event) {
                  if (
                    event.source === global &&
                    typeof event.data === 'string' &&
                    event.data.indexOf(messagePrefix) === 0
                  ) {
                    runIfPresent(+event.data.slice(messagePrefix.length));
                  }
                };

                if (global.addEventListener) {
                  global.addEventListener('message', onGlobalMessage, false);
                } else {
                  global.attachEvent('onmessage', onGlobalMessage);
                }

                registerImmediate = function registerImmediate(handle) {
                  global.postMessage(messagePrefix + handle, '*');
                };
              }

              function installMessageChannelImplementation() {
                var channel = new MessageChannel();
                channel.port1.onmessage = function (event) {
                  var handle = event.data;
                  runIfPresent(handle);
                };

                registerImmediate = function registerImmediate(handle) {
                  channel.port2.postMessage(handle);
                };
              }

              function installReadyStateChangeImplementation() {
                var html = doc.documentElement;
                registerImmediate = function registerImmediate(handle) {
                  // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                  // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                  var script = doc.createElement('script');
                  script.onreadystatechange = function () {
                    runIfPresent(handle);
                    script.onreadystatechange = null;
                    html.removeChild(script);
                    script = null;
                  };
                  html.appendChild(script);
                };
              }

              function installSetTimeoutImplementation() {
                registerImmediate = function registerImmediate(handle) {
                  setTimeout(runIfPresent, 0, handle);
                };
              }

              // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
              var attachTo =
                Object.getPrototypeOf && Object.getPrototypeOf(global);
              attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

              // Don't get fooled by e.g. browserify environments.
              if ({}.toString.call(global.process) === '[object process]') {
                // For Node.js before 0.9
                installNextTickImplementation();
              } else if (canUsePostMessage()) {
                // For non-IE10 modern browsers
                installPostMessageImplementation();
              } else if (global.MessageChannel) {
                // For web workers, where supported
                installMessageChannelImplementation();
              } else if (
                doc &&
                'onreadystatechange' in doc.createElement('script')
              ) {
                // For IE 6–8
                installReadyStateChangeImplementation();
              } else {
                // For older browsers
                installSetTimeoutImplementation();
              }

              attachTo.setImmediate = setImmediate;
              attachTo.clearImmediate = clearImmediate;
            })(
              typeof self === 'undefined'
                ? typeof global === 'undefined'
                  ? undefined
                  : global
                : self
            );
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2), __webpack_require__(3));

          /***/
        },
        /* 65 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            /**
             * Module exports.
             */

            module.exports = deprecate;

            /**
             * Mark that a method should not be used.
             * Returns a modified function which warns once by default.
             *
             * If `localStorage.noDeprecation = true` is set, then it is a no-op.
             *
             * If `localStorage.throwDeprecation = true` is set, then deprecated functions
             * will throw an Error when invoked.
             *
             * If `localStorage.traceDeprecation = true` is set, then deprecated functions
             * will invoke `console.trace()` instead of `console.error()`.
             *
             * @param {Function} fn - the function to deprecate
             * @param {String} msg - the string to print to the console when `fn` is invoked
             * @returns {Function} a new "deprecated" version of `fn`
             * @api public
             */

            function deprecate(fn, msg) {
              if (config('noDeprecation')) {
                return fn;
              }

              var warned = false;
              function deprecated() {
                if (!warned) {
                  if (config('throwDeprecation')) {
                    throw new Error(msg);
                  } else if (config('traceDeprecation')) {
                    console.trace(msg);
                  } else {
                    console.warn(msg);
                  }
                  warned = true;
                }
                return fn.apply(this, arguments);
              }

              return deprecated;
            }

            /**
             * Checks `localStorage` for boolean values for the given `name`.
             *
             * @param {String} name
             * @returns {Boolean}
             * @api private
             */

            function config(name) {
              // accessing global.localStorage can trigger a DOMException in sandboxed iframes
              try {
                if (!global.localStorage) return false;
              } catch (_) {
                return false;
              }
              var val = global.localStorage[name];
              if (null == val) return false;
              return String(val).toLowerCase() === 'true';
            }
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 66 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // a passthrough stream.
          // basically just the most minimal sort of Transform stream.
          // Every written chunk gets output as-is.

          module.exports = PassThrough;

          var Transform = __webpack_require__(35);

          /*<replacement>*/
          var util = __webpack_require__(11);
          util.inherits = __webpack_require__(0);
          /*</replacement>*/

          util.inherits(PassThrough, Transform);

          function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options);

            Transform.call(this, options);
          }

          PassThrough.prototype._transform = function (chunk, encoding, cb) {
            cb(null, chunk);
          };

          /***/
        },
        /* 67 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = __webpack_require__(18);

          /***/
        },
        /* 68 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = __webpack_require__(8);

          /***/
        },
        /* 69 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = __webpack_require__(10).Transform;

          /***/
        },
        /* 70 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = __webpack_require__(10).PassThrough;

          /***/
        },
        /* 71 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var MD5 = __webpack_require__(72);

          module.exports = function (buffer) {
            return new MD5().update(buffer).digest();
          };

          /***/
        },
        /* 72 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var inherits = __webpack_require__(0);
          var HashBase = __webpack_require__(36);
          var Buffer = __webpack_require__(1).Buffer;

          var ARRAY16 = new Array(16);

          function MD5() {
            HashBase.call(this, 64);

            // state
            this._a = 0x67452301;
            this._b = 0xefcdab89;
            this._c = 0x98badcfe;
            this._d = 0x10325476;
          }

          inherits(MD5, HashBase);

          MD5.prototype._update = function () {
            var M = ARRAY16;
            for (var i = 0; i < 16; ++i) {
              M[i] = this._block.readInt32LE(i * 4);
            }
            var a = this._a;
            var b = this._b;
            var c = this._c;
            var d = this._d;

            a = fnF(a, b, c, d, M[0], 0xd76aa478, 7);
            d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12);
            c = fnF(c, d, a, b, M[2], 0x242070db, 17);
            b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22);
            a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7);
            d = fnF(d, a, b, c, M[5], 0x4787c62a, 12);
            c = fnF(c, d, a, b, M[6], 0xa8304613, 17);
            b = fnF(b, c, d, a, M[7], 0xfd469501, 22);
            a = fnF(a, b, c, d, M[8], 0x698098d8, 7);
            d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12);
            c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17);
            b = fnF(b, c, d, a, M[11], 0x895cd7be, 22);
            a = fnF(a, b, c, d, M[12], 0x6b901122, 7);
            d = fnF(d, a, b, c, M[13], 0xfd987193, 12);
            c = fnF(c, d, a, b, M[14], 0xa679438e, 17);
            b = fnF(b, c, d, a, M[15], 0x49b40821, 22);

            a = fnG(a, b, c, d, M[1], 0xf61e2562, 5);
            d = fnG(d, a, b, c, M[6], 0xc040b340, 9);
            c = fnG(c, d, a, b, M[11], 0x265e5a51, 14);
            b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20);
            a = fnG(a, b, c, d, M[5], 0xd62f105d, 5);
            d = fnG(d, a, b, c, M[10], 0x02441453, 9);
            c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14);
            b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20);
            a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5);
            d = fnG(d, a, b, c, M[14], 0xc33707d6, 9);
            c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14);
            b = fnG(b, c, d, a, M[8], 0x455a14ed, 20);
            a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5);
            d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9);
            c = fnG(c, d, a, b, M[7], 0x676f02d9, 14);
            b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20);

            a = fnH(a, b, c, d, M[5], 0xfffa3942, 4);
            d = fnH(d, a, b, c, M[8], 0x8771f681, 11);
            c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16);
            b = fnH(b, c, d, a, M[14], 0xfde5380c, 23);
            a = fnH(a, b, c, d, M[1], 0xa4beea44, 4);
            d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11);
            c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16);
            b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23);
            a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4);
            d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11);
            c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16);
            b = fnH(b, c, d, a, M[6], 0x04881d05, 23);
            a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4);
            d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11);
            c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16);
            b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23);

            a = fnI(a, b, c, d, M[0], 0xf4292244, 6);
            d = fnI(d, a, b, c, M[7], 0x432aff97, 10);
            c = fnI(c, d, a, b, M[14], 0xab9423a7, 15);
            b = fnI(b, c, d, a, M[5], 0xfc93a039, 21);
            a = fnI(a, b, c, d, M[12], 0x655b59c3, 6);
            d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10);
            c = fnI(c, d, a, b, M[10], 0xffeff47d, 15);
            b = fnI(b, c, d, a, M[1], 0x85845dd1, 21);
            a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6);
            d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10);
            c = fnI(c, d, a, b, M[6], 0xa3014314, 15);
            b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21);
            a = fnI(a, b, c, d, M[4], 0xf7537e82, 6);
            d = fnI(d, a, b, c, M[11], 0xbd3af235, 10);
            c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15);
            b = fnI(b, c, d, a, M[9], 0xeb86d391, 21);

            this._a = (this._a + a) | 0;
            this._b = (this._b + b) | 0;
            this._c = (this._c + c) | 0;
            this._d = (this._d + d) | 0;
          };

          MD5.prototype._digest = function () {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80;
            if (this._blockOffset > 56) {
              this._block.fill(0, this._blockOffset, 64);
              this._update();
              this._blockOffset = 0;
            }

            this._block.fill(0, this._blockOffset, 56);
            this._block.writeUInt32LE(this._length[0], 56);
            this._block.writeUInt32LE(this._length[1], 60);
            this._update();

            // produce result
            var buffer = Buffer.allocUnsafe(16);
            buffer.writeInt32LE(this._a, 0);
            buffer.writeInt32LE(this._b, 4);
            buffer.writeInt32LE(this._c, 8);
            buffer.writeInt32LE(this._d, 12);
            return buffer;
          };

          function rotl(x, n) {
            return (x << n) | (x >>> (32 - n));
          }

          function fnF(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + b) | 0;
          }

          function fnG(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + b) | 0;
          }

          function fnH(a, b, c, d, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0;
          }

          function fnI(a, b, c, d, m, k, s) {
            return (rotl((a + (c ^ (b | ~d)) + m + k) | 0, s) + b) | 0;
          }

          module.exports = MD5;

          /***/
        },
        /* 73 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var Buffer = __webpack_require__(4).Buffer;
          var inherits = __webpack_require__(0);
          var HashBase = __webpack_require__(36);

          var ARRAY16 = new Array(16);

          var zl = [
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1,
            10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1,
            2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15,
            14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
          ];

          var zr = [
            5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7,
            0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9,
            11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13,
            9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
          ];

          var sl = [
            11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13,
            11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13,
            15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14,
            5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8,
            5, 6,
          ];

          var sr = [
            8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15,
            7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6,
            14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9,
            12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13,
            11, 11,
          ];

          var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];
          var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];

          function RIPEMD160() {
            HashBase.call(this, 64);

            // state
            this._a = 0x67452301;
            this._b = 0xefcdab89;
            this._c = 0x98badcfe;
            this._d = 0x10325476;
            this._e = 0xc3d2e1f0;
          }

          inherits(RIPEMD160, HashBase);

          RIPEMD160.prototype._update = function () {
            var words = ARRAY16;
            for (var j = 0; j < 16; ++j) {
              words[j] = this._block.readInt32LE(j * 4);
            }
            var al = this._a | 0;
            var bl = this._b | 0;
            var cl = this._c | 0;
            var dl = this._d | 0;
            var el = this._e | 0;

            var ar = this._a | 0;
            var br = this._b | 0;
            var cr = this._c | 0;
            var dr = this._d | 0;
            var er = this._e | 0;

            // computation
            for (var i = 0; i < 80; i += 1) {
              var tl;
              var tr;
              if (i < 16) {
                tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
                tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
              } else if (i < 32) {
                tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
                tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
              } else if (i < 48) {
                tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
                tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
              } else if (i < 64) {
                tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
                tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
              } else {
                // if (i<80) {
                tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
                tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
              }

              al = el;
              el = dl;
              dl = rotl(cl, 10);
              cl = bl;
              bl = tl;

              ar = er;
              er = dr;
              dr = rotl(cr, 10);
              cr = br;
              br = tr;
            }

            // update state
            var t = (this._b + cl + dr) | 0;
            this._b = (this._c + dl + er) | 0;
            this._c = (this._d + el + ar) | 0;
            this._d = (this._e + al + br) | 0;
            this._e = (this._a + bl + cr) | 0;
            this._a = t;
          };

          RIPEMD160.prototype._digest = function () {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80;
            if (this._blockOffset > 56) {
              this._block.fill(0, this._blockOffset, 64);
              this._update();
              this._blockOffset = 0;
            }

            this._block.fill(0, this._blockOffset, 56);
            this._block.writeUInt32LE(this._length[0], 56);
            this._block.writeUInt32LE(this._length[1], 60);
            this._update();

            // produce result
            var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
            buffer.writeInt32LE(this._a, 0);
            buffer.writeInt32LE(this._b, 4);
            buffer.writeInt32LE(this._c, 8);
            buffer.writeInt32LE(this._d, 12);
            buffer.writeInt32LE(this._e, 16);
            return buffer;
          };

          function rotl(x, n) {
            return (x << n) | (x >>> (32 - n));
          }

          function fn1(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;
          }

          function fn2(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0;
          }

          function fn3(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0;
          }

          function fn4(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0;
          }

          function fn5(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0;
          }

          module.exports = RIPEMD160;

          /***/
        },
        /* 74 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _exports = (module.exports = function SHA(algorithm) {
            algorithm = algorithm.toLowerCase();

            var Algorithm = _exports[algorithm];
            if (!Algorithm)
              throw new Error(
                algorithm + ' is not supported (we accept pull requests)'
              );

            return new Algorithm();
          });

          _exports.sha = __webpack_require__(75);
          _exports.sha1 = __webpack_require__(76);
          _exports.sha224 = __webpack_require__(77);
          _exports.sha256 = __webpack_require__(37);
          _exports.sha384 = __webpack_require__(78);
          _exports.sha512 = __webpack_require__(38);

          /***/
        },
        /* 75 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /*
           * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
           * in FIPS PUB 180-1
           * This source code is derived from sha1.js of the same repository.
           * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
           * operation was added.
           */

          var inherits = __webpack_require__(0);
          var Hash = __webpack_require__(9);
          var Buffer = __webpack_require__(1).Buffer;

          var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];

          var W = new Array(80);

          function Sha() {
            this.init();
            this._w = W;

            Hash.call(this, 64, 56);
          }

          inherits(Sha, Hash);

          Sha.prototype.init = function () {
            this._a = 0x67452301;
            this._b = 0xefcdab89;
            this._c = 0x98badcfe;
            this._d = 0x10325476;
            this._e = 0xc3d2e1f0;

            return this;
          };

          function rotl5(num) {
            return (num << 5) | (num >>> 27);
          }

          function rotl30(num) {
            return (num << 30) | (num >>> 2);
          }

          function ft(s, b, c, d) {
            if (s === 0) return (b & c) | (~b & d);
            if (s === 2) return (b & c) | (b & d) | (c & d);
            return b ^ c ^ d;
          }

          Sha.prototype._update = function (M) {
            var W = this._w;

            var a = this._a | 0;
            var b = this._b | 0;
            var c = this._c | 0;
            var d = this._d | 0;
            var e = this._e | 0;

            for (var i = 0; i < 16; ++i) {
              W[i] = M.readInt32BE(i * 4);
            }
            for (; i < 80; ++i) {
              W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            }
            for (var j = 0; j < 80; ++j) {
              var s = ~~(j / 20);
              var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;

              e = d;
              d = c;
              c = rotl30(b);
              b = a;
              a = t;
            }

            this._a = (a + this._a) | 0;
            this._b = (b + this._b) | 0;
            this._c = (c + this._c) | 0;
            this._d = (d + this._d) | 0;
            this._e = (e + this._e) | 0;
          };

          Sha.prototype._hash = function () {
            var H = Buffer.allocUnsafe(20);

            H.writeInt32BE(this._a | 0, 0);
            H.writeInt32BE(this._b | 0, 4);
            H.writeInt32BE(this._c | 0, 8);
            H.writeInt32BE(this._d | 0, 12);
            H.writeInt32BE(this._e | 0, 16);

            return H;
          };

          module.exports = Sha;

          /***/
        },
        /* 76 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /*
           * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
           * in FIPS PUB 180-1
           * Version 2.1a Copyright Paul Johnston 2000 - 2002.
           * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
           * Distributed under the BSD License
           * See http://pajhome.org.uk/crypt/md5 for details.
           */

          var inherits = __webpack_require__(0);
          var Hash = __webpack_require__(9);
          var Buffer = __webpack_require__(1).Buffer;

          var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];

          var W = new Array(80);

          function Sha1() {
            this.init();
            this._w = W;

            Hash.call(this, 64, 56);
          }

          inherits(Sha1, Hash);

          Sha1.prototype.init = function () {
            this._a = 0x67452301;
            this._b = 0xefcdab89;
            this._c = 0x98badcfe;
            this._d = 0x10325476;
            this._e = 0xc3d2e1f0;

            return this;
          };

          function rotl1(num) {
            return (num << 1) | (num >>> 31);
          }

          function rotl5(num) {
            return (num << 5) | (num >>> 27);
          }

          function rotl30(num) {
            return (num << 30) | (num >>> 2);
          }

          function ft(s, b, c, d) {
            if (s === 0) return (b & c) | (~b & d);
            if (s === 2) return (b & c) | (b & d) | (c & d);
            return b ^ c ^ d;
          }

          Sha1.prototype._update = function (M) {
            var W = this._w;

            var a = this._a | 0;
            var b = this._b | 0;
            var c = this._c | 0;
            var d = this._d | 0;
            var e = this._e | 0;

            for (var i = 0; i < 16; ++i) {
              W[i] = M.readInt32BE(i * 4);
            }
            for (; i < 80; ++i) {
              W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]);
            }
            for (var j = 0; j < 80; ++j) {
              var s = ~~(j / 20);
              var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;

              e = d;
              d = c;
              c = rotl30(b);
              b = a;
              a = t;
            }

            this._a = (a + this._a) | 0;
            this._b = (b + this._b) | 0;
            this._c = (c + this._c) | 0;
            this._d = (d + this._d) | 0;
            this._e = (e + this._e) | 0;
          };

          Sha1.prototype._hash = function () {
            var H = Buffer.allocUnsafe(20);

            H.writeInt32BE(this._a | 0, 0);
            H.writeInt32BE(this._b | 0, 4);
            H.writeInt32BE(this._c | 0, 8);
            H.writeInt32BE(this._d | 0, 12);
            H.writeInt32BE(this._e | 0, 16);

            return H;
          };

          module.exports = Sha1;

          /***/
        },
        /* 77 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /**
           * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
           * in FIPS 180-2
           * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
           * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
           *
           */

          var inherits = __webpack_require__(0);
          var Sha256 = __webpack_require__(37);
          var Hash = __webpack_require__(9);
          var Buffer = __webpack_require__(1).Buffer;

          var W = new Array(64);

          function Sha224() {
            this.init();

            this._w = W; // new Array(64)

            Hash.call(this, 64, 56);
          }

          inherits(Sha224, Sha256);

          Sha224.prototype.init = function () {
            this._a = 0xc1059ed8;
            this._b = 0x367cd507;
            this._c = 0x3070dd17;
            this._d = 0xf70e5939;
            this._e = 0xffc00b31;
            this._f = 0x68581511;
            this._g = 0x64f98fa7;
            this._h = 0xbefa4fa4;

            return this;
          };

          Sha224.prototype._hash = function () {
            var H = Buffer.allocUnsafe(28);

            H.writeInt32BE(this._a, 0);
            H.writeInt32BE(this._b, 4);
            H.writeInt32BE(this._c, 8);
            H.writeInt32BE(this._d, 12);
            H.writeInt32BE(this._e, 16);
            H.writeInt32BE(this._f, 20);
            H.writeInt32BE(this._g, 24);

            return H;
          };

          module.exports = Sha224;

          /***/
        },
        /* 78 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var inherits = __webpack_require__(0);
          var SHA512 = __webpack_require__(38);
          var Hash = __webpack_require__(9);
          var Buffer = __webpack_require__(1).Buffer;

          var W = new Array(160);

          function Sha384() {
            this.init();
            this._w = W;

            Hash.call(this, 128, 112);
          }

          inherits(Sha384, SHA512);

          Sha384.prototype.init = function () {
            this._ah = 0xcbbb9d5d;
            this._bh = 0x629a292a;
            this._ch = 0x9159015a;
            this._dh = 0x152fecd8;
            this._eh = 0x67332667;
            this._fh = 0x8eb44a87;
            this._gh = 0xdb0c2e0d;
            this._hh = 0x47b5481d;

            this._al = 0xc1059ed8;
            this._bl = 0x367cd507;
            this._cl = 0x3070dd17;
            this._dl = 0xf70e5939;
            this._el = 0xffc00b31;
            this._fl = 0x68581511;
            this._gl = 0x64f98fa7;
            this._hl = 0xbefa4fa4;

            return this;
          };

          Sha384.prototype._hash = function () {
            var H = Buffer.allocUnsafe(48);

            function writeInt64BE(h, l, offset) {
              H.writeInt32BE(h, offset);
              H.writeInt32BE(l, offset + 4);
            }

            writeInt64BE(this._ah, this._al, 0);
            writeInt64BE(this._bh, this._bl, 8);
            writeInt64BE(this._ch, this._cl, 16);
            writeInt64BE(this._dh, this._dl, 24);
            writeInt64BE(this._eh, this._el, 32);
            writeInt64BE(this._fh, this._fl, 40);

            return H;
          };

          module.exports = Sha384;

          /***/
        },
        /* 79 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          (function (self) {
            var irrelevant = (function (exports) {
              var support = {
                searchParams: 'URLSearchParams' in self,
                iterable: 'Symbol' in self && 'iterator' in Symbol,
                blob:
                  'FileReader' in self &&
                  'Blob' in self &&
                  (function () {
                    try {
                      new Blob();
                      return true;
                    } catch (e) {
                      return false;
                    }
                  })(),
                formData: 'FormData' in self,
                arrayBuffer: 'ArrayBuffer' in self,
              };

              function isDataView(obj) {
                return obj && DataView.prototype.isPrototypeOf(obj);
              }

              if (support.arrayBuffer) {
                var viewClasses = [
                  '[object Int8Array]',
                  '[object Uint8Array]',
                  '[object Uint8ClampedArray]',
                  '[object Int16Array]',
                  '[object Uint16Array]',
                  '[object Int32Array]',
                  '[object Uint32Array]',
                  '[object Float32Array]',
                  '[object Float64Array]',
                ];

                var isArrayBufferView =
                  ArrayBuffer.isView ||
                  function (obj) {
                    return (
                      obj &&
                      viewClasses.indexOf(Object.prototype.toString.call(obj)) >
                        -1
                    );
                  };
              }

              function normalizeName(name) {
                if (typeof name !== 'string') {
                  name = String(name);
                }
                if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
                  throw new TypeError('Invalid character in header field name');
                }
                return name.toLowerCase();
              }

              function normalizeValue(value) {
                if (typeof value !== 'string') {
                  value = String(value);
                }
                return value;
              }

              // Build a destructive iterator for the value list
              function iteratorFor(items) {
                var iterator = {
                  next: function next() {
                    var value = items.shift();
                    return { done: value === undefined, value: value };
                  },
                };

                if (support.iterable) {
                  iterator[Symbol.iterator] = function () {
                    return iterator;
                  };
                }

                return iterator;
              }

              function Headers(headers) {
                this.map = {};

                if (headers instanceof Headers) {
                  headers.forEach(function (value, name) {
                    this.append(name, value);
                  }, this);
                } else if (Array.isArray(headers)) {
                  headers.forEach(function (header) {
                    this.append(header[0], header[1]);
                  }, this);
                } else if (headers) {
                  Object.getOwnPropertyNames(headers).forEach(function (name) {
                    this.append(name, headers[name]);
                  }, this);
                }
              }

              Headers.prototype.append = function (name, value) {
                name = normalizeName(name);
                value = normalizeValue(value);
                var oldValue = this.map[name];
                this.map[name] = oldValue ? oldValue + ', ' + value : value;
              };

              Headers.prototype['delete'] = function (name) {
                delete this.map[normalizeName(name)];
              };

              Headers.prototype.get = function (name) {
                name = normalizeName(name);
                return this.has(name) ? this.map[name] : null;
              };

              Headers.prototype.has = function (name) {
                return this.map.hasOwnProperty(normalizeName(name));
              };

              Headers.prototype.set = function (name, value) {
                this.map[normalizeName(name)] = normalizeValue(value);
              };

              Headers.prototype.forEach = function (callback, thisArg) {
                for (var name in this.map) {
                  if (this.map.hasOwnProperty(name)) {
                    callback.call(thisArg, this.map[name], name, this);
                  }
                }
              };

              Headers.prototype.keys = function () {
                var items = [];
                this.forEach(function (value, name) {
                  items.push(name);
                });
                return iteratorFor(items);
              };

              Headers.prototype.values = function () {
                var items = [];
                this.forEach(function (value) {
                  items.push(value);
                });
                return iteratorFor(items);
              };

              Headers.prototype.entries = function () {
                var items = [];
                this.forEach(function (value, name) {
                  items.push([name, value]);
                });
                return iteratorFor(items);
              };

              if (support.iterable) {
                Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
              }

              function consumed(body) {
                if (body.bodyUsed) {
                  return Promise.reject(new TypeError('Already read'));
                }
                body.bodyUsed = true;
              }

              function fileReaderReady(reader) {
                return new Promise(function (resolve, reject) {
                  reader.onload = function () {
                    resolve(reader.result);
                  };
                  reader.onerror = function () {
                    reject(reader.error);
                  };
                });
              }

              function readBlobAsArrayBuffer(blob) {
                var reader = new FileReader();
                var promise = fileReaderReady(reader);
                reader.readAsArrayBuffer(blob);
                return promise;
              }

              function readBlobAsText(blob) {
                var reader = new FileReader();
                var promise = fileReaderReady(reader);
                reader.readAsText(blob);
                return promise;
              }

              function readArrayBufferAsText(buf) {
                var view = new Uint8Array(buf);
                var chars = new Array(view.length);

                for (var i = 0; i < view.length; i++) {
                  chars[i] = String.fromCharCode(view[i]);
                }
                return chars.join('');
              }

              function bufferClone(buf) {
                if (buf.slice) {
                  return buf.slice(0);
                } else {
                  var view = new Uint8Array(buf.byteLength);
                  view.set(new Uint8Array(buf));
                  return view.buffer;
                }
              }

              function Body() {
                this.bodyUsed = false;

                this._initBody = function (body) {
                  this._bodyInit = body;
                  if (!body) {
                    this._bodyText = '';
                  } else if (typeof body === 'string') {
                    this._bodyText = body;
                  } else if (
                    support.blob &&
                    Blob.prototype.isPrototypeOf(body)
                  ) {
                    this._bodyBlob = body;
                  } else if (
                    support.formData &&
                    FormData.prototype.isPrototypeOf(body)
                  ) {
                    this._bodyFormData = body;
                  } else if (
                    support.searchParams &&
                    URLSearchParams.prototype.isPrototypeOf(body)
                  ) {
                    this._bodyText = body.toString();
                  } else if (
                    support.arrayBuffer &&
                    support.blob &&
                    isDataView(body)
                  ) {
                    this._bodyArrayBuffer = bufferClone(body.buffer);
                    // IE 10-11 can't handle a DataView body.
                    this._bodyInit = new Blob([this._bodyArrayBuffer]);
                  } else if (
                    support.arrayBuffer &&
                    (ArrayBuffer.prototype.isPrototypeOf(body) ||
                      isArrayBufferView(body))
                  ) {
                    this._bodyArrayBuffer = bufferClone(body);
                  } else {
                    this._bodyText = body =
                      Object.prototype.toString.call(body);
                  }

                  if (!this.headers.get('content-type')) {
                    if (typeof body === 'string') {
                      this.headers.set(
                        'content-type',
                        'text/plain;charset=UTF-8'
                      );
                    } else if (this._bodyBlob && this._bodyBlob.type) {
                      this.headers.set('content-type', this._bodyBlob.type);
                    } else if (
                      support.searchParams &&
                      URLSearchParams.prototype.isPrototypeOf(body)
                    ) {
                      this.headers.set(
                        'content-type',
                        'application/x-www-form-urlencoded;charset=UTF-8'
                      );
                    }
                  }
                };

                if (support.blob) {
                  this.blob = function () {
                    var rejected = consumed(this);
                    if (rejected) {
                      return rejected;
                    }

                    if (this._bodyBlob) {
                      return Promise.resolve(this._bodyBlob);
                    } else if (this._bodyArrayBuffer) {
                      return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                    } else if (this._bodyFormData) {
                      throw new Error('could not read FormData body as blob');
                    } else {
                      return Promise.resolve(new Blob([this._bodyText]));
                    }
                  };

                  this.arrayBuffer = function () {
                    if (this._bodyArrayBuffer) {
                      return (
                        consumed(this) || Promise.resolve(this._bodyArrayBuffer)
                      );
                    } else {
                      return this.blob().then(readBlobAsArrayBuffer);
                    }
                  };
                }

                this.text = function () {
                  var rejected = consumed(this);
                  if (rejected) {
                    return rejected;
                  }

                  if (this._bodyBlob) {
                    return readBlobAsText(this._bodyBlob);
                  } else if (this._bodyArrayBuffer) {
                    return Promise.resolve(
                      readArrayBufferAsText(this._bodyArrayBuffer)
                    );
                  } else if (this._bodyFormData) {
                    throw new Error('could not read FormData body as text');
                  } else {
                    return Promise.resolve(this._bodyText);
                  }
                };

                if (support.formData) {
                  this.formData = function () {
                    return this.text().then(decode);
                  };
                }

                this.json = function () {
                  return this.text().then(JSON.parse);
                };

                return this;
              }

              // HTTP methods whose capitalization should be normalized
              var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

              function normalizeMethod(method) {
                var upcased = method.toUpperCase();
                return methods.indexOf(upcased) > -1 ? upcased : method;
              }

              function Request(input, options) {
                options = options || {};
                var body = options.body;

                if (input instanceof Request) {
                  if (input.bodyUsed) {
                    throw new TypeError('Already read');
                  }
                  this.url = input.url;
                  this.credentials = input.credentials;
                  if (!options.headers) {
                    this.headers = new Headers(input.headers);
                  }
                  this.method = input.method;
                  this.mode = input.mode;
                  this.signal = input.signal;
                  if (!body && input._bodyInit != null) {
                    body = input._bodyInit;
                    input.bodyUsed = true;
                  }
                } else {
                  this.url = String(input);
                }

                this.credentials =
                  options.credentials || this.credentials || 'same-origin';
                if (options.headers || !this.headers) {
                  this.headers = new Headers(options.headers);
                }
                this.method = normalizeMethod(
                  options.method || this.method || 'GET'
                );
                this.mode = options.mode || this.mode || null;
                this.signal = options.signal || this.signal;
                this.referrer = null;

                if ((this.method === 'GET' || this.method === 'HEAD') && body) {
                  throw new TypeError(
                    'Body not allowed for GET or HEAD requests'
                  );
                }
                this._initBody(body);
              }

              Request.prototype.clone = function () {
                return new Request(this, { body: this._bodyInit });
              };

              function decode(body) {
                var form = new FormData();
                body
                  .trim()
                  .split('&')
                  .forEach(function (bytes) {
                    if (bytes) {
                      var split = bytes.split('=');
                      var name = split.shift().replace(/\+/g, ' ');
                      var value = split.join('=').replace(/\+/g, ' ');
                      form.append(
                        decodeURIComponent(name),
                        decodeURIComponent(value)
                      );
                    }
                  });
                return form;
              }

              function parseHeaders(rawHeaders) {
                var headers = new Headers();
                // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
                // https://tools.ietf.org/html/rfc7230#section-3.2
                var preProcessedHeaders = rawHeaders.replace(
                  /\r?\n[\t ]+/g,
                  ' '
                );
                preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
                  var parts = line.split(':');
                  var key = parts.shift().trim();
                  if (key) {
                    var value = parts.join(':').trim();
                    headers.append(key, value);
                  }
                });
                return headers;
              }

              Body.call(Request.prototype);

              function Response(bodyInit, options) {
                if (!options) {
                  options = {};
                }

                this.type = 'default';
                this.status =
                  options.status === undefined ? 200 : options.status;
                this.ok = this.status >= 200 && this.status < 300;
                this.statusText =
                  'statusText' in options ? options.statusText : 'OK';
                this.headers = new Headers(options.headers);
                this.url = options.url || '';
                this._initBody(bodyInit);
              }

              Body.call(Response.prototype);

              Response.prototype.clone = function () {
                return new Response(this._bodyInit, {
                  status: this.status,
                  statusText: this.statusText,
                  headers: new Headers(this.headers),
                  url: this.url,
                });
              };

              Response.error = function () {
                var response = new Response(null, {
                  status: 0,
                  statusText: '',
                });
                response.type = 'error';
                return response;
              };

              var redirectStatuses = [301, 302, 303, 307, 308];

              Response.redirect = function (url, status) {
                if (redirectStatuses.indexOf(status) === -1) {
                  throw new RangeError('Invalid status code');
                }

                return new Response(null, {
                  status: status,
                  headers: { location: url },
                });
              };

              exports.DOMException = self.DOMException;
              try {
                new exports.DOMException();
              } catch (err) {
                exports.DOMException = function (message, name) {
                  this.message = message;
                  this.name = name;
                  var error = Error(message);
                  this.stack = error.stack;
                };
                exports.DOMException.prototype = Object.create(Error.prototype);
                exports.DOMException.prototype.constructor =
                  exports.DOMException;
              }

              function fetch(input, init) {
                return new Promise(function (resolve, reject) {
                  var request = new Request(input, init);

                  if (request.signal && request.signal.aborted) {
                    return reject(
                      new exports.DOMException('Aborted', 'AbortError')
                    );
                  }

                  var xhr = new XMLHttpRequest();

                  function abortXhr() {
                    xhr.abort();
                  }

                  xhr.onload = function () {
                    var options = {
                      status: xhr.status,
                      statusText: xhr.statusText,
                      headers: parseHeaders(xhr.getAllResponseHeaders() || ''),
                    };
                    options.url =
                      'responseURL' in xhr
                        ? xhr.responseURL
                        : options.headers.get('X-Request-URL');
                    var body =
                      'response' in xhr ? xhr.response : xhr.responseText;
                    resolve(new Response(body, options));
                  };

                  xhr.onerror = function () {
                    reject(new TypeError('Network request failed'));
                  };

                  xhr.ontimeout = function () {
                    reject(new TypeError('Network request failed'));
                  };

                  xhr.onabort = function () {
                    reject(new exports.DOMException('Aborted', 'AbortError'));
                  };

                  xhr.open(request.method, request.url, true);

                  if (request.credentials === 'include') {
                    xhr.withCredentials = true;
                  } else if (request.credentials === 'omit') {
                    xhr.withCredentials = false;
                  }

                  if ('responseType' in xhr && support.blob) {
                    xhr.responseType = 'blob';
                  }

                  request.headers.forEach(function (value, name) {
                    xhr.setRequestHeader(name, value);
                  });

                  if (request.signal) {
                    request.signal.addEventListener('abort', abortXhr);

                    xhr.onreadystatechange = function () {
                      // DONE (success or failure)
                      if (xhr.readyState === 4) {
                        request.signal.removeEventListener('abort', abortXhr);
                      }
                    };
                  }

                  xhr.send(
                    typeof request._bodyInit === 'undefined'
                      ? null
                      : request._bodyInit
                  );
                });
              }

              fetch.polyfill = true;

              if (!self.fetch) {
                self.fetch = fetch;
                self.Headers = Headers;
                self.Request = Request;
                self.Response = Response;
              }

              exports.Headers = Headers;
              exports.Request = Request;
              exports.Response = Response;
              exports.fetch = fetch;

              Object.defineProperty(exports, '__esModule', { value: true });

              return exports;
            })({});
          })(typeof self !== 'undefined' ? self : undefined);

          /***/
        },
        /* 80 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (
            __filename,
            process,
            __dirname,
            Buffer,
            module
          ) {
            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            var Module = (function () {
              var _scriptDir =
                typeof document !== 'undefined' && document.currentScript
                  ? document.currentScript.src
                  : undefined;
              if (true) _scriptDir = _scriptDir || __filename;
              return function (Module) {
                Module = Module || {};

                var Module = typeof Module !== 'undefined' ? Module : {};
                var readyPromiseResolve, readyPromiseReject;
                Module['ready'] = new Promise(function (resolve, reject) {
                  readyPromiseResolve = resolve;
                  readyPromiseReject = reject;
                });
                var moduleOverrides = {};
                var key;
                for (key in Module) {
                  if (Module.hasOwnProperty(key)) {
                    moduleOverrides[key] = Module[key];
                  }
                }
                var arguments_ = [];
                var thisProgram = './this.program';
                var quit_ = function quit_(status, toThrow) {
                  throw toThrow;
                };
                var ENVIRONMENT_IS_WEB = false;
                var ENVIRONMENT_IS_WORKER = false;
                var ENVIRONMENT_IS_NODE = false;
                var ENVIRONMENT_IS_SHELL = false;
                ENVIRONMENT_IS_WEB =
                  (typeof window === 'undefined'
                    ? 'undefined'
                    : _typeof(window)) === 'object';
                ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
                ENVIRONMENT_IS_NODE =
                  (typeof process === 'undefined'
                    ? 'undefined'
                    : _typeof(process)) === 'object' &&
                  _typeof(process.versions) === 'object' &&
                  typeof process.versions.node === 'string';
                ENVIRONMENT_IS_SHELL =
                  !ENVIRONMENT_IS_WEB &&
                  !ENVIRONMENT_IS_NODE &&
                  !ENVIRONMENT_IS_WORKER;
                var scriptDirectory = '';
                function locateFile(path) {
                  if (Module['locateFile']) {
                    return Module['locateFile'](path, scriptDirectory);
                  }
                  return scriptDirectory + path;
                }
                var read_, readAsync, readBinary, setWindowTitle;
                var nodeFS;
                var nodePath;
                if (ENVIRONMENT_IS_NODE) {
                  if (ENVIRONMENT_IS_WORKER) {
                    scriptDirectory =
                      __webpack_require__(16).dirname(scriptDirectory) + '/';
                  } else {
                    scriptDirectory = __dirname + '/';
                  }
                  read_ = function shell_read(filename, binary) {
                    var ret = tryParseAsDataURI(filename);
                    if (ret) {
                      return binary ? ret : ret.toString();
                    }
                    if (!nodeFS) nodeFS = __webpack_require__(17);
                    if (!nodePath) nodePath = __webpack_require__(16);
                    filename = nodePath['normalize'](filename);
                    return nodeFS['readFileSync'](
                      filename,
                      binary ? null : 'utf8'
                    );
                  };
                  readBinary = function readBinary(filename) {
                    var ret = read_(filename, true);
                    if (!ret.buffer) {
                      ret = new Uint8Array(ret);
                    }
                    assert(ret.buffer);
                    return ret;
                  };
                  if (process['argv'].length > 1) {
                    thisProgram = process['argv'][1].replace(/\\/g, '/');
                  }
                  arguments_ = process['argv'].slice(2);
                  process['on']('uncaughtException', function (ex) {
                    if (!(ex instanceof ExitStatus)) {
                      throw ex;
                    }
                  });
                  process['on']('unhandledRejection', abort);
                  quit_ = function quit_(status) {
                    process['exit'](status);
                  };
                  Module['inspect'] = function () {
                    return '[Emscripten Module object]';
                  };
                } else if (ENVIRONMENT_IS_SHELL) {
                  if (typeof read != 'undefined') {
                    read_ = function shell_read(f) {
                      var data = tryParseAsDataURI(f);
                      if (data) {
                        return intArrayToString(data);
                      }
                      return read(f);
                    };
                  }
                  readBinary = function readBinary(f) {
                    var data;
                    data = tryParseAsDataURI(f);
                    if (data) {
                      return data;
                    }
                    if (typeof readbuffer === 'function') {
                      return new Uint8Array(readbuffer(f));
                    }
                    data = read(f, 'binary');
                    assert(
                      (typeof data === 'undefined'
                        ? 'undefined'
                        : _typeof(data)) === 'object'
                    );
                    return data;
                  };
                  if (typeof scriptArgs != 'undefined') {
                    arguments_ = scriptArgs;
                  } else if (typeof arguments != 'undefined') {
                    arguments_ = arguments;
                  }
                  if (typeof quit === 'function') {
                    quit_ = function quit_(status) {
                      quit(status);
                    };
                  }
                  if (typeof print !== 'undefined') {
                    if (typeof console === 'undefined') console = {};
                    console.log = print;
                    console.warn = console.error =
                      typeof printErr !== 'undefined' ? printErr : print;
                  }
                } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
                  if (ENVIRONMENT_IS_WORKER) {
                    scriptDirectory = self.location.href;
                  } else if (document.currentScript) {
                    scriptDirectory = document.currentScript.src;
                  }
                  if (_scriptDir) {
                    scriptDirectory = _scriptDir;
                  }
                  if (scriptDirectory.indexOf('blob:') !== 0) {
                    scriptDirectory = scriptDirectory.substr(
                      0,
                      scriptDirectory.lastIndexOf('/') + 1
                    );
                  } else {
                    scriptDirectory = '';
                  }
                  {
                    read_ = function shell_read(url) {
                      try {
                        var xhr = new XMLHttpRequest();
                        xhr.open('GET', url, false);
                        xhr.send(null);
                        return xhr.responseText;
                      } catch (err) {
                        var data = tryParseAsDataURI(url);
                        if (data) {
                          return intArrayToString(data);
                        }
                        throw err;
                      }
                    };
                    if (ENVIRONMENT_IS_WORKER) {
                      readBinary = function readBinary(url) {
                        try {
                          var xhr = new XMLHttpRequest();
                          xhr.open('GET', url, false);
                          xhr.responseType = 'arraybuffer';
                          xhr.send(null);
                          return new Uint8Array(xhr.response);
                        } catch (err) {
                          var data = tryParseAsDataURI(url);
                          if (data) {
                            return data;
                          }
                          throw err;
                        }
                      };
                    }
                    readAsync = function readAsync(url, onload, onerror) {
                      var xhr = new XMLHttpRequest();
                      xhr.open('GET', url, true);
                      xhr.responseType = 'arraybuffer';
                      xhr.onload = function xhr_onload() {
                        if (
                          xhr.status == 200 ||
                          (xhr.status == 0 && xhr.response)
                        ) {
                          onload(xhr.response);
                          return;
                        }
                        var data = tryParseAsDataURI(url);
                        if (data) {
                          onload(data.buffer);
                          return;
                        }
                        onerror();
                      };
                      xhr.onerror = onerror;
                      xhr.send(null);
                    };
                  }
                  setWindowTitle = function setWindowTitle(title) {
                    document.title = title;
                  };
                } else {
                }
                var out = Module['print'] || console.log.bind(console);
                var err = Module['printErr'] || console.warn.bind(console);
                for (key in moduleOverrides) {
                  if (moduleOverrides.hasOwnProperty(key)) {
                    Module[key] = moduleOverrides[key];
                  }
                }
                moduleOverrides = null;
                if (Module['arguments']) arguments_ = Module['arguments'];
                if (Module['thisProgram']) thisProgram = Module['thisProgram'];
                if (Module['quit']) quit_ = Module['quit'];
                var wasmBinary;
                if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];
                var noExitRuntime;
                if (Module['noExitRuntime'])
                  noExitRuntime = Module['noExitRuntime'];
                var WebAssembly = {
                  Memory: function Memory(opts) {
                    this.buffer = new ArrayBuffer(opts['initial'] * 65536);
                  },
                  Module: function Module(binary) {},
                  Instance: function Instance(module, info) {
                    this.exports =
                      // EMSCRIPTEN_START_ASM
                      (function instantiate(rc, sc) {
                        function jc(tc) {
                          tc.set = function (M, uc) {
                            this[M] = uc;
                          };
                          tc.get = function (M) {
                            return this[M];
                          };
                          return tc;
                        }
                        var a = new ArrayBuffer(16);
                        var b = new Int32Array(a);
                        var c = new Float32Array(a);
                        var d = new Float64Array(a);
                        function kc(vc) {
                          return b[vc];
                        }
                        function lc(vc, wc) {
                          b[vc] = wc;
                        }
                        function mc() {
                          return d[0];
                        }
                        function nc(wc) {
                          d[0] = wc;
                        }
                        function oc(xc, yc) {
                          var e = yc.a;
                          var f = e.buffer;
                          var g = new xc.Int8Array(f);
                          var h = new xc.Int16Array(f);
                          var i = new xc.Int32Array(f);
                          var j = new xc.Uint8Array(f);
                          var k = new xc.Uint16Array(f);
                          var l = new xc.Uint32Array(f);
                          var m = new xc.Float32Array(f);
                          var n = new xc.Float64Array(f);
                          var o = xc.Math.imul;
                          var p = xc.Math.fround;
                          var q = xc.Math.abs;
                          var r = xc.Math.clz32;
                          var s = xc.Math.min;
                          var t = xc.Math.max;
                          var u = xc.Math.floor;
                          var v = xc.Math.ceil;
                          var w = xc.Math.sqrt;
                          var x = yc.abort;
                          var y = xc.NaN;
                          var z = xc.Infinity;
                          var A = yc.b;
                          var B = yc.c;
                          var C = yc.d;
                          var D = yc.e;
                          var E = yc.f;
                          var F = yc.g;
                          var G = yc.h;
                          var H = 5259648;
                          var I = 0;
                          // EMSCRIPTEN_START_FUNCS
                          function Bb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              n = p(0),
                              r = p(0),
                              v = 0,
                              w = 0,
                              y = p(0),
                              z = 0,
                              A = 0,
                              B = 0,
                              C = p(0),
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = 0,
                              Y = p(0),
                              $ = 0,
                              ba = 0,
                              ea = 0,
                              ia = 0,
                              ja = 0,
                              ka = 0,
                              ma = 0,
                              na = 0,
                              oa = 0,
                              ra = 0,
                              ua = 0,
                              wa = 0,
                              xa = 0,
                              ya = p(0);
                            z = (H - 48) | 0;
                            H = z;
                            D = i[(a + 64) >> 2];
                            F = i[(a + 24) >> 2];
                            l = i[(a + 72) >> 2];
                            qa(
                              l,
                              (l + (i[(a + 8) >> 2] << 1)) | 0,
                              ((i[(a + 32) >> 2] << 1) + 4) | 0
                            );
                            l = i[(a + 80) >> 2];
                            qa(
                              l,
                              (l + (i[(a + 8) >> 2] << 1)) | 0,
                              ((i[(a + 32) >> 2] << 1) + 4) | 0
                            );
                            K = D & 1;
                            w = (K + D) | 0;
                            d = F << 1;
                            l = (w + d) | 0;
                            N = l & 1;
                            L = (l + N) | 0;
                            l = (d + L) | 0;
                            R = l & 1;
                            G = (l + R) | 0;
                            l = (d + G) | 0;
                            S = l & 1;
                            O = (l + S) | 0;
                            l = (d + O) | 0;
                            ka = l & 1;
                            ma = (l + ka) | 0;
                            l = (d + ma) | 0;
                            na = l & 1;
                            T = (l + na) | 0;
                            l = (d + T) | 0;
                            ea = l & 1;
                            ra = (l + ea) | 0;
                            l = (d + ra) | 0;
                            ua = l & 1;
                            V = (l + ua) | 0;
                            l = (d + V) | 0;
                            wa = l & 1;
                            M = (l + wa) | 0;
                            l = (d + M) | 0;
                            if (i[(a + 220) >> 2]) {
                              sa(
                                b,
                                b,
                                i[(a + 8) >> 2],
                                (i[(a + 216) >> 2] != 0) << 1,
                                (a + 124) | 0
                              );
                            }
                            I = l & 1;
                            A = (I + l) | 0;
                            B = i[(a + 20) >> 2];
                            l = (A + (B << 1)) | 0;
                            xa = l & 1;
                            P = (l + xa) | 0;
                            ia = i[(a + 24) >> 2];
                            j = ia << 1;
                            v = i[(a + 8) >> 2];
                            if ((B | 0) > (v | 0)) {
                              l = (B - v) | 0;
                              f = (l | 0) > 1 ? l : 1;
                              d = i[(a + 88) >> 2];
                              l = i[(a + 68) >> 2];
                              while (1) {
                                e = g << 1;
                                h[(e + A) >> 1] =
                                  o(h[(d + e) >> 1], h[(e + l) >> 1]) >>> 14;
                                g = (g + 1) | 0;
                                if ((g | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((f | 0) < (B | 0)) {
                              e = (v - B) | 0;
                              d = i[(a + 88) >> 2];
                              while (1) {
                                l = f << 1;
                                h[(l + A) >> 1] =
                                  o(
                                    h[(d + l) >> 1],
                                    h[(((e + f) << 1) + b) >> 1]
                                  ) >>> 14;
                                f = (f + 1) | 0;
                                if ((B | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            Q = (((j + P) | 0) + 2) | 0;
                            f = 1;
                            Da(A, P, (ia + 1) | 0, B);
                            l = h[P >> 1];
                            l = (((o(l, h[(a + 60) >> 1]) >>> 15) | 0) + l) | 0;
                            h[P >> 1] = l;
                            j = i[(a + 24) >> 2];
                            a: {
                              if ((j | 0) < 0) {
                                break a;
                              }
                              e = i[(a + 92) >> 2];
                              h[P >> 1] = o(h[e >> 1], (l << 16) >> 16) >>> 14;
                              if (!j) {
                                break a;
                              }
                              while (1) {
                                d = f << 1;
                                l = (d + P) | 0;
                                h[l >> 1] =
                                  o(h[(d + e) >> 1], h[l >> 1]) >>> 14;
                                l = (f | 0) != (j | 0);
                                f = (f + 1) | 0;
                                if (l) {
                                  continue;
                                }
                                break;
                              }
                            }
                            Ea(w, P, j);
                            l = ta(w, i[(a + 24) >> 2], O, 6553, Q);
                            g = i[(a + 24) >> 2];
                            if (!(((l | 0) == (g | 0)) | ((g | 0) < 1))) {
                              d = i[(a + 96) >> 2];
                              f = 0;
                              while (1) {
                                l = f << 1;
                                h[(l + O) >> 1] = k[(d + l) >> 1];
                                f = (f + 1) | 0;
                                if ((g | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = i[(a + 8) >> 2];
                            d = i[(a + 20) >> 2];
                            b: {
                              if (i[(a + 4) >> 2]) {
                                if ((g | 0) < 1) {
                                  break b;
                                }
                                f = 0;
                                while (1) {
                                  l = f << 1;
                                  h[(l + T) >> 1] = k[(l + O) >> 1];
                                  f = (f + 1) | 0;
                                  if ((g | 0) != (f | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break b;
                              }
                              l = i[(a + 16) >> 2];
                              fa(i[(a + 96) >> 2], O, T, g, l, l << 1);
                              g = i[(a + 24) >> 2];
                            }
                            w = (d - e) | 0;
                            ga(T, g, 16);
                            ha(T, V, i[(a + 24) >> 2], Q);
                            c: {
                              d: {
                                l =
                                  i[
                                    (i[(a + 204) >> 2] +
                                      (i[(a + 208) >> 2] << 2)) >>
                                      2
                                  ];
                                if (
                                  !l |
                                  (i[(l + 8) >> 2] < 3
                                    ? i[(a + 188) >> 2] >= 3
                                    : 0) |
                                  (i[(l + 4) >> 2] | (i[l >> 2] != -1))
                                ) {
                                  break d;
                                }
                                if (i[(a + 152) >> 2] | i[(a + 160) >> 2]) {
                                  break d;
                                }
                                g = w << 1;
                                l = 0;
                                break c;
                              }
                              ca(h[(a + 56) >> 1], V, L, i[(a + 24) >> 2]);
                              ca(h[(a + 58) >> 1], V, G, i[(a + 24) >> 2]);
                              g = w << 1;
                              X(i[(a + 84) >> 2], i[(a + 68) >> 2], g);
                              X(
                                (i[(a + 84) >> 2] + g) | 0,
                                b,
                                (i[(a + 8) >> 2] - w) << 1
                              );
                              l = i[(a + 84) >> 2];
                              aa(
                                l,
                                L,
                                G,
                                l,
                                i[(a + 8) >> 2],
                                i[(a + 24) >> 2],
                                i[(a + 112) >> 2]
                              );
                              Ia(
                                i[(a + 84) >> 2],
                                i[(a + 28) >> 2],
                                i[(a + 32) >> 2],
                                i[(a + 8) >> 2],
                                (z + 16) | 0,
                                (z + 4) | 0,
                                6,
                                Q
                              );
                              l = i[(z + 16) >> 2];
                              ba = h[(z + 4) >> 1];
                              v = o(ba, 27853) >> 15;
                              e: {
                                if ((v | 0) >= h[(z + 6) >> 1]) {
                                  break e;
                                }
                                d = i[(z + 20) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                f: {
                                  if ((j ^ (e + j)) < 3) {
                                    break f;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break f;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break f;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break e;
                                  }
                                }
                                l = d;
                              }
                              g: {
                                if ((v | 0) >= h[(z + 8) >> 1]) {
                                  break g;
                                }
                                d = i[(z + 24) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                h: {
                                  if ((j ^ (e + j)) < 3) {
                                    break h;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break h;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break h;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break g;
                                  }
                                }
                                l = d;
                              }
                              i: {
                                if ((v | 0) >= h[(z + 10) >> 1]) {
                                  break i;
                                }
                                d = i[(z + 28) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                j: {
                                  if ((j ^ (e + j)) < 3) {
                                    break j;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break j;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break j;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break i;
                                  }
                                }
                                l = d;
                              }
                              k: {
                                if ((v | 0) >= h[(z + 12) >> 1]) {
                                  break k;
                                }
                                d = i[(z + 32) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                l: {
                                  if ((j ^ (e + j)) < 3) {
                                    break l;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break l;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break l;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break k;
                                  }
                                }
                                l = d;
                              }
                              if ((v | 0) >= h[(z + 14) >> 1]) {
                                break c;
                              }
                              d = i[(z + 36) >> 2];
                              e = ((d << 1) - l) | 0;
                              j = e >> 31;
                              m: {
                                if ((j ^ (e + j)) < 3) {
                                  break m;
                                }
                                e = (o(d, 3) - l) | 0;
                                j = e >> 31;
                                if ((j ^ (e + j)) < 4) {
                                  break m;
                                }
                                e = ((d << 2) - l) | 0;
                                j = e >> 31;
                                if ((j ^ (e + j)) < 5) {
                                  break m;
                                }
                                e = (o(d, 5) - l) | 0;
                                j = e >> 31;
                                if ((j ^ (e + j)) > 5) {
                                  break c;
                                }
                              }
                              l = d;
                            }
                            X(i[(a + 76) >> 2], i[(a + 68) >> 2], g);
                            X(
                              (i[(a + 76) >> 2] + (w << 1)) | 0,
                              b,
                              (i[(a + 8) >> 2] - w) << 1
                            );
                            d = i[(a + 76) >> 2];
                            va(
                              d,
                              V,
                              d,
                              i[(a + 8) >> 2],
                              i[(a + 24) >> 2],
                              i[(a + 116) >> 2]
                            );
                            v = Z(i[(a + 76) >> 2], i[(a + 8) >> 2]);
                            n: {
                              if (!((i[(a + 208) >> 2] == 1) | ((l | 0) < 1))) {
                                w =
                                  (o((o(ba, ba) << 17) >> 16, -26214) +
                                    268435456) |
                                  0;
                                e = w >>> 0 > 65535;
                                d = e << 3;
                                j = e ? (w >>> 16) | 0 : w;
                                e = j >>> 0 > 255;
                                d = e ? d | 4 : d;
                                f = d | 2;
                                g = d;
                                e = e ? (j >>> 8) | 0 : j;
                                d = e >>> 0 > 15;
                                g =
                                  (d ? f : g) |
                                  ((d ? (e >>> 4) | 0 : e) >>> 0 > 3);
                                d = g << 1;
                                j = (g << 16) >> 16;
                                d =
                                  (((j | 0) > 6
                                    ? w >> (d + -12)
                                    : w << (12 - d)) <<
                                    16) >>
                                  16;
                                e =
                                  (((o(
                                    (((o((o(d, 16816) + -827523072) >> 16, d) <<
                                      2) &
                                      -65536) +
                                      1387593728) >>
                                      16,
                                    d
                                  ) <<
                                    2) &
                                    -65536) +
                                    238157824) >>
                                  16;
                                d = (13 - g) | 0;
                                e = o(
                                  v,
                                  o(
                                    (((j | 0) < 13 ? e >> d : e << (0 - d)) <<
                                      16) >>
                                      16,
                                    72088
                                  ) >> 16
                                );
                                break n;
                              }
                              e = v << 14;
                            }
                            o: {
                              p: {
                                q: {
                                  r: {
                                    s: {
                                      v = i[(a + 140) >> 2];
                                      if (
                                        !(
                                          !v |
                                          (i[(a + 160) >> 2]
                                            ? 0
                                            : !i[(a + 152) >> 2])
                                        )
                                      ) {
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          j = i[(a + 96) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 1;
                                            d =
                                              (h[(d + j) >> 1] -
                                                h[(d + O) >> 1]) |
                                              0;
                                            C = p(C + p(o(d, d) | 0));
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        if (i[(a + 172) >> 2]) {
                                          n = m[(a + 176) >> 2];
                                          t: {
                                            if (
                                              (p(m[(a + 180) >> 2] * n) >
                                                p(0)) ^
                                              1
                                            ) {
                                              break t;
                                            }
                                            r = p(
                                              (+n * -1e-5) /
                                                +p(m[(a + 184) >> 2] + p(1))
                                            );
                                            r =
                                              +r > 0.05
                                                ? p(0.05000000074505806)
                                                : r;
                                            if ((+r < -0.05) ^ 1) {
                                              break t;
                                            }
                                            r = p(-0.05000000074505806);
                                          }
                                          m[(a + 144) >> 2] = t(
                                            p(
                                              s(p(r + m[(a + 144) >> 2]), p(10))
                                            ),
                                            p(0)
                                          );
                                        }
                                        ya = p(C * p(1.4901161193847656e-8));
                                        y = Kb(
                                          v,
                                          b,
                                          i[(a + 8) >> 2],
                                          p(+(ba | 0) * 0.015625)
                                        );
                                        m[(a + 148) >> 2] = y;
                                        if (i[(a + 152) >> 2]) {
                                          i[(z + 16) >> 2] = 8;
                                          n = m[(a + 144) >> 2];
                                          r = p(u(n));
                                          u: {
                                            if (p(q(r)) < p(2147483648)) {
                                              d = ~~r;
                                              break u;
                                            }
                                            d = -2147483648;
                                          }
                                          if ((d | 0) != 10) {
                                            g = 0;
                                            Y = p(n - p(d | 0));
                                            w = (d + 1) | 0;
                                            v = w << 2;
                                            C = p(p(w | 0) - n);
                                            j = d << 2;
                                            n = p(
                                              p(Y * m[(v + 5440) >> 2]) +
                                                p(C * m[(j + 5440) >> 2])
                                            );
                                            r = p(100);
                                            v: {
                                              if (!(y > n)) {
                                                break v;
                                              }
                                              n = p(y - n);
                                              r = p(100);
                                              if ((n < p(100)) ^ 1) {
                                                break v;
                                              }
                                              g = 8;
                                              r = n;
                                            }
                                            n = p(
                                              p(Y * m[(v + 5396) >> 2]) +
                                                p(C * m[(j + 5396) >> 2])
                                            );
                                            w: {
                                              if (!(y > n)) {
                                                break w;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break w;
                                              }
                                              g = 7;
                                              r = n;
                                            }
                                            v = w << 2;
                                            j = d << 2;
                                            n = p(
                                              p(Y * m[(v + 5352) >> 2]) +
                                                p(C * m[(j + 5352) >> 2])
                                            );
                                            x: {
                                              if ((y > n) ^ 1) {
                                                break x;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break x;
                                              }
                                              g = 6;
                                              r = n;
                                            }
                                            n = p(
                                              p(Y * m[(v + 5308) >> 2]) +
                                                p(C * m[(j + 5308) >> 2])
                                            );
                                            y: {
                                              if ((y > n) ^ 1) {
                                                break y;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break y;
                                              }
                                              g = 5;
                                              r = n;
                                            }
                                            v = w << 2;
                                            j = d << 2;
                                            n = p(
                                              p(Y * m[(v + 5264) >> 2]) +
                                                p(C * m[(j + 5264) >> 2])
                                            );
                                            z: {
                                              if ((y > n) ^ 1) {
                                                break z;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break z;
                                              }
                                              g = 4;
                                              r = n;
                                            }
                                            n = p(
                                              p(Y * m[(v + 5220) >> 2]) +
                                                p(C * m[(j + 5220) >> 2])
                                            );
                                            A: {
                                              if ((y > n) ^ 1) {
                                                break A;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break A;
                                              }
                                              g = 3;
                                              r = n;
                                            }
                                            j = w << 2;
                                            d = d << 2;
                                            n = p(
                                              p(Y * m[(j + 5176) >> 2]) +
                                                p(C * m[(d + 5176) >> 2])
                                            );
                                            B: {
                                              if ((y > n) ^ 1) {
                                                break B;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break B;
                                              }
                                              g = 2;
                                              r = n;
                                            }
                                            C = p(
                                              p(Y * m[(j + 5132) >> 2]) +
                                                p(C * m[(d + 5132) >> 2])
                                            );
                                            if ((y > C) ^ 1) {
                                              break r;
                                            }
                                            break s;
                                          }
                                          g = 0;
                                          n = m[1370];
                                          r = p(100);
                                          C: {
                                            if ((y > n) ^ 1) {
                                              break C;
                                            }
                                            n = p(y - n);
                                            r = p(100);
                                            if ((n < p(100)) ^ 1) {
                                              break C;
                                            }
                                            g = 8;
                                            r = n;
                                          }
                                          n = m[1359];
                                          D: {
                                            if (!(y > n)) {
                                              break D;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break D;
                                            }
                                            g = 7;
                                            r = n;
                                          }
                                          n = m[1348];
                                          E: {
                                            if ((y > n) ^ 1) {
                                              break E;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break E;
                                            }
                                            g = 6;
                                            r = n;
                                          }
                                          n = m[1337];
                                          F: {
                                            if ((y > n) ^ 1) {
                                              break F;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break F;
                                            }
                                            g = 5;
                                            r = n;
                                          }
                                          n = m[1326];
                                          G: {
                                            if ((y > n) ^ 1) {
                                              break G;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break G;
                                            }
                                            g = 4;
                                            r = n;
                                          }
                                          n = m[1315];
                                          H: {
                                            if ((y > n) ^ 1) {
                                              break H;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break H;
                                            }
                                            g = 3;
                                            r = n;
                                          }
                                          n = m[1304];
                                          I: {
                                            if ((y > n) ^ 1) {
                                              break I;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break I;
                                            }
                                            g = 2;
                                            r = n;
                                          }
                                          C = m[1293];
                                          if (!((y > C) ^ 1)) {
                                            break s;
                                          }
                                          break r;
                                        }
                                        if (!((y < p(2)) ^ 1)) {
                                          J: {
                                            K: {
                                              if (+ya > 0.05) {
                                                break K;
                                              }
                                              d = i[(a + 168) >> 2];
                                              if (!d | ((d | 0) > 20)) {
                                                break K;
                                              }
                                              if (i[(a + 164) >> 2]) {
                                                break J;
                                              }
                                            }
                                            i[(a + 168) >> 2] = 1;
                                            i[(a + 208) >> 2] = 1;
                                            break o;
                                          }
                                          i[(a + 168) >> 2] = d + 1;
                                          i[(a + 208) >> 2] = 0;
                                          break o;
                                        }
                                        i[(a + 168) >> 2] = 0;
                                        i[(a + 208) >> 2] = i[(a + 212) >> 2];
                                        break o;
                                      }
                                      i[(a + 148) >> 2] = -1082130432;
                                      break o;
                                    }
                                    if (!(p(y - C) < r)) {
                                      break r;
                                    }
                                    i[(z + 16) >> 2] = 1;
                                    f = (a + 168) | 0;
                                    break q;
                                  }
                                  i[(z + 16) >> 2] = g;
                                  f = (a + 168) | 0;
                                  if (g) {
                                    break q;
                                  }
                                  L: {
                                    M: {
                                      if (+ya > 0.05) {
                                        break M;
                                      }
                                      d = i[(a + 168) >> 2];
                                      if (!d | ((d | 0) > 20)) {
                                        break M;
                                      }
                                      if (i[(a + 164) >> 2]) {
                                        break L;
                                      }
                                    }
                                    i[(z + 16) >> 2] = 1;
                                    i[(a + 168) >> 2] = 1;
                                    break p;
                                  }
                                  i[(z + 16) >> 2] = 0;
                                  i[(a + 168) >> 2] = d + 1;
                                  break p;
                                }
                                i[f >> 2] = 0;
                              }
                              J[i[(i[a >> 2] + 44) >> 2]](a, 6, (z + 16) | 0) |
                                0;
                              N: {
                                if (i[(a + 156) >> 2] < 1) {
                                  break N;
                                }
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  19,
                                  (z + 4) | 0
                                ) | 0;
                                d = i[(a + 156) >> 2];
                                if (i[(z + 4) >> 2] <= (d | 0)) {
                                  break N;
                                }
                                i[(z + 4) >> 2] = d;
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  18,
                                  (z + 4) | 0
                                ) | 0;
                              }
                              if (!i[(a + 172) >> 2]) {
                                break o;
                              }
                              J[i[(i[a >> 2] + 44) >> 2]](a, 19, (z + 4) | 0) |
                                0;
                              d = i[(z + 4) >> 2];
                              m[(a + 184) >> 2] = m[(a + 184) >> 2] + p(1);
                              d = (d - i[(a + 172) >> 2]) | 0;
                              m[(a + 176) >> 2] = m[(a + 176) >> 2] + p(d | 0);
                              m[(a + 180) >> 2] =
                                +(d | 0) * 0.05 + +m[(a + 180) >> 2] * 0.95;
                            }
                            if (i[(a + 200) >> 2]) {
                              W(c, 0, 1);
                              W(c, i[(a + 208) >> 2], 4);
                            }
                            O: {
                              P: {
                                Q: {
                                  g =
                                    i[
                                      (i[(a + 204) >> 2] +
                                        (i[(a + 208) >> 2] << 2)) >>
                                        2
                                    ];
                                  R: {
                                    if (!g) {
                                      g = i[(a + 8) >> 2];
                                      if ((g | 0) >= 1) {
                                        d = i[(a + 76) >> 2];
                                        l = i[(a + 84) >> 2];
                                        f = 0;
                                        while (1) {
                                          c = f << 1;
                                          h[(c + l) >> 1] = 0;
                                          h[(c + d) >> 1] = 0;
                                          f = (f + 1) | 0;
                                          if ((g | 0) != (f | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      if (i[(a + 24) >> 2] >= 1) {
                                        c = i[(a + 108) >> 2];
                                        f = 0;
                                        while (1) {
                                          i[(c + (f << 2)) >> 2] = 0;
                                          f = (f + 1) | 0;
                                          if ((f | 0) < i[(a + 24) >> 2]) {
                                            continue;
                                          }
                                          break;
                                        }
                                        g = i[(a + 8) >> 2];
                                      }
                                      i[(a + 40) >> 2] = 1;
                                      i[(a + 4) >> 2] = 1;
                                      c = ((g << 2) + b) | 0;
                                      b = i[(a + 20) >> 2];
                                      X(
                                        i[(a + 68) >> 2],
                                        (c - (b << 1)) | 0,
                                        (b - g) << 1
                                      );
                                      if (i[(a + 24) >> 2] < 1) {
                                        g = 0;
                                        break R;
                                      }
                                      b = i[(a + 104) >> 2];
                                      g = 0;
                                      f = 0;
                                      while (1) {
                                        i[(b + (f << 2)) >> 2] = 0;
                                        f = (f + 1) | 0;
                                        if ((f | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                      break R;
                                    }
                                    v = i[(a + 24) >> 2];
                                    if (!(!i[(a + 4) >> 2] | ((v | 0) < 1))) {
                                      j = i[(a + 96) >> 2];
                                      f = 0;
                                      while (1) {
                                        d = f << 1;
                                        h[(d + j) >> 1] = k[(d + O) >> 1];
                                        f = (f + 1) | 0;
                                        if ((v | 0) != (f | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    J[i[(g + 16) >> 2]](O, ma, v, c);
                                    d =
                                      i[
                                        (i[(a + 204) >> 2] +
                                          (i[(a + 208) >> 2] << 2)) >>
                                          2
                                      ];
                                    if (i[d >> 2] != -1) {
                                      W(c, (l - i[(a + 28) >> 2]) | 0, 7);
                                      d =
                                        i[
                                          (i[(a + 204) >> 2] +
                                            (i[(a + 208) >> 2] << 2)) >>
                                            2
                                        ];
                                    }
                                    if (i[(d + 4) >> 2]) {
                                      d = (o(o(ba, 58982) >> 16, 15) + 32) >> 6;
                                      d = (d | 0) < 15 ? d : 15;
                                      d = (d | 0) > 0 ? d : 0;
                                      W(c, d, 4);
                                      ba =
                                        (o((d << 22) >> 16, 2185) + 16384) >>
                                        15;
                                    }
                                    w = Jb(e);
                                    W(c, w, 5);
                                    f = i[(a + 24) >> 2];
                                    if (!(!i[(a + 4) >> 2] | ((f | 0) < 1))) {
                                      e = i[(a + 100) >> 2];
                                      g = 0;
                                      while (1) {
                                        d = g << 1;
                                        h[(d + e) >> 1] = k[(d + ma) >> 1];
                                        g = (g + 1) | 0;
                                        if ((g | 0) != (f | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    S: {
                                      g = i[(a + 16) >> 2];
                                      if ((g | 0) < 1) {
                                        break S;
                                      }
                                      v = Q & 1;
                                      $ = (v + Q) | 0;
                                      ja = i[(a + 12) >> 2];
                                      E = ja << 1;
                                      d = ($ + E) | 0;
                                      Q = (0 - d) & 3;
                                      P = (d + Q) | 0;
                                      e = ja << 2;
                                      d = (P + e) | 0;
                                      j = (0 - d) & 3;
                                      oa = (d + j) | 0;
                                      d = (oa + e) | 0;
                                      A = d & 1;
                                      F =
                                        (Q +
                                          ((j +
                                            ((((o(F, 18) + o(ja, 12)) | 0) +
                                              ((B + ia) << 1)) |
                                              0)) |
                                            0)) |
                                        0;
                                      B = (d + A) | 0;
                                      j = (B + E) | 0;
                                      e = j & 1;
                                      ua =
                                        (((D +
                                          ((K +
                                            ((N +
                                              ((((S +
                                                ((((((((ua +
                                                  ((wa +
                                                    ((I +
                                                      ((((v +
                                                        ((A + ((F + e) | 0)) |
                                                          0)) |
                                                        0) +
                                                        xa) |
                                                        0)) |
                                                      0)) |
                                                    0)) |
                                                  0) +
                                                  ea) |
                                                  0) +
                                                  na) |
                                                  0) +
                                                  ka) |
                                                  0)) |
                                                0) +
                                                R) |
                                                0)) |
                                              0)) |
                                            0)) |
                                          0) +
                                          2) |
                                        0;
                                      d = i[((w << 2) + 12144) >> 2];
                                      v =
                                        (o((d << 1) >> 16, 28406) +
                                          ((o(d & 32767, 28406) >>> 15) | 0)) |
                                        0;
                                      ka = v & 16383;
                                      wa = (a + 36) | 0;
                                      na = (v << 2) >> 16;
                                      R = (e + j) | 0;
                                      d = (R + E) | 0;
                                      F = ((d & 1) + d) | 0;
                                      d = (F + E) | 0;
                                      E = (((0 - d) & 3) + d) | 0;
                                      N = (E + (f << 2)) | 0;
                                      xa = (((0 - N) & 3) + N) | 0;
                                      ia = (v - -8192) >> 14;
                                      Q = (ia << 16) >> 17;
                                      D = 0;
                                      while (1) {
                                        A = i[(a + 76) >> 2];
                                        j = i[(a + 84) >> 2];
                                        fa(i[(a + 96) >> 2], O, T, f, D, g);
                                        fa(
                                          i[(a + 100) >> 2],
                                          ma,
                                          ra,
                                          i[(a + 24) >> 2],
                                          D,
                                          i[(a + 16) >> 2]
                                        );
                                        ga(T, i[(a + 24) >> 2], 16);
                                        ga(ra, i[(a + 24) >> 2], 16);
                                        ha(T, V, i[(a + 24) >> 2], N);
                                        ha(ra, M, i[(a + 24) >> 2], N);
                                        f = 0;
                                        g = 8192;
                                        e = i[(a + 24) >> 2];
                                        if ((e | 0) >= 1) {
                                          while (1) {
                                            d = f << 1;
                                            g =
                                              (((h[((d | 2) + M) >> 1] + g) |
                                                0) -
                                                h[(d + M) >> 1]) |
                                              0;
                                            f = (f + 2) | 0;
                                            if ((f | 0) < (e | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        K = D << 2;
                                        i[(K + i[(a + 132) >> 2]) >> 2] = g;
                                        ca(
                                          h[(a + 56) >> 1],
                                          V,
                                          L,
                                          i[(a + 24) >> 2]
                                        );
                                        e = i[(a + 24) >> 2];
                                        d = h[(a + 58) >> 1];
                                        T: {
                                          if ((d | 0) <= -1) {
                                            if ((e | 0) < 1) {
                                              break T;
                                            }
                                            U(G, 0, e << 1);
                                            break T;
                                          }
                                          ca(d, V, G, e);
                                        }
                                        g =
                                          (i[(a + 20) >> 2] - i[(a + 8) >> 2]) |
                                          0;
                                        if ((g | 0) != i[(a + 12) >> 2]) {
                                          break Q;
                                        }
                                        ea = o(D, ja);
                                        I = ea << 1;
                                        w = (I + j) | 0;
                                        U: {
                                          if (D) {
                                            if ((g | 0) < 1) {
                                              break U;
                                            }
                                            j = o(g, (D + -1) | 0);
                                            f = 0;
                                            while (1) {
                                              e = f << 1;
                                              d = k[(((f + j) << 1) + b) >> 1];
                                              h[(e + w) >> 1] = d;
                                              h[(e + F) >> 1] = d;
                                              f = (f + 1) | 0;
                                              if ((g | 0) != (f | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                            break U;
                                          }
                                          if ((g | 0) < 1) {
                                            break U;
                                          }
                                          d = i[(a + 68) >> 2];
                                          f = 0;
                                          while (1) {
                                            j = f << 1;
                                            e = k[(j + d) >> 1];
                                            h[(j + w) >> 1] = e;
                                            h[(j + F) >> 1] = e;
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        va(
                                          F,
                                          M,
                                          F,
                                          g,
                                          i[(a + 24) >> 2],
                                          i[(a + 120) >> 2]
                                        );
                                        d = ja >> !i[(a + 188) >> 2];
                                        La(M, L, G, R, d, i[(a + 24) >> 2], N);
                                        j = i[(a + 12) >> 2];
                                        if ((d | 0) < (j | 0)) {
                                          e = d << 1;
                                          d = (d + 1) | 0;
                                          U(
                                            (e + ua) | 0,
                                            0,
                                            ((((j | 0) > (d | 0) ? j : d) <<
                                              1) -
                                              e) |
                                              0
                                          );
                                        }
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          e = i[(a + 104) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + E) >> 2] =
                                              i[(d + e) >> 2] << 1;
                                            f = (f + 1) | 0;
                                            g = i[(a + 24) >> 2];
                                            if ((f | 0) < (g | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        d = i[(a + 12) >> 2];
                                        if ((d | 0) >= 1) {
                                          U(B, 0, d << 1);
                                        }
                                        _(B, M, B, d, g, E);
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          e = i[(a + 108) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + E) >> 2] =
                                              i[(d + e) >> 2] << 1;
                                            f = (f + 1) | 0;
                                            g = i[(a + 24) >> 2];
                                            if ((f | 0) < (g | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        aa(B, L, G, B, i[(a + 12) >> 2], g, E);
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          e = i[(a + 108) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + E) >> 2] = i[(d + e) >> 2];
                                            f = (f + 1) | 0;
                                            g = i[(a + 24) >> 2];
                                            if ((f | 0) < (g | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        aa(w, L, G, w, i[(a + 12) >> 2], g, E);
                                        if (
                                          !(
                                            i[(a + 188) >> 2] |
                                            (i[(a + 24) >> 2] < 1)
                                          )
                                        ) {
                                          e = i[(a + 108) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + e) >> 2] = i[(d + E) >> 2];
                                            f = (f + 1) | 0;
                                            if ((f | 0) < i[(a + 24) >> 2]) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        f = 0;
                                        j = i[(a + 12) >> 2];
                                        if ((j | 0) >= 1) {
                                          while (1) {
                                            e = f << 1;
                                            d =
                                              (h[(e + w) >> 1] -
                                                ((h[(e + B) >> 1] + 1) >> 1)) |
                                              0;
                                            d = (d | 0) > -32767 ? d : -32767;
                                            h[(e + $) >> 1] =
                                              (d | 0) < 32767 ? d : 32767;
                                            f = (f + 1) | 0;
                                            if ((j | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        j = U((A + I) | 0, 0, j << 1);
                                        A =
                                          i[
                                            (i[(a + 204) >> 2] +
                                              (i[(a + 208) >> 2] << 2)) >>
                                              2
                                          ];
                                        I = i[(A + 24) >> 2];
                                        if (!I) {
                                          break P;
                                        }
                                        d = l;
                                        g = d;
                                        V: {
                                          W: {
                                            X: {
                                              S = i[A >> 2];
                                              switch ((S + 1) | 0) {
                                                case 1:
                                                  break V;
                                                case 0:
                                                  break W;
                                                default:
                                                  break X;
                                              }
                                            }
                                            e = (i[(a + 32) >> 2] - S) | 0;
                                            d =
                                              (((S + i[(a + 28) >> 2]) | 0) +
                                                -1) |
                                              0;
                                            l = (l | 0) < (d | 0) ? d : l;
                                            l = (l | 0) > (e | 0) ? e : l;
                                            g = (S + l) | 0;
                                            d = (((l - S) | 0) + 1) | 0;
                                            break V;
                                          }
                                          g = i[(a + 32) >> 2];
                                          d = i[(a + 28) >> 2];
                                        }
                                        f = 0;
                                        d =
                                          J[I | 0](
                                            $,
                                            w,
                                            M,
                                            L,
                                            G,
                                            oa,
                                            i[(A + 32) >> 2],
                                            d,
                                            (g | 0) > (ea | 0)
                                              ? i[(a + 40) >> 2]
                                                ? ea
                                                : g
                                              : g,
                                            ba,
                                            i[(a + 24) >> 2],
                                            i[(a + 12) >> 2],
                                            c,
                                            N,
                                            j,
                                            R,
                                            i[(a + 188) >> 2],
                                            0,
                                            i[(a + 196) >> 2],
                                            wa
                                          ) | 0;
                                        i[(K + i[(a + 52) >> 2]) >> 2] = d;
                                        A = U(P, 0, i[(a + 12) >> 2] << 2);
                                        e = i[(a + 12) >> 2];
                                        if ((e | 0) >= 1) {
                                          while (1) {
                                            d = (F + (f << 1)) | 0;
                                            h[d >> 1] =
                                              k[d >> 1] -
                                              (((i[(oa + (f << 2)) >> 2] +
                                                4096) >>>
                                                13) |
                                                0);
                                            f = (f + 1) | 0;
                                            if ((e | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        d =
                                          ((((Z(F, e) << 14) + Q) | 0) /
                                            (ia | 0)) |
                                          0;
                                        e = (d | 0) < 32768 ? d : 32767;
                                        d = v;
                                        Y: {
                                          Z: {
                                            switch (
                                              i[
                                                (i[
                                                  (i[(a + 204) >> 2] +
                                                    (i[(a + 208) >> 2] << 2)) >>
                                                    2
                                                ] +
                                                  8) >>
                                                  2
                                              ]
                                            ) {
                                              case 3:
                                                d = pa(
                                                  (e << 16) >> 16,
                                                  12272,
                                                  8
                                                );
                                                W(c, d, 3);
                                                d = h[((d << 1) + 12288) >> 1];
                                                d =
                                                  ((o(d, ka) >> 14) +
                                                    o(d, na)) |
                                                  0;
                                                break Y;
                                              case 0:
                                                break Y;
                                              default:
                                                break Z;
                                            }
                                          }
                                          d = pa((e << 16) >> 16, 12304, 2);
                                          W(c, d, 1);
                                          d = h[((d << 1) + 12306) >> 1];
                                          d = ((o(d, ka) >> 14) + o(d, na)) | 0;
                                        }
                                        Aa($, $, d, i[(a + 12) >> 2]);
                                        g =
                                          i[
                                            (i[(a + 204) >> 2] +
                                              (i[(a + 208) >> 2] << 2)) >>
                                              2
                                          ];
                                        e = i[(g + 36) >> 2];
                                        if (!e) {
                                          break O;
                                        }
                                        J[e | 0](
                                          $,
                                          M,
                                          L,
                                          G,
                                          i[(g + 44) >> 2],
                                          i[(a + 24) >> 2],
                                          i[(a + 12) >> 2],
                                          A,
                                          R,
                                          c,
                                          N,
                                          i[(a + 188) >> 2],
                                          i[(g + 12) >> 2]
                                        );
                                        da(A, A, d, i[(a + 12) >> 2]);
                                        f = 0;
                                        g = i[(a + 12) >> 2];
                                        if ((g | 0) >= 1) {
                                          while (1) {
                                            e = f << 2;
                                            e =
                                              ((i[(e + oa) >> 2] << 1) +
                                                i[(e + A) >> 2]) |
                                              0;
                                            h[(j + (f << 1)) >> 1] =
                                              (e | 0) > 536862719
                                                ? 32767
                                                : (e | 0) < -536862720
                                                ? -32767
                                                : ((e - -8192) >>> 14) | 0;
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        _: {
                                          if (
                                            i[
                                              (i[
                                                (i[(a + 204) >> 2] +
                                                  (i[(a + 208) >> 2] << 2)) >>
                                                  2
                                              ] +
                                                12) >>
                                                2
                                            ]
                                          ) {
                                            f = 0;
                                            e = g << 2;
                                            K = U(xa, 0, e);
                                            g = (e + K) | 0;
                                            I = i[(a + 12) >> 2];
                                            if ((I | 0) >= 1) {
                                              while (1) {
                                                e = ($ + (f << 1)) | 0;
                                                h[e >> 1] =
                                                  (o(h[e >> 1], 18022) +
                                                    4096) >>>
                                                  13;
                                                f = (f + 1) | 0;
                                                if ((I | 0) != (f | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                            f = 0;
                                            e =
                                              i[
                                                (i[(a + 204) >> 2] +
                                                  (i[(a + 208) >> 2] << 2)) >>
                                                  2
                                              ];
                                            J[i[(e + 36) >> 2]](
                                              $,
                                              M,
                                              L,
                                              G,
                                              i[(e + 44) >> 2],
                                              i[(a + 24) >> 2],
                                              I,
                                              K,
                                              R,
                                              c,
                                              g,
                                              i[(a + 188) >> 2],
                                              0
                                            );
                                            da(
                                              K,
                                              K,
                                              (o((d << 1) >> 16, 14895) +
                                                ((o(d & 32767, 14895) >>> 15) |
                                                  0)) |
                                                0,
                                              i[(a + 12) >> 2]
                                            );
                                            g = i[(a + 12) >> 2];
                                            if ((g | 0) < 1) {
                                              break _;
                                            }
                                            while (1) {
                                              e = f << 2;
                                              d = (e + A) | 0;
                                              i[d >> 2] =
                                                i[(e + K) >> 2] + i[d >> 2];
                                              f = (f + 1) | 0;
                                              g = i[(a + 12) >> 2];
                                              if ((f | 0) < (g | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          f = 0;
                                          if ((g | 0) < 1) {
                                            break _;
                                          }
                                          while (1) {
                                            d = f << 2;
                                            d =
                                              ((i[(d + oa) >> 2] << 1) +
                                                i[(d + A) >> 2]) |
                                              0;
                                            h[(j + (f << 1)) >> 1] =
                                              (d | 0) > 536862719
                                                ? 32767
                                                : (d | 0) < -536862720
                                                ? -32767
                                                : ((d - -8192) >>> 14) | 0;
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        e = M;
                                        d = w;
                                        if (i[(a + 136) >> 2]) {
                                          g = Ra(A, g);
                                          h[
                                            (i[(a + 136) >> 2] + (D << 1)) >> 1
                                          ] = g;
                                          g = i[(a + 12) >> 2];
                                        }
                                        _(
                                          j,
                                          e,
                                          d,
                                          g,
                                          i[(a + 24) >> 2],
                                          i[(a + 104) >> 2]
                                        );
                                        if (i[(a + 188) >> 2]) {
                                          aa(
                                            w,
                                            L,
                                            G,
                                            w,
                                            i[(a + 12) >> 2],
                                            i[(a + 24) >> 2],
                                            i[(a + 108) >> 2]
                                          );
                                        }
                                        D = (D + 1) | 0;
                                        g = i[(a + 16) >> 2];
                                        if ((D | 0) >= (g | 0)) {
                                          break S;
                                        }
                                        f = i[(a + 24) >> 2];
                                        ja = i[(a + 12) >> 2];
                                        continue;
                                      }
                                    }
                                    e = i[(a + 208) >> 2];
                                    $: {
                                      if ((e | 0) < 1) {
                                        break $;
                                      }
                                      j = i[(a + 24) >> 2];
                                      aa: {
                                        if ((j | 0) < 1) {
                                          break aa;
                                        }
                                        d = i[(a + 96) >> 2];
                                        f = 0;
                                        while (1) {
                                          l = f << 1;
                                          h[(l + d) >> 1] = k[(l + O) >> 1];
                                          f = (f + 1) | 0;
                                          if ((j | 0) != (f | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        if ((j | 0) < 1) {
                                          break aa;
                                        }
                                        d = i[(a + 100) >> 2];
                                        f = 0;
                                        while (1) {
                                          l = f << 1;
                                          h[(l + d) >> 1] = k[(l + ma) >> 1];
                                          f = (f + 1) | 0;
                                          if ((j | 0) != (f | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      if ((e | 0) != 1) {
                                        break $;
                                      }
                                      if (i[(a + 168) >> 2]) {
                                        W(c, 15, 4);
                                        break $;
                                      }
                                      W(c, 0, 4);
                                    }
                                    i[(a + 4) >> 2] = 0;
                                    c = i[(a + 8) >> 2];
                                    d = ((c << 2) + b) | 0;
                                    b = i[(a + 20) >> 2];
                                    X(
                                      i[(a + 68) >> 2],
                                      (d - (b << 1)) | 0,
                                      (b - c) << 1
                                    );
                                    b = i[(a + 208) >> 2];
                                    if (
                                      !(i[
                                        (i[
                                          (i[(a + 204) >> 2] + (b << 2)) >> 2
                                        ] +
                                          36) >>
                                          2
                                      ] != 14
                                        ? b
                                        : 0)
                                    ) {
                                      g = 1;
                                      i[(a + 40) >> 2] = 1;
                                      break R;
                                    }
                                    i[(a + 40) >> 2] = 0;
                                    g = 1;
                                  }
                                  H = (z + 48) | 0;
                                  return g | 0;
                                }
                                la(12310, 708);
                                x();
                              }
                              la(12391, 760);
                              x();
                            }
                            la(12428, 842);
                            x();
                          }
                          function na(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              k = 0,
                              m = 0,
                              n = 0,
                              o = 0;
                            o = (H - 16) | 0;
                            H = o;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            i: {
                                              j: {
                                                k: {
                                                  if (a >>> 0 <= 244) {
                                                    f = i[3808];
                                                    g =
                                                      a >>> 0 < 11
                                                        ? 16
                                                        : (a + 11) & -8;
                                                    a = (g >>> 3) | 0;
                                                    b = (f >>> a) | 0;
                                                    if (b & 3) {
                                                      c =
                                                        (a + ((b ^ -1) & 1)) |
                                                        0;
                                                      e = c << 3;
                                                      b = i[(e + 15280) >> 2];
                                                      a = (b + 8) | 0;
                                                      d = i[(b + 8) >> 2];
                                                      e = (e + 15272) | 0;
                                                      l: {
                                                        if (
                                                          (d | 0) ==
                                                          (e | 0)
                                                        ) {
                                                          i[3808] = ic(c) & f;
                                                          break l;
                                                        }
                                                        i[(d + 12) >> 2] = e;
                                                        i[(e + 8) >> 2] = d;
                                                      }
                                                      c = c << 3;
                                                      i[(b + 4) >> 2] = c | 3;
                                                      b = (b + c) | 0;
                                                      i[(b + 4) >> 2] =
                                                        i[(b + 4) >> 2] | 1;
                                                      break a;
                                                    }
                                                    k = i[3810];
                                                    if (g >>> 0 <= k >>> 0) {
                                                      break k;
                                                    }
                                                    if (b) {
                                                      c = 2 << a;
                                                      a =
                                                        ((0 - c) | c) &
                                                        (b << a);
                                                      a =
                                                        (((0 - a) & a) + -1) |
                                                        0;
                                                      b = (a >>> 12) & 16;
                                                      c = b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 5) & 8;
                                                      c = c | b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 2) & 4;
                                                      c = c | b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 1) & 2;
                                                      c = c | b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 1) & 1;
                                                      c =
                                                        ((c | b) +
                                                          ((a >>> b) | 0)) |
                                                        0;
                                                      d = c << 3;
                                                      b = i[(d + 15280) >> 2];
                                                      a = i[(b + 8) >> 2];
                                                      d = (d + 15272) | 0;
                                                      m: {
                                                        if (
                                                          (a | 0) ==
                                                          (d | 0)
                                                        ) {
                                                          f = ic(c) & f;
                                                          i[3808] = f;
                                                          break m;
                                                        }
                                                        i[(a + 12) >> 2] = d;
                                                        i[(d + 8) >> 2] = a;
                                                      }
                                                      a = (b + 8) | 0;
                                                      i[(b + 4) >> 2] = g | 3;
                                                      h = (b + g) | 0;
                                                      c = c << 3;
                                                      e = (c - g) | 0;
                                                      i[(h + 4) >> 2] = e | 1;
                                                      i[(b + c) >> 2] = e;
                                                      if (k) {
                                                        c = (k >>> 3) | 0;
                                                        b =
                                                          ((c << 3) + 15272) |
                                                          0;
                                                        d = i[3813];
                                                        c = 1 << c;
                                                        n: {
                                                          if (!(c & f)) {
                                                            i[3808] = c | f;
                                                            c = b;
                                                            break n;
                                                          }
                                                          c = i[(b + 8) >> 2];
                                                        }
                                                        i[(b + 8) >> 2] = d;
                                                        i[(c + 12) >> 2] = d;
                                                        i[(d + 12) >> 2] = b;
                                                        i[(d + 8) >> 2] = c;
                                                      }
                                                      i[3813] = h;
                                                      i[3810] = e;
                                                      break a;
                                                    }
                                                    n = i[3809];
                                                    if (!n) {
                                                      break k;
                                                    }
                                                    a =
                                                      ((n & (0 - n)) + -1) | 0;
                                                    b = (a >>> 12) & 16;
                                                    c = b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 5) & 8;
                                                    c = c | b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 2) & 4;
                                                    c = c | b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 1) & 2;
                                                    c = c | b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 1) & 1;
                                                    b =
                                                      i[
                                                        ((((c | b) +
                                                          ((a >>> b) | 0)) <<
                                                          2) +
                                                          15536) >>
                                                          2
                                                      ];
                                                    d =
                                                      ((i[(b + 4) >> 2] & -8) -
                                                        g) |
                                                      0;
                                                    c = b;
                                                    while (1) {
                                                      o: {
                                                        a = i[(c + 16) >> 2];
                                                        if (!a) {
                                                          a = i[(c + 20) >> 2];
                                                          if (!a) {
                                                            break o;
                                                          }
                                                        }
                                                        e =
                                                          ((i[(a + 4) >> 2] &
                                                            -8) -
                                                            g) |
                                                          0;
                                                        c = e >>> 0 < d >>> 0;
                                                        d = c ? e : d;
                                                        b = c ? a : b;
                                                        c = a;
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                    m = i[(b + 24) >> 2];
                                                    e = i[(b + 12) >> 2];
                                                    if ((e | 0) != (b | 0)) {
                                                      a = i[(b + 8) >> 2];
                                                      i[(a + 12) >> 2] = e;
                                                      i[(e + 8) >> 2] = a;
                                                      break b;
                                                    }
                                                    c = (b + 20) | 0;
                                                    a = i[c >> 2];
                                                    if (!a) {
                                                      a = i[(b + 16) >> 2];
                                                      if (!a) {
                                                        break j;
                                                      }
                                                      c = (b + 16) | 0;
                                                    }
                                                    while (1) {
                                                      h = c;
                                                      e = a;
                                                      c = (a + 20) | 0;
                                                      a = i[c >> 2];
                                                      if (a) {
                                                        continue;
                                                      }
                                                      c = (e + 16) | 0;
                                                      a = i[(e + 16) >> 2];
                                                      if (a) {
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                    i[h >> 2] = 0;
                                                    break b;
                                                  }
                                                  g = -1;
                                                  if (a >>> 0 > 4294967231) {
                                                    break k;
                                                  }
                                                  b = (a + 11) | 0;
                                                  g = b & -8;
                                                  k = i[3809];
                                                  if (!k) {
                                                    break k;
                                                  }
                                                  c = (0 - g) | 0;
                                                  b = (b >>> 8) | 0;
                                                  f = 0;
                                                  p: {
                                                    if (!b) {
                                                      break p;
                                                    }
                                                    f = 31;
                                                    if (g >>> 0 > 16777215) {
                                                      break p;
                                                    }
                                                    d =
                                                      ((b + 1048320) >>> 16) &
                                                      8;
                                                    b = b << d;
                                                    a =
                                                      ((b + 520192) >>> 16) & 4;
                                                    f = b << a;
                                                    b =
                                                      ((f + 245760) >>> 16) & 2;
                                                    a =
                                                      ((((f << b) >>> 15) | 0) -
                                                        (b | (a | d))) |
                                                      0;
                                                    f =
                                                      (((a << 1) |
                                                        ((g >>> (a + 21)) &
                                                          1)) +
                                                        28) |
                                                      0;
                                                  }
                                                  d =
                                                    i[((f << 2) + 15536) >> 2];
                                                  q: {
                                                    r: {
                                                      s: {
                                                        if (!d) {
                                                          a = 0;
                                                          break s;
                                                        }
                                                        b =
                                                          g <<
                                                          ((f | 0) == 31
                                                            ? 0
                                                            : (25 -
                                                                ((f >>> 1) |
                                                                  0)) |
                                                              0);
                                                        a = 0;
                                                        while (1) {
                                                          t: {
                                                            h =
                                                              ((i[
                                                                (d + 4) >> 2
                                                              ] &
                                                                -8) -
                                                                g) |
                                                              0;
                                                            if (
                                                              h >>> 0 >=
                                                              c >>> 0
                                                            ) {
                                                              break t;
                                                            }
                                                            e = d;
                                                            c = h;
                                                            if (c) {
                                                              break t;
                                                            }
                                                            c = 0;
                                                            a = d;
                                                            break r;
                                                          }
                                                          h = i[(d + 20) >> 2];
                                                          d =
                                                            i[
                                                              (((((b >>> 29) &
                                                                4) +
                                                                d) |
                                                                0) +
                                                                16) >>
                                                                2
                                                            ];
                                                          a = h
                                                            ? (h | 0) == (d | 0)
                                                              ? a
                                                              : h
                                                            : a;
                                                          b =
                                                            b << ((d | 0) != 0);
                                                          if (d) {
                                                            continue;
                                                          }
                                                          break;
                                                        }
                                                      }
                                                      if (!(a | e)) {
                                                        a = 2 << f;
                                                        a = ((0 - a) | a) & k;
                                                        if (!a) {
                                                          break k;
                                                        }
                                                        a =
                                                          ((a & (0 - a)) + -1) |
                                                          0;
                                                        b = (a >>> 12) & 16;
                                                        d = b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 5) & 8;
                                                        d = d | b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 2) & 4;
                                                        d = d | b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 1) & 2;
                                                        d = d | b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 1) & 1;
                                                        a =
                                                          i[
                                                            ((((d | b) +
                                                              ((a >>> b) |
                                                                0)) <<
                                                              2) +
                                                              15536) >>
                                                              2
                                                          ];
                                                      }
                                                      if (!a) {
                                                        break q;
                                                      }
                                                    }
                                                    while (1) {
                                                      d =
                                                        ((i[(a + 4) >> 2] &
                                                          -8) -
                                                          g) |
                                                        0;
                                                      b = d >>> 0 < c >>> 0;
                                                      c = b ? d : c;
                                                      e = b ? a : e;
                                                      b = i[(a + 16) >> 2];
                                                      if (b) {
                                                        a = b;
                                                      } else {
                                                        a = i[(a + 20) >> 2];
                                                      }
                                                      if (a) {
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                  }
                                                  if (
                                                    !e |
                                                    (c >>> 0 >=
                                                      (i[3810] - g) >>> 0)
                                                  ) {
                                                    break k;
                                                  }
                                                  h = i[(e + 24) >> 2];
                                                  b = i[(e + 12) >> 2];
                                                  if ((e | 0) != (b | 0)) {
                                                    a = i[(e + 8) >> 2];
                                                    i[(a + 12) >> 2] = b;
                                                    i[(b + 8) >> 2] = a;
                                                    break c;
                                                  }
                                                  d = (e + 20) | 0;
                                                  a = i[d >> 2];
                                                  if (!a) {
                                                    a = i[(e + 16) >> 2];
                                                    if (!a) {
                                                      break i;
                                                    }
                                                    d = (e + 16) | 0;
                                                  }
                                                  while (1) {
                                                    f = d;
                                                    b = a;
                                                    d = (a + 20) | 0;
                                                    a = i[d >> 2];
                                                    if (a) {
                                                      continue;
                                                    }
                                                    d = (b + 16) | 0;
                                                    a = i[(b + 16) >> 2];
                                                    if (a) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                  i[f >> 2] = 0;
                                                  break c;
                                                }
                                                b = i[3810];
                                                if (b >>> 0 >= g >>> 0) {
                                                  a = i[3813];
                                                  c = (b - g) | 0;
                                                  u: {
                                                    if (c >>> 0 >= 16) {
                                                      i[3810] = c;
                                                      d = (a + g) | 0;
                                                      i[3813] = d;
                                                      i[(d + 4) >> 2] = c | 1;
                                                      i[(a + b) >> 2] = c;
                                                      i[(a + 4) >> 2] = g | 3;
                                                      break u;
                                                    }
                                                    i[3813] = 0;
                                                    i[3810] = 0;
                                                    i[(a + 4) >> 2] = b | 3;
                                                    b = (a + b) | 0;
                                                    i[(b + 4) >> 2] =
                                                      i[(b + 4) >> 2] | 1;
                                                  }
                                                  a = (a + 8) | 0;
                                                  break a;
                                                }
                                                d = i[3811];
                                                if (d >>> 0 > g >>> 0) {
                                                  b = (d - g) | 0;
                                                  i[3811] = b;
                                                  a = i[3814];
                                                  c = (a + g) | 0;
                                                  i[3814] = c;
                                                  i[(c + 4) >> 2] = b | 1;
                                                  i[(a + 4) >> 2] = g | 3;
                                                  a = (a + 8) | 0;
                                                  break a;
                                                }
                                                a = 0;
                                                e = (g + 47) | 0;
                                                c = e;
                                                if (i[3926]) {
                                                  b = i[3928];
                                                } else {
                                                  i[3929] = -1;
                                                  i[3930] = -1;
                                                  i[3927] = 4096;
                                                  i[3928] = 4096;
                                                  i[3926] =
                                                    ((o + 12) & -16) ^
                                                    1431655768;
                                                  i[3931] = 0;
                                                  i[3919] = 0;
                                                  b = 4096;
                                                }
                                                f = (c + b) | 0;
                                                h = (0 - b) | 0;
                                                c = f & h;
                                                if (c >>> 0 <= g >>> 0) {
                                                  break a;
                                                }
                                                b = i[3918];
                                                if (b) {
                                                  k = i[3916];
                                                  m = (k + c) | 0;
                                                  if (
                                                    (m >>> 0 <= k >>> 0) |
                                                    (m >>> 0 > b >>> 0)
                                                  ) {
                                                    break a;
                                                  }
                                                }
                                                if (j[15676] & 4) {
                                                  break f;
                                                }
                                                v: {
                                                  w: {
                                                    b = i[3814];
                                                    if (b) {
                                                      a = 15680;
                                                      while (1) {
                                                        k = i[a >> 2];
                                                        if (
                                                          (k +
                                                            i[(a + 4) >> 2]) >>>
                                                            0 >
                                                          b >>> 0
                                                            ? k >>> 0 <= b >>> 0
                                                            : 0
                                                        ) {
                                                          break w;
                                                        }
                                                        a = i[(a + 8) >> 2];
                                                        if (a) {
                                                          continue;
                                                        }
                                                        break;
                                                      }
                                                    }
                                                    b = ia(0);
                                                    if ((b | 0) == -1) {
                                                      break g;
                                                    }
                                                    f = c;
                                                    a = i[3927];
                                                    d = (a + -1) | 0;
                                                    if (d & b) {
                                                      f =
                                                        (((c - b) | 0) +
                                                          ((b + d) & (0 - a))) |
                                                        0;
                                                    }
                                                    if (
                                                      (f >>> 0 <= g >>> 0) |
                                                      (f >>> 0 > 2147483646)
                                                    ) {
                                                      break g;
                                                    }
                                                    a = i[3918];
                                                    if (a) {
                                                      d = i[3916];
                                                      h = (d + f) | 0;
                                                      if (
                                                        (h >>> 0 <= d >>> 0) |
                                                        (h >>> 0 > a >>> 0)
                                                      ) {
                                                        break g;
                                                      }
                                                    }
                                                    a = ia(f);
                                                    if ((b | 0) != (a | 0)) {
                                                      break v;
                                                    }
                                                    break e;
                                                  }
                                                  f = h & (f - d);
                                                  if (f >>> 0 > 2147483646) {
                                                    break g;
                                                  }
                                                  b = ia(f);
                                                  if (
                                                    (b | 0) ==
                                                    ((i[a >> 2] +
                                                      i[(a + 4) >> 2]) |
                                                      0)
                                                  ) {
                                                    break h;
                                                  }
                                                  a = b;
                                                }
                                                if (
                                                  !(
                                                    ((a | 0) == -1) |
                                                    ((g + 48) >>> 0 <= f >>> 0)
                                                  )
                                                ) {
                                                  b = i[3928];
                                                  b =
                                                    (b + ((e - f) | 0)) &
                                                    (0 - b);
                                                  if (b >>> 0 > 2147483646) {
                                                    b = a;
                                                    break e;
                                                  }
                                                  if ((ia(b) | 0) != -1) {
                                                    f = (b + f) | 0;
                                                    b = a;
                                                    break e;
                                                  }
                                                  ia((0 - f) | 0);
                                                  break g;
                                                }
                                                b = a;
                                                if ((a | 0) != -1) {
                                                  break e;
                                                }
                                                break g;
                                              }
                                              e = 0;
                                              break b;
                                            }
                                            b = 0;
                                            break c;
                                          }
                                          if ((b | 0) != -1) {
                                            break e;
                                          }
                                        }
                                        i[3919] = i[3919] | 4;
                                      }
                                      if (c >>> 0 > 2147483646) {
                                        break d;
                                      }
                                      b = ia(c);
                                      a = ia(0);
                                      if (
                                        (b >>> 0 >= a >>> 0) |
                                        ((b | 0) == -1) |
                                        ((a | 0) == -1)
                                      ) {
                                        break d;
                                      }
                                      f = (a - b) | 0;
                                      if (f >>> 0 <= (g + 40) >>> 0) {
                                        break d;
                                      }
                                    }
                                    a = (i[3916] + f) | 0;
                                    i[3916] = a;
                                    if (a >>> 0 > l[3917]) {
                                      i[3917] = a;
                                    }
                                    x: {
                                      y: {
                                        z: {
                                          c = i[3814];
                                          if (c) {
                                            a = 15680;
                                            while (1) {
                                              d = i[a >> 2];
                                              e = i[(a + 4) >> 2];
                                              if (((d + e) | 0) == (b | 0)) {
                                                break z;
                                              }
                                              a = i[(a + 8) >> 2];
                                              if (a) {
                                                continue;
                                              }
                                              break;
                                            }
                                            break y;
                                          }
                                          a = i[3812];
                                          if (!(b >>> 0 >= a >>> 0 ? a : 0)) {
                                            i[3812] = b;
                                          }
                                          a = 0;
                                          i[3921] = f;
                                          i[3920] = b;
                                          i[3816] = -1;
                                          i[3817] = i[3926];
                                          i[3923] = 0;
                                          while (1) {
                                            c = a << 3;
                                            d = (c + 15272) | 0;
                                            i[(c + 15280) >> 2] = d;
                                            i[(c + 15284) >> 2] = d;
                                            a = (a + 1) | 0;
                                            if ((a | 0) != 32) {
                                              continue;
                                            }
                                            break;
                                          }
                                          a = (f + -40) | 0;
                                          c = (b + 8) & 7 ? (-8 - b) & 7 : 0;
                                          d = (a - c) | 0;
                                          i[3811] = d;
                                          c = (b + c) | 0;
                                          i[3814] = c;
                                          i[(c + 4) >> 2] = d | 1;
                                          i[(((a + b) | 0) + 4) >> 2] = 40;
                                          i[3815] = i[3930];
                                          break x;
                                        }
                                        if (
                                          (j[(a + 12) | 0] & 8) |
                                          (b >>> 0 <= c >>> 0) |
                                          (d >>> 0 > c >>> 0)
                                        ) {
                                          break y;
                                        }
                                        i[(a + 4) >> 2] = e + f;
                                        a = (c + 8) & 7 ? (-8 - c) & 7 : 0;
                                        b = (a + c) | 0;
                                        i[3814] = b;
                                        d = (i[3811] + f) | 0;
                                        a = (d - a) | 0;
                                        i[3811] = a;
                                        i[(b + 4) >> 2] = a | 1;
                                        i[(((c + d) | 0) + 4) >> 2] = 40;
                                        i[3815] = i[3930];
                                        break x;
                                      }
                                      e = i[3812];
                                      if (b >>> 0 < e >>> 0) {
                                        i[3812] = b;
                                        e = 0;
                                      }
                                      d = (b + f) | 0;
                                      a = 15680;
                                      A: {
                                        B: {
                                          C: {
                                            D: {
                                              E: {
                                                F: {
                                                  while (1) {
                                                    if ((d | 0) != i[a >> 2]) {
                                                      a = i[(a + 8) >> 2];
                                                      if (a) {
                                                        continue;
                                                      }
                                                      break F;
                                                    }
                                                    break;
                                                  }
                                                  if (!(j[(a + 12) | 0] & 8)) {
                                                    break E;
                                                  }
                                                }
                                                a = 15680;
                                                while (1) {
                                                  d = i[a >> 2];
                                                  if (d >>> 0 <= c >>> 0) {
                                                    e =
                                                      (d + i[(a + 4) >> 2]) | 0;
                                                    if (e >>> 0 > c >>> 0) {
                                                      break D;
                                                    }
                                                  }
                                                  a = i[(a + 8) >> 2];
                                                  continue;
                                                }
                                              }
                                              i[a >> 2] = b;
                                              i[(a + 4) >> 2] =
                                                i[(a + 4) >> 2] + f;
                                              m =
                                                (((b + 8) & 7
                                                  ? (-8 - b) & 7
                                                  : 0) +
                                                  b) |
                                                0;
                                              i[(m + 4) >> 2] = g | 3;
                                              b =
                                                (d +
                                                  ((d + 8) & 7
                                                    ? (-8 - d) & 7
                                                    : 0)) |
                                                0;
                                              a = (((b - m) | 0) - g) | 0;
                                              h = (g + m) | 0;
                                              if ((b | 0) == (c | 0)) {
                                                i[3814] = h;
                                                a = (i[3811] + a) | 0;
                                                i[3811] = a;
                                                i[(h + 4) >> 2] = a | 1;
                                                break B;
                                              }
                                              if (i[3813] == (b | 0)) {
                                                i[3813] = h;
                                                a = (i[3810] + a) | 0;
                                                i[3810] = a;
                                                i[(h + 4) >> 2] = a | 1;
                                                i[(a + h) >> 2] = a;
                                                break B;
                                              }
                                              c = i[(b + 4) >> 2];
                                              if ((c & 3) == 1) {
                                                n = c & -8;
                                                G: {
                                                  if (c >>> 0 <= 255) {
                                                    e = (c >>> 3) | 0;
                                                    c = i[(b + 8) >> 2];
                                                    d = i[(b + 12) >> 2];
                                                    if ((d | 0) == (c | 0)) {
                                                      i[3808] = i[3808] & ic(e);
                                                      break G;
                                                    }
                                                    i[(c + 12) >> 2] = d;
                                                    i[(d + 8) >> 2] = c;
                                                    break G;
                                                  }
                                                  k = i[(b + 24) >> 2];
                                                  f = i[(b + 12) >> 2];
                                                  H: {
                                                    if ((f | 0) != (b | 0)) {
                                                      c = i[(b + 8) >> 2];
                                                      i[(c + 12) >> 2] = f;
                                                      i[(f + 8) >> 2] = c;
                                                      break H;
                                                    }
                                                    I: {
                                                      d = (b + 20) | 0;
                                                      g = i[d >> 2];
                                                      if (g) {
                                                        break I;
                                                      }
                                                      d = (b + 16) | 0;
                                                      g = i[d >> 2];
                                                      if (g) {
                                                        break I;
                                                      }
                                                      f = 0;
                                                      break H;
                                                    }
                                                    while (1) {
                                                      c = d;
                                                      f = g;
                                                      d = (g + 20) | 0;
                                                      g = i[d >> 2];
                                                      if (g) {
                                                        continue;
                                                      }
                                                      d = (f + 16) | 0;
                                                      g = i[(f + 16) >> 2];
                                                      if (g) {
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                    i[c >> 2] = 0;
                                                  }
                                                  if (!k) {
                                                    break G;
                                                  }
                                                  c = i[(b + 28) >> 2];
                                                  d = ((c << 2) + 15536) | 0;
                                                  J: {
                                                    if (i[d >> 2] == (b | 0)) {
                                                      i[d >> 2] = f;
                                                      if (f) {
                                                        break J;
                                                      }
                                                      i[3809] = i[3809] & ic(c);
                                                      break G;
                                                    }
                                                    i[
                                                      (k +
                                                        (i[(k + 16) >> 2] ==
                                                        (b | 0)
                                                          ? 16
                                                          : 20)) >>
                                                        2
                                                    ] = f;
                                                    if (!f) {
                                                      break G;
                                                    }
                                                  }
                                                  i[(f + 24) >> 2] = k;
                                                  c = i[(b + 16) >> 2];
                                                  if (c) {
                                                    i[(f + 16) >> 2] = c;
                                                    i[(c + 24) >> 2] = f;
                                                  }
                                                  c = i[(b + 20) >> 2];
                                                  if (!c) {
                                                    break G;
                                                  }
                                                  i[(f + 20) >> 2] = c;
                                                  i[(c + 24) >> 2] = f;
                                                }
                                                b = (b + n) | 0;
                                                a = (a + n) | 0;
                                              }
                                              i[(b + 4) >> 2] =
                                                i[(b + 4) >> 2] & -2;
                                              i[(h + 4) >> 2] = a | 1;
                                              i[(a + h) >> 2] = a;
                                              if (a >>> 0 <= 255) {
                                                b = (a >>> 3) | 0;
                                                a = ((b << 3) + 15272) | 0;
                                                c = i[3808];
                                                b = 1 << b;
                                                K: {
                                                  if (!(c & b)) {
                                                    i[3808] = b | c;
                                                    b = a;
                                                    break K;
                                                  }
                                                  b = i[(a + 8) >> 2];
                                                }
                                                i[(a + 8) >> 2] = h;
                                                i[(b + 12) >> 2] = h;
                                                i[(h + 12) >> 2] = a;
                                                i[(h + 8) >> 2] = b;
                                                break B;
                                              }
                                              c = h;
                                              d = (a >>> 8) | 0;
                                              b = 0;
                                              L: {
                                                if (!d) {
                                                  break L;
                                                }
                                                b = 31;
                                                if (a >>> 0 > 16777215) {
                                                  break L;
                                                }
                                                e = ((d + 1048320) >>> 16) & 8;
                                                d = d << e;
                                                b = ((d + 520192) >>> 16) & 4;
                                                g = d << b;
                                                d = ((g + 245760) >>> 16) & 2;
                                                b =
                                                  ((((g << d) >>> 15) | 0) -
                                                    (d | (b | e))) |
                                                  0;
                                                b =
                                                  (((b << 1) |
                                                    ((a >>> (b + 21)) & 1)) +
                                                    28) |
                                                  0;
                                              }
                                              i[(c + 28) >> 2] = b;
                                              i[(h + 16) >> 2] = 0;
                                              i[(h + 20) >> 2] = 0;
                                              c = ((b << 2) + 15536) | 0;
                                              d = i[3809];
                                              e = 1 << b;
                                              M: {
                                                if (!(d & e)) {
                                                  i[3809] = d | e;
                                                  i[c >> 2] = h;
                                                  break M;
                                                }
                                                d =
                                                  a <<
                                                  ((b | 0) == 31
                                                    ? 0
                                                    : (25 - ((b >>> 1) | 0)) |
                                                      0);
                                                b = i[c >> 2];
                                                while (1) {
                                                  c = b;
                                                  if (
                                                    (i[(b + 4) >> 2] & -8) ==
                                                    (a | 0)
                                                  ) {
                                                    break C;
                                                  }
                                                  b = (d >>> 29) | 0;
                                                  d = d << 1;
                                                  e = ((b & 4) + c) | 0;
                                                  b = i[(e + 16) >> 2];
                                                  if (b) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                                i[(e + 16) >> 2] = h;
                                              }
                                              i[(h + 24) >> 2] = c;
                                              i[(h + 12) >> 2] = h;
                                              i[(h + 8) >> 2] = h;
                                              break B;
                                            }
                                            a = (f + -40) | 0;
                                            d = (b + 8) & 7 ? (-8 - b) & 7 : 0;
                                            h = (a - d) | 0;
                                            i[3811] = h;
                                            d = (b + d) | 0;
                                            i[3814] = d;
                                            i[(d + 4) >> 2] = h | 1;
                                            i[(((a + b) | 0) + 4) >> 2] = 40;
                                            i[3815] = i[3930];
                                            a =
                                              (((e +
                                                ((e + -39) & 7
                                                  ? (39 - e) & 7
                                                  : 0)) |
                                                0) +
                                                -47) |
                                              0;
                                            d =
                                              a >>> 0 < (c + 16) >>> 0 ? c : a;
                                            i[(d + 4) >> 2] = 27;
                                            a = i[3923];
                                            i[(d + 16) >> 2] = i[3922];
                                            i[(d + 20) >> 2] = a;
                                            a = i[3921];
                                            i[(d + 8) >> 2] = i[3920];
                                            i[(d + 12) >> 2] = a;
                                            i[3922] = d + 8;
                                            i[3921] = f;
                                            i[3920] = b;
                                            i[3923] = 0;
                                            a = (d + 24) | 0;
                                            while (1) {
                                              i[(a + 4) >> 2] = 7;
                                              b = (a + 8) | 0;
                                              a = (a + 4) | 0;
                                              if (e >>> 0 > b >>> 0) {
                                                continue;
                                              }
                                              break;
                                            }
                                            if ((c | 0) == (d | 0)) {
                                              break x;
                                            }
                                            i[(d + 4) >> 2] =
                                              i[(d + 4) >> 2] & -2;
                                            e = (d - c) | 0;
                                            i[(c + 4) >> 2] = e | 1;
                                            i[d >> 2] = e;
                                            if (e >>> 0 <= 255) {
                                              b = (e >>> 3) | 0;
                                              a = ((b << 3) + 15272) | 0;
                                              d = i[3808];
                                              b = 1 << b;
                                              N: {
                                                if (!(d & b)) {
                                                  i[3808] = b | d;
                                                  b = a;
                                                  break N;
                                                }
                                                b = i[(a + 8) >> 2];
                                              }
                                              i[(a + 8) >> 2] = c;
                                              i[(b + 12) >> 2] = c;
                                              i[(c + 12) >> 2] = a;
                                              i[(c + 8) >> 2] = b;
                                              break x;
                                            }
                                            i[(c + 16) >> 2] = 0;
                                            i[(c + 20) >> 2] = 0;
                                            b = c;
                                            d = (e >>> 8) | 0;
                                            a = 0;
                                            O: {
                                              if (!d) {
                                                break O;
                                              }
                                              a = 31;
                                              if (e >>> 0 > 16777215) {
                                                break O;
                                              }
                                              f = ((d + 1048320) >>> 16) & 8;
                                              d = d << f;
                                              a = ((d + 520192) >>> 16) & 4;
                                              h = d << a;
                                              d = ((h + 245760) >>> 16) & 2;
                                              a =
                                                ((((h << d) >>> 15) | 0) -
                                                  (d | (a | f))) |
                                                0;
                                              a =
                                                (((a << 1) |
                                                  ((e >>> (a + 21)) & 1)) +
                                                  28) |
                                                0;
                                            }
                                            i[(b + 28) >> 2] = a;
                                            b = ((a << 2) + 15536) | 0;
                                            d = i[3809];
                                            f = 1 << a;
                                            P: {
                                              if (!(d & f)) {
                                                i[3809] = d | f;
                                                i[b >> 2] = c;
                                                i[(c + 24) >> 2] = b;
                                                break P;
                                              }
                                              a =
                                                e <<
                                                ((a | 0) == 31
                                                  ? 0
                                                  : (25 - ((a >>> 1) | 0)) | 0);
                                              b = i[b >> 2];
                                              while (1) {
                                                d = b;
                                                if (
                                                  (e | 0) ==
                                                  (i[(b + 4) >> 2] & -8)
                                                ) {
                                                  break A;
                                                }
                                                b = (a >>> 29) | 0;
                                                a = a << 1;
                                                f = (d + (b & 4)) | 0;
                                                b = i[(f + 16) >> 2];
                                                if (b) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              i[(f + 16) >> 2] = c;
                                              i[(c + 24) >> 2] = d;
                                            }
                                            i[(c + 12) >> 2] = c;
                                            i[(c + 8) >> 2] = c;
                                            break x;
                                          }
                                          a = i[(c + 8) >> 2];
                                          i[(a + 12) >> 2] = h;
                                          i[(c + 8) >> 2] = h;
                                          i[(h + 24) >> 2] = 0;
                                          i[(h + 12) >> 2] = c;
                                          i[(h + 8) >> 2] = a;
                                        }
                                        a = (m + 8) | 0;
                                        break a;
                                      }
                                      a = i[(d + 8) >> 2];
                                      i[(a + 12) >> 2] = c;
                                      i[(d + 8) >> 2] = c;
                                      i[(c + 24) >> 2] = 0;
                                      i[(c + 12) >> 2] = d;
                                      i[(c + 8) >> 2] = a;
                                    }
                                    a = i[3811];
                                    if (a >>> 0 <= g >>> 0) {
                                      break d;
                                    }
                                    b = (a - g) | 0;
                                    i[3811] = b;
                                    a = i[3814];
                                    c = (a + g) | 0;
                                    i[3814] = c;
                                    i[(c + 4) >> 2] = b | 1;
                                    i[(a + 4) >> 2] = g | 3;
                                    a = (a + 8) | 0;
                                    break a;
                                  }
                                  i[3790] = 48;
                                  a = 0;
                                  break a;
                                }
                                Q: {
                                  if (!h) {
                                    break Q;
                                  }
                                  a = i[(e + 28) >> 2];
                                  d = ((a << 2) + 15536) | 0;
                                  R: {
                                    if (i[d >> 2] == (e | 0)) {
                                      i[d >> 2] = b;
                                      if (b) {
                                        break R;
                                      }
                                      k = ic(a) & k;
                                      i[3809] = k;
                                      break Q;
                                    }
                                    i[
                                      (h +
                                        (i[(h + 16) >> 2] == (e | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = b;
                                    if (!b) {
                                      break Q;
                                    }
                                  }
                                  i[(b + 24) >> 2] = h;
                                  a = i[(e + 16) >> 2];
                                  if (a) {
                                    i[(b + 16) >> 2] = a;
                                    i[(a + 24) >> 2] = b;
                                  }
                                  a = i[(e + 20) >> 2];
                                  if (!a) {
                                    break Q;
                                  }
                                  i[(b + 20) >> 2] = a;
                                  i[(a + 24) >> 2] = b;
                                }
                                S: {
                                  if (c >>> 0 <= 15) {
                                    a = (c + g) | 0;
                                    i[(e + 4) >> 2] = a | 3;
                                    a = (a + e) | 0;
                                    i[(a + 4) >> 2] = i[(a + 4) >> 2] | 1;
                                    break S;
                                  }
                                  i[(e + 4) >> 2] = g | 3;
                                  d = (e + g) | 0;
                                  i[(d + 4) >> 2] = c | 1;
                                  i[(c + d) >> 2] = c;
                                  if (c >>> 0 <= 255) {
                                    b = (c >>> 3) | 0;
                                    a = ((b << 3) + 15272) | 0;
                                    c = i[3808];
                                    b = 1 << b;
                                    T: {
                                      if (!(c & b)) {
                                        i[3808] = b | c;
                                        b = a;
                                        break T;
                                      }
                                      b = i[(a + 8) >> 2];
                                    }
                                    i[(a + 8) >> 2] = d;
                                    i[(b + 12) >> 2] = d;
                                    i[(d + 12) >> 2] = a;
                                    i[(d + 8) >> 2] = b;
                                    break S;
                                  }
                                  b = d;
                                  g = (c >>> 8) | 0;
                                  a = 0;
                                  U: {
                                    if (!g) {
                                      break U;
                                    }
                                    a = 31;
                                    if (c >>> 0 > 16777215) {
                                      break U;
                                    }
                                    f = ((g + 1048320) >>> 16) & 8;
                                    g = g << f;
                                    a = ((g + 520192) >>> 16) & 4;
                                    h = g << a;
                                    g = ((h + 245760) >>> 16) & 2;
                                    a =
                                      ((((h << g) >>> 15) | 0) -
                                        (g | (a | f))) |
                                      0;
                                    a =
                                      (((a << 1) | ((c >>> (a + 21)) & 1)) +
                                        28) |
                                      0;
                                  }
                                  i[(b + 28) >> 2] = a;
                                  i[(d + 16) >> 2] = 0;
                                  i[(d + 20) >> 2] = 0;
                                  b = ((a << 2) + 15536) | 0;
                                  V: {
                                    g = 1 << a;
                                    W: {
                                      if (!(g & k)) {
                                        i[3809] = g | k;
                                        i[b >> 2] = d;
                                        break W;
                                      }
                                      a =
                                        c <<
                                        ((a | 0) == 31
                                          ? 0
                                          : (25 - ((a >>> 1) | 0)) | 0);
                                      g = i[b >> 2];
                                      while (1) {
                                        b = g;
                                        if ((i[(b + 4) >> 2] & -8) == (c | 0)) {
                                          break V;
                                        }
                                        g = (a >>> 29) | 0;
                                        a = a << 1;
                                        f = ((g & 4) + b) | 0;
                                        g = i[(f + 16) >> 2];
                                        if (g) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[(f + 16) >> 2] = d;
                                    }
                                    i[(d + 24) >> 2] = b;
                                    i[(d + 12) >> 2] = d;
                                    i[(d + 8) >> 2] = d;
                                    break S;
                                  }
                                  a = i[(b + 8) >> 2];
                                  i[(a + 12) >> 2] = d;
                                  i[(b + 8) >> 2] = d;
                                  i[(d + 24) >> 2] = 0;
                                  i[(d + 12) >> 2] = b;
                                  i[(d + 8) >> 2] = a;
                                }
                                a = (e + 8) | 0;
                                break a;
                              }
                              X: {
                                if (!m) {
                                  break X;
                                }
                                a = i[(b + 28) >> 2];
                                c = ((a << 2) + 15536) | 0;
                                Y: {
                                  if (i[c >> 2] == (b | 0)) {
                                    i[c >> 2] = e;
                                    if (e) {
                                      break Y;
                                    }
                                    i[3809] = ic(a) & n;
                                    break X;
                                  }
                                  i[
                                    (m +
                                      (i[(m + 16) >> 2] == (b | 0)
                                        ? 16
                                        : 20)) >>
                                      2
                                  ] = e;
                                  if (!e) {
                                    break X;
                                  }
                                }
                                i[(e + 24) >> 2] = m;
                                a = i[(b + 16) >> 2];
                                if (a) {
                                  i[(e + 16) >> 2] = a;
                                  i[(a + 24) >> 2] = e;
                                }
                                a = i[(b + 20) >> 2];
                                if (!a) {
                                  break X;
                                }
                                i[(e + 20) >> 2] = a;
                                i[(a + 24) >> 2] = e;
                              }
                              Z: {
                                if (d >>> 0 <= 15) {
                                  a = (d + g) | 0;
                                  i[(b + 4) >> 2] = a | 3;
                                  a = (a + b) | 0;
                                  i[(a + 4) >> 2] = i[(a + 4) >> 2] | 1;
                                  break Z;
                                }
                                i[(b + 4) >> 2] = g | 3;
                                g = (b + g) | 0;
                                i[(g + 4) >> 2] = d | 1;
                                i[(d + g) >> 2] = d;
                                if (k) {
                                  c = (k >>> 3) | 0;
                                  a = ((c << 3) + 15272) | 0;
                                  e = i[3813];
                                  c = 1 << c;
                                  _: {
                                    if (!(c & f)) {
                                      i[3808] = c | f;
                                      c = a;
                                      break _;
                                    }
                                    c = i[(a + 8) >> 2];
                                  }
                                  i[(a + 8) >> 2] = e;
                                  i[(c + 12) >> 2] = e;
                                  i[(e + 12) >> 2] = a;
                                  i[(e + 8) >> 2] = c;
                                }
                                i[3813] = g;
                                i[3810] = d;
                              }
                              a = (b + 8) | 0;
                            }
                            H = (o + 16) | 0;
                            return a | 0;
                          }
                          function yb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0;
                            r = (H - 32) | 0;
                            H = r;
                            f = i[(a + 44) >> 2];
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      if (!b) {
                                        if (i[(a + 484) >> 2]) {
                                          break e;
                                        }
                                        b = i[(a + 8) >> 2];
                                        if ((b | 0) <= 9) {
                                          j = h[((b << 1) + 12480) >> 1] << 1;
                                        }
                                        b = h[(a + 102) >> 1];
                                        f = h[(a + 98) >> 1];
                                        d = h[(a + 100) >> 1];
                                        f: {
                                          if ((f | 0) < (d | 0)) {
                                            if ((d | 0) < (b | 0)) {
                                              break f;
                                            }
                                            d = (f | 0) < (b | 0) ? b : f;
                                            break f;
                                          }
                                          if ((b | 0) < (d | 0)) {
                                            break f;
                                          }
                                          d = (b | 0) < (f | 0) ? b : f;
                                        }
                                        b = h[(a + 96) >> 1];
                                        if ((d | 0) < (b | 0)) {
                                          h[(a + 96) >> 1] = d;
                                          b = d;
                                        }
                                        f = Z(
                                          i[(a + 52) >> 2],
                                          i[(a + 12) >> 2]
                                        );
                                        d = i[(a + 48) >> 2];
                                        qa(
                                          d,
                                          (d + (i[(a + 12) >> 2] << 1)) | 0,
                                          (((i[(a + 16) >> 2] +
                                            (i[(a + 32) >> 2] << 1)) <<
                                            1) +
                                            24) |
                                            0
                                        );
                                        e =
                                          (o(i[(a + 108) >> 2], 1664525) +
                                            1013904223) |
                                          0;
                                        i[(a + 108) >> 2] = e;
                                        b =
                                          o(
                                            (((b | 0) < 54 ? b : 54) << 25) >>
                                              16,
                                            j
                                          ) >> 16;
                                        n = i[(a + 12) >> 2];
                                        if ((n | 0) >= 1) {
                                          d = i[(a + 28) >> 2];
                                          p = i[(a + 32) >> 2];
                                          g = o(
                                            e >> 16,
                                            ((i[(a + 8) >> 2] << 16) + 65536) >>
                                              16
                                          );
                                          g =
                                            (i[(a + 92) >> 2] +
                                              ((((g - (g >> 3)) << 2) +
                                                32768) >>
                                                30)) |
                                            0;
                                          p = (g | 0) > (p | 0) ? p : g;
                                          p = (p | 0) < (d | 0) ? d : p;
                                          j =
                                            (o(
                                              f,
                                              o(
                                                (2147418112 -
                                                  ((o(b, b) << 1) & -65536)) >>
                                                  16,
                                                j
                                              ) >> 16
                                            ) <<
                                              1) >>
                                            16;
                                          f = i[(a + 52) >> 2];
                                          d = 0;
                                          while (1) {
                                            e =
                                              (o(e, 1664525) + 1013904223) | 0;
                                            g = o(j, e >> 16);
                                            h[(f + (d << 1)) >> 1] =
                                              ((((g - (g >> 3)) | 0) -
                                                -8192) >>>
                                                14) +
                                              (o(
                                                b,
                                                h[(f + ((d - p) << 1)) >> 1]
                                              ) >>>
                                                15);
                                            d = (d + 1) | 0;
                                            if ((n | 0) != (d | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          i[(a + 108) >> 2] = e;
                                        }
                                        f = i[(a + 60) >> 2];
                                        ca(32113, f, f, i[(a + 24) >> 2]);
                                        _(
                                          (i[(a + 52) >> 2] -
                                            (i[(a + 16) >> 2] << 1)) |
                                            0,
                                          i[(a + 60) >> 2],
                                          c,
                                          i[(a + 12) >> 2],
                                          i[(a + 24) >> 2],
                                          i[(a + 64) >> 2]
                                        );
                                        sa(
                                          c,
                                          c,
                                          i[(a + 12) >> 2],
                                          1,
                                          (a + 68) | 0
                                        );
                                        d = 0;
                                        i[(a + 4) >> 2] = 0;
                                        i[(a + 8) >> 2] = i[(a + 8) >> 2] + 1;
                                        c = i[(a + 104) >> 2];
                                        i[(a + 104) >> 2] = c + 1;
                                        h[((((c << 1) + a) | 0) + 98) >> 1] =
                                          (b + 256) >>> 9;
                                        if ((c | 0) < 2) {
                                          break c;
                                        }
                                        i[(a + 104) >> 2] = 0;
                                        break c;
                                      }
                                      if (!i[(a + 112) >> 2]) {
                                        break d;
                                      }
                                      if (
                                        ((i[(b + 20) >> 2]
                                          ? -1
                                          : (((i[(b + 4) >> 2] -
                                              i[(b + 12) >> 2]) |
                                              0) -
                                              (i[(b + 8) >> 2] << 3)) |
                                            0) |
                                          0) <
                                        5
                                      ) {
                                        d = -1;
                                        break c;
                                      }
                                      j = (a + 128) | 0;
                                      while (1) {
                                        g: {
                                          if (!V(b, 1)) {
                                            break g;
                                          }
                                          oa(
                                            b,
                                            (i[((V(b, 3) << 2) + 12512) >> 2] +
                                              -4) |
                                              0
                                          );
                                          if (
                                            ((i[(b + 20) >> 2]
                                              ? -1
                                              : (((i[(b + 4) >> 2] -
                                                  i[(b + 12) >> 2]) |
                                                  0) -
                                                  (i[(b + 8) >> 2] << 3)) |
                                                0) |
                                              0) <
                                            5
                                          ) {
                                            d = -1;
                                            break c;
                                          }
                                          if (!V(b, 1)) {
                                            break g;
                                          }
                                          oa(
                                            b,
                                            (i[((V(b, 3) << 2) + 12512) >> 2] +
                                              -4) |
                                              0
                                          );
                                          if (!V(b, 1)) {
                                            break g;
                                          }
                                          i[(r + 16) >> 2] = 12595;
                                          Y(i[3524], 12810, (r + 16) | 0);
                                          d = -2;
                                          break c;
                                        }
                                        if (
                                          ((i[(b + 20) >> 2]
                                            ? -1
                                            : (((i[(b + 4) >> 2] -
                                                i[(b + 12) >> 2]) |
                                                0) -
                                                (i[(b + 8) >> 2] << 3)) |
                                              0) |
                                            0) <
                                          4
                                        ) {
                                          d = -1;
                                          break c;
                                        }
                                        d = -1;
                                        h: {
                                          i: {
                                            j: {
                                              k: {
                                                e = V(b, 4);
                                                switch ((e + -13) | 0) {
                                                  case 1:
                                                    break i;
                                                  case 0:
                                                    break k;
                                                  case 2:
                                                    break c;
                                                  default:
                                                    break j;
                                                }
                                              }
                                              d =
                                                J[i[(a + 452) >> 2]](
                                                  b,
                                                  a,
                                                  i[(a + 456) >> 2]
                                                ) | 0;
                                              if (!d) {
                                                break h;
                                              }
                                              break c;
                                            }
                                            if ((e | 0) < 9) {
                                              break e;
                                            }
                                            i[r >> 2] = 12544;
                                            Y(i[3524], 12810, r);
                                            d = -2;
                                            break c;
                                          }
                                          d = gb(b, j, a);
                                          if (d) {
                                            break c;
                                          }
                                        }
                                        if (
                                          ((i[(b + 20) >> 2]
                                            ? -1
                                            : (((i[(b + 4) >> 2] -
                                                i[(b + 12) >> 2]) |
                                                0) -
                                                (i[(b + 8) >> 2] << 3)) |
                                              0) |
                                            0) >=
                                          5
                                        ) {
                                          continue;
                                        }
                                        break;
                                      }
                                      d = -1;
                                      break c;
                                    }
                                    i[(a + 120) >> 2] = e;
                                  }
                                  d = i[(a + 48) >> 2];
                                  qa(
                                    d,
                                    (d + (i[(a + 12) >> 2] << 1)) | 0,
                                    (((i[(a + 16) >> 2] +
                                      (i[(a + 32) >> 2] << 1)) <<
                                      1) +
                                      24) |
                                      0
                                  );
                                  s = (f + (f & 1)) | 0;
                                  f = i[(a + 24) >> 2];
                                  j = (s + (f << 1)) | 0;
                                  d =
                                    i[
                                      (i[(a + 116) >> 2] +
                                        (i[(a + 120) >> 2] << 2)) >>
                                        2
                                    ];
                                  if (!d) {
                                    ca(30474, i[(a + 60) >> 2], s, f);
                                    f = Z(i[(a + 52) >> 2], i[(a + 12) >> 2]);
                                    d = 0;
                                    b = i[(a + 12) >> 2];
                                    l: {
                                      if ((b | 0) <= 0) {
                                        g = i[(a + 52) >> 2];
                                        break l;
                                      }
                                      e = i[(a + 108) >> 2];
                                      g = i[(a + 52) >> 2];
                                      while (1) {
                                        e = (o(e, 1664525) + 1013904223) | 0;
                                        j = o(f, e >> 16);
                                        h[((d << 1) + g) >> 1] =
                                          (((j - (j >> 3)) | 0) - -8192) >>> 14;
                                        d = (d + 1) | 0;
                                        if ((b | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[(a + 108) >> 2] = e;
                                    }
                                    i[(a + 4) >> 2] = 1;
                                    _(
                                      g,
                                      s,
                                      c,
                                      b,
                                      i[(a + 24) >> 2],
                                      i[(a + 64) >> 2]
                                    );
                                    d = 0;
                                    i[(a + 8) >> 2] = 0;
                                    break c;
                                  }
                                  J[i[(d + 20) >> 2]](s, f, b);
                                  m: {
                                    if (!i[(a + 8) >> 2]) {
                                      break m;
                                    }
                                    f = i[(a + 24) >> 2];
                                    if ((f | 0) < 1) {
                                      break m;
                                    }
                                    g = i[(a + 56) >> 2];
                                    d = 0;
                                    e = 0;
                                    while (1) {
                                      n = d << 1;
                                      q =
                                        (h[(n + g) >> 1] - h[(n + s) >> 1]) | 0;
                                      n = q >> 31;
                                      e = ((n ^ (n + q)) + e) | 0;
                                      d = (d + 1) | 0;
                                      if ((f | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    if ((f | 0) < 1) {
                                      break m;
                                    }
                                    f = (19661 >>> (e >>> 15)) | 0;
                                    n = i[(a + 64) >> 2];
                                    d = 0;
                                    while (1) {
                                      g = (n + (d << 2)) | 0;
                                      e = i[g >> 2];
                                      i[g >> 2] =
                                        o(f, (e << 1) >> 16) +
                                        ((o(f, e & 32767) >>> 15) | 0);
                                      d = (d + 1) | 0;
                                      if ((d | 0) < i[(a + 24) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  n: {
                                    if (
                                      i[(a + 8) >> 2] ? 0 : !i[(a + 4) >> 2]
                                    ) {
                                      break n;
                                    }
                                    f = i[(a + 24) >> 2];
                                    if ((f | 0) < 1) {
                                      break n;
                                    }
                                    e = i[(a + 56) >> 2];
                                    d = 0;
                                    while (1) {
                                      n = d << 1;
                                      h[(n + e) >> 1] = k[(n + s) >> 1];
                                      d = (d + 1) | 0;
                                      if ((f | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  f =
                                    i[
                                      (i[(a + 116) >> 2] +
                                        (i[(a + 120) >> 2] << 2)) >>
                                        2
                                    ];
                                  if (i[f >> 2] != -1) {
                                    p = (i[(a + 28) >> 2] + V(b, 7)) | 0;
                                    f =
                                      i[
                                        (i[(a + 116) >> 2] +
                                          (i[(a + 120) >> 2] << 2)) >>
                                          2
                                      ];
                                  }
                                  if (i[(f + 4) >> 2]) {
                                    A =
                                      (o((V(b, 4) << 22) >> 16, 2185) +
                                        16384) >>
                                      15;
                                  }
                                  f = V(b, 5);
                                  v = (j + (j & 1)) | 0;
                                  d = (v + (i[(a + 24) >> 2] << 1)) | 0;
                                  B = (((0 - d) & 3) + d) | 0;
                                  d = i[(a + 16) >> 2] << 2;
                                  j = (B + d) | 0;
                                  e = (0 - j) & 3;
                                  n = i[((f << 2) + 12144) >> 2];
                                  g = o(n & 32767, 28406);
                                  f = i[(a + 120) >> 2];
                                  if ((f | 0) == 1) {
                                    i[(a + 484) >> 2] = (V(b, 4) | 0) == 15;
                                    f = i[(a + 120) >> 2];
                                  }
                                  if ((f | 0) >= 2) {
                                    i[(a + 484) >> 2] = 0;
                                  }
                                  t = (e + j) | 0;
                                  q = (t + d) | 0;
                                  n =
                                    (o((n << 1) >> 16, 28406) +
                                      ((g >>> 15) | 0)) |
                                    0;
                                  o: {
                                    if (i[(a + 20) >> 2] <= 0) {
                                      f = 40;
                                      break o;
                                    }
                                    f = (p << 16) >> 15;
                                    d = f >>> 0 > 65535;
                                    j = d << 3;
                                    g = j | 4;
                                    e = j;
                                    d = d ? (f >>> 16) | 0 : f;
                                    j = d >>> 0 > 255;
                                    e = j ? g : e;
                                    d = j ? (d >>> 8) | 0 : d;
                                    j = d >>> 0 > 15;
                                    d =
                                      (j ? e | 2 : e) |
                                      ((j ? (d >>> 4) | 0 : d) >>> 0 > 3);
                                    j = d << 1;
                                    g = n << 2;
                                    e = (o(A, 24576) + -311296) | 0;
                                    e = e & 536870912 ? 0 : (e >>> 14) | 0;
                                    e = (e << 16) >> 16 < 64 ? e : 64;
                                    m = f >> (j + -12);
                                    f = f << (12 - j);
                                    j = (d << 16) >> 16;
                                    f = (((j | 0) > 6 ? m : f) << 16) >> 16;
                                    f =
                                      (((o(
                                        (((o(
                                          (o(f, 16816) + -827523072) >> 16,
                                          f
                                        ) <<
                                          2) &
                                          -65536) +
                                          1387593728) >>
                                          16,
                                        f
                                      ) <<
                                        2) &
                                        -65536) +
                                        238157824) >>
                                      16;
                                    d = (13 - d) | 0;
                                    K = o(
                                      (((o(
                                        (g + 32768) >> 16,
                                        (e << 16) >> 16
                                      ) <<
                                        10) +
                                        32768) >>>
                                        16) |
                                        0,
                                      (j | 0) < 13 ? f >> d : f << (0 - d)
                                    );
                                    L = o(e, 5046272) >> 16;
                                    M = (o(e, -28508160) + 2147418112) >> 16;
                                    C = (a + 108) | 0;
                                    D = n & 16383;
                                    E = g >> 16;
                                    N = (q + ((0 - q) & 3)) | 0;
                                    d = i[(a + 16) >> 2];
                                    f = 40;
                                    while (1) {
                                      w = i[(a + 80) >> 2];
                                      l = o(d, z);
                                      F = l << 1;
                                      u = U(
                                        (F + i[(a + 52) >> 2]) | 0,
                                        0,
                                        d << 1
                                      );
                                      e =
                                        i[
                                          (i[(a + 116) >> 2] +
                                            (i[(a + 120) >> 2] << 2)) >>
                                            2
                                        ];
                                      m = i[(e + 28) >> 2];
                                      if (!m) {
                                        break b;
                                      }
                                      d = f;
                                      j = p;
                                      g = j;
                                      p: {
                                        q: {
                                          r: {
                                            f = i[e >> 2];
                                            switch ((f + 1) | 0) {
                                              case 1:
                                                break p;
                                              case 0:
                                                break q;
                                              default:
                                                break r;
                                            }
                                          }
                                          j = i[(a + 32) >> 2];
                                          g = (f + p) | 0;
                                          g = (g | 0) > (j | 0) ? j : g;
                                          j = i[(a + 28) >> 2];
                                          f = (((p - f) | 0) + 1) | 0;
                                          j = (f | 0) < (j | 0) ? j : f;
                                          break p;
                                        }
                                        g = i[(a + 32) >> 2];
                                        j = i[(a + 28) >> 2];
                                      }
                                      J[m | 0](
                                        u,
                                        t,
                                        j,
                                        g,
                                        A,
                                        i[(e + 32) >> 2],
                                        i[(a + 16) >> 2],
                                        (r + 28) | 0,
                                        (r + 22) | 0,
                                        b,
                                        q,
                                        i[(a + 8) >> 2],
                                        l,
                                        h[(a + 96) >> 1],
                                        0
                                      );
                                      vb(t, i[(a + 16) >> 2]);
                                      j = h[(r + 24) >> 1];
                                      f = j >> 31;
                                      s: {
                                        t: {
                                          j = f ^ (f + j);
                                          f = h[(r + 22) >> 1];
                                          j =
                                            (j +
                                              ((f | 0) > 0
                                                ? f
                                                : (0 - ((f >>> 1) | 0)) | 0)) |
                                            0;
                                          f = h[(r + 26) >> 1];
                                          j =
                                            ((j +
                                              ((f | 0) > 0
                                                ? f
                                                : (0 - ((f >>> 1) | 0)) | 0)) <<
                                              16) >>
                                            16;
                                          e = (G << 16) >> 16;
                                          u: {
                                            if ((j | 0) <= (e | 0)) {
                                              break u;
                                            }
                                            f = i[(r + 28) >> 2];
                                            l = ((d << 1) - f) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 3) {
                                              break u;
                                            }
                                            l = (o(d, 3) - f) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 4) {
                                              break u;
                                            }
                                            l = ((d << 2) - f) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) > 4) {
                                              break t;
                                            }
                                          }
                                          if (o(e, 19661) >> 15 < (j | 0)) {
                                            f = i[(r + 28) >> 2];
                                            l = (d - (f << 1)) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 3) {
                                              break t;
                                            }
                                            l = (d + o(f, -3)) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 4) {
                                              break t;
                                            }
                                            l = (d - (f << 2)) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 5) {
                                              break t;
                                            }
                                          }
                                          if (o(j, 21955) >> 15 <= (e | 0)) {
                                            f = d;
                                            break s;
                                          }
                                          f = i[(r + 28) >> 2];
                                          l = ((d << 1) - f) | 0;
                                          g = l >> 31;
                                          if ((g ^ (g + l)) < 3) {
                                            break t;
                                          }
                                          l = (o(d, 3) - f) | 0;
                                          g = l >> 31;
                                          if ((g ^ (g + l)) < 4) {
                                            break t;
                                          }
                                          l = ((d << 2) - f) | 0;
                                          g = l >> 31;
                                          if ((g ^ (g + l)) <= 4) {
                                            break t;
                                          }
                                          f = d;
                                          break s;
                                        }
                                        G = (j | 0) > (e | 0) ? j : G;
                                      }
                                      l = U(B, 0, i[(a + 16) >> 2] << 2);
                                      e = n;
                                      v: {
                                        w: {
                                          switch (
                                            (i[
                                              (i[
                                                (i[(a + 116) >> 2] +
                                                  (i[(a + 120) >> 2] << 2)) >>
                                                  2
                                              ] +
                                                8) >>
                                                2
                                            ] +
                                              -1) |
                                            0
                                          ) {
                                            case 2:
                                              d =
                                                h[
                                                  ((V(b, 3) << 1) + 12288) >> 1
                                                ];
                                              e =
                                                ((o(d, D) >> 14) + o(d, E)) | 0;
                                              break v;
                                            case 0:
                                              break w;
                                            default:
                                              break v;
                                          }
                                        }
                                        d = h[((V(b, 1) << 1) + 12306) >> 1];
                                        e = ((o(d, D) >> 14) + o(d, E)) | 0;
                                      }
                                      d =
                                        i[
                                          (i[(a + 116) >> 2] +
                                            (i[(a + 120) >> 2] << 2)) >>
                                            2
                                        ];
                                      g = i[(d + 40) >> 2];
                                      if (!g) {
                                        break a;
                                      }
                                      J[g | 0](
                                        l,
                                        i[(d + 44) >> 2],
                                        i[(a + 16) >> 2],
                                        b,
                                        q,
                                        C
                                      );
                                      da(l, l, e, i[(a + 16) >> 2]);
                                      d = i[(a + 16) >> 2];
                                      x: {
                                        y: {
                                          if (
                                            i[
                                              (i[
                                                (i[(a + 116) >> 2] +
                                                  (i[(a + 120) >> 2] << 2)) >>
                                                  2
                                              ] +
                                                12) >>
                                                2
                                            ]
                                          ) {
                                            g = 0;
                                            d = d << 2;
                                            m = U(N, 0, d);
                                            I =
                                              i[
                                                (i[(a + 116) >> 2] +
                                                  (i[(a + 120) >> 2] << 2)) >>
                                                  2
                                              ];
                                            J[i[(I + 40) >> 2]](
                                              m,
                                              i[(I + 44) >> 2],
                                              i[(a + 16) >> 2],
                                              b,
                                              (d + m) | 0,
                                              C
                                            );
                                            da(
                                              m,
                                              m,
                                              (o((e << 1) >> 16, 14895) +
                                                ((o(e & 32767, 14895) >>> 15) |
                                                  0)) |
                                                0,
                                              i[(a + 16) >> 2]
                                            );
                                            d = i[(a + 16) >> 2];
                                            if ((d | 0) < 1) {
                                              break y;
                                            }
                                            while (1) {
                                              d = g << 2;
                                              e = (d + l) | 0;
                                              i[e >> 2] =
                                                i[(d + m) >> 2] + i[e >> 2];
                                              g = (g + 1) | 0;
                                              d = i[(a + 16) >> 2];
                                              if ((g | 0) < (d | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          if ((d | 0) < 1) {
                                            break x;
                                          }
                                          e = 0;
                                          g = (d | 0) > 0;
                                          while (1) {
                                            m = e << 2;
                                            m =
                                              ((i[(m + t) >> 2] << 1) +
                                                i[(l + m) >> 2]) |
                                              0;
                                            h[(u + (e << 1)) >> 1] =
                                              (m | 0) > 536862719
                                                ? 32767
                                                : (m | 0) < -536862720
                                                ? -32767
                                                : ((m - -8192) >>> 14) | 0;
                                            e = (e + 1) | 0;
                                            if ((e | 0) != (d | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        m = w ? (w + F) | 0 : 0;
                                        if (!m) {
                                          break x;
                                        }
                                        e = 0;
                                        if (!g) {
                                          break x;
                                        }
                                        while (1) {
                                          h[(m + (e << 1)) >> 1] =
                                            (i[(l + (e << 2)) >> 2] - -8192) >>>
                                            14;
                                          e = (e + 1) | 0;
                                          if ((e | 0) != (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      y = (j + y) | 0;
                                      z: {
                                        if (i[(a + 120) >> 2] != 1) {
                                          break z;
                                        }
                                        u = U(u, 0, d << 1);
                                        e = i[(a + 480) >> 2];
                                        d = i[(a + 16) >> 2];
                                        if ((e | 0) < (d | 0)) {
                                          while (1) {
                                            if ((e | 0) >= 0) {
                                              h[(u + (e << 1)) >> 1] = K;
                                            }
                                            e = (e + p) | 0;
                                            if ((e | 0) < (d | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          i[(a + 480) >> 2] = e;
                                        }
                                        i[(a + 480) >> 2] = e - d;
                                        if ((d | 0) < 1) {
                                          break z;
                                        }
                                        j = i[(a + 472) >> 2];
                                        g = 0;
                                        while (1) {
                                          m = (u + (g << 1)) | 0;
                                          w = h[m >> 1];
                                          e = i[(l + (g << 2)) >> 2];
                                          h[m >> 1] =
                                            (o(((e << 2) + 32768) >> 16, M) >>>
                                              15) +
                                            ((o(h[(a + 468) >> 1], 19660) +
                                              (o(w, 45876) & -65536)) >>>
                                              16) -
                                            (o(((j << 2) + 32768) >> 16, L) >>>
                                              15);
                                          i[(a + 472) >> 2] = e;
                                          h[(a + 468) >> 1] = w;
                                          j =
                                            ((((o(h[(a + 476) >> 1], 26214) +
                                              o(h[m >> 1], 6554)) |
                                              0) +
                                              16384) >>>
                                              15) |
                                            0;
                                          h[(a + 476) >> 1] = j;
                                          h[m >> 1] = k[m >> 1] - j;
                                          j = e;
                                          g = (g + 1) | 0;
                                          if ((g | 0) != (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      y = (y << 16) >> 16;
                                      z = (z + 1) | 0;
                                      if ((z | 0) < i[(a + 20) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    l = (y + 2) >> 2;
                                  }
                                  b = (q + (q & 1)) | 0;
                                  d = i[(a + 24) >> 2];
                                  p = (b + (d << 1)) | 0;
                                  A: {
                                    B: {
                                      if (!i[(a + 124) >> 2]) {
                                        break B;
                                      }
                                      j =
                                        h[
                                          (i[
                                            (i[(a + 116) >> 2] +
                                              (i[(a + 120) >> 2] << 2)) >>
                                              2
                                          ] +
                                            48) >>
                                            1
                                        ];
                                      if (i[(a + 8) >> 2] | ((j | 0) < 1)) {
                                        break B;
                                      }
                                      e = i[(a + 16) >> 2] << 1;
                                      Ja(
                                        (i[(a + 52) >> 2] - e) | 0,
                                        c,
                                        e,
                                        f,
                                        j,
                                        p
                                      );
                                      d = i[(a + 16) >> 2];
                                      j = d << 1;
                                      Ja(
                                        (j + i[(a + 52) >> 2]) | 0,
                                        ((d << 2) + c) | 0,
                                        j,
                                        f,
                                        h[
                                          (i[
                                            (i[(a + 116) >> 2] +
                                              (i[(a + 120) >> 2] << 2)) >>
                                              2
                                          ] +
                                            48) >>
                                            1
                                        ],
                                        p
                                      );
                                      break A;
                                    }
                                    X(
                                      c,
                                      (i[(a + 52) >> 2] -
                                        (i[(a + 16) >> 2] << 1)) |
                                        0,
                                      i[(a + 12) >> 2] << 1
                                    );
                                  }
                                  C: {
                                    if (!i[(a + 8) >> 2]) {
                                      break C;
                                    }
                                    d = Z(i[(a + 52) >> 2], i[(a + 12) >> 2]);
                                    e = i[(a + 12) >> 2];
                                    if ((e | 0) < 1) {
                                      break C;
                                    }
                                    d = ((d << 16) + 65536) | 0;
                                    d = (((n + (d >> 17)) | 0) / (d >> 16)) | 0;
                                    g =
                                      (((d | 0) < 32767 ? d : 32767) << 16) >>
                                      16;
                                    q = i[(a + 16) >> 2];
                                    j = i[(a + 52) >> 2];
                                    d = 0;
                                    while (1) {
                                      m = d << 1;
                                      t = (m + j) | 0;
                                      h[t >> 1] = o(g, h[t >> 1]) >>> 14;
                                      h[(c + m) >> 1] =
                                        k[(j + ((d - q) << 1)) >> 1];
                                      d = (d + 1) | 0;
                                      if ((e | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  d = i[(a + 20) >> 2];
                                  if ((d | 0) >= 1) {
                                    j = i[(a + 24) >> 2];
                                    g = 0;
                                    while (1) {
                                      q = i[(a + 16) >> 2];
                                      fa(i[(a + 56) >> 2], s, b, j, g, d);
                                      ga(b, i[(a + 24) >> 2], 16);
                                      ha(b, v, i[(a + 24) >> 2], p);
                                      e = 8192;
                                      d = 0;
                                      j = i[(a + 24) >> 2];
                                      if ((j | 0) >= 1) {
                                        while (1) {
                                          m = e;
                                          e = d << 1;
                                          e =
                                            (((m + h[((e | 2) + v) >> 1]) | 0) -
                                              h[(e + v) >> 1]) |
                                            0;
                                          d = (d + 2) | 0;
                                          if ((d | 0) < (j | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      i[(i[(a + 76) >> 2] + (g << 2)) >> 2] = e;
                                      d = ((o(g, q) << 1) + c) | 0;
                                      _(
                                        d,
                                        i[(a + 60) >> 2],
                                        d,
                                        i[(a + 16) >> 2],
                                        i[(a + 24) >> 2],
                                        i[(a + 64) >> 2]
                                      );
                                      j = i[(a + 24) >> 2];
                                      if ((j | 0) >= 1) {
                                        e = i[(a + 60) >> 2];
                                        d = 0;
                                        while (1) {
                                          q = d << 1;
                                          h[(q + e) >> 1] = k[(q + v) >> 1];
                                          d = (d + 1) | 0;
                                          if ((j | 0) != (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      g = (g + 1) | 0;
                                      d = i[(a + 20) >> 2];
                                      if ((g | 0) < (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if (i[(a + 492) >> 2]) {
                                    sa(
                                      c,
                                      c,
                                      i[(a + 12) >> 2],
                                      i[(a + 488) >> 2] ? 3 : 1,
                                      (a + 68) | 0
                                    );
                                  }
                                  b = ((((n - -8192) >>> 14) | 0) + 1) | 0;
                                  h[(a + 84) >> 1] = b;
                                  c = o(h[(a + 86) >> 1], 32440) >> 15;
                                  b = (b << 16) >> 16;
                                  c = (c | 0) > (b | 0) ? c : b;
                                  h[(a + 86) >> 1] = c;
                                  d =
                                    (o(h[(a + 88) >> 1], 66192) + 65536) >> 16;
                                  b = (d | 0) < (b | 0) ? d : b;
                                  h[(a + 88) >> 1] = b;
                                  if ((b | 0) >= (c | 0)) {
                                    h[(a + 86) >> 1] = b + 1;
                                  }
                                  b = i[(a + 24) >> 2];
                                  if ((b | 0) >= 1) {
                                    c = i[(a + 56) >> 2];
                                    d = 0;
                                    while (1) {
                                      j = d << 1;
                                      h[(j + c) >> 1] = k[(j + s) >> 1];
                                      d = (d + 1) | 0;
                                      if ((b | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  h[(a + 96) >> 1] = l;
                                  i[(a + 92) >> 2] = f;
                                  i[(a + 4) >> 2] = 0;
                                  i[(a + 8) >> 2] = 0;
                                  b = i[(a + 104) >> 2];
                                  i[(a + 104) >> 2] = b + 1;
                                  h[((((b << 1) + a) | 0) + 98) >> 1] = l;
                                  if ((b | 0) >= 2) {
                                    i[(a + 104) >> 2] = 0;
                                  }
                                  h[(a + 40) >> 1] = n;
                                  d = 0;
                                }
                                H = (r + 32) | 0;
                                return d | 0;
                              }
                              la(12657, 1321);
                              x();
                            }
                            la(12696, 1397);
                            x();
                          }
                          function mb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              n = 0,
                              r = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = p(0),
                              z = 0,
                              A = 0,
                              B = p(0),
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = p(0),
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = p(0),
                              Y = 0,
                              $ = 0,
                              ea = 0;
                            x = (H - 16) | 0;
                            H = x;
                            z = i[i[a >> 2] >> 2];
                            v = i[(a + 12) >> 2];
                            d = ((v << 1) + b) | 0;
                            f = i[(a + 44) >> 2];
                            Ub(b, b, d, i[(a + 8) >> 2], i[(a + 52) >> 2], f);
                            a: {
                              if (!(i[(a + 108) >> 2] | i[(a + 136) >> 2])) {
                                B = p(1);
                                I = p(1);
                                break a;
                              }
                              B = p(p(Z(b, i[(a + 12) >> 2]) | 0) + p(1));
                              I = p(p(Z(d, i[(a + 12) >> 2]) | 0) + p(1));
                            }
                            e = i[(a + 20) >> 2];
                            g = i[(a + 4) >> 2];
                            R = (f + (f & 1)) | 0;
                            J[i[(i[g >> 2] + 44) >> 2]](g, 104, R) | 0;
                            f = i[(a + 4) >> 2];
                            J[i[(i[f >> 2] + 28) >> 2]](f, b, c) | 0;
                            f = d;
                            j = i[(a + 24) >> 2];
                            G = i[(a + 12) >> 2];
                            d = (j - G) << 1;
                            K = X((f - d) | 0, i[(a + 48) >> 2], d);
                            d = i[(a + 12) >> 2];
                            X(
                              i[(a + 48) >> 2],
                              ((d << 1) + K) | 0,
                              (i[(a + 24) >> 2] - d) << 1
                            );
                            f = i[(a + 20) >> 2];
                            d = i[(a + 4) >> 2];
                            e = ((e << 1) + R) | 0;
                            S = (((0 - e) & 3) + e) | 0;
                            J[i[(i[d >> 2] + 44) >> 2]](d, 100, S) | 0;
                            d = i[(a + 4) >> 2];
                            e = ((f << 2) + S) | 0;
                            T = ((e & 1) + e) | 0;
                            J[i[(i[d >> 2] + 44) >> 2]](d, 101, T) | 0;
                            d = i[(a + 4) >> 2];
                            J[i[(i[d >> 2] + 44) >> 2]](d, 9, (x + 12) | 0) | 0;
                            i[(x + 12) >> 2] = !i[(x + 12) >> 2];
                            A = i[(a + 28) >> 2];
                            d = A << 1;
                            f = ((f << 1) + T) | 0;
                            w = ((f & 1) + f) | 0;
                            f = (d + w) | 0;
                            N = ((f & 1) + f) | 0;
                            f = (N + d) | 0;
                            C = ((f & 1) + f) | 0;
                            f = (C + d) | 0;
                            D = ((f & 1) + f) | 0;
                            f = (D + d) | 0;
                            E = ((f & 1) + f) | 0;
                            f = (E + d) | 0;
                            L = ((f & 1) + f) | 0;
                            f = (L + d) | 0;
                            O = ((f & 1) + f) | 0;
                            f = (O + d) | 0;
                            P = ((f & 1) + f) | 0;
                            f = (P + d) | 0;
                            f = ((f & 1) + f) | 0;
                            d = (((d + f) | 0) + 2) | 0;
                            g = ((d & 1) + d) | 0;
                            d = i[(a + 24) >> 2];
                            n = d << 1;
                            b: {
                              if (i[(a + 16) >> 2] != 80) {
                                if ((d | 0) < 1) {
                                  break b;
                                }
                                r = i[(a + 60) >> 2];
                                e = 0;
                                while (1) {
                                  l = e << 1;
                                  h[(l + g) >> 1] =
                                    o(h[(l + r) >> 1], h[(l + K) >> 1]) >>> 14;
                                  e = (e + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break b;
                              }
                              if ((d | 0) < 1) {
                                break b;
                              }
                              l = i[(a + 60) >> 2];
                              e = 0;
                              while (1) {
                                r = e << 1;
                                h[(r + g) >> 1] =
                                  o(h[(l + (e & -2)) >> 1], h[(r + K) >> 1]) >>>
                                  14;
                                e = (e + 1) | 0;
                                if ((d | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            l = (g + n) | 0;
                            e = 1;
                            Da(g, f, (A + 1) | 0, d);
                            d = h[f >> 1];
                            g = (((o(d, h[(a + 36) >> 1]) >>> 15) | 0) + d) | 0;
                            h[f >> 1] = g;
                            d = i[(a + 28) >> 2];
                            c: {
                              if ((d | 0) < 0) {
                                break c;
                              }
                              A = i[(a + 64) >> 2];
                              h[f >> 1] = o(h[A >> 1], (g << 16) >> 16) >>> 14;
                              if (!d) {
                                break c;
                              }
                              while (1) {
                                g = e << 1;
                                n = (g + f) | 0;
                                h[n >> 1] =
                                  o(h[(g + A) >> 1], h[n >> 1]) >>> 14;
                                g = (d | 0) != (e | 0);
                                e = (e + 1) | 0;
                                if (g) {
                                  continue;
                                }
                                break;
                              }
                            }
                            Ea(w, f, d);
                            f = ta(w, i[(a + 28) >> 2], E, 6553, l);
                            d = i[(a + 28) >> 2];
                            d: {
                              if ((f | 0) == (d | 0)) {
                                break d;
                              }
                              f = ta(w, d, E, 1638, l);
                              d = i[(a + 28) >> 2];
                              if (((f | 0) == (d | 0)) | ((d | 0) < 1)) {
                                break d;
                              }
                              f = i[(a + 68) >> 2];
                              e = 0;
                              while (1) {
                                g = e << 1;
                                h[(g + E) >> 1] = k[(f + g) >> 1];
                                e = (e + 1) | 0;
                                if ((d | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e: {
                              if (
                                i[(x + 12) >> 2] |
                                (i[(a + 136) >> 2] ? 0 : !i[(a + 108) >> 2])
                              ) {
                                break e;
                              }
                              if (i[(a + 120) >> 2]) {
                                V = m[(a + 124) >> 2];
                                f: {
                                  if ((p(m[(a + 128) >> 2] * V) > p(0)) ^ 1) {
                                    break f;
                                  }
                                  y = p(
                                    (+V * -1e-5) / +p(m[(a + 132) >> 2] + p(1))
                                  );
                                  y = +y > 0.1 ? p(0.10000000149011612) : y;
                                  if ((+y < -0.1) ^ 1) {
                                    break f;
                                  }
                                  y = p(-0.10000000149011612);
                                }
                                m[(a + 104) >> 2] = t(
                                  p(s(p(y + m[(a + 104) >> 2]), p(10))),
                                  p(0)
                                );
                              }
                              d = i[(a + 4) >> 2];
                              J[i[(i[d >> 2] + 44) >> 2]](
                                d,
                                29,
                                (a + 140) | 0
                              ) | 0;
                              Y = ba(+p(I / B));
                              if (i[(a + 108) >> 2]) {
                                e = (i[(z + 152) >> 2] + -1) | 0;
                                i[(x + 8) >> 2] = e;
                                I = p(
                                  t(
                                    p(
                                      p(
                                        p(s(p(t(p(Y + Y), p(-4))), p(2))) + p(2)
                                      ) + m[(a + 140) >> 2]
                                    ),
                                    p(-1)
                                  )
                                );
                                m[(a + 140) >> 2] = I;
                                g: {
                                  if (!e) {
                                    break g;
                                  }
                                  f = i[(z + 148) >> 2];
                                  B = m[(a + 104) >> 2];
                                  y = p(u(B));
                                  h: {
                                    if (p(q(y)) < p(2147483648)) {
                                      d = ~~y;
                                      break h;
                                    }
                                    d = -2147483648;
                                  }
                                  if ((d | 0) == 10) {
                                    while (1) {
                                      if (
                                        (((o(
                                          i[
                                            (i[
                                              (i[(a + 148) >> 2] + (e << 2)) >>
                                                2
                                            ] +
                                              52) >>
                                              2
                                          ],
                                          i[(a + 164) >> 2]
                                        ) |
                                          0) /
                                          i[(a + 8) >> 2]) |
                                          0) <=
                                        i[(a + 116) >> 2]
                                          ? !(
                                              (I >=
                                                m[
                                                  (((f + o(e, 44)) | 0) + 40) >>
                                                    2
                                                ]) ^
                                              1
                                            )
                                          : 0
                                      ) {
                                        break g;
                                      }
                                      e = (e + -1) | 0;
                                      i[(x + 8) >> 2] = e;
                                      if (e) {
                                        continue;
                                      }
                                      break g;
                                    }
                                  }
                                  y = p(B - p(d | 0));
                                  g = (d + 1) | 0;
                                  B = p(p(g | 0) - B);
                                  while (1) {
                                    w = (f + o(e, 44)) | 0;
                                    if (
                                      (((o(
                                        i[
                                          (i[
                                            (i[(a + 148) >> 2] + (e << 2)) >> 2
                                          ] +
                                            52) >>
                                            2
                                        ],
                                        i[(a + 164) >> 2]
                                      ) |
                                        0) /
                                        i[(a + 8) >> 2]) |
                                        0) <=
                                      i[(a + 116) >> 2]
                                        ? !(
                                            (I >=
                                              p(
                                                p(y * m[(w + (g << 2)) >> 2]) +
                                                  p(B * m[(w + (d << 2)) >> 2])
                                              )) ^
                                            1
                                          )
                                        : 0
                                    ) {
                                      break g;
                                    }
                                    e = (e + -1) | 0;
                                    i[(x + 8) >> 2] = e;
                                    if (e) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  10,
                                  (x + 8) | 0
                                ) | 0;
                                if (!i[(a + 120) >> 2]) {
                                  break e;
                                }
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  19,
                                  (x + 4) | 0
                                ) | 0;
                                d = i[(x + 4) >> 2];
                                m[(a + 132) >> 2] = m[(a + 132) >> 2] + p(1);
                                d = (d - i[(a + 120) >> 2]) | 0;
                                m[(a + 124) >> 2] =
                                  m[(a + 124) >> 2] + p(d | 0);
                                m[(a + 128) >> 2] =
                                  +(d | 0) * 0.05 + +m[(a + 128) >> 2] * 0.95;
                                break e;
                              }
                              i[(a + 152) >> 2] =
                                m[(a + 140) >> 2] < p(2)
                                  ? 1
                                  : i[(a + 156) >> 2];
                            }
                            if (i[(a + 144) >> 2]) {
                              W(c, 1, 1);
                              W(c, i[(x + 12) >> 2] ? 0 : i[(a + 152) >> 2], 3);
                            }
                            i: {
                              j: {
                                if (!i[(x + 12) >> 2]) {
                                  d =
                                    i[
                                      (i[(a + 148) >> 2] +
                                        (i[(a + 152) >> 2] << 2)) >>
                                        2
                                    ];
                                  if (d) {
                                    break j;
                                  }
                                }
                                c = i[(a + 12) >> 2];
                                if ((c | 0) >= 1) {
                                  U(
                                    (((((v + G) | 0) - j) << 1) + b) | 0,
                                    0,
                                    c << 1
                                  );
                                }
                                d = i[(a + 28) >> 2];
                                if ((d | 0) >= 1) {
                                  b = i[(a + 88) >> 2];
                                  e = 0;
                                  while (1) {
                                    i[(b + (e << 2)) >> 2] = 0;
                                    e = (e + 1) | 0;
                                    d = i[(a + 28) >> 2];
                                    if ((e | 0) < (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                i[(a + 32) >> 2] = 1;
                                _(
                                  K,
                                  i[(a + 76) >> 2],
                                  K,
                                  i[(a + 12) >> 2],
                                  d,
                                  i[(a + 80) >> 2]
                                );
                                a = !i[(x + 12) >> 2];
                                break i;
                              }
                              J[i[(d + 16) >> 2]](E, L, i[(a + 28) >> 2], c);
                              e = i[(a + 28) >> 2];
                              k: {
                                if (!i[(a + 32) >> 2] | ((e | 0) < 1)) {
                                  break k;
                                }
                                b = i[(a + 68) >> 2];
                                d = 0;
                                while (1) {
                                  f = d << 1;
                                  h[(f + b) >> 1] = k[(f + E) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((e | 0) < 1) {
                                  break k;
                                }
                                b = i[(a + 72) >> 2];
                                d = 0;
                                while (1) {
                                  f = d << 1;
                                  h[(f + b) >> 1] = k[(f + L) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              d = i[(a + 20) >> 2];
                              if ((d | 0) >= 1) {
                                w = (l + ((0 - l) & 3)) | 0;
                                b = (w + (e << 2)) | 0;
                                G = ((b & 1) + b) | 0;
                                b = i[(a + 16) >> 2];
                                f = b << 1;
                                g = (G + f) | 0;
                                $ = (((0 - g) & 3) + g) | 0;
                                g = ($ + (b << 2)) | 0;
                                z = ((g & 1) + g) | 0;
                                l = (f + z) | 0;
                                g = 0;
                                while (1) {
                                  fa(i[(a + 68) >> 2], E, O, e, g, d);
                                  fa(
                                    i[(a + 72) >> 2],
                                    L,
                                    P,
                                    i[(a + 28) >> 2],
                                    g,
                                    i[(a + 20) >> 2]
                                  );
                                  ga(O, i[(a + 28) >> 2], 410);
                                  ga(P, i[(a + 28) >> 2], 410);
                                  f = ((l & 1) + l) | 0;
                                  d = b << 1;
                                  e = (f + d) | 0;
                                  v = ((e & 1) + e) | 0;
                                  n = d;
                                  d = (d + v) | 0;
                                  A = ((d & 1) + d) | 0;
                                  l = (n + A) | 0;
                                  ha(O, N, i[(a + 28) >> 2], l);
                                  ha(P, i[(a + 76) >> 2], i[(a + 28) >> 2], l);
                                  ca(h[(a + 38) >> 1], N, C, i[(a + 28) >> 2]);
                                  ca(h[(a + 40) >> 1], N, D, i[(a + 28) >> 2]);
                                  M = g << 2;
                                  Q = (M + i[(a + 92) >> 2]) | 0;
                                  i[Q >> 2] = 8192;
                                  j = i[(a + 76) >> 2];
                                  e = 0;
                                  n = 8192;
                                  d = 8192;
                                  r = i[(a + 28) >> 2];
                                  if ((r | 0) >= 1) {
                                    while (1) {
                                      ea = n;
                                      n = e << 1;
                                      r = h[(n + j) >> 1];
                                      F = h[(j + (n | 2)) >> 1];
                                      n = (ea + ((r + F) | 0)) | 0;
                                      i[Q >> 2] = n;
                                      d = (((d + F) | 0) - r) | 0;
                                      e = (e + 2) | 0;
                                      r = i[(a + 28) >> 2];
                                      if ((e | 0) < (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  e = i[(M + S) >> 2];
                                  n = ((o(b, g) << 1) + K) | 0;
                                  va(
                                    n,
                                    j,
                                    f,
                                    i[(a + 16) >> 2],
                                    r,
                                    i[(a + 84) >> 2]
                                  );
                                  b = (d + 82) | 0;
                                  b =
                                    ((((((e << 7) + ((b << 16) >> 17)) | 0) +
                                      10496) |
                                      0) /
                                      (b | 0)) |
                                    0;
                                  b = (b | 0) > -32767 ? b : -32767;
                                  j = (b | 0) < 32767 ? b : 32767;
                                  e = Z(f, i[(a + 16) >> 2]);
                                  l: {
                                    if (
                                      !i[
                                        (i[
                                          (i[(a + 148) >> 2] +
                                            (i[(a + 152) >> 2] << 2)) >>
                                            2
                                        ] +
                                          36) >>
                                          2
                                      ]
                                    ) {
                                      b = g << 1;
                                      d = ((k[(b + R) >> 1] << 16) + 65536) | 0;
                                      d = pa(
                                        ((((o(e, j) + (d >> 17)) | 0) /
                                          (d >> 16)) <<
                                          16) >>
                                          16,
                                        12976,
                                        32
                                      );
                                      d = (d | 0) > 0 ? d : 0;
                                      W(c, (d | 0) < 31 ? d : 31, 5);
                                      d = i[(a + 100) >> 2];
                                      if (!d) {
                                        break l;
                                      }
                                      h[(b + d) >> 1] = e;
                                      break l;
                                    }
                                    M = g << 1;
                                    b = ((k[(M + T) >> 1] << 16) + 65536) | 0;
                                    r = b >> 16;
                                    b =
                                      (((o(j, ((e << 16) + 65536) >> 16) +
                                        (b >> 17)) |
                                        0) /
                                        (r | 0)) |
                                      0;
                                    d = c;
                                    if (i[(a + 16) >> 2] == 80) {
                                      b =
                                        ((o((b << 16) >> 16, 23171) + 16384) >>>
                                          15) |
                                        0;
                                    }
                                    b = pa((b << 16) >> 16, 13040, 16);
                                    W(d, b, 4);
                                    e =
                                      (o(h[((b << 1) + 13040) >> 1], 28626) >>>
                                        15) |
                                      0;
                                    b = i[(a + 16) >> 2];
                                    if ((b | 0) == 80) {
                                      e =
                                        (o((e << 16) >> 16, 23170) - -8192) >>
                                        14;
                                    }
                                    La(
                                      i[(a + 76) >> 2],
                                      C,
                                      D,
                                      G,
                                      b,
                                      i[(a + 28) >> 2],
                                      l
                                    );
                                    j =
                                      (((((e << 16) >> 8) + (j >> 1)) | 0) /
                                        (j | 0)) |
                                      0;
                                    b = i[(a + 16) >> 2];
                                    if ((b | 0) >= 1) {
                                      U(v, 0, b << 1);
                                    }
                                    b = i[(a + 28) >> 2];
                                    if ((b | 0) >= 1) {
                                      d = i[(a + 80) >> 2];
                                      e = 0;
                                      while (1) {
                                        b = e << 2;
                                        i[(b + w) >> 2] = i[(b + d) >> 2];
                                        e = (e + 1) | 0;
                                        b = i[(a + 28) >> 2];
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    _(
                                      v,
                                      i[(a + 76) >> 2],
                                      v,
                                      i[(a + 16) >> 2],
                                      b,
                                      w
                                    );
                                    b = i[(a + 28) >> 2];
                                    if ((b | 0) >= 1) {
                                      d = i[(a + 88) >> 2];
                                      e = 0;
                                      while (1) {
                                        b = e << 2;
                                        i[(b + w) >> 2] = i[(b + d) >> 2];
                                        e = (e + 1) | 0;
                                        b = i[(a + 28) >> 2];
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    aa(v, C, D, v, i[(a + 16) >> 2], b, w);
                                    b = i[(a + 28) >> 2];
                                    if ((b | 0) >= 1) {
                                      d = i[(a + 88) >> 2];
                                      e = 0;
                                      while (1) {
                                        b = e << 2;
                                        i[(b + w) >> 2] = i[(b + d) >> 2];
                                        e = (e + 1) | 0;
                                        b = i[(a + 28) >> 2];
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    aa(n, C, D, A, i[(a + 16) >> 2], b, w);
                                    e = 0;
                                    b = i[(a + 16) >> 2];
                                    if ((b | 0) >= 1) {
                                      while (1) {
                                        d = e << 1;
                                        h[(d + z) >> 1] =
                                          k[(d + A) >> 1] - k[(d + v) >> 1];
                                        e = (e + 1) | 0;
                                        if ((b | 0) != (e | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    r = o(r, (j << 16) >> 16);
                                    d = r << 6;
                                    Aa(z, z, d, b);
                                    v = U($, 0, i[(a + 16) >> 2] << 2);
                                    b =
                                      i[
                                        (i[(a + 148) >> 2] +
                                          (i[(a + 152) >> 2] << 2)) >>
                                          2
                                      ];
                                    J[i[(b + 36) >> 2]](
                                      z,
                                      i[(a + 76) >> 2],
                                      C,
                                      D,
                                      i[(b + 44) >> 2],
                                      i[(a + 28) >> 2],
                                      i[(a + 16) >> 2],
                                      v,
                                      G,
                                      c,
                                      l,
                                      i[(a + 160) >> 2],
                                      i[(b + 12) >> 2]
                                    );
                                    da(v, v, d, i[(a + 16) >> 2]);
                                    m: {
                                      n: {
                                        if (
                                          !i[
                                            (i[
                                              (i[(a + 148) >> 2] +
                                                (i[(a + 152) >> 2] << 2)) >>
                                                2
                                            ] +
                                              12) >>
                                              2
                                          ]
                                        ) {
                                          d = i[(a + 16) >> 2];
                                          break n;
                                        }
                                        e = 0;
                                        j = i[(a + 16) >> 2] << 2;
                                        b = U((((0 - l) & 3) + l) | 0, 0, j);
                                        Q = (b + j) | 0;
                                        j = i[(a + 16) >> 2];
                                        if ((j | 0) >= 1) {
                                          while (1) {
                                            F = (z + (e << 1)) | 0;
                                            h[F >> 1] =
                                              (o(h[F >> 1], 20480) + 4096) >>>
                                              13;
                                            e = (e + 1) | 0;
                                            if ((j | 0) != (e | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        e = 0;
                                        F =
                                          i[
                                            (i[(a + 148) >> 2] +
                                              (i[(a + 152) >> 2] << 2)) >>
                                              2
                                          ];
                                        J[i[(F + 36) >> 2]](
                                          z,
                                          i[(a + 76) >> 2],
                                          C,
                                          D,
                                          i[(F + 44) >> 2],
                                          i[(a + 28) >> 2],
                                          j,
                                          b,
                                          G,
                                          c,
                                          Q,
                                          i[(a + 160) >> 2],
                                          0
                                        );
                                        da(
                                          b,
                                          b,
                                          (o((r << 7) >> 16, 13107) +
                                            (((o(d & 32704, 13107) + 16384) >>>
                                              15) |
                                              0)) |
                                            0,
                                          i[(a + 16) >> 2]
                                        );
                                        d = i[(a + 16) >> 2];
                                        if ((d | 0) < 1) {
                                          break m;
                                        }
                                        while (1) {
                                          d = e << 2;
                                          j = (d + v) | 0;
                                          i[j >> 2] =
                                            i[(b + d) >> 2] + i[j >> 2];
                                          e = (e + 1) | 0;
                                          d = i[(a + 16) >> 2];
                                          if ((e | 0) < (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      e = 0;
                                      if ((d | 0) < 1) {
                                        break m;
                                      }
                                      while (1) {
                                        h[(f + (e << 1)) >> 1] =
                                          (i[(v + (e << 2)) >> 2] - -8192) >>>
                                          14;
                                        e = (e + 1) | 0;
                                        if ((d | 0) != (e | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    b = f;
                                    if (i[(a + 100) >> 2]) {
                                      d = Ra(v, d);
                                      h[(M + i[(a + 100) >> 2]) >> 1] =
                                        o(d, 23171) >>> 15;
                                      d = i[(a + 16) >> 2];
                                    }
                                    e = Z(b, d);
                                  }
                                  h[(i[(a + 96) >> 2] + (g << 1)) >> 1] = e;
                                  d = i[(a + 80) >> 2];
                                  e = 0;
                                  b = i[(a + 28) >> 2];
                                  if ((b | 0) >= 1) {
                                    while (1) {
                                      b = e << 2;
                                      i[(b + w) >> 2] = i[(b + d) >> 2];
                                      e = (e + 1) | 0;
                                      b = i[(a + 28) >> 2];
                                      if ((e | 0) < (b | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  _(
                                    f,
                                    i[(a + 76) >> 2],
                                    n,
                                    i[(a + 16) >> 2],
                                    b,
                                    d
                                  );
                                  aa(
                                    n,
                                    C,
                                    D,
                                    A,
                                    i[(a + 16) >> 2],
                                    i[(a + 28) >> 2],
                                    i[(a + 88) >> 2]
                                  );
                                  g = (g + 1) | 0;
                                  d = i[(a + 20) >> 2];
                                  if ((g | 0) < (d | 0)) {
                                    e = i[(a + 28) >> 2];
                                    b = i[(a + 16) >> 2];
                                    continue;
                                  }
                                  break;
                                }
                                e = i[(a + 28) >> 2];
                              }
                              o: {
                                if ((e | 0) < 1) {
                                  break o;
                                }
                                b = i[(a + 68) >> 2];
                                d = 0;
                                while (1) {
                                  c = d << 1;
                                  h[(c + b) >> 1] = k[(c + E) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((e | 0) < 1) {
                                  break o;
                                }
                                b = i[(a + 72) >> 2];
                                d = 0;
                                while (1) {
                                  c = d << 1;
                                  h[(c + b) >> 1] = k[(c + L) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              i[(a + 32) >> 2] = 0;
                              a = 1;
                            }
                            H = (x + 16) | 0;
                            return a | 0;
                          }
                          function fc(a, b, c, d, e, f, j, l, m, n, p, q, r) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            j = j | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            var s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              J = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = 0,
                              Y = 0,
                              Z = 0,
                              _ = 0,
                              $ = 0,
                              aa = 0,
                              ba = 0,
                              ca = 0,
                              da = 0,
                              ea = 0,
                              fa = 0,
                              ga = 0,
                              ha = 0,
                              ia = 0;
                            R = (H - 16) | 0;
                            H = R;
                            Y = (q | 0) < 10 ? q : 10;
                            q = Y << 1;
                            E = ((q | 0) / 3) | 0;
                            a: {
                              b: {
                                if (!((q + -3) >>> 0 > 2 ? (Y | 0) >= 3 : 0)) {
                                  G = i[(e + 16) >> 2];
                                  S = i[(e + 8) >> 2];
                                  u = i[(e + 4) >> 2];
                                  J = ((p & 1) + p) | 0;
                                  x = i[e >> 2];
                                  v = i[(e + 12) >> 2];
                                  p = (J + ((x << v) << 1)) | 0;
                                  F = (((0 - p) & 3) + p) | 0;
                                  N = 1 << v;
                                  q = N << 2;
                                  p = (F + q) | 0;
                                  B = j << 1;
                                  T = X(((p & 1) + p) | 0, a, B);
                                  p = (B + T) | 0;
                                  O = (((0 - p) & 3) + p) | 0;
                                  p = (O + (j << 2)) | 0;
                                  I = ((p & 1) + p) | 0;
                                  c: {
                                    if ((v | 0) == 31) {
                                      break c;
                                    }
                                    if ((x | 0) > 0) {
                                      while (1) {
                                        p = o(x, P);
                                        q = 0;
                                        while (1) {
                                          h[(I + (q << 1)) >> 1] =
                                            g[(S + ((p + q) | 0)) | 0];
                                          q = (q + 1) | 0;
                                          if ((x | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        t = 0;
                                        C = (F + (P << 2)) | 0;
                                        i[C >> 2] = 0;
                                        s = 1;
                                        v = (J + (p << 1)) | 0;
                                        y = 0;
                                        while (1) {
                                          p = 0;
                                          q = 0;
                                          while (1) {
                                            p =
                                              (o(
                                                h[(((y - q) << 1) + m) >> 1],
                                                h[(I + (q << 1)) >> 1]
                                              ) +
                                                p) |
                                              0;
                                            q = (q + 1) | 0;
                                            if ((s | 0) != (q | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          h[(v + (y << 1)) >> 1] = p >>> 13;
                                          s = (s + 1) | 0;
                                          p = (p << 3) >> 16;
                                          t = (o(p, p) + t) | 0;
                                          y = (y + 1) | 0;
                                          if ((x | 0) != (y | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        i[C >> 2] = t;
                                        P = (P + 1) | 0;
                                        if ((N | 0) != (P | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      break c;
                                    }
                                    U(F, 0, q);
                                  }
                                  if ((u | 0) < 1) {
                                    break b;
                                  }
                                  p = 0;
                                  while (1) {
                                    D = o(p, x);
                                    q = (T + (D << 1)) | 0;
                                    d: {
                                      if (G) {
                                        Ga(
                                          q,
                                          J,
                                          x,
                                          N,
                                          F,
                                          1,
                                          (R + 12) | 0,
                                          (R + 8) | 0
                                        );
                                        break d;
                                      }
                                      Ha(
                                        q,
                                        J,
                                        x,
                                        N,
                                        F,
                                        1,
                                        (R + 12) | 0,
                                        (R + 8) | 0
                                      );
                                    }
                                    W(
                                      n,
                                      i[(R + 12) >> 2],
                                      (G + i[(e + 12) >> 2]) | 0
                                    );
                                    s = i[(R + 12) >> 2];
                                    t = (s | 0) < (N | 0);
                                    K = o(x, (s - (t ? 0 : N)) | 0);
                                    C = (J + (K << 1)) | 0;
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            if (!t) {
                                              q = 0;
                                              if ((x | 0) <= 0) {
                                                break g;
                                              }
                                              while (1) {
                                                v = (T + ((q + D) << 1)) | 0;
                                                h[v >> 1] =
                                                  k[(C + (q << 1)) >> 1] +
                                                  k[v >> 1];
                                                q = (q + 1) | 0;
                                                if ((x | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              break h;
                                            }
                                            q = 0;
                                            if ((x | 0) < 1) {
                                              break g;
                                            }
                                            while (1) {
                                              v = (T + ((q + D) << 1)) | 0;
                                              h[v >> 1] =
                                                k[v >> 1] -
                                                k[(C + (q << 1)) >> 1];
                                              q = (q + 1) | 0;
                                              if ((x | 0) != (q | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          i: {
                                            if (!t) {
                                              q = 0;
                                              if ((x | 0) <= 0) {
                                                break g;
                                              }
                                              while (1) {
                                                i[(O + ((q + D) << 2)) >> 2] =
                                                  0 -
                                                  (g[(S + ((q + K) | 0)) | 0] <<
                                                    9);
                                                q = (q + 1) | 0;
                                                if ((x | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              break i;
                                            }
                                            q = 0;
                                            if ((x | 0) < 1) {
                                              break g;
                                            }
                                            while (1) {
                                              i[(O + ((q + D) << 2)) >> 2] =
                                                g[(S + ((q + K) | 0)) | 0] << 9;
                                              q = (q + 1) | 0;
                                              if ((x | 0) != (q | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          if ((x | 0) > 0) {
                                            break f;
                                          }
                                        }
                                        p = (p + 1) | 0;
                                        break e;
                                      }
                                      p = (p + 1) | 0;
                                      q = o(x, p);
                                      w = (j - q) | 0;
                                      if ((w | 0) < 1) {
                                        break e;
                                      }
                                      z = (T + (q << 1)) | 0;
                                      t = 0;
                                      if ((s | 0) < (N | 0)) {
                                        while (1) {
                                          D = (((x - t) << 1) + m) | 0;
                                          s = g[(S + ((t + K) | 0)) | 0] << 3;
                                          q = 0;
                                          while (1) {
                                            C = q << 1;
                                            v = (C + z) | 0;
                                            h[v >> 1] =
                                              k[v >> 1] -
                                              (((o(s, h[(C + D) >> 1]) +
                                                32768) >>>
                                                16) |
                                                0);
                                            q = (q + 1) | 0;
                                            if ((w | 0) != (q | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          t = (t + 1) | 0;
                                          if ((x | 0) != (t | 0)) {
                                            continue;
                                          }
                                          break e;
                                        }
                                      }
                                      while (1) {
                                        D = (((x - t) << 1) + m) | 0;
                                        s = g[(S + ((t + K) | 0)) | 0] << 3;
                                        q = 0;
                                        while (1) {
                                          C = q << 1;
                                          v = (C + z) | 0;
                                          h[v >> 1] =
                                            k[v >> 1] -
                                            (((32768 -
                                              o(s, h[(C + D) >> 1])) >>>
                                              16) |
                                              0);
                                          q = (q + 1) | 0;
                                          if ((w | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        t = (t + 1) | 0;
                                        if ((x | 0) != (t | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    if ((p | 0) != (u | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break b;
                                }
                                q = 0;
                                t = (((0 - p) & 3) + p) | 0;
                                u = E << 2;
                                p = (t + u) | 0;
                                C = (((0 - p) & 3) + p) | 0;
                                p = (C + u) | 0;
                                fa = (((0 - p) & 3) + p) | 0;
                                p = (fa + u) | 0;
                                ba = (((0 - p) & 3) + p) | 0;
                                p = (u + ba) | 0;
                                ga = ((p & 1) + p) | 0;
                                A = i[e >> 2];
                                y = i[(e + 12) >> 2];
                                p = (ga + ((A << y) << 1)) | 0;
                                ca = (((0 - p) & 3) + p) | 0;
                                Q = 1 << y;
                                D = Q << 2;
                                p = (ca + D) | 0;
                                J = ((p & 1) + p) | 0;
                                V = j << 1;
                                p = (J + V) | 0;
                                da = (((0 - p) & 3) + p) | 0;
                                p = (da + (j << 2)) | 0;
                                N = (((0 - p) & 3) + p) | 0;
                                L = i[(e + 4) >> 2];
                                p = (N + (L << 2)) | 0;
                                w = ((p & 1) + p) | 0;
                                z = (w + (o(E, V) << 1)) | 0;
                                s = (E | 0) > 1 ? E : 1;
                                S = (0 - V) | 0;
                                M = (0 - u) | 0;
                                T = i[(e + 16) >> 2];
                                ea = i[(e + 8) >> 2];
                                while (1) {
                                  v = q << 2;
                                  p = q << 1;
                                  i[(v + t) >> 2] = w + (o(p, j) << 1);
                                  i[(v + C) >> 2] = w + (o(p | 1, j) << 1);
                                  q = (q + 1) | 0;
                                  if ((s | 0) != (q | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                q = 0;
                                F = (u + ((z + ((0 - z) & 3)) | 0)) | 0;
                                B = (u + ((((0 - F) & 3) + F) | 0)) | 0;
                                O = (u + ((((0 - B) & 3) + B) | 0)) | 0;
                                I = (u + ((((0 - O) & 3) + O) | 0)) | 0;
                                K = (u + ((((0 - I) & 3) + I) | 0)) | 0;
                                z = (((0 - K) & 3) + K) | 0;
                                G = (z + u) | 0;
                                u = (((0 - G) & 3) + G) | 0;
                                w = (u + (o(E, L) << 3)) | 0;
                                j: {
                                  if ((Y | 0) <= 1) {
                                    X(J, a, V);
                                    break j;
                                  }
                                  s = (E | 0) > 1 ? E : 1;
                                  while (1) {
                                    v = q << 2;
                                    p = q << 1;
                                    i[(v + ba) >> 2] = u + (o(p, L) << 2);
                                    i[(v + fa) >> 2] = u + (o(L, p | 1) << 2);
                                    q = (q + 1) | 0;
                                    if ((s | 0) != (q | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  v = X(J, a, V);
                                  if ((Y | 0) < 2) {
                                    break j;
                                  }
                                  p = (E | 0) > 1 ? E : 1;
                                  q = 0;
                                  while (1) {
                                    X(i[((q << 2) + t) >> 2], v, V);
                                    q = (q + 1) | 0;
                                    if ((p | 0) != (q | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                ha = ((w & 1) + w) | 0;
                                k: {
                                  if ((y | 0) == 31) {
                                    break k;
                                  }
                                  w = 0;
                                  if ((A | 0) > 0) {
                                    while (1) {
                                      p = o(w, A);
                                      q = 0;
                                      while (1) {
                                        h[(ha + (q << 1)) >> 1] =
                                          g[(ea + ((p + q) | 0)) | 0];
                                        q = (q + 1) | 0;
                                        if ((A | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      u = 0;
                                      D = (ca + (w << 2)) | 0;
                                      i[D >> 2] = 0;
                                      s = 1;
                                      v = ((p << 1) + ga) | 0;
                                      y = 0;
                                      while (1) {
                                        p = 0;
                                        q = 0;
                                        while (1) {
                                          p =
                                            (o(
                                              h[(((y - q) << 1) + m) >> 1],
                                              h[(ha + (q << 1)) >> 1]
                                            ) +
                                              p) |
                                            0;
                                          q = (q + 1) | 0;
                                          if ((s | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        h[(v + (y << 1)) >> 1] = p >>> 13;
                                        s = (s + 1) | 0;
                                        p = (p << 3) >> 16;
                                        u = (o(p, p) + u) | 0;
                                        y = (y + 1) | 0;
                                        if ((A | 0) != (y | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[D >> 2] = u;
                                      w = (w + 1) | 0;
                                      if ((Q | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break k;
                                    }
                                  }
                                  U(ca, 0, D);
                                }
                                if ((Y | 0) >= 2) {
                                  U(z, 0, ((E | 0) > 1 ? E : 1) << 2);
                                }
                                l: {
                                  if ((L | 0) < 1) {
                                    break l;
                                  }
                                  J = (G + M) | 0;
                                  _ = (I + M) | 0;
                                  $ = (M + O) | 0;
                                  ia = (B + M) | 0;
                                  x = (F + M) | 0;
                                  Z = (E | 0) > 1 ? E : 1;
                                  aa = (M + K) | 0;
                                  D = (E + -1) | 0;
                                  O = (aa + (D << 2)) | 0;
                                  while (1) {
                                    v = C;
                                    C = t;
                                    q = 0;
                                    p = (Y | 0) > 1;
                                    m: {
                                      if (!p) {
                                        break m;
                                      }
                                      while (1) {
                                        i[(aa + (q << 2)) >> 2] = 2147483647;
                                        q = (q + 1) | 0;
                                        if ((Z | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      q = 0;
                                      if (!p) {
                                        break m;
                                      }
                                      while (1) {
                                        p = q << 2;
                                        i[(p + _) >> 2] = 0;
                                        i[(p + $) >> 2] = 0;
                                        q = (q + 1) | 0;
                                        if ((Z | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      y = (Y | 0) < 2;
                                      if (y) {
                                        break m;
                                      }
                                      I = o(A, P);
                                      M = 0;
                                      while (1) {
                                        s = M << 2;
                                        t = (i[(s + C) >> 2] + (I << 1)) | 0;
                                        p = 0;
                                        q = 0;
                                        K = (A | 0) < 1;
                                        if (!K) {
                                          while (1) {
                                            B = p;
                                            p = h[(t + (q << 1)) >> 1];
                                            p = (B + o(p, p)) | 0;
                                            q = (q + 1) | 0;
                                            if ((A | 0) != (q | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        n: {
                                          if (T) {
                                            Ga(t, ga, A, Q, ca, E, x, ia);
                                            break n;
                                          }
                                          Ha(t, ga, A, Q, ca, E, x, ia);
                                        }
                                        G = (p >>> 1) | 0;
                                        u = (s + J) | 0;
                                        t = 0;
                                        while (1) {
                                          q = 0;
                                          w = t << 2;
                                          F =
                                            (i[(w + ia) >> 2] +
                                              ((G + i[u >> 2]) | 0)) |
                                            0;
                                          o: {
                                            if ((F | 0) >= i[O >> 2]) {
                                              break o;
                                            }
                                            while (1) {
                                              z = (aa + (q << 2)) | 0;
                                              if ((F | 0) >= i[z >> 2]) {
                                                q = (q + 1) | 0;
                                                if ((Z | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break o;
                                              }
                                              break;
                                            }
                                            s = D;
                                            p = s;
                                            if ((p | 0) > (q | 0)) {
                                              while (1) {
                                                B = p << 2;
                                                p = (p + -1) | 0;
                                                s = p << 2;
                                                i[(B + aa) >> 2] =
                                                  i[(s + aa) >> 2];
                                                i[(B + $) >> 2] =
                                                  i[(s + $) >> 2];
                                                i[(B + _) >> 2] =
                                                  i[(s + _) >> 2];
                                                if ((p | 0) > (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              s = q;
                                            }
                                            i[z >> 2] = F;
                                            p = s << 2;
                                            i[(p + $) >> 2] = i[(x + w) >> 2];
                                            i[(p + _) >> 2] = M;
                                          }
                                          t = (t + 1) | 0;
                                          if ((Z | 0) != (t | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        if (P) {
                                          M = (M + 1) | 0;
                                          if ((M | 0) < (E | 0)) {
                                            continue;
                                          }
                                        }
                                        break;
                                      }
                                      if (y) {
                                        break m;
                                      }
                                      p = o(A, (P + 1) | 0);
                                      F = (j - p) | 0;
                                      t = 0;
                                      while (1) {
                                        if ((p | 0) < (j | 0)) {
                                          q = t << 2;
                                          w = i[(q + v) >> 2];
                                          z =
                                            i[
                                              ((i[(q + _) >> 2] << 2) + C) >> 2
                                            ];
                                          q = p;
                                          while (1) {
                                            s = q << 1;
                                            h[(s + w) >> 1] = k[(s + z) >> 1];
                                            q = (q + 1) | 0;
                                            if ((q | 0) < (j | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        p: {
                                          if (((F | 0) < 1) | K) {
                                            break p;
                                          }
                                          q = t << 2;
                                          B = (i[(q + v) >> 2] + (p << 1)) | 0;
                                          q = i[(q + $) >> 2];
                                          I = o(
                                            A,
                                            (q - ((q | 0) < (Q | 0) ? 0 : Q)) |
                                              0
                                          );
                                          s = 0;
                                          if ((q | 0) < (Q | 0)) {
                                            while (1) {
                                              G = (((A - s) << 1) + m) | 0;
                                              u =
                                                g[(ea + ((s + I) | 0)) | 0] <<
                                                3;
                                              q = 0;
                                              while (1) {
                                                w = q << 1;
                                                z = (w + B) | 0;
                                                h[z >> 1] =
                                                  k[z >> 1] -
                                                  (((o(u, h[(w + G) >> 1]) +
                                                    32768) >>>
                                                    16) |
                                                    0);
                                                q = (q + 1) | 0;
                                                if ((F | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              s = (s + 1) | 0;
                                              if ((A | 0) != (s | 0)) {
                                                continue;
                                              }
                                              break p;
                                            }
                                          }
                                          while (1) {
                                            G = (((A - s) << 1) + m) | 0;
                                            u =
                                              g[(ea + ((s + I) | 0)) | 0] << 3;
                                            q = 0;
                                            while (1) {
                                              w = q << 1;
                                              z = (w + B) | 0;
                                              h[z >> 1] =
                                                k[z >> 1] -
                                                (((32768 -
                                                  o(u, h[(w + G) >> 1])) >>>
                                                  16) |
                                                  0);
                                              q = (q + 1) | 0;
                                              if ((F | 0) != (q | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                            s = (s + 1) | 0;
                                            if ((A | 0) != (s | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        G = t << 2;
                                        u = (G + _) | 0;
                                        w = (G + ba) | 0;
                                        z = i[w >> 2];
                                        q = 0;
                                        while (1) {
                                          s = q << 2;
                                          i[(s + z) >> 2] =
                                            i[
                                              (s +
                                                i[
                                                  ((i[u >> 2] << 2) + fa) >> 2
                                                ]) >>
                                                2
                                            ];
                                          q = (q + 1) | 0;
                                          if ((L | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        i[(i[w >> 2] + (P << 2)) >> 2] =
                                          i[(G + $) >> 2];
                                        t = (t + 1) | 0;
                                        if ((Z | 0) != (t | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      t = 0;
                                      if (y) {
                                        break m;
                                      }
                                      while (1) {
                                        p = t << 2;
                                        z = i[(p + fa) >> 2];
                                        s = i[(p + ba) >> 2];
                                        q = 0;
                                        while (1) {
                                          p = q << 2;
                                          i[(p + z) >> 2] = i[(p + s) >> 2];
                                          q = (q + 1) | 0;
                                          if ((L | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        t = (t + 1) | 0;
                                        if ((Z | 0) != (t | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      q = 0;
                                      if (y) {
                                        break m;
                                      }
                                      while (1) {
                                        p = q << 2;
                                        i[(p + J) >> 2] = i[(p + aa) >> 2];
                                        q = (q + 1) | 0;
                                        if ((Z | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    t = v;
                                    P = (P + 1) | 0;
                                    if ((L | 0) != (P | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  q = 0;
                                  if ((L | 0) <= 0) {
                                    break l;
                                  }
                                  while (1) {
                                    m = q << 2;
                                    p = i[(m + i[ba >> 2]) >> 2];
                                    i[(m + N) >> 2] = p;
                                    W(n, p, (i[(e + 12) >> 2] + T) | 0);
                                    q = (q + 1) | 0;
                                    if ((L | 0) != (q | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if (((L | 0) < 1) | ((A | 0) < 1)) {
                                    break l;
                                  }
                                  u = 0;
                                  while (1) {
                                    e = i[((u << 2) + N) >> 2];
                                    n = (e | 0) < (Q | 0);
                                    m = o(A, (e - (n ? 0 : Q)) | 0);
                                    e = o(u, A);
                                    q = 0;
                                    p = 0;
                                    q: {
                                      if (!n) {
                                        while (1) {
                                          i[(da + ((e + q) << 2)) >> 2] =
                                            0 -
                                            (g[(ea + ((m + q) | 0)) | 0] << 9);
                                          q = (q + 1) | 0;
                                          if ((A | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break q;
                                        }
                                      }
                                      while (1) {
                                        i[(da + ((e + p) << 2)) >> 2] =
                                          g[(ea + ((m + p) | 0)) | 0] << 9;
                                        p = (p + 1) | 0;
                                        if ((A | 0) != (p | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    u = (u + 1) | 0;
                                    if ((L | 0) != (u | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                r: {
                                  if ((j | 0) >= 1) {
                                    q = 0;
                                    while (1) {
                                      m = q << 2;
                                      e = (m + l) | 0;
                                      i[e >> 2] = i[(m + da) >> 2] + i[e >> 2];
                                      q = (q + 1) | 0;
                                      if ((q | 0) != (j | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    if (!r) {
                                      break a;
                                    }
                                    y = (V + ha) | 0;
                                    l = (S + y) | 0;
                                    e = l;
                                    if ((j | 0) < 1) {
                                      break r;
                                    }
                                    q = 0;
                                    while (1) {
                                      h[(l + (q << 1)) >> 1] =
                                        (i[(da + (q << 2)) >> 2] + 32) >>> 6;
                                      q = (q + 1) | 0;
                                      if ((q | 0) != (j | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    ka(l, b, c, d, l, j, f, y);
                                    if ((j | 0) < 1) {
                                      break a;
                                    }
                                    q = 0;
                                    while (1) {
                                      c = q << 1;
                                      b = (c + a) | 0;
                                      h[b >> 1] =
                                        k[b >> 1] -
                                        (((h[(c + l) >> 1] + 2) >>> 2) | 0);
                                      q = (q + 1) | 0;
                                      if ((q | 0) != (j | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  }
                                  if (!r) {
                                    break a;
                                  }
                                  y = (V + ha) | 0;
                                  e = (S + y) | 0;
                                }
                                ka(e, b, c, d, e, j, f, y);
                                break a;
                              }
                              n = (0 - B) | 0;
                              q = 0;
                              if ((j | 0) > 0) {
                                while (1) {
                                  m = q << 2;
                                  e = (m + l) | 0;
                                  i[e >> 2] = i[(m + O) >> 2] + i[e >> 2];
                                  q = (q + 1) | 0;
                                  if ((q | 0) != (j | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if (!r) {
                                  break a;
                                }
                                e = (B + I) | 0;
                                l = (e + n) | 0;
                                q = 0;
                                while (1) {
                                  h[(l + (q << 1)) >> 1] =
                                    (i[(O + (q << 2)) >> 2] + 32) >>> 6;
                                  q = (q + 1) | 0;
                                  if ((q | 0) != (j | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                ka(l, b, c, d, l, j, f, e);
                                q = 0;
                                while (1) {
                                  c = q << 1;
                                  b = (c + a) | 0;
                                  h[b >> 1] =
                                    k[b >> 1] -
                                    (((h[(c + l) >> 1] + 2) >>> 2) | 0);
                                  q = (q + 1) | 0;
                                  if ((q | 0) != (j | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if (!r) {
                                break a;
                              }
                              e = (B + I) | 0;
                              a = (e + n) | 0;
                              ka(a, b, c, d, a, j, f, e);
                            }
                            H = (R + 16) | 0;
                          }
                          function Sb(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w,
                            x,
                            y,
                            z
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            s = s | 0;
                            t = t | 0;
                            u = u | 0;
                            v = v | 0;
                            w = w | 0;
                            x = x | 0;
                            y = y | 0;
                            z = z | 0;
                            var A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              J = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = 0,
                              Y = 0,
                              Z = 0,
                              $ = 0,
                              ba = 0,
                              ca = 0,
                              da = 0,
                              ea = 0,
                              fa = 0,
                              ga = 0,
                              ha = 0,
                              ia = 0,
                              ja = 0,
                              ka = 0,
                              la = 0,
                              ma = 0,
                              na = 0,
                              oa = 0,
                              pa = 0,
                              qa = 0;
                            B = (H - 80) | 0;
                            H = B;
                            a: {
                              b: {
                                c: {
                                  if ((n | 0) >= (m | 0)) {
                                    p = (w | 0) < 10 ? w : 10;
                                    Q = (p | 0) > 1 ? p : 1;
                                    J = (0 - t) & 3;
                                    A = i[(l + 4) >> 2];
                                    F = i[l >> 2];
                                    if ((r | 0) <= 0) {
                                      break b;
                                    }
                                    w = 0;
                                    break c;
                                  }
                                  W(s, 0, i[(l + 8) >> 2]);
                                  W(s, 0, i[(l + 4) >> 2]);
                                  U(f, 0, r << 2);
                                  break a;
                                }
                                while (1) {
                                  p = h[((w << 1) + a) >> 1];
                                  G = p >> 31;
                                  if ((G ^ (p + G)) < 16384) {
                                    w = (w + 1) | 0;
                                    if ((w | 0) != (r | 0)) {
                                      continue;
                                    }
                                    break b;
                                  }
                                  break;
                                }
                                Z = 1;
                              }
                              G = Q << 2;
                              $ = (t + J) | 0;
                              w = (0 - n) | 0;
                              d: {
                                if ((w | 0) >= (r | 0)) {
                                  break d;
                                }
                                while (1) {
                                  p = h[((w << 1) + u) >> 1];
                                  t = p >> 31;
                                  if ((t ^ (p + t)) < 16384) {
                                    w = (w + 1) | 0;
                                    if ((w | 0) != (r | 0)) {
                                      continue;
                                    }
                                    break d;
                                  }
                                  break;
                                }
                                Z = 1;
                              }
                              t = (G + $) | 0;
                              p = (((n - m) | 0) + 1) | 0;
                              da = (Q | 0) > (p | 0) ? p : Q;
                              e: {
                                if ((m | 0) != (n | 0)) {
                                  Ia(b, m, n, r, $, 0, da, t);
                                  break e;
                                }
                                i[$ >> 2] = n;
                              }
                              L = r << 1;
                              R = r << 2;
                              ea = (t + ((0 - t) & 3)) | 0;
                              b = (R + ea) | 0;
                              G = ((b & 1) + b) | 0;
                              b = (L + G) | 0;
                              fa = ((b & 1) + b) | 0;
                              if ((da | 0) >= 1) {
                                na = 1 << A;
                                ba = (F + ((x << 2) << A)) | 0;
                                b = (L + fa) | 0;
                                F = ((b & 1) + b) | 0;
                                b = (F + o(r, 6)) | 0;
                                b = (((b + L) | 0) + (b & 1)) | 0;
                                ga = (((0 - b) & 3) + b) | 0;
                                ka = q << 2;
                                K = (b - L) | 0;
                                x = (F + (L << 1)) | 0;
                                J = (F + L) | 0;
                                b = (y | 0) > 2 ? y : 2;
                                P = o((b | 0) < 30 ? b : 30, 655);
                                b = r >> 2;
                                la = (r + -1) | 0;
                                Q = !Z;
                                oa = (A | 0) == 31;
                                ha = -1;
                                while (1) {
                                  E = i[((ia << 2) + $) >> 2];
                                  pa = U(f, 0, R);
                                  N = i[z >> 2];
                                  i[(B + 76) >> 2] = x;
                                  i[(B + 72) >> 2] = J;
                                  i[(B + 68) >> 2] = F;
                                  w = 0;
                                  n = Q;
                                  f: {
                                    if ((r | 0) < 1) {
                                      break f;
                                    }
                                    while (1) {
                                      n = w << 1;
                                      h[(n + G) >> 1] = k[(a + n) >> 1];
                                      w = (w + 1) | 0;
                                      if ((w | 0) != (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    t = (1 - E) | 0;
                                    w = 0;
                                    while (1) {
                                      y = ((w << 1) + K) | 0;
                                      p = (t + w) | 0;
                                      g: {
                                        if ((p | 0) >= 0) {
                                          p = (p - E) | 0;
                                          n = 0;
                                          if ((p | 0) > -1) {
                                            break g;
                                          }
                                        }
                                        n = k[((p << 1) + u) >> 1];
                                      }
                                      h[y >> 1] = n;
                                      w = (w + 1) | 0;
                                      if ((w | 0) != (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    w = 0;
                                    p = 0;
                                    n = 1;
                                    if (!Z) {
                                      break f;
                                    }
                                    while (1) {
                                      n = ((p << 1) + K) | 0;
                                      h[n >> 1] = h[n >> 1] >>> 1;
                                      p = (p + 1) | 0;
                                      if ((r | 0) != (p | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    while (1) {
                                      n = (G + (w << 1)) | 0;
                                      h[n >> 1] = h[n >> 1] >>> 1;
                                      w = (w + 1) | 0;
                                      if ((w | 0) != (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    n = 0;
                                  }
                                  h: {
                                    if ((q | 0) <= 0) {
                                      _(K, c, K, r, q, ga);
                                      break h;
                                    }
                                    p = U(ga, 0, ka);
                                    _(K, c, K, r, q, p);
                                    U(p, 0, ka);
                                  }
                                  aa(K, d, e, K, r, q, ga);
                                  w = 0;
                                  i: {
                                    j: {
                                      k: {
                                        if ((r | 0) <= 0) {
                                          D = n ^ 1;
                                          y = E ^ -1;
                                          break k;
                                        }
                                        while (1) {
                                          p = w << 1;
                                          h[(p + x) >> 1] = k[(p + K) >> 1];
                                          w = (w + 1) | 0;
                                          if ((w | 0) != (r | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        D = n ^ 1;
                                        y = E ^ -1;
                                        if ((r | 0) > 1) {
                                          break j;
                                        }
                                      }
                                      h[J >> 1] =
                                        o(
                                          h[v >> 1],
                                          h[(u - (E << 1)) >> 1] >> D
                                        ) >>> 14;
                                      C =
                                        (o(
                                          h[v >> 1],
                                          h[((y << 1) + u) >> 1] >> D
                                        ) >>>
                                          14) |
                                        0;
                                      h[F >> 1] = C;
                                      break i;
                                    }
                                    t = h[(u - (E << 1)) >> 1] >> D;
                                    h[J >> 1] = o(t, h[v >> 1]) >>> 14;
                                    w = 0;
                                    while (1) {
                                      n = (w + 1) | 0;
                                      p = n << 1;
                                      h[(p + J) >> 1] =
                                        k[(x + (w << 1)) >> 1] +
                                        (((o(t, h[(p + v) >> 1]) - -8192) >>>
                                          14) |
                                          0);
                                      w = n;
                                      if ((la | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    t = h[((y << 1) + u) >> 1] >> D;
                                    C = (o(t, h[v >> 1]) >>> 14) | 0;
                                    h[F >> 1] = C;
                                    w = 0;
                                    while (1) {
                                      n = (w + 1) | 0;
                                      p = n << 1;
                                      h[(p + F) >> 1] =
                                        k[(J + (w << 1)) >> 1] +
                                        (((o(t, h[(p + v) >> 1]) - -8192) >>>
                                          14) |
                                          0);
                                      w = n;
                                      if ((la | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  S = 0;
                                  t = 0;
                                  D = 0;
                                  n = 0;
                                  y = 0;
                                  T = 0;
                                  A = 0;
                                  V = 0;
                                  Y = 0;
                                  I = 0;
                                  if (b) {
                                    p = F;
                                    n = b;
                                    w = G;
                                    while (1) {
                                      I =
                                        (((((((o(
                                          h[(w + 2) >> 1],
                                          h[(p + 2) >> 1]
                                        ) +
                                          o(h[w >> 1], (C << 16) >> 16)) |
                                          0) +
                                          o(h[(w + 4) >> 1], h[(p + 4) >> 1])) |
                                          0) +
                                          o(
                                            h[(w + 6) >> 1],
                                            h[(p + 6) >> 1]
                                          )) >>
                                          6) +
                                          I) |
                                        0;
                                      n = (n + -1) | 0;
                                      if (n) {
                                        w = (w + 8) | 0;
                                        p = (p + 8) | 0;
                                        C = k[p >> 1];
                                        continue;
                                      } else {
                                        w = J;
                                        n = b;
                                        p = G;
                                        while (1) {
                                          Y =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              Y) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = x;
                                        n = b;
                                        p = G;
                                        while (1) {
                                          V =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              V) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = F;
                                        p = b;
                                        while (1) {
                                          n = h[(w + 2) >> 1];
                                          A = o(n, n);
                                          n = h[w >> 1];
                                          A = (A + o(n, n)) | 0;
                                          n = h[(w + 4) >> 1];
                                          A = (A + o(n, n)) | 0;
                                          n = h[(w + 6) >> 1];
                                          t =
                                            ((((A + o(n, n)) >>> 6) | 0) + t) |
                                            0;
                                          w = (w + 8) | 0;
                                          p = (p + -1) | 0;
                                          if (p) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = J;
                                        n = b;
                                        p = F;
                                        while (1) {
                                          T =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              T) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = J;
                                        A = b;
                                        p = i[(B + 72) >> 2];
                                        n = p;
                                        while (1) {
                                          D =
                                            (((((((o(
                                              h[(n + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[n >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(n + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(n + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              D) |
                                            0;
                                          n = (n + 8) | 0;
                                          w = (w + 8) | 0;
                                          A = (A + -1) | 0;
                                          if (A) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = x;
                                        A = b;
                                        n = F;
                                        while (1) {
                                          y =
                                            (((((((o(
                                              h[(n + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[n >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(n + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(n + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              y) |
                                            0;
                                          n = (n + 8) | 0;
                                          w = (w + 8) | 0;
                                          A = (A + -1) | 0;
                                          if (A) {
                                            continue;
                                          }
                                          break;
                                        }
                                        A = 0;
                                        w = x;
                                        n = b;
                                        while (1) {
                                          A =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              A) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        n = 0;
                                        w = i[(B + 76) >> 2];
                                        p = x;
                                        C = b;
                                        while (1) {
                                          n =
                                            (((((((o(
                                              h[(w + 2) >> 1],
                                              h[(p + 2) >> 1]
                                            ) +
                                              o(h[w >> 1], h[p >> 1])) |
                                              0) +
                                              o(
                                                h[(w + 4) >> 1],
                                                h[(p + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(w + 6) >> 1],
                                                h[(p + 6) >> 1]
                                              )) >>
                                              6) +
                                              n) |
                                            0;
                                          w = (w + 8) | 0;
                                          p = (p + 8) | 0;
                                          C = (C + -1) | 0;
                                          if (C) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      break;
                                    }
                                  }
                                  i[(B + 52) >> 2] = y << 1;
                                  i[(B + 48) >> 2] = T << 1;
                                  i[(B + 44) >> 2] = A << 1;
                                  i[(B + 40) >> 2] = I << 1;
                                  i[(B + 36) >> 2] = Y << 1;
                                  i[(B + 32) >> 2] = V << 1;
                                  i[(B + 64) >> 2] =
                                    ((((o(t & 32767, P) >>> 15) | 0) + t) | 0) +
                                    o((t << 1) >> 16, P);
                                  i[(B + 60) >> 2] =
                                    ((((o(D & 32767, P) >>> 15) | 0) + D) | 0) +
                                    o((D << 1) >> 16, P);
                                  i[(B + 56) >> 2] =
                                    ((((o(n & 32767, P) >>> 15) | 0) + n) | 0) +
                                    o((n << 1) >> 16, P);
                                  wa((B + 32) | 0, B, 32767, 9);
                                  if (!oa) {
                                    T = (N | 0) > 262144 ? 31 : 128;
                                    t = -2147483647;
                                    D = 0;
                                    V = h[(B + 16) >> 1];
                                    Y = h[(B + 14) >> 1];
                                    I = h[(B + 12) >> 1];
                                    N = h[(B + 10) >> 1];
                                    C = h[(B + 8) >> 1];
                                    A = h[(B + 6) >> 1];
                                    y = h[(B + 4) >> 1];
                                    w = h[(B + 2) >> 1];
                                    p = h[B >> 1];
                                    while (1) {
                                      ca = ((D << 2) + ba) | 0;
                                      O = (g[(ca + 1) | 0] + 32) | 0;
                                      M = (g[ca | 0] + 32) | 0;
                                      n = (g[(ca + 2) | 0] + 32) | 0;
                                      n =
                                        ((((o(O, w) << 6) + (o(M, p) << 6)) |
                                          0) +
                                          (o(n, y) << 6) -
                                          (((((((((o(A, (o(M, O) << 16) >> 16) +
                                            o(I, o(M, M) & 65535)) |
                                            0) +
                                            o(Y, o(O, O) & 65535)) |
                                            0) +
                                            o(V, o(n, n) & 65535)) |
                                            0) +
                                            o(C, (o(n, O) << 16) >> 16)) |
                                            0) +
                                            o(N, (o(n, M) << 16) >> 16))) |
                                        0;
                                      M = (n | 0) > (t | 0);
                                      O = n;
                                      n = (T | 0) < g[(ca + 3) | 0];
                                      t = M ? (n ? t : O) : t;
                                      S = M ? (n ? S : D) : S;
                                      D = (D + 1) | 0;
                                      if ((na | 0) != (D | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  p = S << 2;
                                  A = g[((p | 1) + ba) | 0];
                                  n = g[((p | 2) + ba) | 0];
                                  y = g[(p + ba) | 0];
                                  I = U(pa, 0, R);
                                  N = (n + 32) | 0;
                                  C = (E + 1) | 0;
                                  w = (C | 0) > (r | 0) ? r : C;
                                  if ((w | 0) > 0) {
                                    t = N << 7;
                                    n = 0;
                                    while (1) {
                                      p = (I + (n << 2)) | 0;
                                      i[p >> 2] =
                                        i[p >> 2] +
                                        o(t, h[(((n - C) << 1) + u) >> 1]);
                                      n = (n + 1) | 0;
                                      if ((w | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  C = (C + E) | 0;
                                  t = (C | 0) < (r | 0) ? C : r;
                                  if ((w | 0) < (t | 0)) {
                                    p = N << 7;
                                    while (1) {
                                      n = (I + (w << 2)) | 0;
                                      i[n >> 2] =
                                        i[n >> 2] +
                                        o(p, h[(((w - C) << 1) + u) >> 1]);
                                      w = (w + 1) | 0;
                                      if ((t | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  C = (A + 32) | 0;
                                  w = (E | 0) > (r | 0) ? r : E;
                                  if ((w | 0) > 0) {
                                    t = C << 7;
                                    n = 0;
                                    while (1) {
                                      p = (I + (n << 2)) | 0;
                                      i[p >> 2] =
                                        i[p >> 2] +
                                        o(t, h[(((n - E) << 1) + u) >> 1]);
                                      n = (n + 1) | 0;
                                      if ((w | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  A = E << 1;
                                  t = (A | 0) < (r | 0) ? A : r;
                                  if ((w | 0) < (t | 0)) {
                                    p = C << 7;
                                    while (1) {
                                      n = (I + (w << 2)) | 0;
                                      i[n >> 2] =
                                        i[n >> 2] +
                                        o(p, h[(((w - A) << 1) + u) >> 1]);
                                      w = (w + 1) | 0;
                                      if ((t | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  A = (y + 32) | 0;
                                  y = (E + -1) | 0;
                                  w = (y | 0) > (r | 0) ? r : y;
                                  if ((w | 0) >= 1) {
                                    t = A << 7;
                                    n = 0;
                                    while (1) {
                                      p = (I + (n << 2)) | 0;
                                      i[p >> 2] =
                                        i[p >> 2] +
                                        o(t, h[(((n - y) << 1) + u) >> 1]);
                                      n = (n + 1) | 0;
                                      if ((w | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  y = (y + E) | 0;
                                  t = (y | 0) < (r | 0) ? y : r;
                                  if ((w | 0) < (t | 0)) {
                                    p = A << 7;
                                    while (1) {
                                      n = (I + (w << 2)) | 0;
                                      i[n >> 2] =
                                        i[n >> 2] +
                                        o(p, h[(((w - y) << 1) + u) >> 1]);
                                      w = (w + 1) | 0;
                                      if ((t | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if ((r | 0) > 0) {
                                    n = 0;
                                    while (1) {
                                      t = n << 1;
                                      p = (t + G) | 0;
                                      h[p >> 1] =
                                        k[p >> 1] -
                                        (((((((o(C, h[(t + J) >> 1]) +
                                          o(A, h[(t + x) >> 1])) |
                                          0) +
                                          o(N, h[(t + F) >> 1])) <<
                                          10) +
                                          32768) >>>
                                          16) |
                                          0);
                                      n = (n + 1) | 0;
                                      if ((r | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  n = 0;
                                  w = G;
                                  t = b;
                                  if (t) {
                                    while (1) {
                                      p = n;
                                      n = h[(w + 2) >> 1];
                                      y = o(n, n);
                                      n = h[w >> 1];
                                      y = (y + o(n, n)) | 0;
                                      n = h[(w + 4) >> 1];
                                      y = (y + o(n, n)) | 0;
                                      n = h[(w + 6) >> 1];
                                      n = (p + (((y + o(n, n)) >>> 6) | 0)) | 0;
                                      w = (w + 8) | 0;
                                      t = (t + -1) | 0;
                                      if (t) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if (
                                    !((n | 0) >= (ha | 0) ? (ha | 0) >= 0 : 0)
                                  ) {
                                    X(ea, I, R);
                                    X(fa, G, L);
                                    ha = n;
                                    ma = S;
                                    qa = E;
                                  }
                                  ia = (ia + 1) | 0;
                                  if ((ia | 0) != (da | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              W(s, (qa - m) | 0, i[(l + 8) >> 2]);
                              W(s, ma, i[(l + 4) >> 2]);
                              d = i[z >> 2];
                              c = (d | 0) < 1024;
                              b =
                                (j[(i[l >> 2] + ((ma << 2) | 3)) | 0] << 24) >>
                                16;
                              i[z >> 2] =
                                o(b, c ? 0 : (d << 3) >> 16) +
                                (o(b, c ? 1024 : d & 8191) >> 13);
                              X(f, ea, R);
                              b = X(a, fa, L);
                              if (!(!Z | ((r | 0) < 1))) {
                                while (1) {
                                  a = (b + (ja << 1)) | 0;
                                  h[a >> 1] = k[a >> 1] << 1;
                                  ja = (ja + 1) | 0;
                                  if ((ja | 0) != (r | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              m = E;
                            }
                            H = (B + 80) | 0;
                            return m | 0;
                          }
                          function ub(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0;
                            r = (H - 32) | 0;
                            H = r;
                            a: {
                              b: {
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                while (1) {
                                  f = e << 1;
                                  h[(f + b) >> 1] = k[(a + f) >> 1];
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                f = h[b >> 1];
                                n = r;
                                l = (c + -1) | 0;
                                e = 25736;
                                c: {
                                  if (!l) {
                                    break c;
                                  }
                                  e = k[(b + 2) >> 1];
                                }
                                e = (e - f) | 0;
                                h[n >> 1] =
                                  81920 /
                                  (((((e << 16) >> 16 < (f | 0) ? e : f) <<
                                    16) +
                                    19660800) >>
                                    16);
                                e = 1;
                                if ((c | 0) != 1) {
                                  while (1) {
                                    n = e << 1;
                                    f = (n + b) | 0;
                                    q = k[f >> 1];
                                    m = ((q - k[(f + -2) >> 1]) << 16) >> 16;
                                    f = (e + 1) | 0;
                                    e =
                                      (((e | 0) != (l | 0)
                                        ? k[((f << 1) + b) >> 1]
                                        : 25736) -
                                        q) |
                                      0;
                                    h[(n + r) >> 1] =
                                      81920 /
                                      (((((e << 16) >> 16 < (m | 0) ? e : m) <<
                                        16) +
                                        19660800) >>
                                        16);
                                    e = f;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                e = 0;
                                while (1) {
                                  f = ((e << 1) + b) | 0;
                                  e = (e + 1) | 0;
                                  h[f >> 1] = k[f >> 1] - (e << 11);
                                  if ((c | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                q = 2147483647;
                                m = 0;
                                f = 8848;
                                l = 0;
                                while (1) {
                                  n = 0;
                                  e = f;
                                  s = 0;
                                  while (1) {
                                    p = n;
                                    n =
                                      ((k[((s << 1) + b) >> 1] -
                                        (g[e | 0] << 5)) <<
                                        16) >>
                                      16;
                                    n = (p + o(n, n)) | 0;
                                    e = (e + 1) | 0;
                                    s = (s + 1) | 0;
                                    if ((s | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  e = (n | 0) < (q | 0);
                                  m = e ? l : m;
                                  q = e ? n : q;
                                  f = (c + f) | 0;
                                  l = (l + 1) | 0;
                                  if ((l | 0) != 64) {
                                    continue;
                                  }
                                  break;
                                }
                                f = o(c, m);
                                e = 0;
                                while (1) {
                                  l = ((e << 1) + b) | 0;
                                  h[l >> 1] =
                                    k[l >> 1] -
                                    (g[(((e + f) | 0) + 8848) | 0] << 5);
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                W(d, m, 6);
                                e = 0;
                                if ((c | 0) <= 0) {
                                  break a;
                                }
                                while (1) {
                                  f = ((e << 1) + b) | 0;
                                  h[f >> 1] = k[f >> 1] << 1;
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              W(d, 0, 6);
                            }
                            t = k[b >> 1];
                            u = k[(b + 8) >> 1];
                            v = k[(b + 6) >> 1];
                            w = k[(b + 4) >> 1];
                            i = k[(b + 2) >> 1];
                            l = 2147483647;
                            f = 0;
                            e = 9488;
                            n = h[(r + 8) >> 1];
                            q = h[(r + 6) >> 1];
                            s = h[(r + 4) >> 1];
                            y = h[(r + 2) >> 1];
                            z = h[r >> 1];
                            m = 0;
                            while (1) {
                              j = ((t - (g[e | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                ((o(z, j & 32767) >> 15) +
                                  o(z, (j << 1) >> 16)) |
                                0;
                              j = ((i - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                (((p + (o(y, j & 32767) >> 15)) | 0) +
                                  o(y, (j << 1) >> 16)) |
                                0;
                              j = ((w - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                (((p + (o(s, j & 32767) >> 15)) | 0) +
                                  o(s, (j << 1) >> 16)) |
                                0;
                              j = ((v - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                (((p + (o(q, j & 32767) >> 15)) | 0) +
                                  o(q, (j << 1) >> 16)) |
                                0;
                              j = ((u - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              x =
                                (((p + (o(n, j & 32767) >> 15)) | 0) +
                                  o(n, (j << 1) >> 16)) |
                                0;
                              j = (x | 0) < (l | 0);
                              l = j ? x : l;
                              f = j ? m : f;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[b >> 1] = k[b >> 1] - (g[(e + 9488) | 0] << 5);
                            h[(b + 2) >> 1] =
                              k[(b + 2) >> 1] - (g[(e + 9489) | 0] << 5);
                            h[(b + 4) >> 1] =
                              k[(b + 4) >> 1] - (g[(e + 9490) | 0] << 5);
                            h[(b + 6) >> 1] =
                              k[(b + 6) >> 1] - (g[(e + 9491) | 0] << 5);
                            h[(b + 8) >> 1] =
                              k[(b + 8) >> 1] - (g[(e + 9492) | 0] << 5);
                            W(d, f, 6);
                            j = k[b >> 1] << 1;
                            h[b >> 1] = j;
                            t = k[(b + 2) >> 1] << 1;
                            h[(b + 2) >> 1] = t;
                            u = k[(b + 4) >> 1] << 1;
                            h[(b + 4) >> 1] = u;
                            v = k[(b + 6) >> 1] << 1;
                            h[(b + 6) >> 1] = v;
                            w = k[(b + 8) >> 1] << 1;
                            h[(b + 8) >> 1] = w;
                            m = 2147483647;
                            f = 0;
                            e = 9808;
                            l = 0;
                            while (1) {
                              p = f;
                              f = ((j - (g[e | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                ((o(z, f & 32764) >> 15) +
                                  o(z, (f << 1) >> 16)) |
                                0;
                              f = ((t - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(y, f & 32764) >> 15)) | 0) +
                                  o(y, (f << 1) >> 16)) |
                                0;
                              f = ((u - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(s, f & 32764) >> 15)) | 0) +
                                  o(s, (f << 1) >> 16)) |
                                0;
                              f = ((v - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(q, f & 32764) >> 15)) | 0) +
                                  o(q, (f << 1) >> 16)) |
                                0;
                              f = ((w - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(n, f & 32764) >> 15)) | 0) +
                                  o(n, (f << 1) >> 16)) |
                                0;
                              x = (i | 0) < (m | 0);
                              f = x ? l : p;
                              l = (l + 1) | 0;
                              if ((l | 0) != 64) {
                                m = x ? i : m;
                                e = (e + 5) | 0;
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[(b + 8) >> 1] = w - (g[(e + 9812) | 0] << 5);
                            h[(b + 6) >> 1] = v - (g[(e + 9811) | 0] << 5);
                            h[(b + 4) >> 1] = u - (g[(e + 9810) | 0] << 5);
                            h[(b + 2) >> 1] = t - (g[(e + 9809) | 0] << 5);
                            h[b >> 1] = j - (g[(e + 9808) | 0] << 5);
                            W(d, f, 6);
                            j = k[(b + 10) >> 1];
                            t = k[(b + 18) >> 1];
                            u = k[(b + 16) >> 1];
                            v = k[(b + 14) >> 1];
                            w = k[(b + 12) >> 1];
                            l = 2147483647;
                            f = 0;
                            e = 10128;
                            n = h[(r + 18) >> 1];
                            q = h[(r + 16) >> 1];
                            s = h[(r + 14) >> 1];
                            y = h[(r + 12) >> 1];
                            z = h[(r + 10) >> 1];
                            m = 0;
                            while (1) {
                              i = ((j - (g[e | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                ((o(z, i & 32767) >> 15) +
                                  o(z, (i << 1) >> 16)) |
                                0;
                              i = ((w - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                (((p + (o(y, i & 32767) >> 15)) | 0) +
                                  o(y, (i << 1) >> 16)) |
                                0;
                              i = ((v - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                (((p + (o(s, i & 32767) >> 15)) | 0) +
                                  o(s, (i << 1) >> 16)) |
                                0;
                              i = ((u - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                (((p + (o(q, i & 32767) >> 15)) | 0) +
                                  o(q, (i << 1) >> 16)) |
                                0;
                              i = ((t - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              x =
                                (((p + (o(n, i & 32767) >> 15)) | 0) +
                                  o(n, (i << 1) >> 16)) |
                                0;
                              i = (x | 0) < (l | 0);
                              l = i ? x : l;
                              f = i ? m : f;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[(b + 18) >> 1] = t - (g[(e + 10132) | 0] << 5);
                            h[(b + 16) >> 1] = u - (g[(e + 10131) | 0] << 5);
                            h[(b + 14) >> 1] = v - (g[(e + 10130) | 0] << 5);
                            h[(b + 12) >> 1] = w - (g[(e + 10129) | 0] << 5);
                            h[(b + 10) >> 1] = j - (g[(e + 10128) | 0] << 5);
                            W(d, f, 6);
                            j = k[(b + 10) >> 1] << 1;
                            h[(b + 10) >> 1] = j;
                            t = k[(b + 12) >> 1] << 1;
                            h[(b + 12) >> 1] = t;
                            u = k[(b + 14) >> 1] << 1;
                            h[(b + 14) >> 1] = u;
                            v = k[(b + 16) >> 1] << 1;
                            h[(b + 16) >> 1] = v;
                            w = k[(b + 18) >> 1] << 1;
                            h[(b + 18) >> 1] = w;
                            m = 2147483647;
                            f = 0;
                            e = 10448;
                            l = 0;
                            while (1) {
                              p = f;
                              f = ((j - (g[e | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                ((o(z, f & 32764) >> 15) +
                                  o(z, (f << 1) >> 16)) |
                                0;
                              f = ((t - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(y, f & 32764) >> 15)) | 0) +
                                  o(y, (f << 1) >> 16)) |
                                0;
                              f = ((u - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(s, f & 32764) >> 15)) | 0) +
                                  o(s, (f << 1) >> 16)) |
                                0;
                              f = ((v - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(q, f & 32764) >> 15)) | 0) +
                                  o(q, (f << 1) >> 16)) |
                                0;
                              f = ((w - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(n, f & 32764) >> 15)) | 0) +
                                  o(n, (f << 1) >> 16)) |
                                0;
                              x = (i | 0) < (m | 0);
                              f = x ? l : p;
                              l = (l + 1) | 0;
                              if ((l | 0) != 64) {
                                m = x ? i : m;
                                e = (e + 5) | 0;
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[(b + 18) >> 1] = w - (g[(e + 10452) | 0] << 5);
                            h[(b + 16) >> 1] = v - (g[(e + 10451) | 0] << 5);
                            h[(b + 14) >> 1] = u - (g[(e + 10450) | 0] << 5);
                            h[(b + 12) >> 1] = t - (g[(e + 10449) | 0] << 5);
                            h[(b + 10) >> 1] = j - (g[(e + 10448) | 0] << 5);
                            W(d, f, 6);
                            e = 0;
                            d: {
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = ((e << 1) + b) | 0;
                                h[d >> 1] = (h[d >> 1] + 2) >>> 2;
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              e = 0;
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = e << 1;
                                f = (d + b) | 0;
                                h[f >> 1] = k[(a + d) >> 1] - k[f >> 1];
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (r + 32) | 0;
                          }
                          function ra(a, b, c, d, e) {
                            var f = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0;
                            f = (H - 80) | 0;
                            H = f;
                            i[(f + 76) >> 2] = b;
                            z = (f + 55) | 0;
                            w = (f + 56) | 0;
                            b = 0;
                            a: {
                              b: while (1) {
                                c: {
                                  if ((t | 0) < 0) {
                                    break c;
                                  }
                                  if ((b | 0) > ((2147483647 - t) | 0)) {
                                    i[3790] = 61;
                                    t = -1;
                                    break c;
                                  }
                                  t = (b + t) | 0;
                                }
                                d: {
                                  e: {
                                    f: {
                                      p = i[(f + 76) >> 2];
                                      b = p;
                                      l = j[b | 0];
                                      if (l) {
                                        while (1) {
                                          g: {
                                            k = l & 255;
                                            h: {
                                              if (!k) {
                                                l = b;
                                                break h;
                                              }
                                              if ((k | 0) != 37) {
                                                break g;
                                              }
                                              l = b;
                                              while (1) {
                                                if (j[(b + 1) | 0] != 37) {
                                                  break h;
                                                }
                                                k = (b + 2) | 0;
                                                i[(f + 76) >> 2] = k;
                                                l = (l + 1) | 0;
                                                m = j[(b + 2) | 0];
                                                b = k;
                                                if ((m | 0) == 37) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                            b = (l - p) | 0;
                                            if (a) {
                                              ja(a, p, b);
                                            }
                                            if (b) {
                                              continue b;
                                            }
                                            u = -1;
                                            l = 1;
                                            k = f;
                                            b = i[(f + 76) >> 2];
                                            if (
                                              !(
                                                (j[(b + 2) | 0] != 36) |
                                                ((g[
                                                  (i[(f + 76) >> 2] + 1) | 0
                                                ] +
                                                  -48) >>>
                                                  0 >=
                                                  10)
                                              )
                                            ) {
                                              u = (g[(b + 1) | 0] + -48) | 0;
                                              x = 1;
                                              l = 3;
                                            }
                                            b = (l + b) | 0;
                                            i[(k + 76) >> 2] = b;
                                            l = 0;
                                            v = g[b | 0];
                                            m = (v + -32) | 0;
                                            i: {
                                              if (m >>> 0 > 31) {
                                                k = b;
                                                break i;
                                              }
                                              k = b;
                                              m = 1 << m;
                                              if (!(m & 75913)) {
                                                break i;
                                              }
                                              while (1) {
                                                k = (b + 1) | 0;
                                                i[(f + 76) >> 2] = k;
                                                l = l | m;
                                                v = g[(b + 1) | 0];
                                                m = (v + -32) | 0;
                                                if (m >>> 0 > 31) {
                                                  break i;
                                                }
                                                b = k;
                                                m = 1 << m;
                                                if (m & 75913) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                            j: {
                                              if ((v | 0) == 42) {
                                                m = f;
                                                k: {
                                                  l: {
                                                    if (
                                                      (g[(k + 1) | 0] + -48) >>>
                                                        0 >=
                                                      10
                                                    ) {
                                                      break l;
                                                    }
                                                    b = i[(f + 76) >> 2];
                                                    if (j[(b + 2) | 0] != 36) {
                                                      break l;
                                                    }
                                                    i[
                                                      ((((g[(b + 1) | 0] << 2) +
                                                        e) |
                                                        0) +
                                                        -192) >>
                                                        2
                                                    ] = 10;
                                                    r =
                                                      i[
                                                        ((((g[(b + 1) | 0] <<
                                                          3) +
                                                          d) |
                                                          0) +
                                                          -384) >>
                                                          2
                                                      ];
                                                    x = 1;
                                                    b = (b + 3) | 0;
                                                    break k;
                                                  }
                                                  if (x) {
                                                    break f;
                                                  }
                                                  x = 0;
                                                  r = 0;
                                                  if (a) {
                                                    b = i[c >> 2];
                                                    i[c >> 2] = b + 4;
                                                    r = i[b >> 2];
                                                  }
                                                  b =
                                                    (i[(f + 76) >> 2] + 1) | 0;
                                                }
                                                i[(m + 76) >> 2] = b;
                                                if ((r | 0) > -1) {
                                                  break j;
                                                }
                                                r = (0 - r) | 0;
                                                l = l | 8192;
                                                break j;
                                              }
                                              r = za((f + 76) | 0);
                                              if ((r | 0) < 0) {
                                                break f;
                                              }
                                              b = i[(f + 76) >> 2];
                                            }
                                            q = -1;
                                            m: {
                                              if (j[b | 0] != 46) {
                                                break m;
                                              }
                                              if (j[(b + 1) | 0] == 42) {
                                                n: {
                                                  if (
                                                    (g[(b + 2) | 0] + -48) >>>
                                                      0 >=
                                                    10
                                                  ) {
                                                    break n;
                                                  }
                                                  b = i[(f + 76) >> 2];
                                                  if (j[(b + 3) | 0] != 36) {
                                                    break n;
                                                  }
                                                  i[
                                                    ((((g[(b + 2) | 0] << 2) +
                                                      e) |
                                                      0) +
                                                      -192) >>
                                                      2
                                                  ] = 10;
                                                  q =
                                                    i[
                                                      ((((g[(b + 2) | 0] << 3) +
                                                        d) |
                                                        0) +
                                                        -384) >>
                                                        2
                                                    ];
                                                  b = (b + 4) | 0;
                                                  i[(f + 76) >> 2] = b;
                                                  break m;
                                                }
                                                if (x) {
                                                  break f;
                                                }
                                                if (a) {
                                                  b = i[c >> 2];
                                                  i[c >> 2] = b + 4;
                                                  q = i[b >> 2];
                                                } else {
                                                  q = 0;
                                                }
                                                b = (i[(f + 76) >> 2] + 2) | 0;
                                                i[(f + 76) >> 2] = b;
                                                break m;
                                              }
                                              i[(f + 76) >> 2] = b + 1;
                                              q = za((f + 76) | 0);
                                              b = i[(f + 76) >> 2];
                                            }
                                            k = 0;
                                            while (1) {
                                              y = k;
                                              s = -1;
                                              if ((g[b | 0] + -65) >>> 0 > 57) {
                                                break a;
                                              }
                                              v = (b + 1) | 0;
                                              i[(f + 76) >> 2] = v;
                                              k = g[b | 0];
                                              b = v;
                                              k =
                                                j[
                                                  (((k + o(y, 58)) | 0) +
                                                    14063) |
                                                    0
                                                ];
                                              if ((k + -1) >>> 0 < 8) {
                                                continue;
                                              }
                                              break;
                                            }
                                            if (!k) {
                                              break a;
                                            }
                                            o: {
                                              p: {
                                                q: {
                                                  if ((k | 0) == 19) {
                                                    if ((u | 0) <= -1) {
                                                      break q;
                                                    }
                                                    break a;
                                                  }
                                                  if ((u | 0) < 0) {
                                                    break p;
                                                  }
                                                  i[((u << 2) + e) >> 2] = k;
                                                  b = ((u << 3) + d) | 0;
                                                  k = i[(b + 4) >> 2];
                                                  i[(f + 64) >> 2] = i[b >> 2];
                                                  i[(f + 68) >> 2] = k;
                                                }
                                                b = 0;
                                                if (!a) {
                                                  continue b;
                                                }
                                                break o;
                                              }
                                              if (!a) {
                                                break d;
                                              }
                                              ya((f - -64) | 0, k, c);
                                              v = i[(f + 76) >> 2];
                                            }
                                            m = l & -65537;
                                            l = l & 8192 ? m : l;
                                            s = 0;
                                            u = 14100;
                                            k = w;
                                            r: {
                                              s: {
                                                t: {
                                                  u: {
                                                    v: {
                                                      w: {
                                                        x: {
                                                          y: {
                                                            z: {
                                                              A: {
                                                                B: {
                                                                  C: {
                                                                    D: {
                                                                      E: {
                                                                        F: {
                                                                          G: {
                                                                            b =
                                                                              g[
                                                                                (v +
                                                                                  -1) |
                                                                                  0
                                                                              ];
                                                                            b =
                                                                              y
                                                                                ? (b &
                                                                                    15) ==
                                                                                  3
                                                                                  ? b &
                                                                                    -33
                                                                                  : b
                                                                                : b;
                                                                            switch (
                                                                              (b +
                                                                                -88) |
                                                                              0
                                                                            ) {
                                                                              case 11:
                                                                                break r;
                                                                              case 9:
                                                                              case 13:
                                                                              case 14:
                                                                              case 15:
                                                                                break s;
                                                                              case 27:
                                                                                break x;
                                                                              case 12:
                                                                              case 17:
                                                                                break A;
                                                                              case 23:
                                                                                break B;
                                                                              case 0:
                                                                              case 32:
                                                                                break C;
                                                                              case 24:
                                                                                break D;
                                                                              case 22:
                                                                                break E;
                                                                              case 29:
                                                                                break F;
                                                                              case 1:
                                                                              case 2:
                                                                              case 3:
                                                                              case 4:
                                                                              case 5:
                                                                              case 6:
                                                                              case 7:
                                                                              case 8:
                                                                              case 10:
                                                                              case 16:
                                                                              case 18:
                                                                              case 19:
                                                                              case 20:
                                                                              case 21:
                                                                              case 25:
                                                                              case 26:
                                                                              case 28:
                                                                              case 30:
                                                                              case 31:
                                                                                break e;
                                                                              default:
                                                                                break G;
                                                                            }
                                                                          }
                                                                          H: {
                                                                            switch (
                                                                              (b +
                                                                                -65) |
                                                                              0
                                                                            ) {
                                                                              case 0:
                                                                              case 4:
                                                                              case 5:
                                                                              case 6:
                                                                                break s;
                                                                              case 2:
                                                                                break v;
                                                                              case 1:
                                                                              case 3:
                                                                                break e;
                                                                              default:
                                                                                break H;
                                                                            }
                                                                          }
                                                                          if (
                                                                            (b |
                                                                              0) ==
                                                                            83
                                                                          ) {
                                                                            break w;
                                                                          }
                                                                          break e;
                                                                        }
                                                                        b =
                                                                          i[
                                                                            (f +
                                                                              64) >>
                                                                              2
                                                                          ];
                                                                        p =
                                                                          i[
                                                                            (f +
                                                                              68) >>
                                                                              2
                                                                          ];
                                                                        u = 14100;
                                                                        break z;
                                                                      }
                                                                      b = 0;
                                                                      I: {
                                                                        switch (
                                                                          y &
                                                                          255
                                                                        ) {
                                                                          case 0:
                                                                            i[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 1:
                                                                            i[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 2:
                                                                            k =
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ];
                                                                            i[
                                                                              k >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            i[
                                                                              (k +
                                                                                4) >>
                                                                                2
                                                                            ] =
                                                                              t >>
                                                                              31;
                                                                            continue b;
                                                                          case 3:
                                                                            h[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                1
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 4:
                                                                            g[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ]
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 6:
                                                                            i[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 7:
                                                                            break I;
                                                                          default:
                                                                            continue b;
                                                                        }
                                                                      }
                                                                      k =
                                                                        i[
                                                                          (f +
                                                                            64) >>
                                                                            2
                                                                        ];
                                                                      i[
                                                                        k >> 2
                                                                      ] = t;
                                                                      i[
                                                                        (k +
                                                                          4) >>
                                                                          2
                                                                      ] =
                                                                        t >> 31;
                                                                      continue b;
                                                                    }
                                                                    q =
                                                                      q >>> 0 >
                                                                      8
                                                                        ? q
                                                                        : 8;
                                                                    l = l | 8;
                                                                    b = 120;
                                                                  }
                                                                  p = Wa(
                                                                    i[
                                                                      (f +
                                                                        64) >>
                                                                        2
                                                                    ],
                                                                    i[
                                                                      (f +
                                                                        68) >>
                                                                        2
                                                                    ],
                                                                    w,
                                                                    b & 32
                                                                  );
                                                                  if (
                                                                    !(l & 8) |
                                                                    !(
                                                                      i[
                                                                        (f +
                                                                          64) >>
                                                                          2
                                                                      ] |
                                                                      i[
                                                                        (f +
                                                                          68) >>
                                                                          2
                                                                      ]
                                                                    )
                                                                  ) {
                                                                    break y;
                                                                  }
                                                                  u =
                                                                    (((b >>>
                                                                      4) |
                                                                      0) +
                                                                      14100) |
                                                                    0;
                                                                  s = 2;
                                                                  break y;
                                                                }
                                                                p = Va(
                                                                  i[
                                                                    (f + 64) >>
                                                                      2
                                                                  ],
                                                                  i[
                                                                    (f + 68) >>
                                                                      2
                                                                  ],
                                                                  w
                                                                );
                                                                if (!(l & 8)) {
                                                                  break y;
                                                                }
                                                                b = (w - p) | 0;
                                                                q =
                                                                  (q | 0) >
                                                                  (b | 0)
                                                                    ? q
                                                                    : (b + 1) |
                                                                      0;
                                                                break y;
                                                              }
                                                              m =
                                                                i[
                                                                  (f + 68) >> 2
                                                                ];
                                                              p = m;
                                                              b =
                                                                i[
                                                                  (f + 64) >> 2
                                                                ];
                                                              if (
                                                                (m | 0) < -1
                                                                  ? 1
                                                                  : (m | 0) <=
                                                                    -1
                                                              ) {
                                                                p =
                                                                  (0 -
                                                                    ((p +
                                                                      (0 <
                                                                        b >>>
                                                                          0)) |
                                                                      0)) |
                                                                  0;
                                                                b = (0 - b) | 0;
                                                                i[
                                                                  (f + 64) >> 2
                                                                ] = b;
                                                                i[
                                                                  (f + 68) >> 2
                                                                ] = p;
                                                                s = 1;
                                                                u = 14100;
                                                                break z;
                                                              }
                                                              if (l & 2048) {
                                                                s = 1;
                                                                u = 14101;
                                                                break z;
                                                              }
                                                              s = l & 1;
                                                              u = s
                                                                ? 14102
                                                                : 14100;
                                                            }
                                                            p = Ua(b, p, w);
                                                          }
                                                          l =
                                                            (q | 0) > -1
                                                              ? l & -65537
                                                              : l;
                                                          b = i[(f + 64) >> 2];
                                                          m = i[(f + 68) >> 2];
                                                          if (
                                                            !(!!(b | m) | q)
                                                          ) {
                                                            q = 0;
                                                            p = w;
                                                            break e;
                                                          }
                                                          b =
                                                            (!(b | m) +
                                                              ((w - p) | 0)) |
                                                            0;
                                                          q =
                                                            (q | 0) > (b | 0)
                                                              ? q
                                                              : b;
                                                          break e;
                                                        }
                                                        b = i[(f + 64) >> 2];
                                                        p = b ? b : 14110;
                                                        b = Ta(p, q);
                                                        k = b ? b : (p + q) | 0;
                                                        l = m;
                                                        q = b ? (b - p) | 0 : q;
                                                        break e;
                                                      }
                                                      k = i[(f + 64) >> 2];
                                                      if (q) {
                                                        break u;
                                                      }
                                                      b = 0;
                                                      ea(a, 32, r, 0, l);
                                                      break t;
                                                    }
                                                    i[(f + 12) >> 2] = 0;
                                                    i[(f + 8) >> 2] =
                                                      i[(f + 64) >> 2];
                                                    i[(f + 64) >> 2] = f + 8;
                                                    q = -1;
                                                    k = (f + 8) | 0;
                                                  }
                                                  b = 0;
                                                  J: {
                                                    while (1) {
                                                      p = i[k >> 2];
                                                      if (!p) {
                                                        break J;
                                                      }
                                                      p = Qa((f + 4) | 0, p);
                                                      m = (p | 0) < 0;
                                                      if (
                                                        !(
                                                          m |
                                                          (p >>> 0 >
                                                            (q - b) >>> 0)
                                                        )
                                                      ) {
                                                        k = (k + 4) | 0;
                                                        b = (b + p) | 0;
                                                        if (q >>> 0 > b >>> 0) {
                                                          continue;
                                                        }
                                                        break J;
                                                      }
                                                      break;
                                                    }
                                                    s = -1;
                                                    if (m) {
                                                      break a;
                                                    }
                                                  }
                                                  ea(a, 32, r, b, l);
                                                  if (!b) {
                                                    b = 0;
                                                    break t;
                                                  }
                                                  m = 0;
                                                  k = i[(f + 64) >> 2];
                                                  while (1) {
                                                    p = i[k >> 2];
                                                    if (!p) {
                                                      break t;
                                                    }
                                                    p = Qa((f + 4) | 0, p);
                                                    m = (p + m) | 0;
                                                    if ((m | 0) > (b | 0)) {
                                                      break t;
                                                    }
                                                    ja(a, (f + 4) | 0, p);
                                                    k = (k + 4) | 0;
                                                    if (m >>> 0 < b >>> 0) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                }
                                                ea(a, 32, r, b, l ^ 8192);
                                                b = (r | 0) > (b | 0) ? r : b;
                                                continue b;
                                              }
                                              b =
                                                J[0](
                                                  a,
                                                  n[(f + 64) >> 3],
                                                  r,
                                                  q,
                                                  l,
                                                  b
                                                ) | 0;
                                              continue b;
                                            }
                                            g[(f + 55) | 0] = i[(f + 64) >> 2];
                                            q = 1;
                                            p = z;
                                            l = m;
                                            break e;
                                          }
                                          k = (b + 1) | 0;
                                          i[(f + 76) >> 2] = k;
                                          l = j[(b + 1) | 0];
                                          b = k;
                                          continue;
                                        }
                                      }
                                      s = t;
                                      if (a) {
                                        break a;
                                      }
                                      if (!x) {
                                        break d;
                                      }
                                      b = 1;
                                      while (1) {
                                        a = i[((b << 2) + e) >> 2];
                                        if (a) {
                                          ya(((b << 3) + d) | 0, a, c);
                                          s = 1;
                                          b = (b + 1) | 0;
                                          if ((b | 0) != 10) {
                                            continue;
                                          }
                                          break a;
                                        }
                                        break;
                                      }
                                      s = 1;
                                      if (b >>> 0 >= 10) {
                                        break a;
                                      }
                                      while (1) {
                                        if (i[((b << 2) + e) >> 2]) {
                                          break f;
                                        }
                                        b = (b + 1) | 0;
                                        if ((b | 0) != 10) {
                                          continue;
                                        }
                                        break;
                                      }
                                      break a;
                                    }
                                    s = -1;
                                    break a;
                                  }
                                  m = (k - p) | 0;
                                  q = (q | 0) < (m | 0) ? m : q;
                                  k = (q + s) | 0;
                                  b = (r | 0) < (k | 0) ? k : r;
                                  ea(a, 32, b, k, l);
                                  ja(a, u, s);
                                  ea(a, 48, b, k, l ^ 65536);
                                  ea(a, 48, q, m, 0);
                                  ja(a, p, m);
                                  ea(a, 32, b, k, l ^ 8192);
                                  continue;
                                }
                                break;
                              }
                              s = 0;
                            }
                            H = (f + 80) | 0;
                            return s;
                          }
                          function jb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0;
                            r = (H - 16) | 0;
                            H = r;
                            j = i[(a + 40) >> 2];
                            E = i[i[a >> 2] >> 2];
                            e = i[(a + 4) >> 2];
                            C = ((i[(a + 12) >> 2] << 1) + c) | 0;
                            J[i[(i[e >> 2] + 48) >> 2]](e, 104, C) | 0;
                            e = i[(a + 4) >> 2];
                            e = J[i[(i[e >> 2] + 40) >> 2]](e, b, c) | 0;
                            f = i[(a + 4) >> 2];
                            J[i[(i[f >> 2] + 48) >> 2]](f, 103, (r + 12) | 0) |
                              0;
                            a: {
                              if (e) {
                                break a;
                              }
                              if (!b) {
                                Ca(a, c, i[(r + 12) >> 2], j);
                                e = 0;
                                break a;
                              }
                              b: {
                                if (!i[(a + 88) >> 2]) {
                                  d = i[(a + 96) >> 2];
                                  break b;
                                }
                                c: {
                                  if (
                                    ((i[(b + 20) >> 2]
                                      ? -1
                                      : (((i[(b + 4) >> 2] - i[(b + 12) >> 2]) |
                                          0) -
                                          (i[(b + 8) >> 2] << 3)) |
                                        0) |
                                      0) >=
                                    1
                                  ) {
                                    if (Fb(b)) {
                                      break c;
                                    }
                                  }
                                  i[(a + 96) >> 2] = 0;
                                  break b;
                                }
                                V(b, 1);
                                d = V(b, 3);
                                i[(a + 96) >> 2] = d;
                                if (!d) {
                                  d = 0;
                                  break b;
                                }
                                if (i[(i[(a + 92) >> 2] + (d << 2)) >> 2]) {
                                  break b;
                                }
                                i[r >> 2] = 13072;
                                Y(i[3524], 13148, r);
                                e = -2;
                                break a;
                              }
                              d: {
                                if (!i[(i[(a + 92) >> 2] + (d << 2)) >> 2]) {
                                  if (i[(r + 12) >> 2]) {
                                    break d;
                                  }
                                  d = 0;
                                  b = i[(a + 12) >> 2];
                                  if ((b | 0) > 0) {
                                    while (1) {
                                      h[(((b + d) << 1) + c) >> 1] = 0;
                                      d = (d + 1) | 0;
                                      if ((b | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  i[(a + 28) >> 2] = 1;
                                  d = ((b << 1) + c) | 0;
                                  _(
                                    d,
                                    i[(a + 60) >> 2],
                                    d,
                                    b,
                                    i[(a + 24) >> 2],
                                    i[(a + 64) >> 2]
                                  );
                                  ua(
                                    c,
                                    ((i[(a + 12) >> 2] << 1) + c) | 0,
                                    c,
                                    i[(a + 8) >> 2],
                                    i[(a + 44) >> 2],
                                    i[(a + 48) >> 2],
                                    j
                                  );
                                  e = 0;
                                  break a;
                                }
                                d = i[(a + 20) >> 2];
                                e = i[(a + 4) >> 2];
                                A = (j + ((0 - j) & 3)) | 0;
                                J[i[(i[e >> 2] + 48) >> 2]](e, 100, A) | 0;
                                e = i[(a + 4) >> 2];
                                j = ((d << 2) + A) | 0;
                                B = ((j & 1) + j) | 0;
                                J[i[(i[e >> 2] + 48) >> 2]](e, 101, B) | 0;
                                d = ((d << 1) + B) | 0;
                                u = ((d & 1) + d) | 0;
                                d = i[(a + 24) >> 2];
                                J[
                                  i[
                                    (i[
                                      (i[(a + 92) >> 2] +
                                        (i[(a + 96) >> 2] << 2)) >>
                                        2
                                    ] +
                                      20) >>
                                      2
                                  ]
                                ](u, d, b);
                                d = d << 1;
                                e = (d + u) | 0;
                                x = ((e & 1) + e) | 0;
                                j = (x + d) | 0;
                                e = i[(a + 24) >> 2];
                                if (!(!i[(a + 28) >> 2] | ((e | 0) < 1))) {
                                  f = i[(a + 56) >> 2];
                                  d = 0;
                                  while (1) {
                                    n = d << 1;
                                    h[(n + f) >> 1] = k[(n + u) >> 1];
                                    d = (d + 1) | 0;
                                    if ((e | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                v = (j + (j & 1)) | 0;
                                j = (v + (e << 1)) | 0;
                                d = i[(a + 20) >> 2];
                                if ((d | 0) >= 1) {
                                  D = (a + 84) | 0;
                                  n = 0;
                                  while (1) {
                                    g = (((0 - j) & 3) + j) | 0;
                                    e = i[(a + 16) >> 2];
                                    f = e << 2;
                                    j = (g + f) | 0;
                                    l = o(e, n);
                                    m = i[(a + 12) >> 2];
                                    s = 0;
                                    e = i[(a + 76) >> 2];
                                    if (e) {
                                      s = (e + (l << 2)) | 0;
                                      U(s, 0, f);
                                      d = i[(a + 20) >> 2];
                                    }
                                    fa(
                                      i[(a + 56) >> 2],
                                      u,
                                      x,
                                      i[(a + 24) >> 2],
                                      n,
                                      d
                                    );
                                    ga(x, i[(a + 24) >> 2], 410);
                                    ha(x, v, i[(a + 24) >> 2], j);
                                    f = 8192;
                                    p = n << 2;
                                    y = (p + i[(a + 68) >> 2]) | 0;
                                    i[y >> 2] = 8192;
                                    d = 0;
                                    e = 8192;
                                    if (i[(a + 24) >> 2] >= 1) {
                                      while (1) {
                                        q = f;
                                        f = d << 1;
                                        z = h[(f + v) >> 1];
                                        w = h[((f | 2) + v) >> 1];
                                        f = (q + ((z + w) | 0)) | 0;
                                        i[y >> 2] = f;
                                        e = (((e + w) | 0) - z) | 0;
                                        d = (d + 2) | 0;
                                        if ((d | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    y = l << 1;
                                    z = ((m << 1) + c) | 0;
                                    d = i[(p + A) >> 2];
                                    f = U(g, 0, i[(a + 16) >> 2] << 2);
                                    q = d << 7;
                                    d = (e + 82) | 0;
                                    d =
                                      (((((q + ((d << 16) >> 17)) | 0) +
                                        10496) |
                                        0) /
                                        (d | 0)) |
                                      0;
                                    d = (d | 0) > -32767 ? d : -32767;
                                    d = (d | 0) < 32767 ? d : 32767;
                                    e: {
                                      if (
                                        !i[
                                          (i[
                                            (i[(a + 92) >> 2] +
                                              (i[(a + 96) >> 2] << 2)) >>
                                              2
                                          ] +
                                            40) >>
                                            2
                                        ]
                                      ) {
                                        g = ((V(b, 5) << 16) + 16121856) | 0;
                                        m = (g << 8) >> 16;
                                        e = 2147483647;
                                        f: {
                                          if ((m | 0) > 21290) {
                                            break f;
                                          }
                                          e = 0;
                                          if (
                                            ((g >>> 8) << 16) >> 16 <
                                            -21290
                                          ) {
                                            break f;
                                          }
                                          g = (o(m, 23637) - -8192) | 0;
                                          e = (g >>> 11) & 16376;
                                          e =
                                            ((((o(
                                              ((((o(
                                                (((o(e, 1301) >>> 14) | 0) +
                                                  3726) |
                                                  0,
                                                e
                                              ) <<
                                                2) &
                                                536805376) +
                                                744226816) >>>
                                                16) |
                                                0,
                                              e
                                            ) <<
                                              2) &
                                              2147418112) +
                                              1073741824) >>>
                                              16) |
                                            0;
                                          g = g << 2;
                                          m = (-2 - (g >> 27)) | 0;
                                          e =
                                            g >> 16 < -4096
                                              ? (e >>> m) | 0
                                              : e << (0 - m);
                                        }
                                        if (i[(a + 16) >> 2] < 1) {
                                          break e;
                                        }
                                        d =
                                          ((((d >> 1) + e) | 0) / (d | 0)) | 0;
                                        e = (d << 6) & 32704;
                                        g = (d << 7) >> 16;
                                        m = h[(E + 22) >> 1] << 1;
                                        d = 0;
                                        while (1) {
                                          p = d << 2;
                                          w = (((d + l) << 1) + C) | 0;
                                          q = o(m, h[w >> 1]) >> 16;
                                          i[(p + f) >> 2] =
                                            (((o(e, q) + 16384) >> 15) +
                                              o(g, q)) <<
                                            14;
                                          q = (f + (p | 4)) | 0;
                                          p = o(m, h[(w + 2) >> 1]) >> 16;
                                          i[q >> 2] =
                                            0 -
                                            ((((o(p, e) + 16384) >> 15) +
                                              o(g, p)) <<
                                              14);
                                          d = (d + 2) | 0;
                                          if ((d | 0) < i[(a + 16) >> 2]) {
                                            continue;
                                          }
                                          break;
                                        }
                                        break e;
                                      }
                                      e =
                                        (o(
                                          h[((V(b, 4) << 1) + 13040) >> 1],
                                          28626
                                        ) >>>
                                          15) |
                                        0;
                                      l = h[((n << 1) + B) >> 1];
                                      g = i[(a + 16) >> 2];
                                      if ((g | 0) == 80) {
                                        e =
                                          (o((e << 16) >> 16, 23170) - -8192) >>
                                          14;
                                      }
                                      m =
                                        i[
                                          (i[(a + 92) >> 2] +
                                            (i[(a + 96) >> 2] << 2)) >>
                                            2
                                        ];
                                      J[i[(m + 40) >> 2]](
                                        f,
                                        i[(m + 44) >> 2],
                                        g,
                                        b,
                                        j,
                                        D
                                      );
                                      l =
                                        ((((o(l, (e << 16) >> 16) << 3) +
                                          (d >> 1)) |
                                          0) /
                                          (d | 0)) |
                                        0;
                                      g = l << 11;
                                      da(f, f, g, i[(a + 16) >> 2]);
                                      if (
                                        !i[
                                          (i[
                                            (i[(a + 92) >> 2] +
                                              (i[(a + 96) >> 2] << 2)) >>
                                              2
                                          ] +
                                            12) >>
                                            2
                                        ]
                                      ) {
                                        break e;
                                      }
                                      d = 0;
                                      m = i[(a + 16) >> 2] << 2;
                                      e = U((((0 - j) & 3) + j) | 0, 0, m);
                                      p =
                                        i[
                                          (i[(a + 92) >> 2] +
                                            (i[(a + 96) >> 2] << 2)) >>
                                            2
                                        ];
                                      J[i[(p + 40) >> 2]](
                                        e,
                                        i[(p + 44) >> 2],
                                        i[(a + 16) >> 2],
                                        b,
                                        (e + m) | 0,
                                        D
                                      );
                                      da(
                                        e,
                                        e,
                                        (o((l << 12) >> 16, 13107) +
                                          (((o(g & 30720, 13107) + 16384) >>>
                                            15) |
                                            0)) |
                                          0,
                                        i[(a + 16) >> 2]
                                      );
                                      if (i[(a + 16) >> 2] < 1) {
                                        break e;
                                      }
                                      while (1) {
                                        l = d << 2;
                                        g = (l + f) | 0;
                                        i[g >> 2] = i[(e + l) >> 2] + i[g >> 2];
                                        d = (d + 1) | 0;
                                        if ((d | 0) < i[(a + 16) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    l = (y + z) | 0;
                                    e = i[(a + 16) >> 2];
                                    g: {
                                      if (!i[(a + 76) >> 2]) {
                                        break g;
                                      }
                                      d = 0;
                                      if ((e | 0) < 1) {
                                        break g;
                                      }
                                      while (1) {
                                        g = d << 2;
                                        h[(g + s) >> 1] =
                                          (i[(f + g) >> 2] - -8192) >>> 14;
                                        d = (d + 1) | 0;
                                        if ((e | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    _(
                                      i[(a + 52) >> 2],
                                      i[(a + 60) >> 2],
                                      l,
                                      e,
                                      i[(a + 24) >> 2],
                                      i[(a + 64) >> 2]
                                    );
                                    e = i[(a + 16) >> 2];
                                    if ((e | 0) >= 1) {
                                      l = i[(a + 52) >> 2];
                                      d = 0;
                                      while (1) {
                                        h[(l + (d << 1)) >> 1] =
                                          (i[(f + (d << 2)) >> 2] - -8192) >>>
                                          14;
                                        d = (d + 1) | 0;
                                        if ((e | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    f = i[(a + 24) >> 2];
                                    if ((f | 0) >= 1) {
                                      l = i[(a + 60) >> 2];
                                      d = 0;
                                      while (1) {
                                        s = d << 1;
                                        h[(s + l) >> 1] = k[(v + s) >> 1];
                                        d = (d + 1) | 0;
                                        if ((f | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    d = Z(i[(a + 52) >> 2], e);
                                    h[(i[(a + 72) >> 2] + (n << 1)) >> 1] = d;
                                    e = o(d, d);
                                    d = i[(a + 20) >> 2];
                                    t = ((((e | 0) / (d | 0)) | 0) + t) | 0;
                                    n = (n + 1) | 0;
                                    if ((n | 0) < (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                e = 0;
                                b = t >>> 0 > 65535;
                                d = b << 3;
                                q = d | 4;
                                f = d;
                                b = b ? (t >>> 16) | 0 : t;
                                d = b >>> 0 > 255;
                                f = d ? q : f;
                                b = d ? (b >>> 8) | 0 : b;
                                d = b >>> 0 > 15;
                                b =
                                  (d ? f | 2 : f) |
                                  ((d ? (b >>> 4) | 0 : b) >>> 0 > 3);
                                d = b << 1;
                                f = b & 65535;
                                d =
                                  ((f >>> 0 > 6
                                    ? t >> (d + -12)
                                    : t << (12 - d)) <<
                                    16) >>
                                  16;
                                d =
                                  (((o(
                                    (((o((o(d, 16816) + -827523072) >> 16, d) <<
                                      2) &
                                      -65536) +
                                      1387593728) >>
                                      16,
                                    d
                                  ) <<
                                    2) &
                                    -65536) +
                                    238157824) >>
                                  16;
                                b = (13 - b) | 0;
                                h[(a + 80) >> 1] =
                                  f >>> 0 < 13 ? d >> b : d << (0 - b);
                                ua(
                                  c,
                                  ((i[(a + 12) >> 2] << 1) + c) | 0,
                                  c,
                                  i[(a + 8) >> 2],
                                  i[(a + 44) >> 2],
                                  i[(a + 48) >> 2],
                                  j
                                );
                                b = i[(a + 24) >> 2];
                                if ((b | 0) >= 1) {
                                  c = i[(a + 56) >> 2];
                                  d = 0;
                                  while (1) {
                                    j = d << 1;
                                    h[(j + c) >> 1] = k[(j + u) >> 1];
                                    d = (d + 1) | 0;
                                    if ((b | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                i[(a + 28) >> 2] = 0;
                                break a;
                              }
                              Ca(a, c, 1, j);
                              e = 0;
                            }
                            H = (r + 16) | 0;
                            return e | 0;
                          }
                          function ib(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = p(0),
                              l = p(0),
                              n = 0;
                            e = (H - 32) | 0;
                            H = e;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            switch ((b + -3) | 0) {
                                              case 98:
                                                d = i[(a + 20) >> 2];
                                                if ((d | 0) >= 1) {
                                                  break g;
                                                }
                                                b = 0;
                                                break a;
                                              case 0:
                                                i[c >> 2] = i[(a + 8) >> 2];
                                                b = 0;
                                                break a;
                                              case 7:
                                                b = i[c >> 2];
                                                i[(a + 156) >> 2] = b;
                                                i[(a + 152) >> 2] = b;
                                                b = 0;
                                                break a;
                                              case 5:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  8,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 31:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  34,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 32:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  35,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 6:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  9,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 3:
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  4,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 9:
                                                i[(a + 108) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  12,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 10:
                                                i[c >> 2] = i[(a + 108) >> 2];
                                                b = 0;
                                                break a;
                                              case 27:
                                                i[(a + 136) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  30,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 28:
                                                i[c >> 2] = i[(a + 136) >> 2];
                                                b = 0;
                                                break a;
                                              case 11:
                                                j = m[c >> 2];
                                                l = p(+j + 0.6);
                                                m[(e + 24) >> 2] = l;
                                                m[(a + 104) >> 2] = j;
                                                if (!((l > p(10)) ^ 1)) {
                                                  i[(e + 24) >> 2] = 1092616192;
                                                }
                                                b = e;
                                                n = u(+m[c >> 2] + 0.5);
                                                i: {
                                                  if (q(n) < 2147483648) {
                                                    c = ~~n;
                                                    break i;
                                                  }
                                                  c = -2147483648;
                                                }
                                                i[(b + 28) >> 2] =
                                                  (c | 0) < 10 ? c : 10;
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 44) >> 2]](
                                                  b,
                                                  14,
                                                  (e + 24) | 0
                                                ) | 0;
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  4,
                                                  (e + 28) | 0
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 12:
                                                i[c >> 2] = i[(a + 104) >> 2];
                                                b = 0;
                                                break a;
                                              case 29:
                                                d = i[c >> 2];
                                                i[(a + 120) >> 2] = d;
                                                b = 0;
                                                i[(a + 108) >> 2] =
                                                  (d | 0) != 0;
                                                d = i[(a + 4) >> 2];
                                                J[i[(i[d >> 2] + 44) >> 2]](
                                                  d,
                                                  12,
                                                  (a + 108) | 0
                                                ) | 0;
                                                if (!i[(a + 108) >> 2]) {
                                                  break a;
                                                }
                                                i[(e + 28) >> 2] = 10;
                                                c = i[c >> 2];
                                                while (1) {
                                                  j: {
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      4,
                                                      (e + 28) | 0
                                                    ) | 0;
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      19,
                                                      (e + 24) | 0
                                                    ) | 0;
                                                    b = i[(e + 28) >> 2];
                                                    if (
                                                      i[(e + 24) >> 2] <=
                                                      (c | 0)
                                                    ) {
                                                      d = b;
                                                      break j;
                                                    }
                                                    d = (b + -1) | 0;
                                                    i[(e + 28) >> 2] = d;
                                                    if ((b | 0) > 0) {
                                                      continue;
                                                    }
                                                  }
                                                  break;
                                                }
                                                b = 0;
                                                m[(e + 20) >> 2] =
                                                  ((d | 0) > 0 ? d : 0) | 0;
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  14,
                                                  (e + 20) | 0
                                                ) | 0;
                                                i[(a + 124) >> 2] = 0;
                                                i[(a + 128) >> 2] = 0;
                                                i[(a + 132) >> 2] = 0;
                                                break a;
                                              case 30:
                                                i[c >> 2] = i[(a + 120) >> 2];
                                                b = 0;
                                                break a;
                                              case 1:
                                                b = 0;
                                                c = i[c >> 2];
                                                c = (c | 0) > 0 ? c : 0;
                                                c =
                                                  (i[i[a >> 2] >> 2] +
                                                    (((c | 0) < 10 ? c : 10) <<
                                                      2)) |
                                                  0;
                                                d = i[(c + 104) >> 2];
                                                i[(a + 156) >> 2] = d;
                                                i[(a + 152) >> 2] = d;
                                                i[(e + 28) >> 2] =
                                                  i[(c + 60) >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  6,
                                                  (e + 28) | 0
                                                ) | 0;
                                                break a;
                                              case 13:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 44) >> 2]](
                                                  b,
                                                  16,
                                                  c
                                                ) | 0;
                                                b = a;
                                                a = i[c >> 2];
                                                i[(b + 160) >> 2] =
                                                  (a | 0) > 1 ? a : 1;
                                                H = (e + 32) | 0;
                                                return 0;
                                              case 14:
                                                i[c >> 2] = i[(a + 160) >> 2];
                                                b = 0;
                                                break a;
                                              case 15:
                                                i[(e + 28) >> 2] = 10;
                                                b = i[c >> 2];
                                                while (1) {
                                                  k: {
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      4,
                                                      (e + 28) | 0
                                                    ) | 0;
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      19,
                                                      (e + 24) | 0
                                                    ) | 0;
                                                    if (
                                                      i[(e + 24) >> 2] <=
                                                      (b | 0)
                                                    ) {
                                                      break k;
                                                    }
                                                    c = i[(e + 28) >> 2];
                                                    i[(e + 28) >> 2] = c + -1;
                                                    if ((c | 0) > 0) {
                                                      continue;
                                                    }
                                                  }
                                                  break;
                                                }
                                                b = 0;
                                                break a;
                                              case 16:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 44) >> 2]](
                                                  b,
                                                  19,
                                                  c
                                                ) | 0;
                                                b = i[(a + 164) >> 2];
                                                d =
                                                  i[
                                                    (i[(a + 148) >> 2] +
                                                      (i[(a + 152) >> 2] <<
                                                        2)) >>
                                                      2
                                                  ];
                                                if (d) {
                                                  i[c >> 2] =
                                                    i[c >> 2] +
                                                    (((o(b, i[(d + 52) >> 2]) |
                                                      0) /
                                                      i[(a + 8) >> 2]) |
                                                      0);
                                                  b = 0;
                                                  break a;
                                                }
                                                i[c >> 2] =
                                                  i[c >> 2] +
                                                  (((b << 2) /
                                                    i[(a + 8) >> 2]) |
                                                    0);
                                                b = 0;
                                                break a;
                                              case 21:
                                                b = i[c >> 2];
                                                i[(a + 164) >> 2] = b;
                                                i[(e + 28) >> 2] = b >> 1;
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  24,
                                                  (e + 28) | 0
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 22:
                                                i[c >> 2] = i[(a + 164) >> 2];
                                                b = 0;
                                                break a;
                                              case 23:
                                                i[(a + 32) >> 2] = 1;
                                                b = i[(a + 28) >> 2];
                                                l: {
                                                  if ((b | 0) < 1) {
                                                    break l;
                                                  }
                                                  d = (b + 1) | 0;
                                                  f = i[(a + 68) >> 2];
                                                  c = 0;
                                                  while (1) {
                                                    g = (f + (c << 1)) | 0;
                                                    c = (c + 1) | 0;
                                                    h[g >> 1] =
                                                      (o(
                                                        (c << 16) >> 16,
                                                        25736
                                                      ) |
                                                        0) /
                                                      (d | 0);
                                                    if ((b | 0) != (c | 0)) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                  if ((b | 0) < 1) {
                                                    break l;
                                                  }
                                                  d = i[(a + 88) >> 2];
                                                  f = i[(a + 80) >> 2];
                                                  g = i[(a + 84) >> 2];
                                                  c = 0;
                                                  while (1) {
                                                    b = c << 2;
                                                    i[(b + g) >> 2] = 0;
                                                    i[(b + f) >> 2] = 0;
                                                    i[(b + d) >> 2] = 0;
                                                    c = (c + 1) | 0;
                                                    if (
                                                      (c | 0) <
                                                      i[(a + 28) >> 2]
                                                    ) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                }
                                                c = i[(a + 52) >> 2];
                                                d = i[(a + 56) >> 2];
                                                b = 0;
                                                a = 0;
                                                while (1) {
                                                  f = a << 1;
                                                  h[(f + d) >> 1] = 0;
                                                  h[(c + f) >> 1] = 0;
                                                  a = (a + 1) | 0;
                                                  if ((a | 0) != 64) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                                break a;
                                              case 33:
                                                i[(a + 144) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  36,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 34:
                                                i[c >> 2] = i[(a + 144) >> 2];
                                                b = 0;
                                                break a;
                                              case 36:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  39,
                                                  c
                                                ) | 0;
                                                i[c >> 2] =
                                                  (i[c >> 2] << 1) + 63;
                                                b = 0;
                                                break a;
                                              case 37:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  40,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 38:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  41,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 39:
                                                d = i[c >> 2];
                                                i[(a + 112) >> 2] = d;
                                                m: {
                                                  if ((d | 0) >= 42200) {
                                                    i[(a + 116) >> 2] = 17600;
                                                    b = -17600;
                                                    break m;
                                                  }
                                                  if ((d | 0) >= 27800) {
                                                    i[(a + 116) >> 2] = 9600;
                                                    b = -9600;
                                                    break m;
                                                  }
                                                  if ((d | 0) >= 20601) {
                                                    i[(a + 116) >> 2] = 5600;
                                                    b = -5600;
                                                    break m;
                                                  }
                                                  i[(a + 116) >> 2] = 1800;
                                                  b = -1800;
                                                }
                                                c = e;
                                                if (i[(a + 16) >> 2] == 80) {
                                                  i[(a + 116) >> 2] = 1800;
                                                  b = -1800;
                                                }
                                                i[(c + 28) >> 2] = b + d;
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  42,
                                                  (e + 28) | 0
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 40:
                                                i[c >> 2] = i[(a + 112) >> 2];
                                                b = 0;
                                                break a;
                                              case 41:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  44,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 42:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  45,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 103:
                                                break c;
                                              case 102:
                                                break d;
                                              case 101:
                                                break e;
                                              case 26:
                                                break f;
                                              case 97:
                                                break h;
                                              default:
                                                break b;
                                            }
                                          }
                                          if (i[(a + 20) >> 2] < 1) {
                                            b = 0;
                                            break a;
                                          }
                                          f = i[(a + 92) >> 2];
                                          b = 0;
                                          while (1) {
                                            g = d << 2;
                                            i[(g + c) >> 2] = i[(f + g) >> 2];
                                            d = (d + 1) | 0;
                                            if ((d | 0) < i[(a + 20) >> 2]) {
                                              continue;
                                            }
                                            break;
                                          }
                                          break a;
                                        }
                                        f = i[(a + 96) >> 2];
                                        b = 0;
                                        a = 0;
                                        while (1) {
                                          g = a << 1;
                                          h[(g + c) >> 1] = k[(f + g) >> 1];
                                          a = (a + 1) | 0;
                                          if ((d | 0) != (a | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        break a;
                                      }
                                      i[c >> 2] = i[(a + 140) >> 2];
                                      b = 0;
                                      break a;
                                    }
                                    i[(a + 100) >> 2] = c;
                                    b = 0;
                                    break a;
                                  }
                                  a = i[(a + 4) >> 2];
                                  J[i[(i[a >> 2] + 44) >> 2]](a, 105, c) | 0;
                                  b = 0;
                                  break a;
                                }
                                i[c >> 2] = i[(a + 44) >> 2];
                                b = 0;
                                break a;
                              }
                              i[(e + 4) >> 2] = b;
                              i[e >> 2] = 13123;
                              Y(i[3524], 13166, e);
                              b = -1;
                            }
                            H = (e + 32) | 0;
                            return b | 0;
                          }
                          function Ka(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              J = 0,
                              K = 0,
                              L = 0,
                              M = 0;
                            g = (H - 112) | 0;
                            H = g;
                            j = (a - (c << 1)) | 0;
                            G = $(a, (j + -6) | 0, 80);
                            i[g >> 2] = G;
                            I = $(a, (j + -4) | 0, 80);
                            i[(g + 4) >> 2] = I;
                            J = $(a, (j + -2) | 0, 80);
                            i[(g + 8) >> 2] = J;
                            K = $(a, j, 80);
                            i[(g + 12) >> 2] = K;
                            L = $(a, (j + 2) | 0, 80);
                            i[(g + 16) >> 2] = L;
                            M = $(a, (j + 4) | 0, 80);
                            i[(g + 20) >> 2] = M;
                            w = $(a, (j + 6) | 0, 80);
                            i[(g + 24) >> 2] = w;
                            B = w & 32767;
                            C = (w << 1) >> 16;
                            j = i[(g + 20) >> 2];
                            x = j & 32767;
                            d = i[(g + 16) >> 2];
                            s = d & 32767;
                            e = i[(g + 12) >> 2];
                            p = e & 32767;
                            l = i[(g + 8) >> 2];
                            t = l & 32767;
                            m = i[(g + 4) >> 2];
                            y = m & 32767;
                            f = i[g >> 2];
                            D = f & 32767;
                            z = (j << 1) >> 16;
                            u = (d << 1) >> 16;
                            q = (e << 1) >> 16;
                            v = (l << 1) >> 16;
                            A = (m << 1) >> 16;
                            E = (f << 1) >> 16;
                            while (1) {
                              f = o(F, 14);
                              F = (F + 1) | 0;
                              r = (o(F, 28) + g) | 0;
                              n = h[(f + 2432) >> 1];
                              l = h[(f + 2434) >> 1];
                              d = h[(f + 2436) >> 1];
                              j = h[(f + 2438) >> 1];
                              i[(r + 24) >> 2] =
                                (((((((((((((o(n, p) >> 15) + o(q, n)) | 0) +
                                  (o(l, s) >> 15)) |
                                  0) +
                                  o(l, u)) |
                                  0) +
                                  (o(d, x) >> 15)) |
                                  0) +
                                  o(d, z)) |
                                  0) +
                                  (o(j, B) >> 15)) |
                                  0) +
                                o(j, C);
                              e = h[(f + 2440) >> 1];
                              m = h[(f + 2442) >> 1];
                              f = h[(f + 2444) >> 1];
                              i[r >> 2] =
                                ((((((((((((o(j, E) + (o(j, D) >> 15)) | 0) +
                                  (o(e, y) >> 15)) |
                                  0) +
                                  o(e, A)) |
                                  0) +
                                  (o(m, t) >> 15)) |
                                  0) +
                                  o(m, v)) |
                                  0) +
                                  (o(f, p) >> 15)) |
                                  0) +
                                o(f, q);
                              i[(r + 20) >> 2] =
                                ((((((((((((((((o(n, v) + (o(n, t) >> 15)) |
                                  0) +
                                  (o(l, p) >> 15)) |
                                  0) +
                                  o(l, q)) |
                                  0) +
                                  (o(d, s) >> 15)) |
                                  0) +
                                  o(d, u)) |
                                  0) +
                                  (o(j, x) >> 15)) |
                                  0) +
                                  o(j, z)) |
                                  0) +
                                  (o(e, B) >> 15)) |
                                  0) +
                                o(e, C);
                              i[(r + 4) >> 2] =
                                ((((((((((((((((o(d, E) + (o(d, D) >> 15)) |
                                  0) +
                                  (o(j, y) >> 15)) |
                                  0) +
                                  o(j, A)) |
                                  0) +
                                  (o(e, t) >> 15)) |
                                  0) +
                                  o(e, v)) |
                                  0) +
                                  (o(m, p) >> 15)) |
                                  0) +
                                  o(m, q)) |
                                  0) +
                                  (o(f, s) >> 15)) |
                                  0) +
                                o(f, u);
                              i[(r + 16) >> 2] =
                                ((((((((((((((((((((o(n, A) + (o(n, y) >> 15)) |
                                  0) +
                                  (o(l, t) >> 15)) |
                                  0) +
                                  o(l, v)) |
                                  0) +
                                  (o(d, p) >> 15)) |
                                  0) +
                                  o(d, q)) |
                                  0) +
                                  (o(j, s) >> 15)) |
                                  0) +
                                  o(j, u)) |
                                  0) +
                                  (o(e, x) >> 15)) |
                                  0) +
                                  o(e, z)) |
                                  0) +
                                  (o(m, B) >> 15)) |
                                  0) +
                                o(m, C);
                              i[(r + 8) >> 2] =
                                ((((((((((((((((((((o(l, E) + (o(l, D) >> 15)) |
                                  0) +
                                  (o(d, y) >> 15)) |
                                  0) +
                                  o(d, A)) |
                                  0) +
                                  (o(j, t) >> 15)) |
                                  0) +
                                  o(j, v)) |
                                  0) +
                                  (o(e, p) >> 15)) |
                                  0) +
                                  o(e, q)) |
                                  0) +
                                  (o(m, s) >> 15)) |
                                  0) +
                                  o(m, u)) |
                                  0) +
                                  (o(f, x) >> 15)) |
                                  0) +
                                o(f, z);
                              i[(r + 12) >> 2] =
                                ((((((((((((((((((((((((o(n, E) +
                                  (o(n, D) >> 15)) |
                                  0) +
                                  (o(l, y) >> 15)) |
                                  0) +
                                  o(l, A)) |
                                  0) +
                                  (o(d, t) >> 15)) |
                                  0) +
                                  o(d, v)) |
                                  0) +
                                  (o(j, p) >> 15)) |
                                  0) +
                                  o(j, q)) |
                                  0) +
                                  (o(e, s) >> 15)) |
                                  0) +
                                  o(e, u)) |
                                  0) +
                                  (o(m, x) >> 15)) |
                                  0) +
                                  o(m, z)) |
                                  0) +
                                  (o(f, B) >> 15)) |
                                  0) +
                                o(f, C);
                              if ((F | 0) != 3) {
                                continue;
                              }
                              break;
                            }
                            j = 0;
                            e = (I | 0) > (G | 0);
                            l = e ? I : G;
                            d = (J | 0) > (l | 0);
                            f = d ? 2 : e;
                            d = d ? J : l;
                            e = (K | 0) > (d | 0);
                            f = e ? 3 : f;
                            d = e ? K : d;
                            e = (L | 0) > (d | 0);
                            f = e ? 4 : f;
                            d = e ? L : d;
                            e = (M | 0) > (d | 0);
                            f = e ? 5 : f;
                            d = e ? M : d;
                            e = (w | 0) > (d | 0);
                            F = e ? 6 : f;
                            l = i[(g + 28) >> 2];
                            e = e ? w : d;
                            d = (l | 0) > (e | 0);
                            m = i[(g + 32) >> 2];
                            l = d ? l : e;
                            e = (m | 0) > (l | 0);
                            p = i[(g + 36) >> 2];
                            m = e ? m : l;
                            l = (p | 0) > (m | 0);
                            q = i[(g + 40) >> 2];
                            p = l ? p : m;
                            m = (q | 0) > (p | 0);
                            f = i[(g + 44) >> 2];
                            q = m ? q : p;
                            p = (f | 0) > (q | 0);
                            n = i[(g + 48) >> 2];
                            f = p ? f : q;
                            q = (n | 0) > (f | 0);
                            s = i[(g + 52) >> 2];
                            n = q ? n : f;
                            f = (s | 0) > (n | 0);
                            t = i[(g + 56) >> 2];
                            s = f ? s : n;
                            n = (t | 0) > (s | 0);
                            u = i[(g + 60) >> 2];
                            t = n ? t : s;
                            s = (u | 0) > (t | 0);
                            v = i[(g - -64) >> 2];
                            u = s ? u : t;
                            t = (v | 0) > (u | 0);
                            r = i[(g + 68) >> 2];
                            v = t ? v : u;
                            u = (r | 0) > (v | 0);
                            x = i[(g + 72) >> 2];
                            r = u ? r : v;
                            v = (x | 0) > (r | 0);
                            y = i[(g + 76) >> 2];
                            x = v ? x : r;
                            r = (y | 0) > (x | 0);
                            z = i[(g + 80) >> 2];
                            y = r ? y : x;
                            x = (z | 0) > (y | 0);
                            A = i[(g + 84) >> 2];
                            z = x ? z : y;
                            y = (A | 0) > (z | 0);
                            w = i[(g + 88) >> 2];
                            A = y ? A : z;
                            z = (w | 0) > (A | 0);
                            B = i[(g + 92) >> 2];
                            w = z ? w : A;
                            A = (B | 0) > (w | 0);
                            C = i[(g + 96) >> 2];
                            B = A ? B : w;
                            w = (C | 0) > (B | 0);
                            D = i[(g + 100) >> 2];
                            C = w ? C : B;
                            B = (D | 0) > (C | 0);
                            E = i[(g + 104) >> 2];
                            D = B ? D : C;
                            C = (E | 0) > (D | 0);
                            E = i[(g + 108) >> 2] > ((C ? E : D) | 0);
                            D = E
                              ? 6
                              : C
                              ? 5
                              : B
                              ? 4
                              : w
                              ? 3
                              : A
                              ? 2
                              : z
                              ? 1
                              : y
                              ? 0
                              : x
                              ? 6
                              : r
                              ? 5
                              : v
                              ? 4
                              : u
                              ? 3
                              : t
                              ? 2
                              : s
                              ? 1
                              : n
                              ? 0
                              : f
                              ? 6
                              : q
                              ? 5
                              : p
                              ? 4
                              : m
                              ? 3
                              : l
                              ? 2
                              : e
                              ? 1
                              : d
                              ? 0
                              : F;
                            d = E
                              ? 3
                              : C
                              ? 3
                              : B
                              ? 3
                              : w
                              ? 3
                              : A
                              ? 3
                              : z
                              ? 3
                              : y
                              ? 3
                              : x
                              ? 2
                              : r
                              ? 2
                              : v
                              ? 2
                              : u
                              ? 2
                              : t
                              ? 2
                              : s
                              ? 2
                              : n
                              ? 2
                              : f | (q | (p | (m | (l | (d | e)))));
                            a: {
                              if (!d) {
                                while (1) {
                                  h[((j << 1) + b) >> 1] =
                                    k[
                                      (((((D + ((j - c) | 0)) << 1) + a) | 0) +
                                        -6) >>
                                        1
                                    ];
                                  j = (j + 1) | 0;
                                  if ((j | 0) != 80) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              e = (((D - c) | 0) + -6) | 0;
                              c = o((d + -1) | 0, 14);
                              d = h[(c + 2444) >> 1];
                              l = h[(c + 2442) >> 1];
                              m = h[(c + 2440) >> 1];
                              p = h[(c + 2438) >> 1];
                              q = h[(c + 2436) >> 1];
                              f = h[(c + 2434) >> 1];
                              n = h[(c + 2432) >> 1];
                              while (1) {
                                c = (((j + e) << 1) + a) | 0;
                                h[((j << 1) + b) >> 1] =
                                  (((o(d, h[(c + 12) >> 1]) +
                                    ((((((((((o(f, h[(c + 2) >> 1]) +
                                      o(n, h[c >> 1])) |
                                      0) +
                                      o(q, h[(c + 4) >> 1])) |
                                      0) +
                                      o(p, h[(c + 6) >> 1])) |
                                      0) +
                                      o(m, h[(c + 8) >> 1])) |
                                      0) +
                                      o(l, h[(c + 10) >> 1])) |
                                      0)) |
                                    0) +
                                    16384) >>>
                                  15;
                                j = (j + 1) | 0;
                                if ((j | 0) != 80) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (g + 112) | 0;
                          }
                          function Ia(a, b, c, d, e, f, g, j) {
                            var l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0;
                            z = ((j & 1) + j) | 0;
                            t = (c - b) | 0;
                            w = (t + 1) | 0;
                            j = w << 1;
                            n = (z + j) | 0;
                            A = ((n & 1) + n) | 0;
                            j = (A + j) | 0;
                            r = (((0 - j) & 3) + j) | 0;
                            s = w << 2;
                            j = (r + s) | 0;
                            x = (((0 - j) & 3) + j) | 0;
                            j = (x + (g << 2)) | 0;
                            B = (((0 - j) & 3) + j) | 0;
                            if ((g | 0) >= 1) {
                              while (1) {
                                j = l << 2;
                                i[(j + x) >> 2] = -1;
                                i[(j + B) >> 2] = 0;
                                i[(e + j) >> 2] = b;
                                l = (l + 1) | 0;
                                if ((l | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            p = (0 - c) | 0;
                            a: {
                              if ((p | 0) >= (d | 0)) {
                                break a;
                              }
                              l = p;
                              while (1) {
                                n = h[((l << 1) + a) >> 1];
                                j = n >> 31;
                                if ((j ^ (j + n)) < 16384) {
                                  l = (l + 1) | 0;
                                  if ((l | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                                break;
                              }
                              l = p;
                              while (1) {
                                C = 1;
                                j = ((l << 1) + a) | 0;
                                h[j >> 1] = h[j >> 1] >>> 1;
                                l = (l + 1) | 0;
                                if ((l | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            n = d >> 2;
                            b: {
                              if (n) {
                                l = (a - (b << 1)) | 0;
                                j = 0;
                                m = n;
                                while (1) {
                                  q = j;
                                  j = h[(l + 2) >> 1];
                                  u = o(j, j);
                                  j = h[l >> 1];
                                  u = (u + o(j, j)) | 0;
                                  j = h[(l + 4) >> 1];
                                  u = (u + o(j, j)) | 0;
                                  j = h[(l + 6) >> 1];
                                  j = (q + (((u + o(j, j)) >>> 6) | 0)) | 0;
                                  l = (l + 8) | 0;
                                  m = (m + -1) | 0;
                                  if (m) {
                                    continue;
                                  }
                                  break;
                                }
                                i[r >> 2] = j;
                                l = a;
                                j = n;
                                while (1) {
                                  m = h[(l + 2) >> 1];
                                  q = o(m, m);
                                  m = h[l >> 1];
                                  q = (q + o(m, m)) | 0;
                                  m = h[(l + 4) >> 1];
                                  q = (q + o(m, m)) | 0;
                                  m = h[(l + 6) >> 1];
                                  y = ((((q + o(m, m)) >>> 6) | 0) + y) | 0;
                                  l = (l + 8) | 0;
                                  j = (j + -1) | 0;
                                  if (j) {
                                    continue;
                                  }
                                  break;
                                }
                                break b;
                              }
                              i[r >> 2] = 0;
                            }
                            if ((c | 0) > (b | 0)) {
                              j = i[r >> 2];
                              l = b;
                              while (1) {
                                q = j;
                                j = l ^ -1;
                                m = h[((j << 1) + a) >> 1];
                                j = h[(((d + j) << 1) + a) >> 1];
                                j =
                                  (q +
                                    ((o(m, m) >>> 6) | 0) -
                                    (o(j, j) >>> 6)) |
                                  0;
                                j = (j | 0) > 0 ? j : 0;
                                i[(((r + ((l - b) << 2)) | 0) + 4) >> 2] = j;
                                l = (l + 1) | 0;
                                if ((l | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            D = wa(r, A, 32766, w);
                            c: {
                              if ((t | 0) < 0) {
                                break c;
                              }
                              if (n) {
                                q = ((p << 1) + a) | 0;
                                while (1) {
                                  l = (q + (v << 1)) | 0;
                                  m = 0;
                                  j = a;
                                  s = n;
                                  while (1) {
                                    m =
                                      (((((((o(
                                        h[(l + 2) >> 1],
                                        h[(j + 2) >> 1]
                                      ) +
                                        o(h[l >> 1], h[j >> 1])) |
                                        0) +
                                        o(h[(l + 4) >> 1], h[(j + 4) >> 1])) |
                                        0) +
                                        o(h[(l + 6) >> 1], h[(j + 6) >> 1])) >>
                                        6) +
                                        m) |
                                      0;
                                    l = (l + 8) | 0;
                                    j = (j + 8) | 0;
                                    s = (s + -1) | 0;
                                    if (s) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[(r + ((t - v) << 2)) >> 2] = m;
                                  j = (v | 0) != (t | 0);
                                  v = (v + 1) | 0;
                                  if (j) {
                                    continue;
                                  }
                                  break;
                                }
                                break c;
                              }
                              U(r, 0, s);
                            }
                            w = wa(r, z, 180, w);
                            if (!((C ^ 1) | ((p | 0) >= (d | 0)))) {
                              while (1) {
                                j = ((p << 1) + a) | 0;
                                h[j >> 1] = k[j >> 1] << 1;
                                p = (p + 1) | 0;
                                if ((p | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            d: {
                              if ((c | 0) < (b | 0)) {
                                break d;
                              }
                              p = (c | 0) > (b | 0) ? c : b;
                              c = (g + -1) | 0;
                              a = c << 2;
                              s = (a + e) | 0;
                              d = (a + x) | 0;
                              j = (a + B) | 0;
                              if ((g | 0) >= 2) {
                                l = b;
                                while (1) {
                                  a = l;
                                  l = (a - b) << 1;
                                  n = k[(l + z) >> 1];
                                  n = (o(n, n) << 16) >> 16;
                                  l = h[(l + A) >> 1];
                                  m = ((l << 16) + 65536) >> 16;
                                  e: {
                                    if (
                                      (o(n, h[j >> 1]) | 0) <=
                                      (o(m, h[d >> 1]) | 0)
                                    ) {
                                      break e;
                                    }
                                    i[d >> 2] = n;
                                    C = (l + 1) | 0;
                                    i[j >> 2] = C;
                                    i[s >> 2] = a;
                                    l = 0;
                                    while (1) {
                                      r = l << 2;
                                      q = (r + B) | 0;
                                      u = (r + x) | 0;
                                      if (
                                        (o(n, h[q >> 1]) | 0) <=
                                        (o(m, h[u >> 1]) | 0)
                                      ) {
                                        l = (l + 1) | 0;
                                        if ((c | 0) != (l | 0)) {
                                          continue;
                                        }
                                        break e;
                                      }
                                      break;
                                    }
                                    m = c;
                                    if ((c | 0) > (l | 0)) {
                                      while (1) {
                                        v = m << 2;
                                        m = (m + -1) | 0;
                                        t = m << 2;
                                        i[(v + x) >> 2] = i[(t + x) >> 2];
                                        i[(v + B) >> 2] = i[(t + B) >> 2];
                                        i[(e + v) >> 2] = i[(e + t) >> 2];
                                        if ((m | 0) > (l | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    i[u >> 2] = n;
                                    i[q >> 2] = C;
                                    i[(e + r) >> 2] = a;
                                  }
                                  l = (a + 1) | 0;
                                  if ((a | 0) != (p | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break d;
                              }
                              l = b;
                              while (1) {
                                a = (l - b) << 1;
                                c = k[(a + z) >> 1];
                                c = (o(c, c) << 16) >> 16;
                                a = h[(a + A) >> 1];
                                if (
                                  (o(c, h[j >> 1]) | 0) >
                                  (o(h[d >> 1], ((a << 16) + 65536) >> 16) | 0)
                                ) {
                                  i[d >> 2] = c;
                                  i[j >> 2] = a + 1;
                                  i[s >> 2] = l;
                                }
                                a = (l | 0) != (p | 0);
                                l = (l + 1) | 0;
                                if (a) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if (!(!f | ((g | 0) < 1))) {
                              a = y >>> 0 > 65535;
                              c = a << 3;
                              j = c | 4;
                              d = c;
                              a = a ? (y >>> 16) | 0 : y;
                              c = a >>> 0 > 255;
                              d = c ? j : d;
                              a = c ? (a >>> 8) | 0 : a;
                              c = a >>> 0 > 15;
                              a =
                                (c ? d | 2 : d) |
                                ((c ? (a >>> 4) | 0 : a) >>> 0 > 3);
                              c = a << 1;
                              d = (a << 16) >> 16;
                              c =
                                (((d | 0) > 6
                                  ? y >> (c + -12)
                                  : y << (12 - c)) <<
                                  16) >>
                                16;
                              c =
                                (((o(
                                  (((o((o(c, 16816) + -827523072) >> 16, c) <<
                                    2) &
                                    -65536) +
                                    1387593728) >>
                                    16,
                                  c
                                ) <<
                                  2) &
                                  -65536) +
                                  238157824) >>
                                16;
                              a = (13 - a) | 0;
                              l =
                                (((d | 0) < 13 ? c >> a : c << (0 - a)) <<
                                  16) >>
                                16;
                              j = 0;
                              while (1) {
                                n = (i[((j << 2) + e) >> 2] - b) << 1;
                                a = h[(n + A) >> 1] << D;
                                c = a >>> 0 > 65535;
                                d = c << 3;
                                p = d | 4;
                                m = d;
                                c = c ? (a >>> 16) | 0 : a;
                                d = c >>> 0 > 255;
                                m = d ? p : m;
                                c = d ? (c >>> 8) | 0 : c;
                                d = c >>> 0 > 15;
                                c =
                                  (d ? m | 2 : m) |
                                  ((d ? (c >>> 4) | 0 : c) >>> 0 > 3);
                                d = c << 1;
                                m = a >> (d + -12);
                                a = a << (12 - d);
                                d = (c << 16) >> 16;
                                a = (((d | 0) > 6 ? m : a) << 16) >> 16;
                                a =
                                  (((o(
                                    (((o((o(a, 16816) + -827523072) >> 16, a) <<
                                      2) &
                                      -65536) +
                                      1387593728) >>
                                      16,
                                    a
                                  ) <<
                                    2) &
                                    -65536) +
                                    238157824) >>
                                  16;
                                c = (13 - c) | 0;
                                a =
                                  ((h[(n + z) >> 1] << w) /
                                    (((o(
                                      l,
                                      (((d | 0) < 13 ? a >> c : a << (0 - c)) <<
                                        16) >>
                                        16
                                    ) >>
                                      6) +
                                      10) |
                                      0)) |
                                  0;
                                h[((j << 1) + f) >> 1] = a & 32768 ? 0 : a;
                                j = (j + 1) | 0;
                                if ((j | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function ta(a, b, c, d, e) {
                            var f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0;
                            m = (((0 - e) & 3) + e) | 0;
                            q = ((b | 0) / 2) | 0;
                            p = (q + 1) | 0;
                            e = p << 2;
                            j = (m + e) | 0;
                            g = (((0 - j) & 3) + j) | 0;
                            i[g >> 2] = 8192;
                            i[m >> 2] = 8192;
                            t = (e + g) | 0;
                            a: {
                              if ((b | 0) < 2) {
                                break a;
                              }
                              e = (m + 4) | 0;
                              f = (g + 4) | 0;
                              b: {
                                if (
                                  !((f >>> 0 >= j >>> 0) | (m >>> 0 >= t >>> 0))
                                ) {
                                  j = m;
                                  l = g;
                                  while (1) {
                                    r = h[((((n ^ -1) + b) << 1) + a) >> 1];
                                    s = h[((n << 1) + a) >> 1];
                                    i[f >> 2] = ((r + s) | 0) - i[l >> 2];
                                    i[e >> 2] = i[j >> 2] + ((s - r) | 0);
                                    e = (e + 4) | 0;
                                    j = (j + 4) | 0;
                                    f = (f + 4) | 0;
                                    l = (l + 4) | 0;
                                    n = (n + 1) | 0;
                                    if ((q | 0) != (n | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break b;
                                }
                                l = i[m >> 2];
                                j = g;
                                while (1) {
                                  r = h[((((n ^ -1) + b) << 1) + a) >> 1];
                                  s = h[((n << 1) + a) >> 1];
                                  i[f >> 2] = ((r + s) | 0) - i[j >> 2];
                                  l = (((s - r) | 0) + l) | 0;
                                  i[e >> 2] = l;
                                  e = (e + 4) | 0;
                                  f = (f + 4) | 0;
                                  j = (j + 4) | 0;
                                  n = (n + 1) | 0;
                                  if ((q | 0) != (n | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if ((b | 0) <= 1) {
                                break a;
                              }
                              a = 0;
                              e = m;
                              f = g;
                              while (1) {
                                i[f >> 2] = (i[f >> 2] + 2) >> 2;
                                i[e >> 2] = (i[e >> 2] + 2) >> 2;
                                e = (e + 4) | 0;
                                f = (f + 4) | 0;
                                a = (a + 1) | 0;
                                if ((q | 0) != (a | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            a = q << 2;
                            e = (a + g) | 0;
                            i[e >> 2] = (i[e >> 2] + 4) >> 3;
                            a = (a + m) | 0;
                            i[a >> 2] = (i[a >> 2] + 4) >> 3;
                            c: {
                              if ((b | 0) < -1) {
                                break c;
                              }
                              x = (t + (t & 1)) | 0;
                              a = (x + (p << 1)) | 0;
                              z = ((a & 1) + a) | 0;
                              e = 0;
                              while (1) {
                                a = e << 1;
                                f = e << 2;
                                h[(a + x) >> 1] = i[(f + g) >> 2];
                                h[(a + z) >> 1] = i[(f + m) >> 2];
                                a = (e | 0) == (q | 0);
                                e = (e + 1) | 0;
                                if (!a) {
                                  continue;
                                }
                                break;
                              }
                              if ((b | 0) < 1) {
                                break c;
                              }
                              g = 16384;
                              C = (q + -1) << 1;
                              A = (b | 0) < 4;
                              m = 0;
                              while (1) {
                                s = w & 1 ? z : x;
                                t = (C + s) | 0;
                                r = h[t >> 1];
                                u = ((q << 1) + s) | 0;
                                p = h[u >> 1];
                                a = (g << 16) >> 16 < 16383 ? g : 16383;
                                f = (a << 16) >> 16 > -16383 ? a : -16383;
                                n = (f << 16) >> 16;
                                j = (p + ((o(n, r) - -8192) >> 14)) | 0;
                                a = 16384;
                                e = 2;
                                if (!A) {
                                  while (1) {
                                    l =
                                      (((o(n, (f << 16) >> 16) >>> 13) | 0) -
                                        a) |
                                      0;
                                    j =
                                      (((o(
                                        h[(((q - e) << 1) + s) >> 1],
                                        (l << 16) >> 16
                                      ) -
                                        -8192) >>
                                        14) +
                                        j) |
                                      0;
                                    v = (e | 0) != (q | 0);
                                    a = f;
                                    f = l;
                                    e = (e + 1) | 0;
                                    if (v) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                d: {
                                  if ((m << 16) >> 16 < -16384) {
                                    break d;
                                  }
                                  D = ((w << 1) + c) | 0;
                                  while (1) {
                                    e = 2;
                                    a = (g << 16) >> 16;
                                    a = o(
                                      (1073741824 -
                                        (o((o(a, a) << 2) >> 16, 56e3) &
                                          -65536)) >>
                                        16,
                                      d
                                    );
                                    a =
                                      (g -
                                        ((j + 511) >>> 0 < 1023
                                          ? ((((a << 1) >> 16) + 1) >>> 1) | 0
                                          : (a >>> 15) | 0)) |
                                      0;
                                    m = (a << 16) >> 16;
                                    v = (p << 16) >> 16;
                                    a = (m | 0) < 16383 ? a : 16383;
                                    f = (a << 16) >> 16 > -16383 ? a : -16383;
                                    p = (f << 16) >> 16;
                                    a = (v + ((o(p, r) - -8192) >> 14)) | 0;
                                    n = 16384;
                                    if (!A) {
                                      while (1) {
                                        l =
                                          (((o(p, (f << 16) >> 16) >>> 13) |
                                            0) -
                                            n) |
                                          0;
                                        a =
                                          (((o(
                                            h[(((q - e) << 1) + s) >> 1],
                                            (l << 16) >> 16
                                          ) -
                                            -8192) >>
                                            14) +
                                            a) |
                                          0;
                                        y = (e | 0) != (q | 0);
                                        n = f;
                                        f = l;
                                        e = (e + 1) | 0;
                                        if (y) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    if (!((a ^ j) & 1879048192 ? 0 : j)) {
                                      p = 0;
                                      e: {
                                        if ((b | 0) <= 3) {
                                          while (1) {
                                            l =
                                              ((((((g << 16) >> 16) << 15) +
                                                32768) >>>
                                                16) +
                                                (((((m << 16) >> 16) << 15) +
                                                  32768) >>>
                                                  16)) |
                                              0;
                                            a =
                                              (l << 16) >> 16 < 16383
                                                ? l
                                                : 16383;
                                            e =
                                              (((o(
                                                (((a << 16) >> 16 > -16383
                                                  ? a
                                                  : -16383) <<
                                                  16) >>
                                                  16,
                                                r
                                              ) -
                                                -8192) >>
                                                14) +
                                                v) |
                                              0;
                                            a =
                                              !j |
                                              (((e ^ j) & 1879048192) != 0);
                                            j = a ? j : e;
                                            g = a ? g : l;
                                            m = a ? l : m;
                                            a = (p | 0) == 10;
                                            p = (p + 1) | 0;
                                            if (!a) {
                                              continue;
                                            }
                                            break e;
                                          }
                                        }
                                        while (1) {
                                          l =
                                            ((((((g << 16) >> 16) << 15) +
                                              32768) >>>
                                              16) +
                                              (((((m << 16) >> 16) << 15) +
                                                32768) >>>
                                                16)) |
                                            0;
                                          a =
                                            (l << 16) >> 16 < 16383 ? l : 16383;
                                          f =
                                            (a << 16) >> 16 > -16383
                                              ? a
                                              : -16383;
                                          u = (f << 16) >> 16;
                                          a =
                                            (((o(u, r) - -8192) >> 14) + v) | 0;
                                          e = 2;
                                          n = 16384;
                                          while (1) {
                                            t =
                                              (((o(u, (f << 16) >> 16) >>> 13) |
                                                0) -
                                                n) |
                                              0;
                                            a =
                                              (((o(
                                                h[(((q - e) << 1) + s) >> 1],
                                                (t << 16) >> 16
                                              ) -
                                                -8192) >>
                                                14) +
                                                a) |
                                              0;
                                            y = (e | 0) != (q | 0);
                                            n = f;
                                            f = t;
                                            e = (e + 1) | 0;
                                            if (y) {
                                              continue;
                                            }
                                            break;
                                          }
                                          e =
                                            !j | (((a ^ j) & 1879048192) != 0);
                                          g = e ? g : l;
                                          m = e ? l : m;
                                          j = e ? j : a;
                                          a = (p | 0) == 10;
                                          p = (p + 1) | 0;
                                          if (!a) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      B = (B + 1) | 0;
                                      j = (l << 16) >> 16 < 0;
                                      a =
                                        (((j ? l : (0 - l) | 0) << 16) +
                                          1073741824) >>
                                        17;
                                      e =
                                        (o(
                                          (((o(
                                            ((o(a, 1486) >> 13) + 2242) | 0,
                                            a
                                          ) <<
                                            3) &
                                            -65536) +
                                            1079312384) >>
                                            16,
                                          a
                                        ) <<
                                          3) >>
                                        16;
                                      a = e << 13;
                                      f = a >>> 0 > 65535;
                                      g = f << 3;
                                      e = f ? (e >>> 3) & 65535 : a;
                                      f = e >>> 0 > 255;
                                      g = f ? g | 4 : g;
                                      e = f ? (e >>> 8) | 0 : e;
                                      f = e >>> 0 > 15;
                                      e =
                                        (f ? g | 2 : g) |
                                        ((f ? (e >>> 4) | 0 : e) >>> 0 > 3);
                                      f = e << 1;
                                      g = a >> (f + -12);
                                      a = a << (12 - f);
                                      f = (e << 16) >> 16;
                                      a = (((f | 0) > 6 ? g : a) << 16) >> 16;
                                      a =
                                        (((o(
                                          (((o(
                                            (o(a, 16816) + -827523072) >> 16,
                                            a
                                          ) <<
                                            2) &
                                            -65536) +
                                            1387593728) >>
                                            16,
                                          a
                                        ) <<
                                          2) &
                                          -65536) +
                                          238157824) >>
                                        16;
                                      e = (13 - e) | 0;
                                      a = (f | 0) < 13 ? a >> e : a << (0 - e);
                                      h[D >> 1] = j ? (25736 - a) | 0 : a;
                                      g = l;
                                      break d;
                                    }
                                    if ((m | 0) < -16384) {
                                      g = m;
                                    } else {
                                      r = h[t >> 1];
                                      p = k[u >> 1];
                                      g = m;
                                      j = a;
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                w = (w + 1) | 0;
                                if ((w | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return B;
                          }
                          function xb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0;
                            d = (H - 32) | 0;
                            H = d;
                            a: {
                              b: {
                                switch ((b + -3) | 0) {
                                  case 98:
                                    if (i[(a + 16) >> 2] < 1) {
                                      break a;
                                    }
                                    b = 0;
                                    while (1) {
                                      f = i[(a + 12) >> 2];
                                      h[((b << 1) + c) >> 1] = Z(
                                        (i[(a + 76) >> 2] + (o(f, b) << 1)) | 0,
                                        f
                                      );
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 16) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 0:
                                    i[c >> 2] = i[(a + 8) >> 2];
                                    break a;
                                  case 3:
                                  case 5:
                                    b = i[c >> 2];
                                    i[(a + 212) >> 2] = b;
                                    i[(a + 208) >> 2] = b;
                                    break a;
                                  case 4:
                                  case 6:
                                    i[c >> 2] = i[(a + 208) >> 2];
                                    break a;
                                  case 9:
                                    i[(a + 152) >> 2] = i[c >> 2];
                                    break a;
                                  case 10:
                                    i[c >> 2] = i[(a + 152) >> 2];
                                    break a;
                                  case 27:
                                    i[(a + 160) >> 2] = i[c >> 2];
                                    break a;
                                  case 28:
                                    i[c >> 2] = i[(a + 160) >> 2];
                                    break a;
                                  case 31:
                                    i[(a + 164) >> 2] = i[c >> 2];
                                    break a;
                                  case 32:
                                    i[c >> 2] = i[(a + 164) >> 2];
                                    break a;
                                  case 29:
                                    b = i[c >> 2];
                                    i[(a + 172) >> 2] = b;
                                    i[(a + 152) >> 2] = (b | 0) != 0;
                                    if (!b) {
                                      break a;
                                    }
                                    i[(d + 28) >> 2] = 10;
                                    e = i[c >> 2];
                                    while (1) {
                                      c: {
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          4,
                                          (d + 28) | 0
                                        ) | 0;
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          19,
                                          (d + 24) | 0
                                        ) | 0;
                                        c = i[(d + 28) >> 2];
                                        if (i[(d + 24) >> 2] <= (e | 0)) {
                                          b = c;
                                          break c;
                                        }
                                        b = (c + -1) | 0;
                                        i[(d + 28) >> 2] = b;
                                        if ((c | 0) > 0) {
                                          continue;
                                        }
                                      }
                                      break;
                                    }
                                    e = 0;
                                    m[(d + 20) >> 2] =
                                      ((b | 0) > 0 ? b : 0) | 0;
                                    J[i[(i[a >> 2] + 44) >> 2]](
                                      a,
                                      14,
                                      (d + 20) | 0
                                    ) | 0;
                                    i[(a + 176) >> 2] = 0;
                                    i[(a + 180) >> 2] = 0;
                                    i[(a + 184) >> 2] = 0;
                                    break a;
                                  case 30:
                                    i[c >> 2] = i[(a + 172) >> 2];
                                    break a;
                                  case 11:
                                    i[(a + 144) >> 2] = i[c >> 2];
                                    break a;
                                  case 12:
                                    i[c >> 2] = i[(a + 144) >> 2];
                                    break a;
                                  case 1:
                                    b = i[c >> 2];
                                    b = (b | 0) > 0 ? b : 0;
                                    b =
                                      i[
                                        (((i[i[a >> 2] >> 2] +
                                          (((b | 0) < 10 ? b : 10) << 2)) |
                                          0) +
                                          96) >>
                                          2
                                      ];
                                    i[(a + 212) >> 2] = b;
                                    i[(a + 208) >> 2] = b;
                                    break a;
                                  case 13:
                                    b = a;
                                    a = i[c >> 2];
                                    i[(b + 188) >> 2] = (a | 0) > 0 ? a : 0;
                                    break a;
                                  case 14:
                                    i[c >> 2] = i[(a + 188) >> 2];
                                    break a;
                                  case 15:
                                    i[(d + 28) >> 2] = 10;
                                    b = i[c >> 2];
                                    while (1) {
                                      d: {
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          4,
                                          (d + 28) | 0
                                        ) | 0;
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          19,
                                          (d + 24) | 0
                                        ) | 0;
                                        if (i[(d + 24) >> 2] <= (b | 0)) {
                                          break d;
                                        }
                                        c = i[(d + 28) >> 2];
                                        i[(d + 28) >> 2] = c + -1;
                                        if ((c | 0) > 0) {
                                          continue;
                                        }
                                      }
                                      break;
                                    }
                                    break a;
                                  case 16:
                                    b = i[(a + 192) >> 2];
                                    e =
                                      i[
                                        (i[(a + 204) >> 2] +
                                          (i[(a + 208) >> 2] << 2)) >>
                                          2
                                      ];
                                    if (e) {
                                      i[c >> 2] =
                                        (o(b, i[(e + 52) >> 2]) | 0) /
                                        i[(a + 8) >> 2];
                                      e = 0;
                                      break a;
                                    }
                                    i[c >> 2] = (o(b, 5) | 0) / i[(a + 8) >> 2];
                                    e = 0;
                                    break a;
                                  case 21:
                                    i[(a + 192) >> 2] = i[c >> 2];
                                    break a;
                                  case 22:
                                    i[c >> 2] = i[(a + 192) >> 2];
                                    break a;
                                  case 23:
                                    i[(a + 4) >> 2] = 1;
                                    i[(a + 40) >> 2] = 1;
                                    b = i[(a + 24) >> 2];
                                    e: {
                                      if ((b | 0) < 1) {
                                        break e;
                                      }
                                      e = (b + 1) | 0;
                                      f = i[(a + 96) >> 2];
                                      c = 0;
                                      while (1) {
                                        g = (f + (c << 1)) | 0;
                                        c = (c + 1) | 0;
                                        h[g >> 1] =
                                          (o((c << 16) >> 16, 25736) | 0) /
                                          (e | 0);
                                        if ((b | 0) != (c | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      if ((b | 0) < 1) {
                                        break e;
                                      }
                                      e = i[(a + 108) >> 2];
                                      f = i[(a + 112) >> 2];
                                      g = i[(a + 104) >> 2];
                                      j = i[(a + 116) >> 2];
                                      b = 0;
                                      while (1) {
                                        c = b << 2;
                                        i[(c + j) >> 2] = 0;
                                        i[(c + g) >> 2] = 0;
                                        i[(c + f) >> 2] = 0;
                                        i[(c + e) >> 2] = 0;
                                        b = (b + 1) | 0;
                                        if ((b | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    b = i[(a + 8) >> 2];
                                    e = (b + i[(a + 32) >> 2]) | 0;
                                    if ((e | 0) >= 0) {
                                      f = i[(a + 72) >> 2];
                                      g = i[(a + 80) >> 2];
                                      c = 0;
                                      while (1) {
                                        j = c << 1;
                                        h[(j + g) >> 1] = 0;
                                        h[(f + j) >> 1] = 0;
                                        j = (c | 0) == (e | 0);
                                        c = (c + 1) | 0;
                                        if (!j) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    e = 0;
                                    c = i[(a + 20) >> 2];
                                    if ((c | 0) <= (b | 0)) {
                                      break a;
                                    }
                                    f = i[(a + 68) >> 2];
                                    a = (c - b) | 0;
                                    U(f, 0, ((a | 0) > 1 ? a : 1) << 1);
                                    break a;
                                  case 33:
                                    i[(a + 200) >> 2] = i[c >> 2];
                                    break a;
                                  case 34:
                                    i[c >> 2] = i[(a + 200) >> 2];
                                    break a;
                                  case 36:
                                    i[c >> 2] =
                                      i[(a + 20) >> 2] - i[(a + 8) >> 2];
                                    break a;
                                  case 37:
                                    b = a;
                                    a = i[c >> 2];
                                    i[(b + 196) >> 2] = (a | 0) < 100 ? a : 100;
                                    H = (d + 32) | 0;
                                    return 0;
                                  case 38:
                                    i[c >> 2] = i[(a + 196) >> 2];
                                    break a;
                                  case 39:
                                    i[(a + 156) >> 2] = i[c >> 2];
                                    break a;
                                  case 40:
                                    i[c >> 2] = i[(a + 156) >> 2];
                                    break a;
                                  case 41:
                                    i[(a + 220) >> 2] = i[c >> 2];
                                    break a;
                                  case 42:
                                    i[c >> 2] = i[(a + 220) >> 2];
                                    break a;
                                  case 97:
                                    if (i[(a + 16) >> 2] < 1) {
                                      break a;
                                    }
                                    f = i[(a + 132) >> 2];
                                    b = 0;
                                    while (1) {
                                      g = b << 2;
                                      i[(g + c) >> 2] = i[(f + g) >> 2];
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 16) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 26:
                                    i[c >> 2] = i[(a + 148) >> 2];
                                    break a;
                                  case 101:
                                    i[(a + 136) >> 2] = c;
                                    break a;
                                  case 102:
                                    i[(a + 216) >> 2] = i[c >> 2];
                                    break a;
                                  case 103:
                                    i[c >> 2] = i[(a + 64) >> 2];
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 12742;
                              Y(i[3524], 12828, d);
                              e = -1;
                            }
                            H = (d + 32) | 0;
                            return e | 0;
                          }
                          function sb(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0;
                            q = (H - 32) | 0;
                            H = q;
                            a: {
                              b: {
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                while (1) {
                                  j = e << 1;
                                  h[(j + b) >> 1] = k[(a + j) >> 1];
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                j = h[b >> 1];
                                l = q;
                                m = (c + -1) | 0;
                                e = 25736;
                                c: {
                                  if (!m) {
                                    break c;
                                  }
                                  e = k[(b + 2) >> 1];
                                }
                                e = (e - j) | 0;
                                h[l >> 1] =
                                  81920 /
                                  (((((e << 16) >> 16 < (j | 0) ? e : j) <<
                                    16) +
                                    19660800) >>
                                    16);
                                e = 1;
                                if ((c | 0) != 1) {
                                  while (1) {
                                    p = e << 1;
                                    j = (p + b) | 0;
                                    r = k[j >> 1];
                                    n = ((r - k[(j + -2) >> 1]) << 16) >> 16;
                                    j = (e + 1) | 0;
                                    e =
                                      (((e | 0) != (m | 0)
                                        ? k[((j << 1) + b) >> 1]
                                        : 25736) -
                                        r) |
                                      0;
                                    h[(q + p) >> 1] =
                                      81920 /
                                      (((((e << 16) >> 16 < (n | 0) ? e : n) <<
                                        16) +
                                        19660800) >>
                                        16);
                                    e = j;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                e = 0;
                                while (1) {
                                  j = ((e << 1) + b) | 0;
                                  e = (e + 1) | 0;
                                  h[j >> 1] = k[j >> 1] - (e << 11);
                                  if ((c | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                r = 2147483647;
                                n = 0;
                                j = 8848;
                                while (1) {
                                  m = 0;
                                  e = j;
                                  p = 0;
                                  while (1) {
                                    l = m;
                                    m =
                                      ((k[((p << 1) + b) >> 1] -
                                        (g[e | 0] << 5)) <<
                                        16) >>
                                      16;
                                    m = (l + o(m, m)) | 0;
                                    e = (e + 1) | 0;
                                    p = (p + 1) | 0;
                                    if ((p | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  e = (m | 0) < (r | 0);
                                  n = e ? s : n;
                                  r = e ? m : r;
                                  j = (c + j) | 0;
                                  s = (s + 1) | 0;
                                  if ((s | 0) != 64) {
                                    continue;
                                  }
                                  break;
                                }
                                j = o(c, n);
                                e = 0;
                                while (1) {
                                  m = ((e << 1) + b) | 0;
                                  h[m >> 1] =
                                    k[m >> 1] -
                                    (g[(((e + j) | 0) + 8848) | 0] << 5);
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                W(d, n, 6);
                                e = 0;
                                if ((c | 0) <= 0) {
                                  break a;
                                }
                                while (1) {
                                  j = ((e << 1) + b) | 0;
                                  h[j >> 1] = k[j >> 1] << 1;
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              W(d, 0, 6);
                            }
                            v = k[b >> 1];
                            w = k[(b + 8) >> 1];
                            x = k[(b + 6) >> 1];
                            i = k[(b + 4) >> 1];
                            y = k[(b + 2) >> 1];
                            p = 2147483647;
                            n = 0;
                            e = 9488;
                            j = h[(q + 8) >> 1];
                            r = h[(q + 6) >> 1];
                            s = h[(q + 4) >> 1];
                            t = h[(q + 2) >> 1];
                            u = h[q >> 1];
                            m = 0;
                            while (1) {
                              f = ((v - (g[e | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                ((o(u, f & 32767) >> 15) +
                                  o(u, (f << 1) >> 16)) |
                                0;
                              f = ((y - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(t, f & 32767) >> 15)) | 0) +
                                  o(t, (f << 1) >> 16)) |
                                0;
                              f = ((i - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(s, f & 32767) >> 15)) | 0) +
                                  o(s, (f << 1) >> 16)) |
                                0;
                              f = ((x - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(r, f & 32767) >> 15)) | 0) +
                                  o(r, (f << 1) >> 16)) |
                                0;
                              f = ((w - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(j, f & 32767) >> 15)) | 0) +
                                  o(j, (f << 1) >> 16)) |
                                0;
                              f = (l | 0) < (p | 0);
                              p = f ? l : p;
                              n = f ? m : n;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(n, 5);
                            h[b >> 1] = k[b >> 1] - (g[(e + 9488) | 0] << 5);
                            h[(b + 2) >> 1] =
                              k[(b + 2) >> 1] - (g[(e + 9489) | 0] << 5);
                            h[(b + 4) >> 1] =
                              k[(b + 4) >> 1] - (g[(e + 9490) | 0] << 5);
                            h[(b + 6) >> 1] =
                              k[(b + 6) >> 1] - (g[(e + 9491) | 0] << 5);
                            h[(b + 8) >> 1] =
                              k[(b + 8) >> 1] - (g[(e + 9492) | 0] << 5);
                            W(d, n, 6);
                            y = k[(b + 10) >> 1];
                            j = k[(b + 18) >> 1];
                            r = k[(b + 16) >> 1];
                            s = k[(b + 14) >> 1];
                            t = k[(b + 12) >> 1];
                            p = 2147483647;
                            n = 0;
                            e = 10128;
                            u = h[(q + 18) >> 1];
                            f = h[(q + 16) >> 1];
                            v = h[(q + 14) >> 1];
                            w = h[(q + 12) >> 1];
                            x = h[(q + 10) >> 1];
                            m = 0;
                            while (1) {
                              i = ((y - (g[e | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                ((o(x, i & 32767) >> 15) +
                                  o(x, (i << 1) >> 16)) |
                                0;
                              i = ((t - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(w, i & 32767) >> 15)) | 0) +
                                  o(w, (i << 1) >> 16)) |
                                0;
                              i = ((s - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(v, i & 32767) >> 15)) | 0) +
                                  o(v, (i << 1) >> 16)) |
                                0;
                              i = ((r - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(f, i & 32767) >> 15)) | 0) +
                                  o(f, (i << 1) >> 16)) |
                                0;
                              i = ((j - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(u, i & 32767) >> 15)) | 0) +
                                  o(u, (i << 1) >> 16)) |
                                0;
                              i = (l | 0) < (p | 0);
                              p = i ? l : p;
                              n = i ? m : n;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(n, 5);
                            h[(b + 18) >> 1] = j - (g[(e + 10132) | 0] << 5);
                            h[(b + 16) >> 1] = r - (g[(e + 10131) | 0] << 5);
                            h[(b + 14) >> 1] = s - (g[(e + 10130) | 0] << 5);
                            h[(b + 12) >> 1] = t - (g[(e + 10129) | 0] << 5);
                            h[(b + 10) >> 1] =
                              k[(b + 10) >> 1] - (g[(e + 10128) | 0] << 5);
                            W(d, n, 6);
                            e = 0;
                            d: {
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = ((e << 1) + b) | 0;
                                h[d >> 1] = (h[d >> 1] + 1) >>> 1;
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              e = 0;
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = e << 1;
                                j = (d + b) | 0;
                                h[j >> 1] = k[(a + d) >> 1] - k[j >> 1];
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (q + 32) | 0;
                          }
                          function Ja(a, b, c, d, e, f) {
                            var g = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            r = ((f & 1) + f) | 0;
                            Ka(a, r, d);
                            f = 0;
                            j = (r + (c << 1)) | 0;
                            Ka(a, j, (d | 0) > 40 ? d << 1 : (0 - d) | 0);
                            t = 1;
                            a: {
                              if ((c | 0) <= 0) {
                                break a;
                              }
                              b: {
                                while (1) {
                                  i = h[((f << 1) + a) >> 1];
                                  g = i >> 31;
                                  if ((g ^ (g + i)) > 16383) {
                                    break b;
                                  }
                                  f = (f + 1) | 0;
                                  if ((f | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              f = 0;
                              while (1) {
                                g = ((f << 1) + a) | 0;
                                h[g >> 1] = h[g >> 1] >>> 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              f = c << 1;
                              g = (f | 0) > 1 ? f : 1;
                              t = 0;
                              f = 0;
                              while (1) {
                                i = (r + (f << 1)) | 0;
                                h[i >> 1] = h[i >> 1] >>> 1;
                                f = (f + 1) | 0;
                                if ((g | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            p = $(r, r, c);
                            i = $(j, j, c);
                            f = ($(a, a, c) + 1) | 0;
                            g = f >>> 0 > 65535;
                            l = g << 3;
                            q = l | 4;
                            n = l;
                            g = g ? (f >>> 16) | 0 : f;
                            l = g >>> 0 > 255;
                            m = l ? q : n;
                            g = l ? (g >>> 8) | 0 : g;
                            l = g >>> 0 > 15;
                            g =
                              (l ? m | 2 : m) |
                              ((l ? (g >>> 4) | 0 : g) >>> 0 > 3);
                            l = g << 1;
                            i = (i + 1e3) | 0;
                            m = i >>> 0 > 65535;
                            n = m << 3;
                            s = n | 4;
                            q = n;
                            m = m ? (i >>> 16) | 0 : i;
                            n = m >>> 0 > 255;
                            s = n ? s : q;
                            m = n ? (m >>> 8) | 0 : m;
                            n = m >>> 0 > 15;
                            m =
                              (n ? s | 2 : s) |
                              ((n ? (m >>> 4) | 0 : m) >>> 0 > 3);
                            n = m << 1;
                            q = f >> (l + -12);
                            f = f << (12 - l);
                            l = (g << 16) >> 16;
                            f = (((l | 0) > 6 ? q : f) << 16) >> 16;
                            f =
                              (((o(
                                (((o((o(f, 16816) + -827523072) >> 16, f) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                f
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            g = (13 - g) | 0;
                            l = ((l | 0) < 13 ? f >> g : f << (0 - g)) << 16;
                            g = l >> 16;
                            s = ((((g + 32) >>> 6) | 0) + 1) | 0;
                            f = i >> (n + -12);
                            n = i << (12 - n);
                            i = (m << 16) >> 16;
                            f = (((i | 0) > 6 ? f : n) << 16) >> 16;
                            f =
                              (((o(
                                (((o((o(f, 16816) + -827523072) >> 16, f) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                f
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            m = (13 - m) | 0;
                            f = (i | 0) < 13 ? f >> m : f << (0 - m);
                            u = (f << 16) >> 10 < (g | 0) ? s : f;
                            i = $(r, a, c);
                            f = $(j, a, c);
                            n = (f | 0) > 0 ? f : 0;
                            m = 16384;
                            f = (p + 1e3) | 0;
                            j = f >>> 0 > 65535;
                            p = j << 3;
                            v = p | 4;
                            q = p;
                            j = j ? (f >>> 16) | 0 : f;
                            p = j >>> 0 > 255;
                            q = p ? v : q;
                            j = p ? (j >>> 8) | 0 : j;
                            p = j >>> 0 > 15;
                            j =
                              (p ? q | 2 : q) |
                              ((p ? (j >>> 4) | 0 : j) >>> 0 > 3);
                            p = j << 1;
                            q = (i | 0) > 0 ? i : 0;
                            i = (j << 16) >> 16;
                            f =
                              (((i | 0) > 6 ? f >> (p + -12) : f << (12 - p)) <<
                                16) >>
                              16;
                            f =
                              (((o(
                                (((o((o(f, 16816) + -827523072) >> 16, f) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                f
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            j = (13 - j) | 0;
                            f = (i | 0) < 13 ? f >> j : f << (0 - j);
                            i =
                              (((f << 16) >> 10 < (g | 0) ? s : f) << 16) >> 16;
                            if ((q | 0) <= (o(i, g) | 0)) {
                              m =
                                (((((((((l >> 17) + q) | 0) / (g | 0)) << 14) +
                                  (i >> 1)) |
                                  0) /
                                  (i | 0)) <<
                                  16) >>
                                16;
                            }
                            j = (u << 16) >> 16;
                            c: {
                              if ((n | 0) > (o(j, g) | 0)) {
                                f = j >> 1;
                                g = 16384;
                                break c;
                              }
                              f = j >> 1;
                              g =
                                ((((f +
                                  ((((n + (l >> 17)) | 0) / (g | 0)) << 14)) |
                                  0) /
                                  (j | 0)) <<
                                  16) >>
                                16;
                            }
                            l = l >> 8;
                            n = (((l + (i >> 1)) | 0) / (i | 0)) | 0;
                            i = (((f + l) | 0) / (j | 0)) | 0;
                            d: {
                              if ((e | 0) < 1) {
                                f = 0;
                                e = 0;
                                break d;
                              }
                              e = (o(e & 65535, 13107) >>> 15) | 0;
                              f = (e + 2294) | 0;
                              e = ((o(e, 112720) & -65536) + 1073741824) >> 16;
                            }
                            j = f << 14;
                            g =
                              (32767 -
                                ((o(g, (o(e, g) << 1) >> 16) >>> 13) | 0)) |
                              0;
                            l = (f << 16) >> 16;
                            g = ((g << 16) >> 16 < (l | 0) ? f : g) << 16;
                            g = (((j + (g >> 17)) | 0) / (g >> 16)) | 0;
                            e =
                              (32767 -
                                ((o((o(e, m) << 1) >> 16, m) >>> 13) | 0)) |
                              0;
                            e = ((e << 16) >> 16 < (l | 0) ? f : e) << 16;
                            e =
                              o(
                                (n << 16) >> 14,
                                ((((j + (e >> 17)) | 0) / (e >> 16)) << 16) >>
                                  16
                              ) >> 16;
                            e: {
                              if ((d | 0) > 40) {
                                f = o(e, 22938) >> 15;
                                d =
                                  o(
                                    o((i << 16) >> 14, (g << 16) >> 16) >> 16,
                                    9830
                                  ) >> 15;
                                break e;
                              }
                              f = (o(e, 19661) >>> 15) | 0;
                              d =
                                (o(
                                  o((i << 16) >> 14, (g << 16) >> 16) >> 16,
                                  19661
                                ) >>>
                                  15) |
                                0;
                            }
                            g = (c | 0) < 1;
                            if (!g) {
                              e = (d << 16) >> 16;
                              i = (f << 16) >> 16;
                              f = 0;
                              while (1) {
                                d = f << 1;
                                h[(d + b) >> 1] =
                                  k[(a + d) >> 1] +
                                  (((((o(e, h[(r + ((c + f) << 1)) >> 1]) +
                                    o(i, h[(d + r) >> 1])) <<
                                    8) +
                                    32768) >>>
                                    16) |
                                    0);
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            d = Z(b, c);
                            e = Z(a, c);
                            f: {
                              if (g) {
                                break f;
                              }
                              f = (d | 0) > 1 ? d : 1;
                              d = f & 65535;
                              e = (e | 0) > 1 ? e : 1;
                              d =
                                ((((((((e & 65535) >>> 0 > d >>> 0 ? f : e) &
                                  65535) <<
                                  14) |
                                  (d >>> 1)) >>>
                                  0) /
                                  (d >>> 0)) <<
                                  16) >>
                                16;
                              f = 0;
                              while (1) {
                                e = ((f << 1) + b) | 0;
                                h[e >> 1] = o(d, h[e >> 1]) >>> 14;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              if (((c | 0) < 1) | t) {
                                break f;
                              }
                              f = 0;
                              while (1) {
                                d = ((f << 1) + a) | 0;
                                h[d >> 1] = k[d >> 1] << 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              f = 0;
                              if ((c | 0) <= 0) {
                                break f;
                              }
                              while (1) {
                                d = ((f << 1) + b) | 0;
                                a = h[d >> 1];
                                a = (a | 0) > -16383 ? a : -16383;
                                h[d >> 1] = ((a | 0) < 16383 ? a : 16383) << 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function S(a) {
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            a: {
                              if (!a) {
                                break a;
                              }
                              d = (a + -8) | 0;
                              c = i[(a + -4) >> 2];
                              a = c & -8;
                              f = (d + a) | 0;
                              b: {
                                if (c & 1) {
                                  break b;
                                }
                                if (!(c & 3)) {
                                  break a;
                                }
                                c = i[d >> 2];
                                d = (d - c) | 0;
                                if (d >>> 0 < l[3812]) {
                                  break a;
                                }
                                a = (a + c) | 0;
                                if (i[3813] != (d | 0)) {
                                  if (c >>> 0 <= 255) {
                                    e = i[(d + 8) >> 2];
                                    c = (c >>> 3) | 0;
                                    b = i[(d + 12) >> 2];
                                    if ((b | 0) == (e | 0)) {
                                      i[3808] = i[3808] & ic(c);
                                      break b;
                                    }
                                    i[(e + 12) >> 2] = b;
                                    i[(b + 8) >> 2] = e;
                                    break b;
                                  }
                                  h = i[(d + 24) >> 2];
                                  c = i[(d + 12) >> 2];
                                  c: {
                                    if ((d | 0) != (c | 0)) {
                                      b = i[(d + 8) >> 2];
                                      i[(b + 12) >> 2] = c;
                                      i[(c + 8) >> 2] = b;
                                      break c;
                                    }
                                    d: {
                                      e = (d + 20) | 0;
                                      b = i[e >> 2];
                                      if (b) {
                                        break d;
                                      }
                                      e = (d + 16) | 0;
                                      b = i[e >> 2];
                                      if (b) {
                                        break d;
                                      }
                                      c = 0;
                                      break c;
                                    }
                                    while (1) {
                                      g = e;
                                      c = b;
                                      e = (c + 20) | 0;
                                      b = i[e >> 2];
                                      if (b) {
                                        continue;
                                      }
                                      e = (c + 16) | 0;
                                      b = i[(c + 16) >> 2];
                                      if (b) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[g >> 2] = 0;
                                  }
                                  if (!h) {
                                    break b;
                                  }
                                  e = i[(d + 28) >> 2];
                                  b = ((e << 2) + 15536) | 0;
                                  e: {
                                    if (i[b >> 2] == (d | 0)) {
                                      i[b >> 2] = c;
                                      if (c) {
                                        break e;
                                      }
                                      i[3809] = i[3809] & ic(e);
                                      break b;
                                    }
                                    i[
                                      (h +
                                        (i[(h + 16) >> 2] == (d | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = c;
                                    if (!c) {
                                      break b;
                                    }
                                  }
                                  i[(c + 24) >> 2] = h;
                                  b = i[(d + 16) >> 2];
                                  if (b) {
                                    i[(c + 16) >> 2] = b;
                                    i[(b + 24) >> 2] = c;
                                  }
                                  b = i[(d + 20) >> 2];
                                  if (!b) {
                                    break b;
                                  }
                                  i[(c + 20) >> 2] = b;
                                  i[(b + 24) >> 2] = c;
                                  break b;
                                }
                                c = i[(f + 4) >> 2];
                                if ((c & 3) != 3) {
                                  break b;
                                }
                                i[3810] = a;
                                i[(f + 4) >> 2] = c & -2;
                                i[(d + 4) >> 2] = a | 1;
                                i[(a + d) >> 2] = a;
                                return;
                              }
                              if (f >>> 0 <= d >>> 0) {
                                break a;
                              }
                              c = i[(f + 4) >> 2];
                              if (!(c & 1)) {
                                break a;
                              }
                              f: {
                                if (!(c & 2)) {
                                  if (i[3814] == (f | 0)) {
                                    i[3814] = d;
                                    a = (i[3811] + a) | 0;
                                    i[3811] = a;
                                    i[(d + 4) >> 2] = a | 1;
                                    if (i[3813] != (d | 0)) {
                                      break a;
                                    }
                                    i[3810] = 0;
                                    i[3813] = 0;
                                    return;
                                  }
                                  if (i[3813] == (f | 0)) {
                                    i[3813] = d;
                                    a = (i[3810] + a) | 0;
                                    i[3810] = a;
                                    i[(d + 4) >> 2] = a | 1;
                                    i[(a + d) >> 2] = a;
                                    return;
                                  }
                                  a = ((c & -8) + a) | 0;
                                  g: {
                                    if (c >>> 0 <= 255) {
                                      b = i[(f + 8) >> 2];
                                      c = (c >>> 3) | 0;
                                      e = i[(f + 12) >> 2];
                                      if ((b | 0) == (e | 0)) {
                                        i[3808] = i[3808] & ic(c);
                                        break g;
                                      }
                                      i[(b + 12) >> 2] = e;
                                      i[(e + 8) >> 2] = b;
                                      break g;
                                    }
                                    h = i[(f + 24) >> 2];
                                    c = i[(f + 12) >> 2];
                                    h: {
                                      if ((f | 0) != (c | 0)) {
                                        b = i[(f + 8) >> 2];
                                        i[(b + 12) >> 2] = c;
                                        i[(c + 8) >> 2] = b;
                                        break h;
                                      }
                                      i: {
                                        e = (f + 20) | 0;
                                        b = i[e >> 2];
                                        if (b) {
                                          break i;
                                        }
                                        e = (f + 16) | 0;
                                        b = i[e >> 2];
                                        if (b) {
                                          break i;
                                        }
                                        c = 0;
                                        break h;
                                      }
                                      while (1) {
                                        g = e;
                                        c = b;
                                        e = (c + 20) | 0;
                                        b = i[e >> 2];
                                        if (b) {
                                          continue;
                                        }
                                        e = (c + 16) | 0;
                                        b = i[(c + 16) >> 2];
                                        if (b) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[g >> 2] = 0;
                                    }
                                    if (!h) {
                                      break g;
                                    }
                                    e = i[(f + 28) >> 2];
                                    b = ((e << 2) + 15536) | 0;
                                    j: {
                                      if (i[b >> 2] == (f | 0)) {
                                        i[b >> 2] = c;
                                        if (c) {
                                          break j;
                                        }
                                        i[3809] = i[3809] & ic(e);
                                        break g;
                                      }
                                      i[
                                        (h +
                                          (i[(h + 16) >> 2] == (f | 0)
                                            ? 16
                                            : 20)) >>
                                          2
                                      ] = c;
                                      if (!c) {
                                        break g;
                                      }
                                    }
                                    i[(c + 24) >> 2] = h;
                                    b = i[(f + 16) >> 2];
                                    if (b) {
                                      i[(c + 16) >> 2] = b;
                                      i[(b + 24) >> 2] = c;
                                    }
                                    b = i[(f + 20) >> 2];
                                    if (!b) {
                                      break g;
                                    }
                                    i[(c + 20) >> 2] = b;
                                    i[(b + 24) >> 2] = c;
                                  }
                                  i[(d + 4) >> 2] = a | 1;
                                  i[(a + d) >> 2] = a;
                                  if (i[3813] != (d | 0)) {
                                    break f;
                                  }
                                  i[3810] = a;
                                  return;
                                }
                                i[(f + 4) >> 2] = c & -2;
                                i[(d + 4) >> 2] = a | 1;
                                i[(a + d) >> 2] = a;
                              }
                              if (a >>> 0 <= 255) {
                                a = (a >>> 3) | 0;
                                c = ((a << 3) + 15272) | 0;
                                b = i[3808];
                                a = 1 << a;
                                k: {
                                  if (!(b & a)) {
                                    i[3808] = a | b;
                                    a = c;
                                    break k;
                                  }
                                  a = i[(c + 8) >> 2];
                                }
                                i[(c + 8) >> 2] = d;
                                i[(a + 12) >> 2] = d;
                                i[(d + 12) >> 2] = c;
                                i[(d + 8) >> 2] = a;
                                return;
                              }
                              i[(d + 16) >> 2] = 0;
                              i[(d + 20) >> 2] = 0;
                              f = d;
                              e = (a >>> 8) | 0;
                              b = 0;
                              l: {
                                if (!e) {
                                  break l;
                                }
                                b = 31;
                                if (a >>> 0 > 16777215) {
                                  break l;
                                }
                                c = e;
                                e = ((e + 1048320) >>> 16) & 8;
                                b = c << e;
                                h = ((b + 520192) >>> 16) & 4;
                                b = b << h;
                                g = ((b + 245760) >>> 16) & 2;
                                b =
                                  ((((b << g) >>> 15) | 0) - (g | (e | h))) | 0;
                                b =
                                  (((b << 1) | ((a >>> (b + 21)) & 1)) + 28) |
                                  0;
                              }
                              i[(f + 28) >> 2] = b;
                              g = ((b << 2) + 15536) | 0;
                              m: {
                                n: {
                                  e = i[3809];
                                  c = 1 << b;
                                  o: {
                                    if (!(e & c)) {
                                      i[3809] = c | e;
                                      i[g >> 2] = d;
                                      i[(d + 24) >> 2] = g;
                                      break o;
                                    }
                                    e =
                                      a <<
                                      ((b | 0) == 31
                                        ? 0
                                        : (25 - ((b >>> 1) | 0)) | 0);
                                    c = i[g >> 2];
                                    while (1) {
                                      b = c;
                                      if ((i[(c + 4) >> 2] & -8) == (a | 0)) {
                                        break n;
                                      }
                                      c = (e >>> 29) | 0;
                                      e = e << 1;
                                      g = (b + (c & 4)) | 0;
                                      c = i[(g + 16) >> 2];
                                      if (c) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[(g + 16) >> 2] = d;
                                    i[(d + 24) >> 2] = b;
                                  }
                                  i[(d + 12) >> 2] = d;
                                  i[(d + 8) >> 2] = d;
                                  break m;
                                }
                                a = i[(b + 8) >> 2];
                                i[(a + 12) >> 2] = d;
                                i[(b + 8) >> 2] = d;
                                i[(d + 24) >> 2] = 0;
                                i[(d + 12) >> 2] = b;
                                i[(d + 8) >> 2] = a;
                              }
                              a = (i[3816] + -1) | 0;
                              i[3816] = a;
                              if (a) {
                                break a;
                              }
                              d = 15688;
                              while (1) {
                                a = i[d >> 2];
                                d = (a + 8) | 0;
                                if (a) {
                                  continue;
                                }
                                break;
                              }
                              i[3816] = -1;
                            }
                          }
                          function Na(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            f = (a + b) | 0;
                            a: {
                              b: {
                                c = i[(a + 4) >> 2];
                                if (c & 1) {
                                  break b;
                                }
                                if (!(c & 3)) {
                                  break a;
                                }
                                c = i[a >> 2];
                                b = (c + b) | 0;
                                a = (a - c) | 0;
                                if ((a | 0) != i[3813]) {
                                  if (c >>> 0 <= 255) {
                                    e = (c >>> 3) | 0;
                                    c = i[(a + 8) >> 2];
                                    d = i[(a + 12) >> 2];
                                    if ((d | 0) == (c | 0)) {
                                      i[3808] = i[3808] & ic(e);
                                      break b;
                                    }
                                    i[(c + 12) >> 2] = d;
                                    i[(d + 8) >> 2] = c;
                                    break b;
                                  }
                                  h = i[(a + 24) >> 2];
                                  c = i[(a + 12) >> 2];
                                  c: {
                                    if ((c | 0) != (a | 0)) {
                                      d = i[(a + 8) >> 2];
                                      i[(d + 12) >> 2] = c;
                                      i[(c + 8) >> 2] = d;
                                      break c;
                                    }
                                    d: {
                                      d = (a + 20) | 0;
                                      e = i[d >> 2];
                                      if (e) {
                                        break d;
                                      }
                                      d = (a + 16) | 0;
                                      e = i[d >> 2];
                                      if (e) {
                                        break d;
                                      }
                                      c = 0;
                                      break c;
                                    }
                                    while (1) {
                                      g = d;
                                      c = e;
                                      d = (c + 20) | 0;
                                      e = i[d >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      d = (c + 16) | 0;
                                      e = i[(c + 16) >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[g >> 2] = 0;
                                  }
                                  if (!h) {
                                    break b;
                                  }
                                  d = i[(a + 28) >> 2];
                                  e = ((d << 2) + 15536) | 0;
                                  e: {
                                    if (i[e >> 2] == (a | 0)) {
                                      i[e >> 2] = c;
                                      if (c) {
                                        break e;
                                      }
                                      i[3809] = i[3809] & ic(d);
                                      break b;
                                    }
                                    i[
                                      (h +
                                        (i[(h + 16) >> 2] == (a | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = c;
                                    if (!c) {
                                      break b;
                                    }
                                  }
                                  i[(c + 24) >> 2] = h;
                                  d = i[(a + 16) >> 2];
                                  if (d) {
                                    i[(c + 16) >> 2] = d;
                                    i[(d + 24) >> 2] = c;
                                  }
                                  d = i[(a + 20) >> 2];
                                  if (!d) {
                                    break b;
                                  }
                                  i[(c + 20) >> 2] = d;
                                  i[(d + 24) >> 2] = c;
                                  break b;
                                }
                                c = i[(f + 4) >> 2];
                                if ((c & 3) != 3) {
                                  break b;
                                }
                                i[3810] = b;
                                i[(f + 4) >> 2] = c & -2;
                                i[(a + 4) >> 2] = b | 1;
                                i[f >> 2] = b;
                                return;
                              }
                              c = i[(f + 4) >> 2];
                              f: {
                                if (!(c & 2)) {
                                  if (i[3814] == (f | 0)) {
                                    i[3814] = a;
                                    b = (i[3811] + b) | 0;
                                    i[3811] = b;
                                    i[(a + 4) >> 2] = b | 1;
                                    if (i[3813] != (a | 0)) {
                                      break a;
                                    }
                                    i[3810] = 0;
                                    i[3813] = 0;
                                    return;
                                  }
                                  if (i[3813] == (f | 0)) {
                                    i[3813] = a;
                                    b = (i[3810] + b) | 0;
                                    i[3810] = b;
                                    i[(a + 4) >> 2] = b | 1;
                                    i[(a + b) >> 2] = b;
                                    return;
                                  }
                                  b = ((c & -8) + b) | 0;
                                  g: {
                                    if (c >>> 0 <= 255) {
                                      e = (c >>> 3) | 0;
                                      c = i[(f + 8) >> 2];
                                      d = i[(f + 12) >> 2];
                                      if ((d | 0) == (c | 0)) {
                                        i[3808] = i[3808] & ic(e);
                                        break g;
                                      }
                                      i[(c + 12) >> 2] = d;
                                      i[(d + 8) >> 2] = c;
                                      break g;
                                    }
                                    h = i[(f + 24) >> 2];
                                    c = i[(f + 12) >> 2];
                                    h: {
                                      if ((f | 0) != (c | 0)) {
                                        d = i[(f + 8) >> 2];
                                        i[(d + 12) >> 2] = c;
                                        i[(c + 8) >> 2] = d;
                                        break h;
                                      }
                                      i: {
                                        d = (f + 20) | 0;
                                        e = i[d >> 2];
                                        if (e) {
                                          break i;
                                        }
                                        d = (f + 16) | 0;
                                        e = i[d >> 2];
                                        if (e) {
                                          break i;
                                        }
                                        c = 0;
                                        break h;
                                      }
                                      while (1) {
                                        g = d;
                                        c = e;
                                        d = (c + 20) | 0;
                                        e = i[d >> 2];
                                        if (e) {
                                          continue;
                                        }
                                        d = (c + 16) | 0;
                                        e = i[(c + 16) >> 2];
                                        if (e) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[g >> 2] = 0;
                                    }
                                    if (!h) {
                                      break g;
                                    }
                                    d = i[(f + 28) >> 2];
                                    e = ((d << 2) + 15536) | 0;
                                    j: {
                                      if (i[e >> 2] == (f | 0)) {
                                        i[e >> 2] = c;
                                        if (c) {
                                          break j;
                                        }
                                        i[3809] = i[3809] & ic(d);
                                        break g;
                                      }
                                      i[
                                        (h +
                                          (i[(h + 16) >> 2] == (f | 0)
                                            ? 16
                                            : 20)) >>
                                          2
                                      ] = c;
                                      if (!c) {
                                        break g;
                                      }
                                    }
                                    i[(c + 24) >> 2] = h;
                                    d = i[(f + 16) >> 2];
                                    if (d) {
                                      i[(c + 16) >> 2] = d;
                                      i[(d + 24) >> 2] = c;
                                    }
                                    d = i[(f + 20) >> 2];
                                    if (!d) {
                                      break g;
                                    }
                                    i[(c + 20) >> 2] = d;
                                    i[(d + 24) >> 2] = c;
                                  }
                                  i[(a + 4) >> 2] = b | 1;
                                  i[(a + b) >> 2] = b;
                                  if (i[3813] != (a | 0)) {
                                    break f;
                                  }
                                  i[3810] = b;
                                  return;
                                }
                                i[(f + 4) >> 2] = c & -2;
                                i[(a + 4) >> 2] = b | 1;
                                i[(a + b) >> 2] = b;
                              }
                              if (b >>> 0 <= 255) {
                                c = (b >>> 3) | 0;
                                b = ((c << 3) + 15272) | 0;
                                d = i[3808];
                                c = 1 << c;
                                k: {
                                  if (!(d & c)) {
                                    i[3808] = c | d;
                                    c = b;
                                    break k;
                                  }
                                  c = i[(b + 8) >> 2];
                                }
                                i[(b + 8) >> 2] = a;
                                i[(c + 12) >> 2] = a;
                                i[(a + 12) >> 2] = b;
                                i[(a + 8) >> 2] = c;
                                return;
                              }
                              i[(a + 16) >> 2] = 0;
                              i[(a + 20) >> 2] = 0;
                              d = a;
                              e = (b >>> 8) | 0;
                              c = 0;
                              l: {
                                if (!e) {
                                  break l;
                                }
                                c = 31;
                                if (b >>> 0 > 16777215) {
                                  break l;
                                }
                                g = ((e + 1048320) >>> 16) & 8;
                                e = e << g;
                                c = ((e + 520192) >>> 16) & 4;
                                f = e << c;
                                e = ((f + 245760) >>> 16) & 2;
                                c =
                                  ((((f << e) >>> 15) | 0) - (e | (c | g))) | 0;
                                c =
                                  (((c << 1) | ((b >>> (c + 21)) & 1)) + 28) |
                                  0;
                              }
                              i[(d + 28) >> 2] = c;
                              e = ((c << 2) + 15536) | 0;
                              m: {
                                d = i[3809];
                                g = 1 << c;
                                n: {
                                  if (!(d & g)) {
                                    i[3809] = d | g;
                                    i[e >> 2] = a;
                                    break n;
                                  }
                                  d =
                                    b <<
                                    ((c | 0) == 31
                                      ? 0
                                      : (25 - ((c >>> 1) | 0)) | 0);
                                  c = i[e >> 2];
                                  while (1) {
                                    e = c;
                                    if ((i[(c + 4) >> 2] & -8) == (b | 0)) {
                                      break m;
                                    }
                                    c = (d >>> 29) | 0;
                                    d = d << 1;
                                    g = (e + (c & 4)) | 0;
                                    c = i[(g + 16) >> 2];
                                    if (c) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[(g + 16) >> 2] = a;
                                }
                                i[(a + 24) >> 2] = e;
                                i[(a + 12) >> 2] = a;
                                i[(a + 8) >> 2] = a;
                                return;
                              }
                              b = i[(e + 8) >> 2];
                              i[(b + 12) >> 2] = a;
                              i[(e + 8) >> 2] = a;
                              i[(a + 24) >> 2] = 0;
                              i[(a + 12) >> 2] = e;
                              i[(a + 8) >> 2] = b;
                            }
                          }
                          function hb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            d = (H - 16) | 0;
                            H = d;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            switch (b | 0) {
                                              case 101:
                                                b = i[(a + 20) >> 2];
                                                if ((b | 0) >= 1) {
                                                  break g;
                                                }
                                                break a;
                                              case 26:
                                                if (i[(a + 24) >> 2] >= 1) {
                                                  b = i[(a + 64) >> 2];
                                                  c = 0;
                                                  while (1) {
                                                    i[(b + (c << 2)) >> 2] = 0;
                                                    c = (c + 1) | 0;
                                                    if (
                                                      (c | 0) <
                                                      i[(a + 24) >> 2] << 1
                                                    ) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                }
                                                b = i[(a + 44) >> 2];
                                                e = i[(a + 48) >> 2];
                                                c = 0;
                                                while (1) {
                                                  f = c << 1;
                                                  h[(f + e) >> 1] = 0;
                                                  h[(b + f) >> 1] = 0;
                                                  c = (c + 1) | 0;
                                                  if ((c | 0) != 64) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                                e = 0;
                                                h[(a + 80) >> 1] = 0;
                                                break a;
                                              case 10:
                                                i[(a + 96) >> 2] = i[c >> 2];
                                                break a;
                                              case 8:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  8,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 9:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  9,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 3:
                                                i[c >> 2] = i[(a + 8) >> 2];
                                                break a;
                                              case 0:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 48) >> 2]](
                                                  b,
                                                  0,
                                                  c
                                                ) | 0;
                                                i[(a + 36) >> 2] = i[c >> 2];
                                                break a;
                                              case 1:
                                                i[c >> 2] = i[(a + 36) >> 2];
                                                break a;
                                              case 4:
                                              case 6:
                                                b = i[c >> 2];
                                                b = (b | 0) > 0 ? b : 0;
                                                b =
                                                  (i[i[a >> 2] >> 2] +
                                                    (((b | 0) < 10 ? b : 10) <<
                                                      2)) |
                                                  0;
                                                i[(a + 96) >> 2] =
                                                  i[(b + 104) >> 2];
                                                i[(d + 12) >> 2] =
                                                  i[(b + 60) >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  6,
                                                  (d + 12) | 0
                                                ) | 0;
                                                break a;
                                              case 19:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 48) >> 2]](
                                                  b,
                                                  19,
                                                  c
                                                ) | 0;
                                                b = i[(a + 32) >> 2];
                                                e =
                                                  i[
                                                    (i[(a + 92) >> 2] +
                                                      (i[(a + 96) >> 2] <<
                                                        2)) >>
                                                      2
                                                  ];
                                                if (e) {
                                                  i[c >> 2] =
                                                    i[c >> 2] +
                                                    (((o(b, i[(e + 52) >> 2]) |
                                                      0) /
                                                      i[(a + 8) >> 2]) |
                                                      0);
                                                  e = 0;
                                                  break a;
                                                }
                                                i[c >> 2] =
                                                  i[c >> 2] +
                                                  (((b << 2) /
                                                    i[(a + 8) >> 2]) |
                                                    0);
                                                e = 0;
                                                break a;
                                              case 24:
                                                b = i[c >> 2];
                                                i[(a + 32) >> 2] = b;
                                                i[(d + 12) >> 2] = b >> 1;
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  24,
                                                  (d + 12) | 0
                                                ) | 0;
                                                break a;
                                              case 25:
                                                i[c >> 2] = i[(a + 32) >> 2];
                                                break a;
                                              case 20:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  20,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 22:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  22,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 36:
                                                i[(a + 88) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  36,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 37:
                                                i[c >> 2] = i[(a + 88) >> 2];
                                                break a;
                                              case 39:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  39,
                                                  c
                                                ) | 0;
                                                i[c >> 2] = i[c >> 2] << 1;
                                                break a;
                                              case 44:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  44,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 45:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  45,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 47:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  47,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 106:
                                                break c;
                                              case 105:
                                                break d;
                                              case 104:
                                                break e;
                                              case 103:
                                                break f;
                                              case 100:
                                                break h;
                                              default:
                                                break b;
                                            }
                                          }
                                          if (i[(a + 20) >> 2] < 1) {
                                            break a;
                                          }
                                          f = i[(a + 68) >> 2];
                                          b = 0;
                                          while (1) {
                                            g = b << 2;
                                            i[(g + c) >> 2] = i[(f + g) >> 2];
                                            b = (b + 1) | 0;
                                            if ((b | 0) < i[(a + 20) >> 2]) {
                                              continue;
                                            }
                                            break;
                                          }
                                          break a;
                                        }
                                        f = i[(a + 72) >> 2];
                                        a = 0;
                                        while (1) {
                                          g = a << 1;
                                          h[(g + c) >> 1] = k[(f + g) >> 1];
                                          a = (a + 1) | 0;
                                          if ((b | 0) != (a | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        break a;
                                      }
                                      a = i[(a + 4) >> 2];
                                      J[i[(i[a >> 2] + 48) >> 2]](a, 103, c) |
                                        0;
                                      break a;
                                    }
                                    i[(a + 76) >> 2] = c;
                                    break a;
                                  }
                                  a = i[(a + 4) >> 2];
                                  J[i[(i[a >> 2] + 48) >> 2]](a, 105, c) | 0;
                                  break a;
                                }
                                i[c >> 2] = i[(a + 40) >> 2];
                                break a;
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 13123;
                              Y(i[3524], 13166, d);
                              e = -1;
                            }
                            H = (d + 16) | 0;
                            return e | 0;
                          }
                          function $a(a) {
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              i = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              o = 0,
                              p = 0;
                            c = 1;
                            a: {
                              b: {
                                nc(+a);
                                e = kc(1) | 0;
                                g = kc(0) | 0;
                                b = e;
                                c: {
                                  if ((b | 0) == 1072693248 ? !g : 0) {
                                    break c;
                                  }
                                  e = b & 2147483647;
                                  if (
                                    (e >>> 0 > 2146435072) |
                                    (((e | 0) == 2146435072) & ((g | 0) != 0))
                                  ) {
                                    return a + 0.3;
                                  }
                                  c = q(a);
                                  if (
                                    !(
                                      (e ? (b & 1073741823) != 1072693248 : 0) |
                                      g
                                    )
                                  ) {
                                    if ((b | 0) > -1) {
                                      break c;
                                    }
                                    if (!((e + -1072693248) | 0)) {
                                      a = c - c;
                                      return a / a;
                                    }
                                    return c;
                                  }
                                  if ((b | 0) <= -1) {
                                    a = a - a;
                                    return a / a;
                                  }
                                  d = c * 9007199254740992;
                                  h = e >>> 0 < 1048576;
                                  a = h ? d : c;
                                  nc(+d);
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  b = h ? b : e;
                                  g = b & 1048575;
                                  e = g | 1072693248;
                                  m = ((b >> 20) + (h ? -1076 : -1023)) | 0;
                                  d: {
                                    if (g >>> 0 < 235663) {
                                      break d;
                                    }
                                    if (g >>> 0 < 767610) {
                                      j = 1;
                                      break d;
                                    }
                                    e = (e + -1048576) | 0;
                                    m = (m + 1) | 0;
                                  }
                                  h = j << 3;
                                  p = n[(h + 14080) >> 3];
                                  nc(+a);
                                  kc(1) | 0;
                                  lc(0, kc(0) | 0);
                                  lc(1, e | 0);
                                  c = +mc();
                                  i = n[(h + 14048) >> 3];
                                  d = c - i;
                                  a = 1 / (i + c);
                                  l = d * a;
                                  nc(+l);
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  k = +mc();
                                  f = k * k;
                                  o = a;
                                  lc(0, 0);
                                  lc(
                                    1,
                                    (((((e >> 1) | 536870912) + (j << 18)) |
                                      0) +
                                      524288) |
                                      0
                                  );
                                  a = +mc();
                                  i = o * (d - k * a - k * (c - (a - i)));
                                  a = l * l;
                                  a =
                                    (l + k) * i +
                                    a *
                                      a *
                                      (a *
                                        (a *
                                          (a *
                                            (a *
                                              (a * 0.20697501780033842 +
                                                0.23066074577556175) +
                                              0.272728123808534) +
                                            0.33333332981837743) +
                                          0.4285714285785502) +
                                        0.5999999999999946);
                                  nc(+(f + 3 + a));
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  c = +mc();
                                  d = k * c;
                                  a = i * c + l * (a - (c + -3 - f));
                                  nc(+(d + a));
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  f = +mc();
                                  i = f * 0.9617967009544373;
                                  d =
                                    n[(h + 14064) >> 3] +
                                    ((a - (f - d)) * 0.9617966939259756 +
                                      f * -7.028461650952758e-9);
                                  a = +(m | 0);
                                  nc(+(p + (i + d) + a));
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  f = +mc();
                                  c = f * 0.2999999523162842;
                                  d =
                                    (d - (f - a - p - i)) * 0.3 +
                                    f * 4.768371580921027e-8;
                                  a = c + d;
                                  nc(+a);
                                  h = kc(1) | 0;
                                  g = kc(0) | 0;
                                  e: {
                                    b = h;
                                    h = b;
                                    if ((b | 0) >= 1083179008) {
                                      if (g | (h + -1083179008)) {
                                        break b;
                                      }
                                      if (
                                        (d + 8.008566259537294e-17 > a - c) ^
                                        1
                                      ) {
                                        break e;
                                      }
                                      break b;
                                    }
                                    if ((h & 2147482624) >>> 0 < 1083231232) {
                                      break e;
                                    }
                                    if (g | (h + 1064252416)) {
                                      break a;
                                    }
                                    if ((d <= a - c) ^ 1) {
                                      break e;
                                    }
                                    break a;
                                  }
                                  j = 0;
                                  e = h & 2147483647;
                                  if (e >>> 0 >= 1071644673) {
                                    g =
                                      (h +
                                        ((1048576 >>>
                                          (((e >>> 20) | 0) + -1022)) |
                                          0)) |
                                      0;
                                    e = (g >>> 20) & 2047;
                                    b =
                                      (((g & 1048575) | 1048576) >>>
                                        (1043 - e)) |
                                      0;
                                    j = (h | 0) < 0 ? (0 - b) | 0 : b;
                                    lc(0, 0);
                                    lc(1, g & (-1048576 >> (e + -1023)));
                                    c = c - +mc();
                                    nc(+(d + c));
                                    b = kc(1) | 0;
                                    kc(0) | 0;
                                  }
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  a = +mc();
                                  i = a * 0.6931471824645996;
                                  d =
                                    (d - (a - c)) * 0.6931471805599453 +
                                    a * -1.904654299957768e-9;
                                  f = i + d;
                                  a = f * f;
                                  a =
                                    f -
                                    a *
                                      (a *
                                        (a *
                                          (a *
                                            (a * 4.1381367970572385e-8 +
                                              -16533902205465252e-22) +
                                            6613756321437934e-20) +
                                          -0.0027777777777015593) +
                                        0.16666666666666602);
                                  o = (f * a) / (a + -2);
                                  a = d - (f - i);
                                  a = f - (o - (a + f * a)) + 1;
                                  nc(+a);
                                  b = kc(1) | 0;
                                  g = kc(0) | 0;
                                  b = ((j << 20) + b) | 0;
                                  f: {
                                    if ((b | 0) <= 1048575) {
                                      a = cc(a, j);
                                      break f;
                                    }
                                    lc(0, g | 0);
                                    lc(1, b | 0);
                                    a = +mc();
                                  }
                                  c = a * 1;
                                }
                                return c;
                              }
                              return z;
                            }
                            return 0;
                          }
                          function ha(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0;
                            q = (((0 - d) & 3) + d) | 0;
                            n = c >> 1;
                            f = (n + 1) | 0;
                            j = f << 2;
                            d = (q + j) | 0;
                            d = (((0 - d) & 3) + d) | 0;
                            g = j;
                            k = (c + 3) | 0;
                            l = o(k, f) << 2;
                            f = (l + d) | 0;
                            j = (((0 - f) & 3) + f) | 0;
                            f = (g + j) | 0;
                            f = (((0 - f) & 3) + f) | 0;
                            l = (f + l) | 0;
                            if ((c | 0) >= 0) {
                              p = (n | 0) > 0 ? n : 0;
                              while (1) {
                                g = e << 2;
                                r = o(e, k) << 2;
                                i[(g + q) >> 2] = r + d;
                                i[(j + g) >> 2] = f + r;
                                g = (e | 0) != (p | 0);
                                e = (e + 1) | 0;
                                if (g) {
                                  continue;
                                }
                                break;
                              }
                            }
                            l = (l + (l & 1)) | 0;
                            e = 0;
                            if ((c | 0) > 0) {
                              while (1) {
                                f = e << 1;
                                d = h[(f + a) >> 1];
                                a: {
                                  if ((d | 0) <= 12867) {
                                    d = ((o(d, d) << 3) + 32768) >> 16;
                                    d =
                                      ((((o(
                                        ((((o(
                                          (((o(d, -10) + 4096) >> 13) + 340) |
                                            0,
                                          d
                                        ) <<
                                          3) +
                                          32768) &
                                          -65536) +
                                          -268435456) >>
                                          16,
                                        d
                                      ) +
                                        4096) >>>
                                        13) |
                                        0) -
                                        -8192) |
                                      0;
                                    break a;
                                  }
                                  d = ((25736 - d) << 16) >> 16;
                                  d = ((o(d, d) << 3) + 32768) >> 16;
                                  d =
                                    (-8192 -
                                      (((o(
                                        ((((o(
                                          (((o(d, -10) + 4096) >> 13) + 340) |
                                            0,
                                          d
                                        ) <<
                                          3) +
                                          32768) &
                                          -65536) +
                                          -268435456) >>
                                          16,
                                        d
                                      ) +
                                        4096) >>>
                                        13) |
                                        0)) |
                                    0;
                                }
                                h[(f + l) >> 1] = d << 2;
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = 0;
                            if ((c | 0) >= 0) {
                              d = (n | 0) > 0 ? n : 0;
                              while (1) {
                                f = e << 2;
                                a = i[(f + q) >> 2];
                                i[(a + 4) >> 2] = 0;
                                i[(a + 8) >> 2] = 1048576;
                                k = ((e << 3) + 8) | 0;
                                i[(k + a) >> 2] = 1048576;
                                a = i[(f + j) >> 2];
                                i[(a + 4) >> 2] = 0;
                                i[(a + 8) >> 2] = 1048576;
                                i[(a + k) >> 2] = 1048576;
                                a = (d | 0) != (e | 0);
                                e = (e + 1) | 0;
                                if (a) {
                                  continue;
                                }
                                break;
                              }
                            }
                            d = i[(q + 4) >> 2];
                            e = h[l >> 1];
                            a = i[(i[q >> 2] + 8) >> 2];
                            i[(d + 12) >> 2] =
                              0 -
                              ((o(e, (a << 2) >> 16) +
                                (o(e, a & 16383) >> 14)) |
                                0);
                            e = h[(l + 2) >> 1];
                            a = i[(i[j >> 2] + 8) >> 2];
                            i[(i[(j + 4) >> 2] + 12) >> 2] =
                              0 -
                              ((o(e, (a << 2) >> 16) +
                                (o(e, a & 16383) >> 14)) |
                                0);
                            if ((c | 0) >= 4) {
                              x = (n | 0) > 2 ? n : 2;
                              e = 3;
                              k = 1;
                              while (1) {
                                f = 2;
                                a = k << 2;
                                p = h[(a + l) >> 1];
                                g = i[(d + 8) >> 2];
                                g =
                                  (o(p, (g << 2) >> 16) +
                                    (o(p, g & 16383) >> 14)) |
                                  0;
                                s = (a + j) | 0;
                                r = i[s >> 2];
                                k = (k + 1) | 0;
                                m = k << 2;
                                t = (m + j) | 0;
                                y = i[t >> 2];
                                u = (l + (a | 2)) | 0;
                                v = h[u >> 1];
                                w = (q + m) | 0;
                                z = i[w >> 2];
                                a = 1;
                                while (1) {
                                  m = a << 2;
                                  a = (m + 8) | 0;
                                  i[(a + z) >> 2] =
                                    i[(d + m) >> 2] +
                                    ((i[(a + d) >> 2] - g) | 0);
                                  g = (a + y) | 0;
                                  m = (i[(m + r) >> 2] + i[(a + r) >> 2]) | 0;
                                  a = f;
                                  f = i[(r + (a << 2)) >> 2];
                                  i[g >> 2] =
                                    ((m - (o(f & 16383, v) >> 14)) | 0) -
                                    o((f << 2) >> 16, v);
                                  f = (a + 1) | 0;
                                  m = f << 2;
                                  g = i[(m + d) >> 2];
                                  g =
                                    (o(p, (g << 2) >> 16) +
                                      (o(p, g & 16383) >> 14)) |
                                    0;
                                  if ((a | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                a = i[w >> 2];
                                f = (e + 2) | 0;
                                p = f << 2;
                                e = e << 2;
                                i[(a + p) >> 2] = i[(e + d) >> 2] - g;
                                g = i[s >> 2];
                                d = i[(g + m) >> 2];
                                g = i[(e + g) >> 2];
                                e = h[u >> 1];
                                i[(p + i[t >> 2]) >> 2] =
                                  ((g - (o(e, d & 16383) >> 14)) | 0) -
                                  o(e, (d << 2) >> 16);
                                d = a;
                                e = f;
                                if ((k | 0) != (x | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((c | 0) >= 1) {
                              a = n << 2;
                              f = i[(a + j) >> 2];
                              n = i[(a + q) >> 2];
                              d = 0;
                              e = 1;
                              a = 0;
                              while (1) {
                                j = (d - a) | 0;
                                a = ((e << 2) + 8) | 0;
                                d = i[(a + n) >> 2];
                                a = i[(a + f) >> 2];
                                j = (a + ((d + j) | 0)) | 0;
                                j =
                                  (j | 0) < -8388480 ? -32767 : (j + 128) >> 8;
                                h[((((e << 1) + b) | 0) + -2) >> 1] =
                                  (j | 0) < 32767 ? j : 32767;
                                j = (c | 0) != (e | 0);
                                e = (e + 1) | 0;
                                if (j) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Kb(a, b, c, d) {
                            var e = p(0),
                              f = p(0),
                              g = 0,
                              j = p(0),
                              k = p(0),
                              l = p(0),
                              n = 0,
                              o = p(0),
                              r = p(0),
                              u = p(0),
                              v = p(0),
                              w = 0,
                              x = p(0),
                              y = 0,
                              z = 0,
                              A = p(0),
                              B = p(0),
                              C = p(0),
                              D = p(0),
                              E = p(0),
                              F = 0,
                              G = 0,
                              H = 0,
                              I = 0;
                            g = c >> 1;
                            if ((c | 0) >= 2) {
                              I = (g | 0) > 1 ? g : 1;
                              while (1) {
                                e = f;
                                f = p(h[((w << 1) + b) >> 1]);
                                f = p(e + p(f * f));
                                w = (w + 1) | 0;
                                if ((I | 0) != (w | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((g | 0) < (c | 0)) {
                              while (1) {
                                j = p(h[((g << 1) + b) >> 1]);
                                x = p(x + p(j * j));
                                g = (g + 1) | 0;
                                if ((g | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            l = m[(a + 52) >> 2];
                            u = m[(a + 56) >> 2];
                            k = p(l / u);
                            m[(a + 48) >> 2] = k;
                            j = p(f + x);
                            e = m[a >> 2];
                            A = p(p(j * e) + p(p(p(1) - e) * m[(a + 4) >> 2]));
                            m[(a + 4) >> 2] = A;
                            B = m[(a + 16) >> 2];
                            r = p(ba(+p(j + p(6e3))));
                            C = m[(a + 12) >> 2];
                            e = p(r - C);
                            o = p(p(e * e) + p(0));
                            e = p(r - B);
                            o = p(o + p(e * e));
                            D = m[(a + 20) >> 2];
                            e = p(r - D);
                            o = p(o + p(e * e));
                            E = m[(a + 24) >> 2];
                            e = p(r - E);
                            o = p(o + p(e * e));
                            e = p(r - m[(a + 28) >> 2]);
                            o = p(s(p(p(o + p(e * e)) / p(150)), p(1)));
                            F = +d;
                            y = F + -0.4;
                            v = p(y * 3 * q(y));
                            G = +j;
                            e = p($a(G));
                            H = +u;
                            if (!(((j > p(6e3)) ^ 1) | ((H < 0.06) ^ 1))) {
                              l = p(+e * 0.05);
                              m[(a + 52) >> 2] = l;
                            }
                            a: {
                              b: {
                                z = +v;
                                n = +o;
                                c: {
                                  if (
                                    (+k * 1.2 > +e
                                      ? !(((z < 0.3) ^ 1) | ((n < 0.2) ^ 1))
                                      : 0) |
                                    (+k * 1.5 > +e
                                      ? !(((z < 0.3) ^ 1) | ((n < 0.05) ^ 1))
                                      : 0)
                                  ) {
                                    break c;
                                  }
                                  if (
                                    +k * 1.2 > +e
                                      ? !(((z < 0.4) ^ 1) | ((n < 0.05) ^ 1))
                                      : 0
                                  ) {
                                    break c;
                                  }
                                  if (((v < p(0)) ^ 1) | ((n < 0.05) ^ 1)) {
                                    break b;
                                  }
                                }
                                b = i[(a + 60) >> 2];
                                g = (b + 1) | 0;
                                i[(a + 60) >> 2] = g;
                                if ((b | 0) < 3) {
                                  break a;
                                }
                                u = p(H * 0.95 + 0.05);
                                m[(a + 56) >> 2] = u;
                                v = p(k * p(3));
                                l = p(+(v < e ? v : e) * 0.05 + +l * 0.95);
                                m[(a + 52) >> 2] = l;
                                break a;
                              }
                              g = 0;
                              i[(a + 60) >> 2] = 0;
                            }
                            if (!(((j > p(6e3)) ^ 1) | ((k > e) ^ 1))) {
                              m[(a + 56) >> 2] = +u * 0.95 + 0.05;
                              m[(a + 52) >> 2] = +e * 0.05 + +l * 0.95;
                            }
                            d: {
                              if (!((j < p(3e4)) ^ 1)) {
                                e =
                                  j < p(1e4)
                                    ? p(5.600000381469727)
                                    : p(6.300000190734863);
                                f = e;
                                if ((j < p(3e3)) ^ 1) {
                                  break d;
                                }
                                f = p(+e + -0.7);
                                break d;
                              }
                              l = p(j + p(1));
                              e = p(
                                s(p(t(p(ba(+p(l / p(A + p(1))))), p(-5))), p(2))
                              );
                              n = +e;
                              k = e > p(0) ? p(n * 0.6 + 7) : p(7);
                              e = e < p(0) ? p(n * 0.5 + +k) : k;
                              k = p(ba(+p(l / p(m[(a + 8) >> 2] + p(1)))));
                              if (!((k > p(0)) ^ 1)) {
                                e = p(+p(s(k, p(5))) * 0.5 + +e);
                              }
                              f = +f * 1.6 < +x ? p(e + p(0.5)) : e;
                            }
                            m[(a + 8) >> 2] = j;
                            e = p(F * 0.4 + +m[(a + 40) >> 2] * 0.6);
                            m[(a + 40) >> 2] = e;
                            k = m[(a + 44) >> 2];
                            f = p((y + (+e + -0.4)) * 2.2 + +f);
                            if (!((k > f) ^ 1)) {
                              f = p(+k * 0.5 + +f * 0.5);
                            }
                            f = (g | 0) > 2 ? p(4) : p(s(p(t(f, p(4))), p(10)));
                            if (g) {
                              f = p(
                                +f - (ba(+(g | 0) + 3) + -1.0986122886681098)
                              );
                            }
                            f = p(t(f, p(0)));
                            if (!((j < p(6e4)) ^ 1)) {
                              e: {
                                if ((g | 0) < 3) {
                                  break e;
                                }
                                n =
                                  (ba(+(g | 0) + 3) + -1.0986122886681098) *
                                  0.5;
                                f = p(+f - n);
                                if ((j < p(1e4)) ^ 1) {
                                  break e;
                                }
                                f = p(+f - n);
                              }
                              f = p(ba(G / 6e4 + 1e-4) * 0.3 + +p(t(f, p(0))));
                            }
                            m[(a + 36) >> 2] = d;
                            m[(a + 28) >> 2] = E;
                            m[(a + 24) >> 2] = D;
                            m[(a + 20) >> 2] = B;
                            m[(a + 16) >> 2] = C;
                            m[(a + 12) >> 2] = r;
                            d = p(t(f, p(-1)));
                            m[(a + 44) >> 2] = d;
                            return d;
                          }
                          function qb(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0;
                            p = (H - 32) | 0;
                            H = p;
                            a: {
                              b: {
                                c: {
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  while (1) {
                                    f = e << 1;
                                    h[(f + b) >> 1] = k[(a + f) >> 1];
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  f = h[b >> 1];
                                  j = p;
                                  i = (c + -1) | 0;
                                  e = 25736;
                                  d: {
                                    if (!i) {
                                      break d;
                                    }
                                    e = k[(b + 2) >> 1];
                                  }
                                  e = (e - f) | 0;
                                  h[j >> 1] =
                                    81920 /
                                    (((((e << 16) >> 16 < (f | 0) ? e : f) <<
                                      16) +
                                      19660800) >>
                                      16);
                                  e = 1;
                                  if ((c | 0) != 1) {
                                    while (1) {
                                      m = e << 1;
                                      f = (m + b) | 0;
                                      l = k[f >> 1];
                                      j = ((l - k[(f + -2) >> 1]) << 16) >> 16;
                                      f = (e + 1) | 0;
                                      e =
                                        (((e | 0) != (i | 0)
                                          ? k[((f << 1) + b) >> 1]
                                          : 25736) -
                                          l) |
                                        0;
                                      h[(m + p) >> 1] =
                                        81920 /
                                        (((((e << 16) >> 16 < (j | 0)
                                          ? e
                                          : j) <<
                                          16) +
                                          19660800) >>
                                          16);
                                      e = f;
                                      if ((e | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  e = 0;
                                  while (1) {
                                    f = ((e << 1) + b) | 0;
                                    h[f >> 1] =
                                      k[f >> 1] -
                                      (((o(e, 167772160) + 402653184) >>> 16) |
                                        0);
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  m = 2147483647;
                                  l = 0;
                                  f = 4016;
                                  j = 0;
                                  while (1) {
                                    i = 0;
                                    e = f;
                                    n = 0;
                                    while (1) {
                                      r = i;
                                      i =
                                        ((k[((n << 1) + b) >> 1] -
                                          (g[e | 0] << 5)) <<
                                          16) >>
                                        16;
                                      i = (r + o(i, i)) | 0;
                                      e = (e + 1) | 0;
                                      n = (n + 1) | 0;
                                      if ((n | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    e = (i | 0) < (m | 0);
                                    l = e ? j : l;
                                    m = e ? i : m;
                                    f = (c + f) | 0;
                                    j = (j + 1) | 0;
                                    if ((j | 0) != 64) {
                                      continue;
                                    }
                                    break;
                                  }
                                  f = o(c, l);
                                  e = 0;
                                  while (1) {
                                    j = ((e << 1) + b) | 0;
                                    h[j >> 1] =
                                      k[j >> 1] -
                                      (g[(((e + f) | 0) + 4016) | 0] << 5);
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  W(d, l, 6);
                                  if ((c | 0) < 1) {
                                    break b;
                                  }
                                  e = 0;
                                  while (1) {
                                    f = ((e << 1) + b) | 0;
                                    h[f >> 1] = k[f >> 1] << 1;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) < 1) {
                                    break b;
                                  }
                                  f = 2147483647;
                                  m = 0;
                                  j = 4528;
                                  l = 0;
                                  while (1) {
                                    i = 0;
                                    e = j;
                                    n = 0;
                                    while (1) {
                                      r = i;
                                      i = n << 1;
                                      q =
                                        ((k[(i + b) >> 1] - (g[e | 0] << 5)) <<
                                          16) >>
                                        16;
                                      q = o(q, q);
                                      i = h[(i + p) >> 1];
                                      i =
                                        (((r + (o(q & 32767, i) >> 15)) | 0) +
                                          o(i, (q << 1) >> 16)) |
                                        0;
                                      e = (e + 1) | 0;
                                      n = (n + 1) | 0;
                                      if ((n | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    e = (i | 0) < (f | 0);
                                    m = e ? l : m;
                                    f = e ? i : f;
                                    j = (c + j) | 0;
                                    l = (l + 1) | 0;
                                    if ((l | 0) != 64) {
                                      continue;
                                    }
                                    break;
                                  }
                                  f = o(c, m);
                                  e = 0;
                                  while (1) {
                                    j = ((e << 1) + b) | 0;
                                    h[j >> 1] =
                                      k[j >> 1] -
                                      (g[(((e + f) | 0) + 4528) | 0] << 5);
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  W(d, m, 6);
                                  e = 0;
                                  if ((c | 0) <= 0) {
                                    break a;
                                  }
                                  while (1) {
                                    d = ((e << 1) + b) | 0;
                                    h[d >> 1] = (h[d >> 1] + 1) >>> 1;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  e = 0;
                                  if ((c | 0) <= 0) {
                                    break a;
                                  }
                                  while (1) {
                                    d = e << 1;
                                    f = (d + b) | 0;
                                    h[f >> 1] = k[(a + d) >> 1] - k[f >> 1];
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                W(d, 0, 6);
                              }
                              W(d, 0, 6);
                            }
                            H = (p + 32) | 0;
                          }
                          function wb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = p(0),
                              j = 0;
                            f = (H - 16) | 0;
                            H = f;
                            a: {
                              b: {
                                switch (b | 0) {
                                  case 101:
                                    if (i[(a + 20) >> 2] < 1) {
                                      break a;
                                    }
                                    b = 0;
                                    while (1) {
                                      d = i[(a + 16) >> 2];
                                      h[((b << 1) + c) >> 1] = Z(
                                        (i[(a + 52) >> 2] + (o(d, b) << 1)) | 0,
                                        d
                                      );
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 20) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 26:
                                    if (i[(a + 24) >> 2] >= 1) {
                                      b = i[(a + 64) >> 2];
                                      c = 0;
                                      while (1) {
                                        i[(b + (c << 2)) >> 2] = 0;
                                        c = (c + 1) | 0;
                                        if ((c | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    b =
                                      (i[(a + 32) >> 2] + i[(a + 12) >> 2]) | 0;
                                    if ((b | 0) < 0) {
                                      break a;
                                    }
                                    U(i[(a + 48) >> 2], 0, ((b << 1) + 2) | 0);
                                    break a;
                                  case 6:
                                  case 8:
                                    i[(a + 120) >> 2] = i[c >> 2];
                                    break a;
                                  case 7:
                                  case 9:
                                    i[c >> 2] = i[(a + 120) >> 2];
                                    break a;
                                  case 0:
                                    i[(a + 124) >> 2] = i[c >> 2];
                                    break a;
                                  case 1:
                                    i[c >> 2] = i[(a + 124) >> 2];
                                    break a;
                                  case 3:
                                    i[c >> 2] = i[(a + 12) >> 2];
                                    break a;
                                  case 19:
                                    b = i[(a + 36) >> 2];
                                    e =
                                      i[
                                        (i[(a + 116) >> 2] +
                                          (i[(a + 120) >> 2] << 2)) >>
                                          2
                                      ];
                                    if (e) {
                                      i[c >> 2] =
                                        (o(b, i[(e + 52) >> 2]) | 0) /
                                        i[(a + 12) >> 2];
                                      e = 0;
                                      break a;
                                    }
                                    i[c >> 2] =
                                      (o(b, 5) | 0) / i[(a + 12) >> 2];
                                    e = 0;
                                    break a;
                                  case 24:
                                    i[(a + 36) >> 2] = i[c >> 2];
                                    break a;
                                  case 25:
                                    i[c >> 2] = i[(a + 36) >> 2];
                                    break a;
                                  case 20:
                                    b = i[c >> 2];
                                    a = (o(b, 20) + a) | 0;
                                    i[(a + 132) >> 2] = i[(c + 4) >> 2];
                                    c = i[(c + 8) >> 2];
                                    i[(a + 128) >> 2] = b;
                                    i[(a + 136) >> 2] = c;
                                    break a;
                                  case 22:
                                    i[(a + 452) >> 2] = i[(c + 4) >> 2];
                                    i[(a + 456) >> 2] = i[(c + 8) >> 2];
                                    i[(a + 448) >> 2] = i[c >> 2];
                                    break a;
                                  case 36:
                                    i[(a + 112) >> 2] = i[c >> 2];
                                    break a;
                                  case 37:
                                    i[c >> 2] = i[(a + 112) >> 2];
                                    break a;
                                  case 39:
                                    i[c >> 2] = i[(a + 16) >> 2];
                                    break a;
                                  case 44:
                                    i[(a + 492) >> 2] = i[c >> 2];
                                    break a;
                                  case 45:
                                    i[c >> 2] = i[(a + 492) >> 2];
                                    break a;
                                  case 47:
                                    b = h[(a + 86) >> 1];
                                    d = h[(a + 84) >> 1];
                                    a = h[(a + 88) >> 1];
                                    g = p(
                                      s(
                                        p(
                                          ba(+(((d | 0) / (a | 0)) | 0)) /
                                            ba(+(((b | 0) / (a | 0)) | 0))
                                        ),
                                        p(1)
                                      )
                                    );
                                    g = p((g > p(0) ? g : p(0)) * p(100));
                                    c: {
                                      if (p(q(g)) < p(2147483648)) {
                                        a = ~~g;
                                        break c;
                                      }
                                      a = -2147483648;
                                    }
                                    i[c >> 2] = a;
                                    break a;
                                  case 100:
                                    if (i[(a + 20) >> 2] < 1) {
                                      break a;
                                    }
                                    d = i[(a + 76) >> 2];
                                    b = 0;
                                    while (1) {
                                      j = b << 2;
                                      i[(j + c) >> 2] = i[(d + j) >> 2];
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 20) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 103:
                                    i[c >> 2] = i[(a + 484) >> 2];
                                    break a;
                                  case 104:
                                    i[(a + 80) >> 2] = c;
                                    break a;
                                  case 105:
                                    i[(a + 488) >> 2] = i[c >> 2];
                                    break a;
                                  case 106:
                                    i[c >> 2] = i[(a + 44) >> 2];
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(f + 4) >> 2] = b;
                              i[f >> 2] = 12742;
                              Y(i[3524], 12828, f);
                              e = -1;
                            }
                            H = (f + 16) | 0;
                            return e | 0;
                          }
                          function dc(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              j = 0,
                              k = 0,
                              l = 0;
                            g = i[(a + 4) >> 2];
                            c = g & 3;
                            d = g & -8;
                            f = (d + a) | 0;
                            a: {
                              if (!c) {
                                c = 0;
                                if (b >>> 0 < 256) {
                                  break a;
                                }
                                if (d >>> 0 >= (b + 4) >>> 0) {
                                  c = a;
                                  if ((d - b) >>> 0 <= (i[3928] << 1) >>> 0) {
                                    break a;
                                  }
                                }
                                return 0;
                              }
                              b: {
                                if (d >>> 0 >= b >>> 0) {
                                  c = (d - b) | 0;
                                  if (c >>> 0 < 16) {
                                    break b;
                                  }
                                  i[(a + 4) >> 2] = (g & 1) | b | 2;
                                  b = (a + b) | 0;
                                  i[(b + 4) >> 2] = c | 3;
                                  i[(f + 4) >> 2] = i[(f + 4) >> 2] | 1;
                                  Na(b, c);
                                  break b;
                                }
                                c = 0;
                                if (i[3814] == (f | 0)) {
                                  d = (d + i[3811]) | 0;
                                  if (d >>> 0 <= b >>> 0) {
                                    break a;
                                  }
                                  i[(a + 4) >> 2] = (g & 1) | b | 2;
                                  c = (a + b) | 0;
                                  b = (d - b) | 0;
                                  i[(c + 4) >> 2] = b | 1;
                                  i[3811] = b;
                                  i[3814] = c;
                                  break b;
                                }
                                if (i[3813] == (f | 0)) {
                                  d = (d + i[3810]) | 0;
                                  if (d >>> 0 < b >>> 0) {
                                    break a;
                                  }
                                  c = (d - b) | 0;
                                  c: {
                                    if (c >>> 0 >= 16) {
                                      i[(a + 4) >> 2] = (g & 1) | b | 2;
                                      b = (a + b) | 0;
                                      i[(b + 4) >> 2] = c | 1;
                                      d = (a + d) | 0;
                                      i[d >> 2] = c;
                                      i[(d + 4) >> 2] = i[(d + 4) >> 2] & -2;
                                      break c;
                                    }
                                    i[(a + 4) >> 2] = d | (g & 1) | 2;
                                    b = (a + d) | 0;
                                    i[(b + 4) >> 2] = i[(b + 4) >> 2] | 1;
                                    c = 0;
                                    b = 0;
                                  }
                                  i[3813] = b;
                                  i[3810] = c;
                                  break b;
                                }
                                e = i[(f + 4) >> 2];
                                if (e & 2) {
                                  break a;
                                }
                                h = (d + (e & -8)) | 0;
                                if (h >>> 0 < b >>> 0) {
                                  break a;
                                }
                                k = (h - b) | 0;
                                d: {
                                  if (e >>> 0 <= 255) {
                                    c = i[(f + 8) >> 2];
                                    e = (e >>> 3) | 0;
                                    d = i[(f + 12) >> 2];
                                    if ((d | 0) == (c | 0)) {
                                      i[3808] = i[3808] & ic(e);
                                      break d;
                                    }
                                    i[(c + 12) >> 2] = d;
                                    i[(d + 8) >> 2] = c;
                                    break d;
                                  }
                                  j = i[(f + 24) >> 2];
                                  d = i[(f + 12) >> 2];
                                  e: {
                                    if ((f | 0) != (d | 0)) {
                                      c = i[(f + 8) >> 2];
                                      i[(c + 12) >> 2] = d;
                                      i[(d + 8) >> 2] = c;
                                      break e;
                                    }
                                    f: {
                                      c = (f + 20) | 0;
                                      e = i[c >> 2];
                                      if (e) {
                                        break f;
                                      }
                                      c = (f + 16) | 0;
                                      e = i[c >> 2];
                                      if (e) {
                                        break f;
                                      }
                                      d = 0;
                                      break e;
                                    }
                                    while (1) {
                                      l = c;
                                      d = e;
                                      c = (d + 20) | 0;
                                      e = i[c >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      c = (d + 16) | 0;
                                      e = i[(d + 16) >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[l >> 2] = 0;
                                  }
                                  if (!j) {
                                    break d;
                                  }
                                  c = i[(f + 28) >> 2];
                                  e = ((c << 2) + 15536) | 0;
                                  g: {
                                    if (i[e >> 2] == (f | 0)) {
                                      i[e >> 2] = d;
                                      if (d) {
                                        break g;
                                      }
                                      i[3809] = i[3809] & ic(c);
                                      break d;
                                    }
                                    i[
                                      (j +
                                        (i[(j + 16) >> 2] == (f | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = d;
                                    if (!d) {
                                      break d;
                                    }
                                  }
                                  i[(d + 24) >> 2] = j;
                                  c = i[(f + 16) >> 2];
                                  if (c) {
                                    i[(d + 16) >> 2] = c;
                                    i[(c + 24) >> 2] = d;
                                  }
                                  c = i[(f + 20) >> 2];
                                  if (!c) {
                                    break d;
                                  }
                                  i[(d + 20) >> 2] = c;
                                  i[(c + 24) >> 2] = d;
                                }
                                if (k >>> 0 <= 15) {
                                  i[(a + 4) >> 2] = (g & 1) | h | 2;
                                  b = (a + h) | 0;
                                  i[(b + 4) >> 2] = i[(b + 4) >> 2] | 1;
                                  break b;
                                }
                                i[(a + 4) >> 2] = (g & 1) | b | 2;
                                b = (a + b) | 0;
                                i[(b + 4) >> 2] = k | 3;
                                c = (a + h) | 0;
                                i[(c + 4) >> 2] = i[(c + 4) >> 2] | 1;
                                Na(b, k);
                              }
                              c = a;
                            }
                            return c;
                          }
                          function Qb(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            j,
                            k,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r,
                            s
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            s = s | 0;
                            var t = 0;
                            d = i[(f + 4) >> 2];
                            e = i[f >> 2];
                            n = V(m, i[(f + 8) >> 2]);
                            e = (e + o(4 << d, s)) | 0;
                            f = V(m, i[(f + 4) >> 2]) << 2;
                            s = g[(e + f) | 0];
                            d = (s + 32) | 0;
                            t = g[(e + (f | 2)) | 0];
                            m = (t + 32) | 0;
                            e = (g[(e + (f | 1)) | 0] + 32) | 0;
                            c = (c + n) | 0;
                            a: {
                              if (!p | ((c | 0) <= (q | 0))) {
                                break a;
                              }
                              f = e >> 31;
                              f =
                                ((((((f + e) ^ f) +
                                  ((s | 0) > -32
                                    ? d
                                    : (0 - ((d >>> 1) | 0)) | 0)) |
                                  0) +
                                  ((t | 0) > -32
                                    ? m
                                    : (0 - ((m >>> 1) | 0)) | 0)) <<
                                  16) >>
                                16;
                              n = r >> ((p | 0) > 3);
                              n = (n | 0) < 62 ? n : 62;
                              if ((f | 0) <= (n | 0)) {
                                break a;
                              }
                              f = (((n << 14) / (f | 0)) << 16) >> 16;
                              m = (o(f, m) >>> 14) | 0;
                              e = (o(e, f) >>> 14) | 0;
                              d = (o(d, f) >>> 14) | 0;
                            }
                            i[k >> 2] = c;
                            h[(l + 4) >> 1] = m;
                            h[(l + 2) >> 1] = e;
                            h[l >> 1] = d;
                            l = 0;
                            b = U(b, 0, j << 2);
                            k = m << 7;
                            f = (c + 1) | 0;
                            m = (f | 0) < (j | 0) ? f : j;
                            if ((m | 0) >= 1) {
                              n = (f | 0) > (j | 0) ? j : f;
                              p = (k << 16) >> 16;
                              while (1) {
                                q = (b + (l << 2)) | 0;
                                i[q >> 2] =
                                  i[q >> 2] +
                                  o(p, h[(((l - f) << 1) + a) >> 1]);
                                l = (l + 1) | 0;
                                if ((n | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = (c + f) | 0;
                            l = (f | 0) < (j | 0) ? f : j;
                            if ((m | 0) < (l | 0)) {
                              k = (k << 16) >> 16;
                              while (1) {
                                n = (b + (m << 2)) | 0;
                                i[n >> 2] =
                                  i[n >> 2] +
                                  o(k, h[(((m - f) << 1) + a) >> 1]);
                                m = (m + 1) | 0;
                                if ((m | 0) < (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = e << 7;
                            m = (c | 0) < (j | 0) ? c : j;
                            if ((m | 0) >= 1) {
                              f = (c | 0) > (j | 0) ? j : c;
                              k = (e << 16) >> 16;
                              l = 0;
                              while (1) {
                                n = (b + (l << 2)) | 0;
                                i[n >> 2] =
                                  i[n >> 2] +
                                  o(k, h[(((l - c) << 1) + a) >> 1]);
                                l = (l + 1) | 0;
                                if ((f | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = c << 1;
                            k = (f | 0) < (j | 0) ? f : j;
                            if ((m | 0) < (k | 0)) {
                              e = (e << 16) >> 16;
                              while (1) {
                                l = (b + (m << 2)) | 0;
                                i[l >> 2] =
                                  i[l >> 2] +
                                  o(e, h[(((m - f) << 1) + a) >> 1]);
                                m = (m + 1) | 0;
                                if ((m | 0) < (k | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = d << 7;
                            d = (c + -1) | 0;
                            m = (d | 0) < (j | 0) ? d : j;
                            if ((m | 0) >= 1) {
                              f = (d | 0) > (j | 0) ? j : d;
                              k = (e << 16) >> 16;
                              l = 0;
                              while (1) {
                                n = (b + (l << 2)) | 0;
                                i[n >> 2] =
                                  i[n >> 2] +
                                  o(k, h[(((l - d) << 1) + a) >> 1]);
                                l = (l + 1) | 0;
                                if ((f | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            c = (c + d) | 0;
                            d = (c | 0) < (j | 0) ? c : j;
                            if ((m | 0) < (d | 0)) {
                              e = (e << 16) >> 16;
                              while (1) {
                                f = (b + (m << 2)) | 0;
                                i[f >> 2] =
                                  i[f >> 2] +
                                  o(e, h[(((m - c) << 1) + a) >> 1]);
                                m = (m + 1) | 0;
                                if ((m | 0) < (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function ua(a, b, c, d, e, f, g) {
                            var i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0;
                            n = ((g & 1) + g) | 0;
                            i = d >> 1;
                            j = (n + ((i + 32) << 1)) | 0;
                            if ((d | 0) >= 2) {
                              l = (i | 0) > 1 ? i : 1;
                              g = 0;
                              while (1) {
                                h[((g << 1) + n) >> 1] =
                                  k[((((g ^ -1) + i) << 1) + a) >> 1];
                                g = (g + 1) | 0;
                                if ((l | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            g = 0;
                            while (1) {
                              h[(((g + i) << 1) + n) >> 1] =
                                k[(((g << 2) | 2) + e) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                            j = (j + (j & 1)) | 0;
                            if ((d | 0) >= 2) {
                              a = (i | 0) > 1 ? i : 1;
                              g = 0;
                              while (1) {
                                h[(j + (g << 1)) >> 1] =
                                  k[((((g ^ -1) + i) << 1) + b) >> 1];
                                g = (g + 1) | 0;
                                if ((a | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            g = 0;
                            while (1) {
                              h[(j + ((g + i) << 1)) >> 1] =
                                k[(((g << 2) | 2) + f) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                            if ((d | 0) >= 2) {
                              C = (i + -2) | 0;
                              while (1) {
                                d = 0;
                                l = 0;
                                q = 0;
                                b = (v + C) << 1;
                                a = k[(b + n) >> 1];
                                b = k[(b + j) >> 1];
                                g = 0;
                                r = 0;
                                while (1) {
                                  m = g << 2;
                                  w = h[((m | 2) + 12848) >> 1];
                                  x = (b << 16) >> 16;
                                  a = (a << 16) >> 16;
                                  p = (o(w, (x + a) | 0) + l) | 0;
                                  b = (((g + i) | 0) + v) << 1;
                                  l = (b + -2) | 0;
                                  t = h[(l + j) >> 1];
                                  u = h[(l + n) >> 1];
                                  y = (t + u) | 0;
                                  z = h[((m | 6) + 12848) >> 1];
                                  l = (p + o(y, z)) | 0;
                                  p = h[(m + 12848) >> 1];
                                  A = ((0 - p) << 16) >> 16;
                                  m = h[((m | 4) + 12848) >> 1];
                                  B = ((0 - m) << 16) >> 16;
                                  q =
                                    (((((((o(a, p) + q) | 0) + o(A, x)) | 0) +
                                      o(m, u)) |
                                      0) +
                                      o(t, B)) |
                                    0;
                                  a = h[(b + n) >> 1];
                                  b = h[(b + j) >> 1];
                                  d =
                                    (((o(w, y) + d) | 0) + o((a + b) | 0, z)) |
                                    0;
                                  r =
                                    (((((((o(u, p) + r) | 0) + o(t, A)) | 0) +
                                      o(a, m)) |
                                      0) +
                                      o(b, B)) |
                                    0;
                                  g = (g + 2) | 0;
                                  if ((g | 0) < 32) {
                                    continue;
                                  }
                                  break;
                                }
                                a = s << 2;
                                b = (r + 16384) >> 15;
                                h[(a + c) >> 1] =
                                  (r | 0) > 1073725439
                                    ? 32767
                                    : (b | 0) > -32767
                                    ? b
                                    : -32767;
                                b = (d + 16384) >> 15;
                                h[((a | 2) + c) >> 1] =
                                  (d | 0) > 1073725439
                                    ? 32767
                                    : (b | 0) > -32767
                                    ? b
                                    : -32767;
                                b = (q + 16384) >> 15;
                                h[((a | 4) + c) >> 1] =
                                  (q | 0) > 1073725439
                                    ? 32767
                                    : (b | 0) > -32767
                                    ? b
                                    : -32767;
                                b = ((a | 6) + c) | 0;
                                a = (l + 16384) >> 15;
                                h[b >> 1] =
                                  (l | 0) > 1073725439
                                    ? 32767
                                    : (a | 0) > -32767
                                    ? a
                                    : -32767;
                                v = (-2 - s) | 0;
                                s = (s + 2) | 0;
                                if ((s | 0) < (i | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            g = 0;
                            while (1) {
                              h[(((g << 2) | 2) + e) >> 1] =
                                k[((g << 1) + n) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                            g = 0;
                            while (1) {
                              h[(((g << 2) | 2) + f) >> 1] =
                                k[(j + (g << 1)) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                          }
                          function Z(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              i = 0;
                            c = 10;
                            a: {
                              b: {
                                c: {
                                  if ((b | 0) < 1) {
                                    break c;
                                  }
                                  while (1) {
                                    f = h[((e << 1) + a) >> 1];
                                    d = f >> 31;
                                    d = d ^ (d + f);
                                    c =
                                      (((d | 0) > (c << 16) >> 16 ? d : c) <<
                                        16) >>
                                      16;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) >= 16384) {
                                    c = 0;
                                    if ((b | 0) >= 1) {
                                      e = 0;
                                      while (1) {
                                        g = c;
                                        c = e << 1;
                                        d = h[((c | 2) + a) >> 1] >> 1;
                                        f = o(d, d);
                                        d = h[(a + c) >> 1] >> 1;
                                        f = (f + o(d, d)) | 0;
                                        d = h[((c | 4) + a) >> 1] >> 1;
                                        c = h[((c | 6) + a) >> 1] >> 1;
                                        c =
                                          (g +
                                            (((((f + o(d, d)) | 0) +
                                              o(c, c)) >>>
                                              6) |
                                              0)) |
                                          0;
                                        e = (e + 4) | 0;
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    a = ((c | 0) / (b | 0)) | 0;
                                    b = a >>> 0 > 65535;
                                    c = b << 3;
                                    g = c | 4;
                                    d = c;
                                    b = b ? (a >>> 16) | 0 : a;
                                    c = b >>> 0 > 255;
                                    e = c ? g : d;
                                    b = c ? (b >>> 8) | 0 : b;
                                    c = b >>> 0 > 15;
                                    b =
                                      (c ? e | 2 : e) |
                                      ((c ? (b >>> 4) | 0 : b) >>> 0 > 3);
                                    c = b << 1;
                                    d = a >> (c + -12);
                                    a = a << (12 - c);
                                    c = (b << 16) >> 16;
                                    a = (((c | 0) > 6 ? d : a) << 16) >> 16;
                                    a =
                                      (((o(
                                        (((o(
                                          (o(a, 16816) + -827523072) >> 16,
                                          a
                                        ) <<
                                          2) &
                                          -65536) +
                                          1387593728) >>
                                          16,
                                        a
                                      ) <<
                                        2) &
                                        -65536) +
                                        238157824) >>
                                      16;
                                    b = (13 - b) | 0;
                                    a =
                                      (((c | 0) < 13 ? a >> b : a << (0 - b)) <<
                                        16) >>
                                      12;
                                    break a;
                                  }
                                  if ((c | 0) <= 4095) {
                                    break c;
                                  }
                                  d = (c | 0) < 8192;
                                  break b;
                                }
                                d = 2;
                              }
                              e = (c | 0) < 2048 ? 3 : d;
                              d = 0;
                              if ((b | 0) >= 1) {
                                c = 0;
                                while (1) {
                                  g = d;
                                  d = c << 1;
                                  f =
                                    ((h[((d | 2) + a) >> 1] << e) << 16) >> 16;
                                  i = o(f, f);
                                  f = ((h[(a + d) >> 1] << e) << 16) >> 16;
                                  i = (i + o(f, f)) | 0;
                                  f =
                                    ((h[((d | 4) + a) >> 1] << e) << 16) >> 16;
                                  d =
                                    ((h[((d | 6) + a) >> 1] << e) << 16) >> 16;
                                  d =
                                    (g +
                                      (((((i + o(f, f)) | 0) + o(d, d)) >>> 6) |
                                        0)) |
                                    0;
                                  c = (c + 4) | 0;
                                  if ((c | 0) < (b | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              a = ((d | 0) / (b | 0)) | 0;
                              b = a >>> 0 > 65535;
                              c = b << 3;
                              g = c | 4;
                              d = c;
                              b = b ? (a >>> 16) | 0 : a;
                              c = b >>> 0 > 255;
                              d = c ? g : d;
                              b = c ? (b >>> 8) | 0 : b;
                              c = b >>> 0 > 15;
                              b =
                                (c ? d | 2 : d) |
                                ((c ? (b >>> 4) | 0 : b) >>> 0 > 3);
                              c = b << 1;
                              d = a >> (c + -12);
                              a = a << (12 - c);
                              c = (b << 16) >> 16;
                              a = (((c | 0) > 6 ? d : a) << 16) >> 16;
                              a =
                                (((o(
                                  (((o((o(a, 16816) + -827523072) >> 16, a) <<
                                    2) &
                                    -65536) +
                                    1387593728) >>
                                    16,
                                  a
                                ) <<
                                  2) &
                                  -65536) +
                                  238157824) >>
                                16;
                              b = (13 - b) | 0;
                              a =
                                ((((c | 0) < 13 ? a >> b : a << (0 - b)) <<
                                  16) >>
                                  16) <<
                                (e ^ 3);
                            }
                            return (a << 16) >> 16;
                          }
                          function tb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0;
                            if ((b | 0) >= 1) {
                              while (1) {
                                e = ((d << 1) + a) | 0;
                                d = (d + 1) | 0;
                                h[e >> 1] = d << 11;
                                if ((b | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            b = o(V(c, 6), 10);
                            h[a >> 1] = (g[(b + 8848) | 0] << 5) + k[a >> 1];
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 8850) | 0] << 5);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 8851) | 0] << 5);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 8852) | 0] << 5);
                            h[(a + 10) >> 1] =
                              k[(a + 10) >> 1] + (g[(b + 8853) | 0] << 5);
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 8854) | 0] << 5);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 8855) | 0] << 5);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 8856) | 0] << 5);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 8857) | 0] << 5);
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[((b | 1) + 8848) | 0] << 5);
                            b = o(V(c, 6), 5);
                            h[a >> 1] = (g[(b + 9488) | 0] << 4) + k[a >> 1];
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[(b + 9489) | 0] << 4);
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 9490) | 0] << 4);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 9491) | 0] << 4);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 9492) | 0] << 4);
                            b = o(V(c, 6), 5);
                            h[a >> 1] = (g[(b + 9808) | 0] << 3) + k[a >> 1];
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[(b + 9809) | 0] << 3);
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 9810) | 0] << 3);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 9811) | 0] << 3);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 9812) | 0] << 3);
                            b = o(V(c, 6), 5);
                            h[(a + 10) >> 1] =
                              (g[(b + 10128) | 0] << 4) + k[(a + 10) >> 1];
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 10129) | 0] << 4);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 10130) | 0] << 4);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 10131) | 0] << 4);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 10132) | 0] << 4);
                            b = o(V(c, 6), 5);
                            h[(a + 10) >> 1] =
                              (g[(b + 10448) | 0] << 3) + k[(a + 10) >> 1];
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 10449) | 0] << 3);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 10450) | 0] << 3);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 10451) | 0] << 3);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 10452) | 0] << 3);
                          }
                          function ob(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            d = (H - 16) | 0;
                            H = d;
                            b = T(168);
                            if (b) {
                              i[b >> 2] = a;
                              a = i[a >> 2];
                              c = i[a >> 2];
                              c = J[i[(c + 20) >> 2]](c) | 0;
                              i[(b + 4) >> 2] = c;
                              J[i[(i[c >> 2] + 44) >> 2]](
                                c,
                                106,
                                (b + 44) | 0
                              ) | 0;
                              c = i[(a + 4) >> 2];
                              i[(b + 12) >> 2] = c;
                              i[(b + 8) >> 2] = c << 1;
                              e = i[(a + 8) >> 2];
                              i[(b + 16) >> 2] = e;
                              i[(b + 24) >> 2] = c + e;
                              i[(b + 20) >> 2] = (c | 0) / (e | 0);
                              c = i[(a + 12) >> 2];
                              i[(b + 148) >> 2] = a + 24;
                              i[(b + 144) >> 2] = 1;
                              i[(b + 28) >> 2] = c;
                              c = i[(a + 56) >> 2];
                              i[(b + 156) >> 2] = c;
                              i[(b + 152) >> 2] = c;
                              i[(d + 12) >> 2] = 9;
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 44) >> 2]](c, 4, (d + 12) | 0) |
                                0;
                              i[(d + 12) >> 2] = 1;
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 44) >> 2]](
                                c,
                                105,
                                (d + 12) | 0
                              ) | 0;
                              h[(b + 36) >> 1] = k[(a + 20) >> 1];
                              h[(b + 38) >> 1] = k[(a + 16) >> 1];
                              a = k[(a + 18) >> 1];
                              i[(b + 32) >> 2] = 1;
                              h[(b + 40) >> 1] = a;
                              i[(b + 48) >> 2] = T(
                                (i[(b + 24) >> 2] - i[(b + 12) >> 2]) << 1
                              );
                              i[(b + 52) >> 2] = T(128);
                              a = T(128);
                              i[(b + 64) >> 2] = 13328;
                              i[(b + 60) >> 2] = 13360;
                              i[(b + 56) >> 2] = a;
                              c = i[(b + 28) >> 2];
                              a = c << 1;
                              e = T(a);
                              i[(b + 68) >> 2] = e;
                              i[(b + 72) >> 2] = T(a);
                              i[(b + 76) >> 2] = T(a);
                              a = i[(b + 20) >> 2];
                              i[(b + 92) >> 2] = T(a << 2);
                              a = T(a << 1);
                              i[(b + 100) >> 2] = 0;
                              i[(b + 96) >> 2] = a;
                              a = c << 2;
                              i[(b + 80) >> 2] = T(a);
                              i[(b + 84) >> 2] = T(a);
                              i[(b + 88) >> 2] = T(a);
                              if ((c | 0) >= 1) {
                                f = (c + 1) | 0;
                                a = 0;
                                while (1) {
                                  g = (e + (a << 1)) | 0;
                                  a = (a + 1) | 0;
                                  h[g >> 1] =
                                    (o((a << 16) >> 16, 25736) | 0) / (f | 0);
                                  if ((a | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              i[(b + 112) >> 2] = 0;
                              i[(b + 116) >> 2] = 2e4;
                              i[(b + 104) >> 2] = 1090519040;
                              i[(b + 108) >> 2] = 0;
                              i[(b + 160) >> 2] = 2;
                              i[(b + 136) >> 2] = 0;
                              i[(b + 140) >> 2] = 0;
                              i[(b + 120) >> 2] = 0;
                              a = i[(b + 4) >> 2];
                              J[i[(i[a >> 2] + 44) >> 2]](
                                a,
                                25,
                                (b + 164) | 0
                              ) | 0;
                              i[(b + 164) >> 2] = i[(b + 164) >> 2] << 1;
                            }
                            H = (d + 16) | 0;
                            return b | 0;
                          }
                          function Db(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            c = i[a >> 2];
                            b = T(224);
                            if (b) {
                              d = T(32e3);
                              i[b >> 2] = a;
                              i[(b + 64) >> 2] = d;
                              a = i[c >> 2];
                              i[(b + 8) >> 2] = a;
                              d = i[(c + 4) >> 2];
                              i[(b + 12) >> 2] = d;
                              i[(b + 20) >> 2] = a + d;
                              f = ((a | 0) / (d | 0)) | 0;
                              i[(b + 16) >> 2] = f;
                              a = i[(c + 8) >> 2];
                              i[(b + 24) >> 2] = a;
                              h[(b + 56) >> 1] = k[(c + 20) >> 1];
                              h[(b + 58) >> 1] = k[(c + 22) >> 1];
                              i[(b + 28) >> 2] = i[(c + 12) >> 2];
                              i[(b + 32) >> 2] = i[(c + 16) >> 2];
                              e = k[(c + 24) >> 1];
                              i[(b + 204) >> 2] = c + 28;
                              h[(b + 60) >> 1] = e;
                              e = i[(c + 92) >> 2];
                              i[(b + 208) >> 2] = e;
                              i[(b + 212) >> 2] = e;
                              i[(b + 200) >> 2] = 1;
                              i[(b + 36) >> 2] = 1024;
                              i[(b + 40) >> 2] = 1;
                              i[(b + 68) >> 2] = T(d << 1);
                              d = T(
                                (((i[(c + 16) >> 2] + i[c >> 2]) << 1) + 4) | 0
                              );
                              i[(b + 72) >> 2] = d;
                              e = i[(c + 16) >> 2];
                              i[(b + 76) >> 2] = ((d + (e << 1)) | 0) + 4;
                              d = T((((e + i[c >> 2]) << 1) + 4) | 0);
                              i[(b + 80) >> 2] = d;
                              c = i[(c + 16) >> 2];
                              i[(b + 92) >> 2] = 13328;
                              i[(b + 88) >> 2] = 13360;
                              i[(b + 84) >> 2] = ((d + (c << 1)) | 0) + 4;
                              c = a << 1;
                              d = T(c);
                              i[(b + 96) >> 2] = d;
                              c = T(c);
                              i[(b + 4) >> 2] = 1;
                              i[(b + 100) >> 2] = c;
                              if ((a | 0) >= 1) {
                                e = (a + 1) | 0;
                                c = 0;
                                while (1) {
                                  g = (d + (c << 1)) | 0;
                                  c = (c + 1) | 0;
                                  h[g >> 1] =
                                    (o((c << 16) >> 16, 25736) | 0) / (e | 0);
                                  if ((a | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              a = a << 2;
                              i[(b + 104) >> 2] = T(a);
                              i[(b + 108) >> 2] = T(a);
                              i[(b + 112) >> 2] = T(a);
                              i[(b + 116) >> 2] = T(a);
                              i[(b + 120) >> 2] = T(a);
                              a = f << 2;
                              i[(b + 132) >> 2] = T(a);
                              i[(b + 52) >> 2] = T(a);
                              a = T(64);
                              i[(b + 140) >> 2] = a;
                              Lb(a);
                              i[(b + 152) >> 2] = 0;
                              i[(b + 156) >> 2] = 0;
                              i[(b + 144) >> 2] = 1090519040;
                              i[(b + 160) >> 2] = 0;
                              i[(b + 164) >> 2] = 0;
                              i[(b + 168) >> 2] = 0;
                              i[(b + 172) >> 2] = 0;
                              i[(b + 176) >> 2] = 0;
                              i[(b + 180) >> 2] = 0;
                              i[(b + 196) >> 2] = 2;
                              i[(b + 216) >> 2] = 0;
                              i[(b + 220) >> 2] = 1;
                              i[(b + 188) >> 2] = 2;
                              i[(b + 192) >> 2] = 8e3;
                            }
                            return b | 0;
                          }
                          function ab(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            h = (H - 128) | 0;
                            g = h;
                            H = g;
                            i[d >> 2] = 0;
                            a: {
                              if (b >>> 0 <= 79) {
                                ma(13984);
                                break a;
                              }
                              X((g + 8) | 0, a, 80);
                              if (
                                (i[(g + 8) >> 2] != 1701146707) |
                                (i[(g + 12) >> 2] != 538976376)
                              ) {
                                ma(13945);
                                break a;
                              }
                              e = eb((g + 8) | 0);
                              X((g + 8) | 0, e, 80);
                              S(e);
                              n = 160;
                              e = 10920;
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f = i[(g + 48) >> 2];
                                      switch (f | 0) {
                                        case 0:
                                          break b;
                                        case 1:
                                          break d;
                                        default:
                                          break e;
                                      }
                                    }
                                    if ((f | 0) != 16777216) {
                                      break c;
                                    }
                                  }
                                  n = 320;
                                  p = 1;
                                  e = 11588;
                                  break b;
                                }
                                ma(13760);
                              }
                              k = J[i[(e + 32) >> 2]](e) | 0;
                              q = n << 1;
                              r = (h - ((q + 15) & -16)) | 0;
                              h = r;
                              H = h;
                              i[(g + 4) >> 2] = 1;
                              J[i[(i[k >> 2] + 48) >> 2]](k, 0, (g + 4) | 0) |
                                0;
                              Fa((g + 88) | 0);
                              e = i[3654];
                              s = (h - ((e + 15) & -16)) | 0;
                              H = s;
                              h = o(b, 10);
                              i[c >> 2] = Pa(h);
                              f: {
                                g: {
                                  if ((b | 0) == 80) {
                                    break g;
                                  }
                                  l = e;
                                  e = j[(a + 80) | 0] | (j[(a + 81) | 0] << 8);
                                  f = (((e << 24) | (e << 8)) >>> 16) | 0;
                                  if ((l | 0) >= (f | 0)) {
                                    a = (a + 82) | 0;
                                    e = (b + -82) | 0;
                                    b = h;
                                    while (1) {
                                      if (e >>> 0 < f >>> 0) {
                                        ma(13855);
                                        p = 0;
                                        break f;
                                      }
                                      bb(k, (g + 88) | 0, X(s, a, f), r, n, f);
                                      t = (e - f) | 0;
                                      u = (m + n) | 0;
                                      h: {
                                        if (u >>> 0 <= b >>> 0) {
                                          e = i[c >> 2];
                                          break h;
                                        }
                                        while (1) {
                                          b = (b + h) | 0;
                                          e = Pa(b);
                                          l = i[c >> 2];
                                          v = X(e, l, m);
                                          if (l) {
                                            S(l);
                                          }
                                          i[c >> 2] = v;
                                          if (u >>> 0 > b >>> 0) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      X((e + m) | 0, r, q);
                                      m = (m + q) | 0;
                                      if (!t) {
                                        break g;
                                      }
                                      e = (t + -2) | 0;
                                      f = (a + f) | 0;
                                      a = (f + 2) | 0;
                                      f = j[f | 0] | (j[(f + 1) | 0] << 8);
                                      f = (((f << 24) | (f << 8)) >>> 16) | 0;
                                      if (i[3654] >= (f | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  ma(13885);
                                  p = 0;
                                  break f;
                                }
                                i[d >> 2] = m;
                              }
                              if (i[(g + 104) >> 2]) {
                                S(i[(g + 88) >> 2]);
                              }
                              J[i[(i[k >> 2] + 36) >> 2]](k);
                            }
                            H = (g + 128) | 0;
                            return p | 0;
                          }
                          function X(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            if (c >>> 0 >= 512) {
                              C(a | 0, b | 0, c | 0) | 0;
                              return a;
                            }
                            e = (a + c) | 0;
                            a: {
                              if (!((a ^ b) & 3)) {
                                b: {
                                  if ((c | 0) < 1) {
                                    c = a;
                                    break b;
                                  }
                                  if (!(a & 3)) {
                                    c = a;
                                    break b;
                                  }
                                  c = a;
                                  while (1) {
                                    g[c | 0] = j[b | 0];
                                    b = (b + 1) | 0;
                                    c = (c + 1) | 0;
                                    if (c >>> 0 >= e >>> 0) {
                                      break b;
                                    }
                                    if (c & 3) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                d = e & -4;
                                c: {
                                  if (d >>> 0 < 64) {
                                    break c;
                                  }
                                  f = (d + -64) | 0;
                                  if (c >>> 0 > f >>> 0) {
                                    break c;
                                  }
                                  while (1) {
                                    i[c >> 2] = i[b >> 2];
                                    i[(c + 4) >> 2] = i[(b + 4) >> 2];
                                    i[(c + 8) >> 2] = i[(b + 8) >> 2];
                                    i[(c + 12) >> 2] = i[(b + 12) >> 2];
                                    i[(c + 16) >> 2] = i[(b + 16) >> 2];
                                    i[(c + 20) >> 2] = i[(b + 20) >> 2];
                                    i[(c + 24) >> 2] = i[(b + 24) >> 2];
                                    i[(c + 28) >> 2] = i[(b + 28) >> 2];
                                    i[(c + 32) >> 2] = i[(b + 32) >> 2];
                                    i[(c + 36) >> 2] = i[(b + 36) >> 2];
                                    i[(c + 40) >> 2] = i[(b + 40) >> 2];
                                    i[(c + 44) >> 2] = i[(b + 44) >> 2];
                                    i[(c + 48) >> 2] = i[(b + 48) >> 2];
                                    i[(c + 52) >> 2] = i[(b + 52) >> 2];
                                    i[(c + 56) >> 2] = i[(b + 56) >> 2];
                                    i[(c + 60) >> 2] = i[(b + 60) >> 2];
                                    b = (b - -64) | 0;
                                    c = (c - -64) | 0;
                                    if (c >>> 0 <= f >>> 0) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if (c >>> 0 >= d >>> 0) {
                                  break a;
                                }
                                while (1) {
                                  i[c >> 2] = i[b >> 2];
                                  b = (b + 4) | 0;
                                  c = (c + 4) | 0;
                                  if (c >>> 0 < d >>> 0) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if (e >>> 0 < 4) {
                                c = a;
                                break a;
                              }
                              d = (e + -4) | 0;
                              if (d >>> 0 < a >>> 0) {
                                c = a;
                                break a;
                              }
                              c = a;
                              while (1) {
                                g[c | 0] = j[b | 0];
                                g[(c + 1) | 0] = j[(b + 1) | 0];
                                g[(c + 2) | 0] = j[(b + 2) | 0];
                                g[(c + 3) | 0] = j[(b + 3) | 0];
                                b = (b + 4) | 0;
                                c = (c + 4) | 0;
                                if (c >>> 0 <= d >>> 0) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if (c >>> 0 < e >>> 0) {
                              while (1) {
                                g[c | 0] = j[b | 0];
                                b = (b + 1) | 0;
                                c = (c + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return a;
                          }
                          function La(a, b, c, d, e, f, g) {
                            var j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            h[d >> 1] = 8192;
                            m = (((0 - g) & 3) + g) | 0;
                            l = (m + (f << 2)) | 0;
                            n = (0 - l) | 0;
                            if ((f | 0) > 0) {
                              while (1) {
                                g = (j + 1) | 0;
                                h[((g << 1) + d) >> 1] = k[((j << 1) + b) >> 1];
                                j = g;
                                if ((j | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                              j = f;
                            }
                            b = (j + 1) | 0;
                            if ((b | 0) < (e | 0)) {
                              U(((b << 1) + d) | 0, 0, ((j ^ -1) + e) << 1);
                            }
                            g = (l + (n & 3)) | 0;
                            j = 0;
                            if ((f | 0) > 0) {
                              while (1) {
                                b = j << 2;
                                i[(b + g) >> 2] = 0;
                                i[(b + m) >> 2] = 0;
                                j = (j + 1) | 0;
                                if ((j | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            a: {
                              if ((e | 0) < 1) {
                                break a;
                              }
                              n = (f + -1) | 0;
                              b = n << 2;
                              q = (b + g) | 0;
                              j = n << 1;
                              r = (j + a) | 0;
                              s = (b + m) | 0;
                              t = (c + j) | 0;
                              l = 0;
                              if ((f | 0) >= 2) {
                                while (1) {
                                  f = ((l << 1) + d) | 0;
                                  p =
                                    (k[f >> 1] +
                                      ((((i[m >> 2] << 3) + 32768) >>> 16) |
                                        0)) |
                                    0;
                                  b =
                                    ((((i[g >> 2] + (((p << 16) >> 16) << 14)) |
                                      0) +
                                      4096) >>>
                                      13) |
                                    0;
                                  h[f >> 1] = b;
                                  j = 0;
                                  f = ((0 - p) << 16) >> 16;
                                  p = (0 - (b << 16)) >> 16;
                                  while (1) {
                                    u = j << 2;
                                    b = (j + 1) | 0;
                                    v = b << 2;
                                    j = j << 1;
                                    i[(u + m) >> 2] =
                                      i[(v + m) >> 2] + o(f, h[(j + c) >> 1]);
                                    i[(g + u) >> 2] =
                                      i[(g + v) >> 2] + o(p, h[(a + j) >> 1]);
                                    j = b;
                                    if ((n | 0) != (j | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[s >> 2] = o(f, h[t >> 1]);
                                  i[q >> 2] = o(p, h[r >> 1]);
                                  l = (l + 1) | 0;
                                  if ((l | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = ((l << 1) + d) | 0;
                                c =
                                  (k[b >> 1] +
                                    ((((i[m >> 2] << 3) + 32768) >>> 16) | 0)) |
                                  0;
                                a =
                                  ((((i[g >> 2] + (((c << 16) >> 16) << 14)) |
                                    0) +
                                    4096) >>>
                                    13) |
                                  0;
                                h[b >> 1] = a;
                                i[s >> 2] = o(h[t >> 1], ((0 - c) << 16) >> 16);
                                i[q >> 2] = o(h[r >> 1], (0 - (a << 16)) >> 16);
                                l = (l + 1) | 0;
                                if ((l | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ga(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              r = (f + -1) | 0;
                              s = ((r << 2) + j) | 0;
                              if ((c | 0) >= 1) {
                                while (1) {
                                  m = 0;
                                  l = 0;
                                  k = b;
                                  while (1) {
                                    m =
                                      (o(h[k >> 1], h[((l << 1) + a) >> 1]) +
                                        m) |
                                      0;
                                    k = (k + 2) | 0;
                                    l = (l + 1) | 0;
                                    if ((l | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  v = c << 1;
                                  t = (m | 0) > 0;
                                  n =
                                    ((i[((p << 2) + e) >> 2] >> 1) +
                                      (t ? (0 - m) | 0 : m)) |
                                    0;
                                  b: {
                                    if (
                                      (n | 0) >= i[s >> 2]
                                        ? (p | 0) >= (f | 0)
                                        : 0
                                    ) {
                                      break b;
                                    }
                                    m = r;
                                    l = m;
                                    k = f;
                                    c: {
                                      if ((k | 0) < 2) {
                                        break c;
                                      }
                                      while (1) {
                                        l = m;
                                        k = (k + -2) << 2;
                                        m = i[(k + j) >> 2];
                                        if (
                                          (n | 0) >= (m | 0)
                                            ? (l | 0) <= (q | 0)
                                            : 0
                                        ) {
                                          break c;
                                        }
                                        u = l << 2;
                                        i[(u + j) >> 2] = m;
                                        i[(g + u) >> 2] = i[(g + k) >> 2];
                                        m = (l + -1) | 0;
                                        k = l;
                                        if ((k | 0) > 1) {
                                          continue;
                                        }
                                        break;
                                      }
                                      l = 0;
                                    }
                                    k = l << 2;
                                    i[(k + j) >> 2] = n;
                                    k = (g + k) | 0;
                                    i[k >> 2] = p;
                                    q = (q + 1) | 0;
                                    if (t) {
                                      break b;
                                    }
                                    i[k >> 2] = d + p;
                                  }
                                  b = (b + v) | 0;
                                  p = (p + 1) | 0;
                                  if ((p | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              while (1) {
                                a = i[((n << 2) + e) >> 2] >> 1;
                                if (
                                  !((a | 0) >= i[s >> 2]
                                    ? (n | 0) >= (f | 0)
                                    : 0)
                                ) {
                                  m = r;
                                  l = m;
                                  k = f;
                                  d: {
                                    if ((k | 0) < 2) {
                                      break d;
                                    }
                                    while (1) {
                                      l = m;
                                      b = (k + -2) << 2;
                                      c = i[(b + j) >> 2];
                                      if (
                                        (a | 0) >= (c | 0)
                                          ? (l | 0) <= (q | 0)
                                          : 0
                                      ) {
                                        break d;
                                      }
                                      k = l << 2;
                                      i[(k + j) >> 2] = c;
                                      i[(g + k) >> 2] = i[(b + g) >> 2];
                                      m = (l + -1) | 0;
                                      k = l;
                                      if ((k | 0) > 1) {
                                        continue;
                                      }
                                      break;
                                    }
                                    l = 0;
                                  }
                                  b = l << 2;
                                  i[(b + j) >> 2] = a;
                                  i[(b + g) >> 2] = d + n;
                                  q = (q + 1) | 0;
                                }
                                n = (n + 1) | 0;
                                if ((n | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ub(a, b, c, d, e, f) {
                            var g = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0;
                            j = ((f & 1) + f) | 0;
                            f = (j + 128) | 0;
                            i = ((f & 1) + f) | 0;
                            f = 0;
                            while (1) {
                              h[((((f ^ -1) - -64) << 1) + j) >> 1] =
                                k[((f << 1) + 12848) >> 1];
                              f = (f + 1) | 0;
                              if ((f | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            f = 0;
                            while (1) {
                              h[((f << 1) + i) >> 1] =
                                k[(((62 - f) << 1) + e) >> 1];
                              f = (f + 1) | 0;
                              if ((f | 0) != 63) {
                                continue;
                              }
                              break;
                            }
                            if ((d | 0) >= 1) {
                              f = 0;
                              while (1) {
                                h[(((f + 63) << 1) + i) >> 1] =
                                  h[((f << 1) + a) >> 1] >>> 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = 0;
                            while (1) {
                              h[((f << 1) + e) >> 1] =
                                h[((((f ^ -1) + d) << 1) + a) >> 1] >>> 1;
                              f = (f + 1) | 0;
                              if ((f | 0) != 63) {
                                continue;
                              }
                              break;
                            }
                            if ((d | 0) > 0) {
                              m = (i + 126) | 0;
                              t = ((d + -1) >>> 1) | 0;
                              e = 0;
                              while (1) {
                                d = 0;
                                a = 0;
                                f = 0;
                                while (1) {
                                  g = f | 1;
                                  n = k[(((g + e) << 1) + i) >> 1];
                                  p = h[((f << 1) + j) >> 1];
                                  q = k[(((e + f) << 1) + i) >> 1];
                                  r = k[(((e - f) << 1) + m) >> 1];
                                  s = h[((g << 1) + j) >> 1];
                                  g = k[(((e - g) << 1) + m) >> 1];
                                  d =
                                    (((d - o(p, ((q - r) << 16) >> 16)) | 0) +
                                      o(s, ((n - g) << 16) >> 16)) |
                                    0;
                                  a =
                                    (((o(p, ((q + r) << 16) >> 16) + a) | 0) +
                                      o(((g + n) << 16) >> 16, s)) |
                                    0;
                                  f = (f + 2) | 0;
                                  if ((f | 0) < 32) {
                                    continue;
                                  }
                                  break;
                                }
                                f = l << 1;
                                g = (a + 16384) >> 15;
                                h[(f + b) >> 1] =
                                  (a | 0) > 1073725439
                                    ? 32767
                                    : (g | 0) > -32767
                                    ? g
                                    : -32767;
                                a = (d + 16384) >> 15;
                                h[(c + f) >> 1] =
                                  (d | 0) > 1073725439
                                    ? 32767
                                    : (a | 0) > -32767
                                    ? a
                                    : -32767;
                                e = (e + 2) | 0;
                                a = (l | 0) == (t | 0);
                                l = (l + 1) | 0;
                                if (!a) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ba(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            f = (H - 16) | 0;
                            H = f;
                            g[a | 0] = 1701146707;
                            g[(a + 1) | 0] = 6645104;
                            g[(a + 2) | 0] = 25957;
                            g[(a + 3) | 0] = 101;
                            g[(a + 4) | 0] = 538976376;
                            g[(a + 5) | 0] = 2105376;
                            g[(a + 6) | 0] = 8224;
                            g[(a + 7) | 0] = 32;
                            d =
                              j[13186] |
                              (j[13187] << 8) |
                              ((j[13188] << 16) | (j[13189] << 24));
                            e =
                              j[13182] |
                              (j[13183] << 8) |
                              ((j[13184] << 16) | (j[13185] << 24));
                            g[(a + 8) | 0] = e;
                            g[(a + 9) | 0] = e >>> 8;
                            g[(a + 10) | 0] = e >>> 16;
                            g[(a + 11) | 0] = e >>> 24;
                            g[(a + 12) | 0] = d;
                            g[(a + 13) | 0] = d >>> 8;
                            g[(a + 14) | 0] = d >>> 16;
                            g[(a + 15) | 0] = d >>> 24;
                            d =
                              j[13192] |
                              (j[13193] << 8) |
                              ((j[13194] << 16) | (j[13195] << 24));
                            e =
                              j[13188] |
                              (j[13189] << 8) |
                              ((j[13190] << 16) | (j[13191] << 24));
                            g[(a + 14) | 0] = e;
                            g[(a + 15) | 0] = e >>> 8;
                            g[(a + 16) | 0] = e >>> 16;
                            g[(a + 17) | 0] = e >>> 24;
                            g[(a + 18) | 0] = d;
                            g[(a + 19) | 0] = d >>> 8;
                            g[(a + 20) | 0] = d >>> 16;
                            g[(a + 21) | 0] = d >>> 24;
                            g[(a + 22) | 0] = 0;
                            g[(a + 23) | 0] = 0;
                            g[(a + 24) | 0] = 0;
                            g[(a + 25) | 0] = 0;
                            g[(a + 26) | 0] = 0;
                            g[(a + 27) | 0] = 0;
                            i[(a + 36) >> 2] = b;
                            i[(a + 28) >> 2] = 1;
                            i[(a + 32) >> 2] = 80;
                            b = i[(c + 12) >> 2];
                            i[(a + 40) >> 2] = b;
                            i[(a + 44) >> 2] = i[(c + 16) >> 2];
                            if ((b | 0) <= -1) {
                              i[f >> 2] = 13197;
                              Y(i[3524], 13292, f);
                            }
                            i[(a + 52) >> 2] = -1;
                            i[(a + 48) >> 2] = 1;
                            J[i[(c + 4) >> 2]](i[c >> 2], 0, (a + 56) | 0) | 0;
                            i[(a + 76) >> 2] = 0;
                            i[(a + 68) >> 2] = 0;
                            i[(a + 72) >> 2] = 0;
                            i[(a + 60) >> 2] = 0;
                            i[(a + 64) >> 2] = 0;
                            H = (f + 16) | 0;
                          }
                          function Ha(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              r = (f + -1) | 0;
                              s = ((r << 2) + j) | 0;
                              if ((c | 0) >= 1) {
                                while (1) {
                                  m = 0;
                                  l = 0;
                                  k = b;
                                  while (1) {
                                    m =
                                      (o(h[k >> 1], h[((l << 1) + a) >> 1]) +
                                        m) |
                                      0;
                                    k = (k + 2) | 0;
                                    l = (l + 1) | 0;
                                    if ((l | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  u = c << 1;
                                  n = ((i[((p << 2) + e) >> 2] >> 1) - m) | 0;
                                  if (
                                    !((n | 0) >= i[s >> 2]
                                      ? (p | 0) >= (f | 0)
                                      : 0)
                                  ) {
                                    m = r;
                                    l = m;
                                    k = f;
                                    b: {
                                      if ((k | 0) < 2) {
                                        break b;
                                      }
                                      while (1) {
                                        l = m;
                                        k = (k + -2) << 2;
                                        m = i[(k + j) >> 2];
                                        if (
                                          (n | 0) >= (m | 0)
                                            ? (l | 0) <= (q | 0)
                                            : 0
                                        ) {
                                          break b;
                                        }
                                        t = l << 2;
                                        i[(t + j) >> 2] = m;
                                        i[(g + t) >> 2] = i[(g + k) >> 2];
                                        m = (l + -1) | 0;
                                        k = l;
                                        if ((k | 0) > 1) {
                                          continue;
                                        }
                                        break;
                                      }
                                      l = 0;
                                    }
                                    k = l << 2;
                                    i[(k + j) >> 2] = n;
                                    i[(g + k) >> 2] = p;
                                    q = (q + 1) | 0;
                                  }
                                  b = (b + u) | 0;
                                  p = (p + 1) | 0;
                                  if ((p | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              while (1) {
                                a = i[((n << 2) + e) >> 2] >> 1;
                                if (
                                  !((a | 0) >= i[s >> 2]
                                    ? (n | 0) >= (f | 0)
                                    : 0)
                                ) {
                                  m = r;
                                  l = m;
                                  k = f;
                                  c: {
                                    if ((k | 0) < 2) {
                                      break c;
                                    }
                                    while (1) {
                                      l = m;
                                      b = (k + -2) << 2;
                                      c = i[(b + j) >> 2];
                                      if (
                                        (a | 0) >= (c | 0)
                                          ? (l | 0) <= (q | 0)
                                          : 0
                                      ) {
                                        break c;
                                      }
                                      k = l << 2;
                                      i[(k + j) >> 2] = c;
                                      i[(g + k) >> 2] = i[(b + g) >> 2];
                                      m = (l + -1) | 0;
                                      k = l;
                                      if ((k | 0) > 1) {
                                        continue;
                                      }
                                      break;
                                    }
                                    l = 0;
                                  }
                                  b = l << 2;
                                  i[(b + j) >> 2] = a;
                                  i[(b + g) >> 2] = n;
                                  q = (q + 1) | 0;
                                }
                                n = (n + 1) | 0;
                                if ((n | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function rb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0;
                            if ((b | 0) >= 1) {
                              while (1) {
                                e = ((d << 1) + a) | 0;
                                d = (d + 1) | 0;
                                h[e >> 1] = d << 11;
                                if ((b | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            b = o(V(c, 6), 10);
                            h[a >> 1] = (g[(b + 8848) | 0] << 5) + k[a >> 1];
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 8850) | 0] << 5);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 8851) | 0] << 5);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 8852) | 0] << 5);
                            h[(a + 10) >> 1] =
                              k[(a + 10) >> 1] + (g[(b + 8853) | 0] << 5);
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 8854) | 0] << 5);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 8855) | 0] << 5);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 8856) | 0] << 5);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 8857) | 0] << 5);
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[((b | 1) + 8848) | 0] << 5);
                            b = o(V(c, 6), 5);
                            h[a >> 1] = (g[(b + 9488) | 0] << 4) + k[a >> 1];
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[(b + 9489) | 0] << 4);
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 9490) | 0] << 4);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 9491) | 0] << 4);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 9492) | 0] << 4);
                            b = o(V(c, 6), 5);
                            h[(a + 10) >> 1] =
                              (g[(b + 10128) | 0] << 4) + k[(a + 10) >> 1];
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 10129) | 0] << 4);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 10130) | 0] << 4);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 10131) | 0] << 4);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 10132) | 0] << 4);
                          }
                          function Ra(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            a: {
                              if ((b | 0) <= 0) {
                                break a;
                              }
                              c = 1;
                              while (1) {
                                d = i[((f << 2) + a) >> 2];
                                e = d >> 31;
                                d = e ^ (d + e);
                                c = (d | 0) > (c | 0) ? d : c;
                                f = (f + 1) | 0;
                                if ((f | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                              d = 0;
                              f = 0;
                              if ((c | 0) > 16383) {
                                while (1) {
                                  f = (f + 1) | 0;
                                  e = c >>> 0 > 32767;
                                  c = (c >>> 1) | 0;
                                  if (e) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if ((b | 0) <= 0) {
                                break a;
                              }
                              c = 0;
                              while (1) {
                                h = c;
                                e = d << 2;
                                c = ((i[((e | 4) + a) >> 2] >> f) << 16) >> 16;
                                g = o(c, c);
                                c = ((i[(a + e) >> 2] >> f) << 16) >> 16;
                                g = (g + o(c, c)) | 0;
                                c = ((i[((e | 8) + a) >> 2] >> f) << 16) >> 16;
                                g = (g + o(c, c)) | 0;
                                c = ((i[((e | 12) + a) >> 2] >> f) << 16) >> 16;
                                c = (h + (((g + o(c, c)) >>> 6) | 0)) | 0;
                                d = (d + 4) | 0;
                                if ((d | 0) < (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                              d = c;
                            }
                            e = ((d | 0) / (b | 0)) | 0;
                            b = e >>> 0 > 65535;
                            a = b << 3;
                            d = b ? (e >>> 16) | 0 : e;
                            b = d >>> 0 > 255;
                            a = b ? a | 4 : a;
                            h = a | 2;
                            c = a;
                            b = b ? (d >>> 8) | 0 : d;
                            a = b >>> 0 > 15;
                            c =
                              (a ? h : c) | ((a ? (b >>> 4) | 0 : b) >>> 0 > 3);
                            a = c << 1;
                            d = (c << 16) >> 16;
                            a =
                              (((d | 0) > 6 ? e >> (a + -12) : e << (12 - a)) <<
                                16) >>
                              16;
                            b =
                              (((o(
                                (((o((o(a, 16816) + -827523072) >> 16, a) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                a
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            a = (13 - c) | 0;
                            return (
                              (((((((d | 0) < 13 ? b >> a : b << (0 - a)) <<
                                16) >>
                                16) <<
                                (f + 3)) <<
                                2) +
                                32768) >>
                              16
                            );
                          }
                          function Pb(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            j,
                            k,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            g = g | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            s = s | 0;
                            t = t | 0;
                            u = u | 0;
                            v = v | 0;
                            w = w | 0;
                            g = (l | 0) < 63 ? l : 63;
                            l = 0;
                            if (!(((n | 0) < 1) | ((j | 0) < 1))) {
                              l = (n + -1) >>> 0 < (j + -1) >>> 0 ? n : j;
                              k = (g << 23) >> 16;
                              b = 0;
                              while (1) {
                                i[((b << 2) + f) >> 2] = o(
                                  h[(((b - j) << 1) + r) >> 1],
                                  k
                                );
                                b = (b + 1) | 0;
                                if ((l | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((l | 0) < (n | 0)) {
                              b = (g << 25) >> 16;
                              while (1) {
                                g = i[(((l - j) << 2) + f) >> 2];
                                i[((l << 2) + f) >> 2] =
                                  o(b, (g << 1) >> 16) +
                                  (o(b, g & 32767) >> 15);
                                l = (l + 1) | 0;
                                if ((n | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            b = ((q & 1) + q) | 0;
                            g = (b + (n << 1)) | 0;
                            l = 0;
                            if ((n | 0) > 0) {
                              while (1) {
                                h[(b + (l << 1)) >> 1] =
                                  (i[((l << 2) + f) >> 2] + 4096) >>> 13;
                                l = (l + 1) | 0;
                                if ((n | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                              ka(b, c, d, e, b, n, m, g);
                              if ((n | 0) >= 1) {
                                l = 0;
                                while (1) {
                                  c = l << 1;
                                  d = (c + a) | 0;
                                  c = (h[d >> 1] - h[(b + c) >> 1]) | 0;
                                  c = (c | 0) > -32700 ? c : -32700;
                                  h[d >> 1] = (c | 0) < 32700 ? c : 32700;
                                  l = (l + 1) | 0;
                                  if ((n | 0) != (l | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              return j | 0;
                            }
                            ka(b, c, d, e, b, n, m, g);
                            return j | 0;
                          }
                          function Ya(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              j = 0,
                              k = 0;
                            e = (H - 32) | 0;
                            H = e;
                            g = i[(a + 28) >> 2];
                            i[(e + 16) >> 2] = g;
                            d = i[(a + 20) >> 2];
                            i[(e + 28) >> 2] = c;
                            i[(e + 24) >> 2] = b;
                            b = (d - g) | 0;
                            i[(e + 20) >> 2] = b;
                            g = (b + c) | 0;
                            k = 2;
                            b = (e + 16) | 0;
                            a: {
                              b: {
                                f =
                                  A(
                                    i[(a + 60) >> 2],
                                    (e + 16) | 0,
                                    2,
                                    (e + 12) | 0
                                  ) | 0;
                                d = 0;
                                c: {
                                  if (!f) {
                                    break c;
                                  }
                                  i[3790] = f;
                                  d = -1;
                                }
                                d: {
                                  if (!d) {
                                    while (1) {
                                      d = i[(e + 12) >> 2];
                                      if ((d | 0) == (g | 0)) {
                                        break d;
                                      }
                                      if ((d | 0) <= -1) {
                                        break b;
                                      }
                                      h = i[(b + 4) >> 2];
                                      f = d >>> 0 > h >>> 0;
                                      j = ((f << 3) + b) | 0;
                                      h = (d - (f ? h : 0)) | 0;
                                      i[j >> 2] = h + i[j >> 2];
                                      j = ((f ? 12 : 4) + b) | 0;
                                      i[j >> 2] = i[j >> 2] - h;
                                      g = (g - d) | 0;
                                      b = f ? (b + 8) | 0 : b;
                                      k = (k - f) | 0;
                                      f =
                                        A(
                                          i[(a + 60) >> 2],
                                          b | 0,
                                          k | 0,
                                          (e + 12) | 0
                                        ) | 0;
                                      d = 0;
                                      e: {
                                        if (!f) {
                                          break e;
                                        }
                                        i[3790] = f;
                                        d = -1;
                                      }
                                      if (!d) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  i[(e + 12) >> 2] = -1;
                                  if ((g | 0) != -1) {
                                    break b;
                                  }
                                }
                                b = i[(a + 44) >> 2];
                                i[(a + 28) >> 2] = b;
                                i[(a + 20) >> 2] = b;
                                i[(a + 16) >> 2] = b + i[(a + 48) >> 2];
                                a = c;
                                break a;
                              }
                              i[(a + 28) >> 2] = 0;
                              i[(a + 16) >> 2] = 0;
                              i[(a + 20) >> 2] = 0;
                              i[a >> 2] = i[a >> 2] | 32;
                              a = 0;
                              if ((k | 0) == 2) {
                                break a;
                              }
                              a = (c - i[(b + 4) >> 2]) | 0;
                            }
                            H = (e + 32) | 0;
                            return a | 0;
                          }
                          function ba(a) {
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              i = 0,
                              j = 0,
                              k = 0;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    nc(+a);
                                    b = kc(1) | 0;
                                    d = kc(0) | 0;
                                    if (
                                      (b | 0) > 0
                                        ? 1
                                        : (b | 0) >= 0
                                        ? d >>> 0 >= 0
                                        : 0
                                    ) {
                                      f = b;
                                      if (b >>> 0 > 1048575) {
                                        break d;
                                      }
                                    }
                                    if (!((b & 2147483647) | d)) {
                                      return -1 / (a * a);
                                    }
                                    if ((b | 0) > -1) {
                                      break c;
                                    }
                                    return (a - a) / 0;
                                  }
                                  if (f >>> 0 > 2146435071) {
                                    break a;
                                  }
                                  b = 1072693248;
                                  g = -1023;
                                  if ((f | 0) != 1072693248) {
                                    b = f;
                                    break b;
                                  }
                                  if (d) {
                                    break b;
                                  }
                                  return 0;
                                }
                                nc(+(a * 0x40000000000000));
                                b = kc(1) | 0;
                                d = kc(0) | 0;
                                g = -1077;
                              }
                              b = (b + 614242) | 0;
                              e = +((((b >>> 20) | 0) + g) | 0);
                              lc(0, d | 0);
                              lc(1, ((b & 1048575) + 1072079006) | 0);
                              a = +mc() + -1;
                              c = a / (a + 2);
                              h = e * 0.6931471803691238;
                              i = a;
                              j = e * 1.9082149292705877e-10;
                              k = c;
                              e = a * (a * 0.5);
                              c = c * c;
                              a = c * c;
                              a =
                                h +
                                (i +
                                  (j +
                                    k *
                                      (e +
                                        (a *
                                          (a *
                                            (a * 0.15313837699209373 +
                                              0.22222198432149784) +
                                            0.3999999999940942) +
                                          c *
                                            (a *
                                              (a *
                                                (a * 0.14798198605116586 +
                                                  0.1818357216161805) +
                                                0.2857142874366239) +
                                              0.6666666666666735))) -
                                    e));
                            }
                            return a;
                          }
                          function Tb(a, b, c, d, e, f) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            var h = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0;
                            a: {
                              f = i[(b + 4) >> 2];
                              if ((f | 0) < 1) {
                                break a;
                              }
                              c = 0;
                              j = (((0 - e) & 3) + e) | 0;
                              e = (j + (f << 2)) | 0;
                              k = (((0 - e) & 3) + e) | 0;
                              l = i[(b + 8) >> 2];
                              e = i[b >> 2];
                              b: {
                                if (!i[(b + 16) >> 2]) {
                                  while (1) {
                                    h = c << 2;
                                    i[(h + k) >> 2] = 0;
                                    i[(h + j) >> 2] = V(d, i[(b + 12) >> 2]);
                                    c = (c + 1) | 0;
                                    if ((f | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break b;
                                  }
                                }
                                while (1) {
                                  h = c << 2;
                                  i[(h + k) >> 2] = V(d, 1);
                                  i[(h + j) >> 2] = V(d, i[(b + 12) >> 2]);
                                  c = (c + 1) | 0;
                                  if ((f | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if (((f | 0) < 1) | ((e | 0) < 1)) {
                                break a;
                              }
                              b = 0;
                              while (1) {
                                h = o(b, e);
                                m = b << 2;
                                n = (m + j) | 0;
                                c = 0;
                                d = 0;
                                c: {
                                  if (i[(k + m) >> 2]) {
                                    while (1) {
                                      i[(((c + h) << 2) + a) >> 2] =
                                        0 -
                                        (g[
                                          (((o(e, i[n >> 2]) + c) | 0) + l) | 0
                                        ] <<
                                          9);
                                      c = (c + 1) | 0;
                                      if ((e | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break c;
                                    }
                                  }
                                  while (1) {
                                    i[(((d + h) << 2) + a) >> 2] =
                                      g[
                                        (((o(e, i[n >> 2]) + d) | 0) + l) | 0
                                      ] << 9;
                                    d = (d + 1) | 0;
                                    if ((e | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                b = (b + 1) | 0;
                                if ((f | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function lb(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0;
                            d = (H - 16) | 0;
                            H = d;
                            b = T(100);
                            if (b) {
                              i[b >> 2] = a;
                              a = i[a >> 2];
                              i[(b + 88) >> 2] = 1;
                              c = i[a >> 2];
                              c = J[i[(c + 32) >> 2]](c) | 0;
                              i[(b + 4) >> 2] = c;
                              J[i[(i[c >> 2] + 48) >> 2]](
                                c,
                                106,
                                (b + 40) | 0
                              ) | 0;
                              c = i[(a + 4) >> 2];
                              i[(b + 12) >> 2] = c;
                              i[(b + 8) >> 2] = c << 1;
                              e = i[(a + 8) >> 2];
                              i[(b + 16) >> 2] = e;
                              i[(b + 20) >> 2] = (c | 0) / (e | 0);
                              i[(b + 24) >> 2] = i[(a + 12) >> 2];
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 48) >> 2]](c, 25, (b + 32) | 0) |
                                0;
                              i[(b + 32) >> 2] = i[(b + 32) >> 2] << 1;
                              i[(d + 12) >> 2] = 1;
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 48) >> 2]](
                                c,
                                105,
                                (d + 12) | 0
                              ) | 0;
                              i[(b + 92) >> 2] = a + 24;
                              a = i[(a + 56) >> 2];
                              i[(b + 28) >> 2] = 1;
                              i[(b + 96) >> 2] = a;
                              i[(b + 44) >> 2] = T(128);
                              i[(b + 48) >> 2] = T(128);
                              i[(b + 52) >> 2] = T(i[(b + 16) >> 2] << 1);
                              a = i[(b + 24) >> 2];
                              c = a << 1;
                              i[(b + 56) >> 2] = T(c);
                              i[(b + 60) >> 2] = T(c);
                              c = i[(b + 20) >> 2];
                              i[(b + 68) >> 2] = T(c << 2);
                              i[(b + 72) >> 2] = T(c << 1);
                              a = T(a << 3);
                              i[(b + 76) >> 2] = 0;
                              i[(b + 64) >> 2] = a;
                              i[(b + 84) >> 2] = 1e3;
                              i[(b + 36) >> 2] = 0;
                            }
                            H = (d + 16) | 0;
                            return b | 0;
                          }
                          function qa(a, b, c) {
                            var d = 0;
                            a: {
                              if ((a | 0) == (b | 0)) {
                                break a;
                              }
                              if (
                                (((b - a) | 0) - c) >>> 0 <=
                                (0 - (c << 1)) >>> 0
                              ) {
                                X(a, b, c);
                                return;
                              }
                              d = (a ^ b) & 3;
                              b: {
                                c: {
                                  if (a >>> 0 < b >>> 0) {
                                    if (d) {
                                      break b;
                                    }
                                    if (!(a & 3)) {
                                      break c;
                                    }
                                    while (1) {
                                      if (!c) {
                                        break a;
                                      }
                                      g[a | 0] = j[b | 0];
                                      b = (b + 1) | 0;
                                      c = (c + -1) | 0;
                                      a = (a + 1) | 0;
                                      if (a & 3) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break c;
                                  }
                                  d: {
                                    if (d) {
                                      break d;
                                    }
                                    if ((a + c) & 3) {
                                      while (1) {
                                        if (!c) {
                                          break a;
                                        }
                                        c = (c + -1) | 0;
                                        d = (c + a) | 0;
                                        g[d | 0] = j[(b + c) | 0];
                                        if (d & 3) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    if (c >>> 0 <= 3) {
                                      break d;
                                    }
                                    while (1) {
                                      c = (c + -4) | 0;
                                      i[(c + a) >> 2] = i[(b + c) >> 2];
                                      if (c >>> 0 > 3) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if (!c) {
                                    break a;
                                  }
                                  while (1) {
                                    c = (c + -1) | 0;
                                    g[(c + a) | 0] = j[(b + c) | 0];
                                    if (c) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                if (c >>> 0 <= 3) {
                                  break b;
                                }
                                while (1) {
                                  i[a >> 2] = i[b >> 2];
                                  b = (b + 4) | 0;
                                  a = (a + 4) | 0;
                                  c = (c + -4) | 0;
                                  if (c >>> 0 > 3) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if (!c) {
                                break a;
                              }
                              while (1) {
                                g[a | 0] = j[b | 0];
                                a = (a + 1) | 0;
                                b = (b + 1) | 0;
                                c = (c + -1) | 0;
                                if (c) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ea(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0;
                            i = k[b >> 1];
                            if (i) {
                              if ((c | 0) > 0) {
                                while (1) {
                                  d = 0;
                                  m = (e + 1) | 0;
                                  f = (0 - (h[((m << 1) + b) >> 1] << 13)) | 0;
                                  if (e) {
                                    while (1) {
                                      f =
                                        (f -
                                          o(
                                            h[(((e - d) << 1) + b) >> 1],
                                            h[((d << 1) + a) >> 1]
                                          )) |
                                        0;
                                      d = (d + 1) | 0;
                                      if ((e | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  d = i << 16;
                                  n = d >> 16;
                                  f =
                                    (((((n + 1) >> 1) + f) | 0) /
                                      ((d + 524288) >> 16)) |
                                    0;
                                  h[((e << 1) + a) >> 1] = f;
                                  j = (e >>> 1) | 0;
                                  if (j) {
                                    p = (f << 16) >> 16;
                                    d = 0;
                                    while (1) {
                                      g = ((d << 1) + a) | 0;
                                      q = h[g >> 1];
                                      l = g;
                                      g = ((((d ^ -1) + e) << 1) + a) | 0;
                                      h[l >> 1] =
                                        (((o(h[g >> 1], p) + 4096) >>> 13) |
                                          0) +
                                        q;
                                      h[g >> 1] =
                                        k[g >> 1] +
                                        (((o(p, q) + 4096) >>> 13) | 0);
                                      d = (d + 1) | 0;
                                      if ((j | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  a: {
                                    if (!(e & 1)) {
                                      d = (f << 16) >> 16;
                                      break a;
                                    }
                                    d = ((j << 1) + a) | 0;
                                    e = h[d >> 1];
                                    l = d;
                                    d = (f << 16) >> 16;
                                    h[l >> 1] =
                                      e + (((o(e, d) + 4096) >>> 13) | 0);
                                  }
                                  i =
                                    (i -
                                      ((o((o(d, n) << 3) >> 16, d) >>> 13) |
                                        0)) |
                                    0;
                                  e = m;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              return;
                            }
                            if ((c | 0) < 1) {
                              return;
                            }
                            U(a, 0, c << 1);
                          }
                          function U(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              h = 0;
                            a: {
                              if (!c) {
                                break a;
                              }
                              d = (a + c) | 0;
                              g[(d + -1) | 0] = b;
                              g[a | 0] = b;
                              if (c >>> 0 < 3) {
                                break a;
                              }
                              g[(d + -2) | 0] = b;
                              g[(a + 1) | 0] = b;
                              g[(d + -3) | 0] = b;
                              g[(a + 2) | 0] = b;
                              if (c >>> 0 < 7) {
                                break a;
                              }
                              g[(d + -4) | 0] = b;
                              g[(a + 3) | 0] = b;
                              if (c >>> 0 < 9) {
                                break a;
                              }
                              d = (0 - a) & 3;
                              e = (d + a) | 0;
                              b = o(b & 255, 16843009);
                              i[e >> 2] = b;
                              c = (c - d) & -4;
                              d = (c + e) | 0;
                              i[(d + -4) >> 2] = b;
                              if (c >>> 0 < 9) {
                                break a;
                              }
                              i[(e + 8) >> 2] = b;
                              i[(e + 4) >> 2] = b;
                              i[(d + -8) >> 2] = b;
                              i[(d + -12) >> 2] = b;
                              if (c >>> 0 < 25) {
                                break a;
                              }
                              i[(e + 24) >> 2] = b;
                              i[(e + 20) >> 2] = b;
                              i[(e + 16) >> 2] = b;
                              i[(e + 12) >> 2] = b;
                              i[(d + -16) >> 2] = b;
                              i[(d + -20) >> 2] = b;
                              i[(d + -24) >> 2] = b;
                              i[(d + -28) >> 2] = b;
                              h = (e & 4) | 24;
                              c = (c - h) | 0;
                              if (c >>> 0 < 32) {
                                break a;
                              }
                              d = b;
                              f = b;
                              b = (e + h) | 0;
                              while (1) {
                                i[(b + 24) >> 2] = f;
                                i[(b + 28) >> 2] = d;
                                i[(b + 16) >> 2] = f;
                                i[(b + 20) >> 2] = d;
                                i[(b + 8) >> 2] = f;
                                i[(b + 12) >> 2] = d;
                                i[b >> 2] = f;
                                i[(b + 4) >> 2] = d;
                                b = (b + 32) | 0;
                                c = (c + -32) | 0;
                                if (c >>> 0 > 31) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return a;
                          }
                          function ka(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0;
                            p = g << 2;
                            k = (((0 - j) & 3) + j) | 0;
                            if ((g | 0) >= 1) {
                              U(k, 0, p);
                            }
                            a: {
                              if ((f | 0) < 1) {
                                break a;
                              }
                              n = (g + -1) | 0;
                              q = ((n << 2) + k) | 0;
                              r = ((n << 1) + b) | 0;
                              if ((g | 0) >= 2) {
                                while (1) {
                                  j = 0;
                                  s = m << 1;
                                  l =
                                    (h[(s + a) >> 1] +
                                      ((i[k >> 2] + 4096) >> 13)) |
                                    0;
                                  l = (l | 0) > -32767 ? l : -32767;
                                  t = (l | 0) < 32767 ? l : 32767;
                                  u = (0 - (t << 16)) >> 16;
                                  while (1) {
                                    l = (j + 1) | 0;
                                    i[((j << 2) + k) >> 2] =
                                      i[((l << 2) + k) >> 2] +
                                      o(h[((j << 1) + b) >> 1], u);
                                    j = l;
                                    if ((n | 0) != (j | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[q >> 2] = o(h[r >> 1], u);
                                  h[(e + s) >> 1] = t;
                                  m = (m + 1) | 0;
                                  if ((m | 0) != (f | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = m << 1;
                                j =
                                  (h[(b + a) >> 1] +
                                    ((i[k >> 2] + 4096) >> 13)) |
                                  0;
                                j = (j | 0) > -32767 ? j : -32767;
                                j = (j | 0) < 32767 ? j : 32767;
                                i[q >> 2] = o(h[r >> 1], (0 - (j << 16)) >> 16);
                                h[(b + e) >> 1] = j;
                                m = (m + 1) | 0;
                                if ((m | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((g | 0) >= 1) {
                              U(k, 0, p);
                            }
                            aa(e, c, d, e, f, g, k);
                          }
                          function aa(a, b, c, d, e, f, g) {
                            var j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0;
                            a: {
                              if ((e | 0) < 1) {
                                break a;
                              }
                              l = (f + -1) | 0;
                              n = ((l << 2) + g) | 0;
                              j = l << 1;
                              p = (j + c) | 0;
                              q = (b + j) | 0;
                              if ((f | 0) >= 2) {
                                while (1) {
                                  f = 0;
                                  r = k << 1;
                                  m = h[(r + a) >> 1];
                                  j = (m + ((i[g >> 2] + 4096) >> 13)) | 0;
                                  j = (j | 0) > -32767 ? j : -32767;
                                  s = (j | 0) < 32767 ? j : 32767;
                                  t = (0 - (s << 16)) >> 16;
                                  while (1) {
                                    u = ((f << 2) + g) | 0;
                                    j = (f + 1) | 0;
                                    f = f << 1;
                                    i[u >> 2] =
                                      ((i[((j << 2) + g) >> 2] +
                                        o(h[(f + b) >> 1], m)) |
                                        0) +
                                      o(h[(c + f) >> 1], t);
                                    f = j;
                                    if ((l | 0) != (f | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[n >> 2] = o(h[p >> 1], t) + o(h[q >> 1], m);
                                  h[(d + r) >> 1] = s;
                                  k = (k + 1) | 0;
                                  if ((k | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = k << 1;
                                c = h[(b + a) >> 1];
                                f = (c + ((i[g >> 2] + 4096) >> 13)) | 0;
                                f = (f | 0) > -32767 ? f : -32767;
                                f = (f | 0) < 32767 ? f : 32767;
                                i[n >> 2] =
                                  o(h[p >> 1], (0 - (f << 16)) >> 16) +
                                  o(c, h[q >> 1]);
                                h[(b + d) >> 1] = f;
                                k = (k + 1) | 0;
                                if ((k | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Vb(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0;
                            j = (((0 - j) & 3) + j) | 0;
                            a: {
                              if ((g | 0) <= 0) {
                                aa(a, b, c, e, f, g, j);
                                break a;
                              }
                              k = a;
                              l = b;
                              a = g << 2;
                              b = U(j, 0, a);
                              aa(k, l, c, e, f, g, b);
                              U(b, 0, a);
                            }
                            b: {
                              if ((f | 0) < 1) {
                                break b;
                              }
                              b = (g + -1) | 0;
                              l = (j + (b << 2)) | 0;
                              m = ((b << 1) + d) | 0;
                              c = 0;
                              if ((g | 0) >= 2) {
                                while (1) {
                                  n = ((c << 1) + e) | 0;
                                  k = h[n >> 1];
                                  a = (k + ((i[j >> 2] + 4096) >> 13)) | 0;
                                  p = (a | 0) > -32767 ? a : -32767;
                                  g = 0;
                                  while (1) {
                                    a = (g + 1) | 0;
                                    i[(j + (g << 2)) >> 2] =
                                      i[(j + (a << 2)) >> 2] +
                                      o(h[((g << 1) + d) >> 1], k);
                                    g = a;
                                    if ((a | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[l >> 2] = o(h[m >> 1], k);
                                  h[n >> 1] = (p | 0) < 32767 ? p : 32767;
                                  c = (c + 1) | 0;
                                  if ((f | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break b;
                                }
                              }
                              while (1) {
                                a = i[j >> 2];
                                b = ((c << 1) + e) | 0;
                                d = h[b >> 1];
                                i[l >> 2] = o(d, h[m >> 1]);
                                a = (d + ((a + 4096) >> 13)) | 0;
                                a = (a | 0) > -32767 ? a : -32767;
                                h[b >> 1] = (a | 0) < 32767 ? a : 32767;
                                c = (c + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ab(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            c = i[a >> 2];
                            b = T(496);
                            if (b) {
                              d = T(16e3);
                              i[(b + 112) >> 2] = 1;
                              i[b >> 2] = a;
                              i[(b + 44) >> 2] = d;
                              i[(b + 4) >> 2] = 1;
                              d = i[c >> 2];
                              i[(b + 12) >> 2] = d;
                              e = i[(c + 4) >> 2];
                              i[(b + 16) >> 2] = e;
                              g = ((d | 0) / (e | 0)) | 0;
                              i[(b + 20) >> 2] = g;
                              f = i[(c + 8) >> 2];
                              i[(b + 24) >> 2] = f;
                              i[(b + 28) >> 2] = i[(c + 12) >> 2];
                              a = i[(c + 16) >> 2];
                              i[(b + 116) >> 2] = c + 28;
                              i[(b + 32) >> 2] = a;
                              c = i[(c + 92) >> 2];
                              i[(b + 124) >> 2] = 1;
                              i[(b + 120) >> 2] = c;
                              c = T(
                                (((((d + e) | 0) + (a << 1)) << 1) + 24) | 0
                              );
                              i[(b + 48) >> 2] = c;
                              i[(b + 52) >> 2] =
                                ((((c + (a << 2)) | 0) + (e << 1)) | 0) + 12;
                              U(c, 0, (a + d) << 1);
                              a = f << 1;
                              i[(b + 60) >> 2] = T(a);
                              i[(b + 56) >> 2] = T(a);
                              i[(b + 64) >> 2] = T(f << 2);
                              a = T(g << 2);
                              h[(b + 98) >> 1] = 0;
                              h[(b + 100) >> 1] = 0;
                              h[(b + 102) >> 1] = 0;
                              h[(b + 104) >> 1] = 0;
                              i[(b + 92) >> 2] = 40;
                              i[(b + 76) >> 2] = a;
                              h[(b + 106) >> 1] = 0;
                              i[(b + 108) >> 2] = 1e3;
                              i[(b + 492) >> 2] = 1;
                              i[(b + 452) >> 2] = 33;
                              i[(b + 36) >> 2] = 8e3;
                            }
                            return b | 0;
                          }
                          function ya(a, b, c) {
                            a: {
                              b: {
                                if (b >>> 0 > 20) {
                                  break b;
                                }
                                c: {
                                  switch ((b + -9) | 0) {
                                    case 0:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = i[b >> 2];
                                      return;
                                    case 1:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      b = i[b >> 2];
                                      i[a >> 2] = b;
                                      i[(a + 4) >> 2] = b >> 31;
                                      return;
                                    case 2:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = i[b >> 2];
                                      i[(a + 4) >> 2] = 0;
                                      return;
                                    case 4:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      b = h[b >> 1];
                                      i[a >> 2] = b;
                                      i[(a + 4) >> 2] = b >> 31;
                                      return;
                                    case 5:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = k[b >> 1];
                                      i[(a + 4) >> 2] = 0;
                                      return;
                                    case 6:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      b = g[b | 0];
                                      i[a >> 2] = b;
                                      i[(a + 4) >> 2] = b >> 31;
                                      return;
                                    case 7:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = j[b | 0];
                                      i[(a + 4) >> 2] = 0;
                                      return;
                                    case 3:
                                    case 8:
                                      break a;
                                    case 9:
                                      break c;
                                    default:
                                      break b;
                                  }
                                }
                                J[0](a, c);
                              }
                              return;
                            }
                            b = (i[c >> 2] + 7) & -8;
                            i[c >> 2] = b + 8;
                            c = i[(b + 4) >> 2];
                            i[a >> 2] = i[b >> 2];
                            i[(a + 4) >> 2] = c;
                          }
                          function _(a, b, c, d, e, f) {
                            var g = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              k = (e + -1) | 0;
                              l = ((k << 2) + f) | 0;
                              m = ((k << 1) + b) | 0;
                              if ((e | 0) >= 2) {
                                while (1) {
                                  e = 0;
                                  n = j << 1;
                                  g =
                                    (h[(n + a) >> 1] +
                                      ((i[f >> 2] + 4096) >> 13)) |
                                    0;
                                  g = (g | 0) > -32767 ? g : -32767;
                                  p = (g | 0) < 32767 ? g : 32767;
                                  q = (0 - (p << 16)) >> 16;
                                  while (1) {
                                    g = (e + 1) | 0;
                                    i[((e << 2) + f) >> 2] =
                                      i[((g << 2) + f) >> 2] +
                                      o(h[((e << 1) + b) >> 1], q);
                                    e = g;
                                    if ((k | 0) != (e | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[l >> 2] = o(h[m >> 1], q);
                                  h[(c + n) >> 1] = p;
                                  j = (j + 1) | 0;
                                  if ((j | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = j << 1;
                                e =
                                  (h[(b + a) >> 1] +
                                    ((i[f >> 2] + 4096) >> 13)) |
                                  0;
                                e = (e | 0) > -32767 ? e : -32767;
                                e = (e | 0) < 32767 ? e : 32767;
                                i[l >> 2] = o(h[m >> 1], (0 - (e << 16)) >> 16);
                                h[(b + c) >> 1] = e;
                                j = (j + 1) | 0;
                                if ((j | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Da(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              i = 0,
                              j = 0;
                            g = 1;
                            if ((d | 0) >= 1) {
                              while (1) {
                                f = h[((e << 1) + a) >> 1];
                                g = (((o(f, f) >>> 8) | 0) + g) | 0;
                                e = (e + 1) | 0;
                                if ((e | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i = 18;
                            j = 8;
                            e = (d + g) | 0;
                            a: {
                              if ((e | 0) >= 1073741824) {
                                break a;
                              }
                              while (1) {
                                b: {
                                  j = (j + -1) | 0;
                                  e = e << 1;
                                  if ((e | 0) > 1073741823) {
                                    break b;
                                  }
                                  if (j) {
                                    continue;
                                  }
                                }
                                break;
                              }
                              if ((e | 0) >= 1073741824) {
                                break a;
                              }
                              while (1) {
                                i = (i + -1) | 0;
                                e = e << 1;
                                if ((e | 0) > 1073741823) {
                                  break a;
                                }
                                if (i) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = 0;
                            if ((c | 0) > 0) {
                              while (1) {
                                g = 0;
                                e = f;
                                if ((e | 0) < (d | 0)) {
                                  while (1) {
                                    g =
                                      ((o(
                                        h[(((e - f) << 1) + a) >> 1],
                                        h[((e << 1) + a) >> 1]
                                      ) >>
                                        j) +
                                        g) |
                                      0;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                h[((f << 1) + b) >> 1] = g >> i;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function va(a, b, c, d, e, f) {
                            var g = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              k = (e + -1) | 0;
                              m = ((k << 2) + f) | 0;
                              n = ((k << 1) + b) | 0;
                              if ((e | 0) >= 2) {
                                while (1) {
                                  p = g << 1;
                                  l = h[(p + a) >> 1];
                                  e = (l + ((i[f >> 2] + 4096) >> 13)) | 0;
                                  e = (e | 0) > -32767 ? e : -32767;
                                  q = (e | 0) < 32767 ? e : 32767;
                                  e = 0;
                                  while (1) {
                                    j = (e + 1) | 0;
                                    i[((e << 2) + f) >> 2] =
                                      i[((j << 2) + f) >> 2] +
                                      o(h[((e << 1) + b) >> 1], l);
                                    e = j;
                                    if ((k | 0) != (e | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[m >> 2] = o(h[n >> 1], l);
                                  h[(c + p) >> 1] = q;
                                  g = (g + 1) | 0;
                                  if ((g | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = i[f >> 2];
                                e = g << 1;
                                j = h[(e + a) >> 1];
                                i[m >> 2] = o(j, h[n >> 1]);
                                b = (j + ((b + 4096) >> 13)) | 0;
                                b = (b | 0) > -32767 ? b : -32767;
                                h[(c + e) >> 1] = (b | 0) < 32767 ? b : 32767;
                                g = (g + 1) | 0;
                                if ((g | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function W(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              h = 0;
                            e = (H - 48) | 0;
                            H = e;
                            a: {
                              b: {
                                c: {
                                  if (
                                    ((i[(a + 8) >> 2] +
                                      ((i[(a + 12) >> 2] + c) >> 3)) |
                                      0) >=
                                    i[(a + 24) >> 2]
                                  ) {
                                    i[(e + 32) >> 2] = 5846;
                                    d = i[3524];
                                    Y(d, 5956, (e + 32) | 0);
                                    if (!i[(a + 16) >> 2]) {
                                      break b;
                                    }
                                    f = (o(i[(a + 24) >> 2], 3) + 15) >> 1;
                                    h = Oa(i[a >> 2], f);
                                    if (!h) {
                                      break c;
                                    }
                                    i[a >> 2] = h;
                                    i[(a + 24) >> 2] = f;
                                  }
                                  if (!c) {
                                    break a;
                                  }
                                  while (1) {
                                    d = (i[a >> 2] + i[(a + 8) >> 2]) | 0;
                                    c = (c + -1) | 0;
                                    g[d | 0] =
                                      j[d | 0] |
                                      (((b >>> c) & 1) <<
                                        (7 - i[(a + 12) >> 2]));
                                    d = (i[(a + 12) >> 2] + 1) | 0;
                                    i[(a + 12) >> 2] = d;
                                    if ((d | 0) == 8) {
                                      i[(a + 12) >> 2] = 0;
                                      d = (i[(a + 8) >> 2] + 1) | 0;
                                      i[(a + 8) >> 2] = d;
                                      g[(d + i[a >> 2]) | 0] = 0;
                                    }
                                    i[(a + 4) >> 2] = i[(a + 4) >> 2] + 1;
                                    if (c) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                i[(e + 16) >> 2] = 5876;
                                Y(d, 5974, (e + 16) | 0);
                                break a;
                              }
                              i[e >> 2] = 5919;
                              Y(d, 5974, e);
                            }
                            H = (e + 48) | 0;
                          }
                          function Aa(a, b, c, d) {
                            var e = 0,
                              f = 0;
                            a: {
                              if ((c | 0) >= 4194305) {
                                if ((d | 0) < 1) {
                                  break a;
                                }
                                c = ((c << 2) + 32768) | 0;
                                f =
                                  (((((c >> 17) + 2097152) | 0) / (c >> 16)) <<
                                    16) >>
                                  16;
                                c = 0;
                                while (1) {
                                  e = c << 1;
                                  h[(e + b) >> 1] =
                                    (o(f, h[(a + e) >> 1]) + 16384) >>> 15;
                                  c = (c + 1) | 0;
                                  if ((d | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if ((c | 0) >= 4097) {
                                if ((d | 0) < 1) {
                                  break a;
                                }
                                f = (131072 / (((c + 256) >>> 9) >>> 0)) | 0;
                                c = 0;
                                while (1) {
                                  e = c << 1;
                                  h[(e + b) >> 1] =
                                    (o(f, (k[(a + e) >> 1] << 18) >> 16) +
                                      128) >>>
                                    8;
                                  c = (c + 1) | 0;
                                  if ((d | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if ((d | 0) < 1) {
                                break a;
                              }
                              c = (c - -64) >> 7;
                              f = (131072 / (((c | 0) > 5 ? c : 5) >>> 0)) | 0;
                              c = 0;
                              while (1) {
                                e = c << 1;
                                h[(e + b) >> 1] =
                                  (o(f, (k[(a + e) >> 1] << 18) >> 16) + 32) >>>
                                  6;
                                c = (c + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Xa(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            d = (H - 208) | 0;
                            H = d;
                            i[(d + 204) >> 2] = c;
                            c = 0;
                            U((d + 160) | 0, 0, 40);
                            i[(d + 200) >> 2] = i[(d + 204) >> 2];
                            a: {
                              if (
                                (ra(
                                  0,
                                  b,
                                  (d + 200) | 0,
                                  (d + 80) | 0,
                                  (d + 160) | 0
                                ) |
                                  0) <
                                0
                              ) {
                                break a;
                              }
                              c = i[(a + 76) >> 2] >= 0 ? 1 : c;
                              e = i[a >> 2];
                              if (g[(a + 74) | 0] <= 0) {
                                i[a >> 2] = e & -33;
                              }
                              f = e & 32;
                              b: {
                                if (i[(a + 48) >> 2]) {
                                  ra(
                                    a,
                                    b,
                                    (d + 200) | 0,
                                    (d + 80) | 0,
                                    (d + 160) | 0
                                  );
                                  break b;
                                }
                                i[(a + 48) >> 2] = 80;
                                i[(a + 16) >> 2] = d + 80;
                                i[(a + 28) >> 2] = d;
                                i[(a + 20) >> 2] = d;
                                e = i[(a + 44) >> 2];
                                i[(a + 44) >> 2] = d;
                                ra(
                                  a,
                                  b,
                                  (d + 200) | 0,
                                  (d + 80) | 0,
                                  (d + 160) | 0
                                );
                                if (!e) {
                                  break b;
                                }
                                J[i[(a + 36) >> 2]](a, 0, 0) | 0;
                                i[(a + 48) >> 2] = 0;
                                i[(a + 44) >> 2] = e;
                                i[(a + 28) >> 2] = 0;
                                i[(a + 16) >> 2] = 0;
                                i[(a + 20) >> 2] = 0;
                              }
                              i[a >> 2] = i[a >> 2] | f;
                              if (!c) {
                                break a;
                              }
                            }
                            H = (d + 208) | 0;
                          }
                          function Ca(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              k = 0;
                            a: {
                              if (c) {
                                k = i[(a + 96) >> 2];
                                i[(a + 96) >> 2] = 1;
                                break a;
                              }
                              e = i[(a + 60) >> 2];
                              ca(32440, e, e, i[(a + 24) >> 2]);
                              h[(a + 80) >> 1] =
                                o(h[(a + 80) >> 1], 29491) >>> 15;
                            }
                            i[(a + 28) >> 2] = 1;
                            e = i[(a + 12) >> 2];
                            if ((e | 0) >= 1) {
                              f = i[(a + 84) >> 2];
                              while (1) {
                                f = (o(f, 1664525) + 1013904223) | 0;
                                j = o(h[(a + 80) >> 1], f >> 16);
                                h[(((e + g) << 1) + b) >> 1] =
                                  (((j - (j >> 3)) | 0) - -8192) >>> 14;
                                g = (g + 1) | 0;
                                if ((e | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                              i[(a + 84) >> 2] = f;
                            }
                            f = ((e << 1) + b) | 0;
                            _(
                              f,
                              i[(a + 60) >> 2],
                              f,
                              e,
                              i[(a + 24) >> 2],
                              i[(a + 64) >> 2]
                            );
                            ua(
                              b,
                              ((i[(a + 12) >> 2] << 1) + b) | 0,
                              b,
                              i[(a + 8) >> 2],
                              i[(a + 44) >> 2],
                              i[(a + 48) >> 2],
                              d
                            );
                            if (c) {
                              i[(a + 96) >> 2] = k;
                            }
                          }
                          function sa(a, b, c, d, e) {
                            var f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0;
                            if ((c | 0) >= 1) {
                              d = o((d | 0) < 4 ? d : 4, 6);
                              n = ((0 - k[(d + 2372) >> 1]) << 16) >> 16;
                              p = ((0 - k[(d + 2370) >> 1]) << 16) >> 16;
                              q = h[(d + 2404) >> 1];
                              r = h[(d + 2402) >> 1];
                              s = h[(d + 2400) >> 1];
                              g = i[(e + 4) >> 2];
                              d = i[e >> 2];
                              while (1) {
                                l = m << 1;
                                f = h[(l + a) >> 1];
                                d = (o(f, s) + d) | 0;
                                j = (d - -8192) >> 14;
                                h[(b + l) >> 1] =
                                  (d | 0) > 536862719
                                    ? 32767
                                    : (j | 0) > -32767
                                    ? j
                                    : -32767;
                                l = (o(f, r) + g) | 0;
                                g = (d << 1) >> 16;
                                j = d & 32767;
                                d =
                                  (l + ((o(g, p) + (o(j, p) >> 15)) << 1)) | 0;
                                f =
                                  (o(f, q) +
                                    ((o(g, n) + (o(j, n) >> 15)) << 1)) |
                                  0;
                                g = f;
                                m = (m + 1) | 0;
                                if ((m | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              i[(e + 4) >> 2] = f;
                              i[e >> 2] = d;
                            }
                          }
                          function hc(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              i = 0,
                              j = 0;
                            c = b;
                            if (!c) {
                              a = ((a >>> 0) / 10) | 0;
                              I = 0;
                              return a;
                            }
                            g = (61 - r(c)) | 0;
                            d = (0 - g) | 0;
                            f = g & 63;
                            e = f & 31;
                            if (32 <= f >>> 0) {
                              f = 0;
                              e = (c >>> e) | 0;
                            } else {
                              f = (c >>> e) | 0;
                              e =
                                ((((1 << e) - 1) & c) << (32 - e)) | (a >>> e);
                            }
                            d = d & 63;
                            c = d & 31;
                            if (32 <= d >>> 0) {
                              b = a << c;
                              a = 0;
                            } else {
                              b =
                                (((1 << c) - 1) & (a >>> (32 - c))) | (b << c);
                              a = a << c;
                            }
                            if (g) {
                              c = 0;
                              while (1) {
                                d = (e << 1) | (b >>> 31);
                                h = d;
                                f = (f << 1) | (e >>> 31);
                                d = (c - ((f + (9 < d >>> 0)) | 0)) >> 31;
                                i = d & 10;
                                e = (h - i) | 0;
                                f = (f - (h >>> 0 < i >>> 0)) | 0;
                                b = (b << 1) | (a >>> 31);
                                a = j | (a << 1);
                                h = d & 1;
                                j = h;
                                g = (g + -1) | 0;
                                if (g) {
                                  continue;
                                }
                                break;
                              }
                            }
                            I = (b << 1) | (a >>> 31);
                            return h | (a << 1);
                          }
                          function pb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0;
                            a: {
                              b: {
                                if ((b | 0) > 0) {
                                  while (1) {
                                    h[((d << 1) + a) >> 1] =
                                      ((o(d, 167772160) >>> 16) | 0) + 6144;
                                    d = (d + 1) | 0;
                                    if ((d | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  d = V(c, 6);
                                  if ((b | 0) < 1) {
                                    break b;
                                  }
                                  e = o(b, d);
                                  d = 0;
                                  while (1) {
                                    f = ((d << 1) + a) | 0;
                                    h[f >> 1] =
                                      k[f >> 1] +
                                      (g[(((d + e) | 0) + 4016) | 0] << 5);
                                    d = (d + 1) | 0;
                                    if ((d | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  c = V(c, 6);
                                  if ((b | 0) < 1) {
                                    break a;
                                  }
                                  c = o(b, c);
                                  d = 0;
                                  while (1) {
                                    e = ((d << 1) + a) | 0;
                                    h[e >> 1] =
                                      k[e >> 1] +
                                      (g[(((c + d) | 0) + 4528) | 0] << 4);
                                    d = (d + 1) | 0;
                                    if ((d | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                V(c, 6);
                              }
                              V(c, 6);
                            }
                          }
                          function ec(a, b) {
                            a: {
                              if (a) {
                                if (b >>> 0 <= 127) {
                                  break a;
                                }
                                b: {
                                  if (!i[i[3736] >> 2]) {
                                    if ((b & -128) == 57216) {
                                      break a;
                                    }
                                    break b;
                                  }
                                  if (b >>> 0 <= 2047) {
                                    g[(a + 1) | 0] = (b & 63) | 128;
                                    g[a | 0] = (b >>> 6) | 192;
                                    return 2;
                                  }
                                  if (
                                    !((b & -8192) != 57344
                                      ? b >>> 0 >= 55296
                                      : 0)
                                  ) {
                                    g[(a + 2) | 0] = (b & 63) | 128;
                                    g[a | 0] = (b >>> 12) | 224;
                                    g[(a + 1) | 0] = ((b >>> 6) & 63) | 128;
                                    return 3;
                                  }
                                  if ((b + -65536) >>> 0 <= 1048575) {
                                    g[(a + 3) | 0] = (b & 63) | 128;
                                    g[a | 0] = (b >>> 18) | 240;
                                    g[(a + 2) | 0] = ((b >>> 6) & 63) | 128;
                                    g[(a + 1) | 0] = ((b >>> 12) & 63) | 128;
                                    return 4;
                                  }
                                }
                                i[3790] = 25;
                                a = -1;
                              } else {
                                a = 1;
                              }
                              return a;
                            }
                            g[a | 0] = b;
                            return 1;
                          }
                          function Hb(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            e = (H - 48) | 0;
                            H = e;
                            a: {
                              if (i[(a + 24) >> 2] >= (c | 0)) {
                                break a;
                              }
                              i[(e + 32) >> 2] = 5708;
                              d = i[3524];
                              Y(d, 5956, (e + 32) | 0);
                              if (i[(a + 16) >> 2]) {
                                f = Oa(i[a >> 2], c);
                                if (f) {
                                  i[a >> 2] = f;
                                  i[(a + 24) >> 2] = c;
                                  break a;
                                }
                                c = i[(a + 24) >> 2];
                                i[(e + 16) >> 2] = 5747;
                                Y(d, 5974, (e + 16) | 0);
                                break a;
                              }
                              i[e >> 2] = 5795;
                              Y(d, 5974, e);
                              c = i[(a + 24) >> 2];
                            }
                            if ((c | 0) >= 1) {
                              d = 0;
                              while (1) {
                                g[(i[a >> 2] + d) | 0] = j[(b + d) | 0];
                                d = (d + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i[(a + 20) >> 2] = 0;
                            i[(a + 8) >> 2] = 0;
                            i[(a + 12) >> 2] = 0;
                            i[(a + 4) >> 2] = c << 3;
                            H = (e + 48) | 0;
                          }
                          function Ta(a, b) {
                            var c = 0;
                            c = (b | 0) != 0;
                            a: {
                              b: {
                                c: {
                                  if (!b | !(a & 3)) {
                                    break c;
                                  }
                                  while (1) {
                                    if (!j[a | 0]) {
                                      break b;
                                    }
                                    a = (a + 1) | 0;
                                    b = (b + -1) | 0;
                                    c = (b | 0) != 0;
                                    if (!b) {
                                      break c;
                                    }
                                    if (a & 3) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if (!c) {
                                  break a;
                                }
                              }
                              d: {
                                if (!j[a | 0] | (b >>> 0 < 4)) {
                                  break d;
                                }
                                while (1) {
                                  c = i[a >> 2];
                                  if (
                                    (c ^ -1) &
                                    (c + -16843009) &
                                    -2139062144
                                  ) {
                                    break d;
                                  }
                                  a = (a + 4) | 0;
                                  b = (b + -4) | 0;
                                  if (b >>> 0 > 3) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if (!b) {
                                break a;
                              }
                              while (1) {
                                if (!j[a | 0]) {
                                  return a;
                                }
                                a = (a + 1) | 0;
                                b = (b + -1) | 0;
                                if (b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return 0;
                          }
                          function ga(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              i = 0,
                              j = 0;
                            if (h[a >> 1] < (c | 0)) {
                              h[a >> 1] = c;
                            }
                            g = (b + -1) | 0;
                            e = ((g << 1) + a) | 0;
                            d = ((25736 - c) << 16) >> 16;
                            if (h[e >> 1] > (d | 0)) {
                              h[e >> 1] = d;
                            }
                            if ((b | 0) >= 3) {
                              d = k[a >> 1];
                              e = k[(a + 2) >> 1];
                              b = 1;
                              while (1) {
                                i = ((b << 1) + a) | 0;
                                f = (((d << 16) >> 16) + c) | 0;
                                d = (e << 16) >> 16;
                                if ((f | 0) > (d | 0)) {
                                  h[i >> 1] = f;
                                  d = (f << 16) >> 16;
                                  e = f;
                                }
                                b = (b + 1) | 0;
                                f = h[((b << 1) + a) >> 1];
                                j = (f - c) | 0;
                                if ((j | 0) < (d | 0)) {
                                  e = ((d >> 1) + ((j >>> 1) | 0)) | 0;
                                  h[i >> 1] = e;
                                }
                                d = e;
                                e = f;
                                if ((b | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function xa(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              h = 0;
                            d = i[(c + 16) >> 2];
                            a: {
                              if (!d) {
                                if (Ma(c)) {
                                  break a;
                                }
                                d = i[(c + 16) >> 2];
                              }
                              f = i[(c + 20) >> 2];
                              if ((d - f) >>> 0 < b >>> 0) {
                                return J[i[(c + 36) >> 2]](c, a, b) | 0;
                              }
                              b: {
                                if (g[(c + 75) | 0] < 0) {
                                  break b;
                                }
                                e = b;
                                while (1) {
                                  d = e;
                                  if (!d) {
                                    break b;
                                  }
                                  e = (d + -1) | 0;
                                  if (j[(e + a) | 0] != 10) {
                                    continue;
                                  }
                                  break;
                                }
                                e = J[i[(c + 36) >> 2]](c, a, d) | 0;
                                if (e >>> 0 < d >>> 0) {
                                  break a;
                                }
                                b = (b - d) | 0;
                                a = (a + d) | 0;
                                f = i[(c + 20) >> 2];
                                h = d;
                              }
                              X(f, a, b);
                              i[(c + 20) >> 2] = i[(c + 20) >> 2] + b;
                              e = (b + h) | 0;
                            }
                            return e;
                          }
                          function cc(a, b) {
                            a: {
                              if ((b | 0) >= 1024) {
                                a = a * 8.98846567431158e307;
                                if ((b | 0) < 2047) {
                                  b = (b + -1023) | 0;
                                  break a;
                                }
                                a = a * 8.98846567431158e307;
                                b = (((b | 0) < 3069 ? b : 3069) + -2046) | 0;
                                break a;
                              }
                              if ((b | 0) > -1023) {
                                break a;
                              }
                              a = a * 2.2250738585072014e-308;
                              if ((b | 0) > -2045) {
                                b = (b + 1022) | 0;
                                break a;
                              }
                              a = a * 2.2250738585072014e-308;
                              b = (((b | 0) > -3066 ? b : -3066) + 2044) | 0;
                            }
                            lc(0, 0);
                            lc(1, (b + 1023) << 20);
                            return a * +mc();
                          }
                          function db(a, b, c, d, e) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            var f = 0;
                            f = (H - 96) | 0;
                            H = f;
                            i[(f + 92) >> 2] = a;
                            a: {
                              if (d) {
                                i[(e + 36) >> 2] = J[i[2735]](10920);
                                Ba((f + 8) | 0, 8e3, 10920);
                                break a;
                              }
                              i[(e + 36) >> 2] = J[i[2902]](11588);
                              Ba((f + 8) | 0, 16e3, 11588);
                            }
                            a = i[(e + 36) >> 2];
                            J[i[(i[a >> 2] + 44) >> 2]](a, 4, (f + 92) | 0) | 0;
                            Fa(e);
                            a = X(T(80), (f + 8) | 0, 80);
                            i[(f + 4) >> 2] = 80;
                            d = a;
                            a = i[(f + 4) >> 2];
                            X(b, d, (a | 0) > (c | 0) ? c : a);
                            H = (f + 96) | 0;
                            return a | 0;
                          }
                          function wa(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              j = 0;
                            g = 1;
                            if ((d | 0) > 0) {
                              while (1) {
                                j = i[((f << 2) + a) >> 2];
                                e = j >> 31;
                                e = e ^ (e + j);
                                g = (e | 0) < (g | 0) ? g : e;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = 0;
                            e = 0;
                            if ((g | 0) > (c | 0)) {
                              while (1) {
                                e = (e + 1) | 0;
                                g = g >> 1;
                                if ((g | 0) > (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((d | 0) > 0) {
                              while (1) {
                                h[((f << 1) + b) >> 1] =
                                  i[((f << 2) + a) >> 2] >> e;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return e;
                          }
                          function Ob(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            j,
                            k,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            g = g | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            d = (e | 0) < 63 ? e : 63;
                            if ((g | 0) >= 1) {
                              f = (d << 23) >> 16;
                              e = 0;
                              while (1) {
                                l = o(h[(((e - c) << 1) + a) >> 1], f);
                                i[((e << 2) + b) >> 2] = l;
                                h[((e << 1) + a) >> 1] = (l + 4096) >>> 13;
                                e = (e + 1) | 0;
                                if ((g | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i[j >> 2] = c;
                            h[(k + 2) >> 1] = d;
                            h[k >> 1] = 0;
                            h[(k + 4) >> 1] = 0;
                          }
                          function Gb(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0;
                            c = i[(a + 4) >> 2];
                            d = i[(a + 8) >> 2];
                            e = i[(a + 12) >> 2];
                            a: {
                              if (!e) {
                                break a;
                              }
                              W(a, 0, 1);
                              if (!i[(a + 12) >> 2]) {
                                break a;
                              }
                              while (1) {
                                W(a, 1, 1);
                                if (i[(a + 12) >> 2]) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i[(a + 8) >> 2] = d;
                            i[(a + 12) >> 2] = e;
                            i[(a + 4) >> 2] = c;
                            c = (c + 7) >> 3;
                            d = (c | 0) < 200 ? c : 200;
                            if ((d | 0) >= 1) {
                              c = 0;
                              while (1) {
                                g[(b + c) | 0] = j[(i[a >> 2] + c) | 0];
                                c = (c + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return d;
                          }
                          function Eb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0;
                            d = (H - 16) | 0;
                            H = d;
                            a: {
                              b: {
                                switch (b | 0) {
                                  case 0:
                                    i[c >> 2] = i[(a + 4) >> 2] << 1;
                                    a = 0;
                                    break a;
                                  case 1:
                                    b = i[c >> 2];
                                    if (!b) {
                                      i[c >> 2] = 4;
                                      a = 0;
                                      break a;
                                    }
                                    a = i[((((b << 2) + a) | 0) + 24) >> 2];
                                    if (!a) {
                                      i[c >> 2] = -1;
                                      a = 0;
                                      break a;
                                    }
                                    i[c >> 2] = i[(a + 52) >> 2];
                                    a = 0;
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 11821;
                              Y(i[3524], 12120, d);
                              a = -1;
                            }
                            H = (d + 16) | 0;
                            return a | 0;
                          }
                          function Zb(a) {
                            var b = 0,
                              c = 0,
                              d = 0;
                            a: {
                              b: {
                                b = a;
                                if (!(b & 3)) {
                                  break b;
                                }
                                if (!j[a | 0]) {
                                  return 0;
                                }
                                while (1) {
                                  b = (b + 1) | 0;
                                  if (!(b & 3)) {
                                    break b;
                                  }
                                  if (j[b | 0]) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              while (1) {
                                c = b;
                                b = (b + 4) | 0;
                                d = i[c >> 2];
                                if (
                                  !((d ^ -1) & (d + -16843009) & -2139062144)
                                ) {
                                  continue;
                                }
                                break;
                              }
                              if (!(d & 255)) {
                                return (c - a) | 0;
                              }
                              while (1) {
                                d = j[(c + 1) | 0];
                                b = (c + 1) | 0;
                                c = b;
                                if (d) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return (b - a) | 0;
                          }
                          function Mb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0;
                            d = (H - 16) | 0;
                            H = d;
                            a: {
                              b: {
                                switch (b | 0) {
                                  case 0:
                                    i[c >> 2] = i[a >> 2];
                                    a = 0;
                                    break a;
                                  case 1:
                                    b = i[c >> 2];
                                    if (!b) {
                                      i[c >> 2] = 5;
                                      a = 0;
                                      break a;
                                    }
                                    a = i[((((b << 2) + a) | 0) + 28) >> 2];
                                    if (!a) {
                                      i[c >> 2] = -1;
                                      a = 0;
                                      break a;
                                    }
                                    i[c >> 2] = i[(a + 52) >> 2];
                                    a = 0;
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 5040;
                              Y(i[3524], 5072, d);
                              a = -1;
                            }
                            H = (d + 16) | 0;
                            return a | 0;
                          }
                          function V(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              h = 0,
                              j = 0;
                            c = i[(a + 12) >> 2];
                            d = i[(a + 8) >> 2];
                            if (
                              ((((c + b) | 0) + (d << 3)) | 0) >
                              i[(a + 4) >> 2]
                            ) {
                              i[(a + 20) >> 2] = 1;
                              return 0;
                            }
                            if (!(i[(a + 20) >> 2] | !b)) {
                              j = i[a >> 2];
                              while (1) {
                                f = g[(d + j) | 0];
                                h = (c + 1) | 0;
                                i[(a + 12) >> 2] = h;
                                f = (f >>> (7 - c)) & 1;
                                e = e << 1;
                                if ((h | 0) != 8) {
                                  c = h;
                                } else {
                                  i[(a + 12) >> 2] = 0;
                                  d = (d + 1) | 0;
                                  i[(a + 8) >> 2] = d;
                                  c = 0;
                                }
                                e = e | f;
                                b = (b + -1) | 0;
                                if (b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return e;
                          }
                          function Lb(a) {
                            i[(a + 8) >> 2] = 1065353216;
                            i[a >> 2] = 1036831949;
                            i[(a + 4) >> 2] = 0;
                            i[(a + 52) >> 2] = 1059982050;
                            i[(a + 56) >> 2] = 1028443341;
                            i[(a + 36) >> 2] = 0;
                            i[(a + 40) >> 2] = 0;
                            i[(a + 60) >> 2] = 0;
                            i[(a + 44) >> 2] = 0;
                            i[(a + 48) >> 2] = 1096387994;
                            i[(a + 12) >> 2] = 1091252534;
                            i[(a + 16) >> 2] = 1091252534;
                            i[(a + 28) >> 2] = 1091252534;
                            i[(a + 32) >> 2] = 0;
                            i[(a + 20) >> 2] = 1091252534;
                            i[(a + 24) >> 2] = 1091252534;
                          }
                          function Rb(a, b, c, d, e, f, g, j, k, l, m, n, o) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            g = g | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            o = o | 0;
                            e = b;
                            k = c;
                            b = ((m & 1) + m) | 0;
                            c = g << 1;
                            Vb(a, e, k, d, b, g, f, (c + b) | 0);
                            if ((g | 0) >= 1) {
                              m = 0;
                              while (1) {
                                d = ((m << 2) + j) | 0;
                                i[d >> 2] =
                                  i[d >> 2] + (h[(b + (m << 1)) >> 1] << 8);
                                m = (m + 1) | 0;
                                if ((m | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            U(a, 0, c);
                          }
                          function Ua(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            a: {
                              if (
                                (((b | 0) == 1) & (a >>> 0 < 0)) |
                                (b >>> 0 < 1)
                              ) {
                                d = a;
                                break a;
                              }
                              while (1) {
                                d = hc(a, b);
                                e = I;
                                f = e;
                                c = (c + -1) | 0;
                                g[c | 0] = (a - gc(d, e)) | 48;
                                e = b >>> 0 > 9;
                                a = d;
                                b = f;
                                if (e) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if (d) {
                              while (1) {
                                c = (c + -1) | 0;
                                a = ((d >>> 0) / 10) | 0;
                                g[c | 0] = (d - o(a, 10)) | 48;
                                b = d >>> 0 > 9;
                                d = a;
                                if (b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function bb(a, b, c, d, e, f) {
                            var g = 0,
                              i = p(0),
                              j = 0;
                            g = H;
                            j = g;
                            g = (g - (((e << 2) + 15) & -16)) | 0;
                            H = g;
                            Hb(b, c, f);
                            if ((Nb(a, b, g) | 0) >= 0) {
                              if ((e | 0) >= 1) {
                                b = 0;
                                while (1) {
                                  a = ((b << 1) + d) | 0;
                                  i = m[(g + (b << 2)) >> 2];
                                  a: {
                                    if (p(q(i)) < p(2147483648)) {
                                      c = ~~i;
                                      break a;
                                    }
                                    c = -2147483648;
                                  }
                                  h[a >> 1] = c;
                                  b = (b + 1) | 0;
                                  if ((e | 0) != (b | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                            }
                            H = j;
                          }
                          function eb(a) {
                            var b = 0,
                              c = 0;
                            b = (H - 32) | 0;
                            H = b;
                            a: {
                              b: {
                                if (
                                  (j[a | 0] != 83) |
                                  (j[(a + 1) | 0] != 112) |
                                  ((j[(a + 2) | 0] != 101) |
                                    (j[(a + 3) | 0] != 101))
                                ) {
                                  break b;
                                }
                                if (
                                  (j[(a + 4) | 0] != 120) |
                                  (j[(a + 5) | 0] != 32) |
                                  ((j[(a + 6) | 0] != 32) |
                                    (j[(a + 7) | 0] != 32))
                                ) {
                                  break b;
                                }
                                c = T(80);
                                X(c, a, 80);
                                break a;
                              }
                              i[(b + 16) >> 2] = 13233;
                              Y(i[3524], 13305, (b + 16) | 0);
                            }
                            H = (b + 32) | 0;
                            return c;
                          }
                          function fa(a, b, c, d, e, f) {
                            var g = 0,
                              i = 0;
                            e =
                              ((((e << 14) + 16384) | 0) / ((f << 16) >> 16)) |
                              0;
                            if ((d | 0) >= 1) {
                              e = e << 16;
                              g = e >> 16;
                              i = (1073741824 - e) >> 16;
                              e = 0;
                              while (1) {
                                f = e << 1;
                                h[(f + c) >> 1] =
                                  ((o(h[(b + f) >> 1], g) - -8192) >>> 14) +
                                  ((o(h[(a + f) >> 1], i) - -8192) >>> 14);
                                e = (e + 1) | 0;
                                if ((e | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function bc(a) {
                            var b = 0,
                              c = 0,
                              d = 0;
                            b = (H - 16) | 0;
                            H = b;
                            g[(b + 15) | 0] = 10;
                            c = i[(a + 16) >> 2];
                            a: {
                              if (!c) {
                                if (Ma(a)) {
                                  break a;
                                }
                                c = i[(a + 16) >> 2];
                              }
                              d = i[(a + 20) >> 2];
                              if (
                                !(
                                  (g[(a + 75) | 0] == 10) |
                                  (d >>> 0 >= c >>> 0)
                                )
                              ) {
                                i[(a + 20) >> 2] = d + 1;
                                g[d | 0] = 10;
                                break a;
                              }
                              if (
                                (J[i[(a + 36) >> 2]](a, (b + 15) | 0, 1) | 0) !=
                                1
                              ) {
                                break a;
                              }
                            }
                            H = (b + 16) | 0;
                          }
                          function _a(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0;
                            e = (H - 16) | 0;
                            H = e;
                            a =
                              B(
                                i[(a + 60) >> 2],
                                b | 0,
                                c | 0,
                                d & 255,
                                (e + 8) | 0
                              ) | 0;
                            b = 0;
                            a: {
                              if (!a) {
                                break a;
                              }
                              i[3790] = a;
                              b = -1;
                            }
                            b: {
                              if (!b) {
                                b = i[(e + 12) >> 2];
                                a = i[(e + 8) >> 2];
                                break b;
                              }
                              i[(e + 8) >> 2] = -1;
                              i[(e + 12) >> 2] = -1;
                              b = -1;
                              a = -1;
                            }
                            H = (e + 16) | 0;
                            I = b;
                            return a | 0;
                          }
                          function Nb(a, b, c) {
                            var d = 0,
                              e = 0;
                            d = (H - 1296) | 0;
                            H = d;
                            J[i[(i[a >> 2] + 48) >> 2]](a, 3, (d + 1292) | 0) |
                              0;
                            b = J[i[(i[a >> 2] + 40) >> 2]](a, b, d) | 0;
                            e = i[(d + 1292) >> 2];
                            if ((e | 0) >= 1) {
                              a = 0;
                              while (1) {
                                m[((a << 2) + c) >> 2] = h[((a << 1) + d) >> 1];
                                a = (a + 1) | 0;
                                if ((e | 0) != (a | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (d + 1296) | 0;
                            return b;
                          }
                          function gb(a, b, c) {
                            var d = 0,
                              e = 0;
                            d = b;
                            b = V(a, 4);
                            d = (d + o(b, 20)) | 0;
                            e = i[(d + 4) >> 2];
                            if (e) {
                              return J[e | 0](a, c, i[(d + 8) >> 2]) | 0;
                            }
                            c = 1;
                            a: {
                              if ((b | 0) < 2) {
                                break a;
                              }
                              c = 4;
                              if ((b | 0) < 8) {
                                break a;
                              }
                              c = 8;
                              if ((b | 0) < 10) {
                                break a;
                              }
                              c = 16;
                              if ((b | 0) < 12) {
                                break a;
                              }
                              c = (b | 0) < 14 ? 32 : 64;
                            }
                            oa(a, c);
                            return 0;
                          }
                          function Oa(a, b) {
                            var c = 0,
                              d = 0;
                            if (!a) {
                              return na(b);
                            }
                            if (b >>> 0 >= 4294967232) {
                              i[3790] = 48;
                              return 0;
                            }
                            c = dc(
                              (a + -8) | 0,
                              b >>> 0 < 11 ? 16 : (b + 11) & -8
                            );
                            if (c) {
                              return (c + 8) | 0;
                            }
                            c = na(b);
                            if (!c) {
                              return 0;
                            }
                            d = i[(a + -4) >> 2];
                            d = ((d & 3 ? -4 : -8) + (d & -8)) | 0;
                            X(c, a, d >>> 0 < b >>> 0 ? d : b);
                            S(a);
                            return c;
                          }
                          function Cb(a) {
                            a = a | 0;
                            S(i[(a + 64) >> 2]);
                            S(i[(a + 68) >> 2]);
                            S(i[(a + 72) >> 2]);
                            S(i[(a + 100) >> 2]);
                            S(i[(a + 80) >> 2]);
                            S(i[(a + 96) >> 2]);
                            S(i[(a + 104) >> 2]);
                            S(i[(a + 108) >> 2]);
                            S(i[(a + 112) >> 2]);
                            S(i[(a + 116) >> 2]);
                            S(i[(a + 120) >> 2]);
                            S(i[(a + 132) >> 2]);
                            S(i[(a + 52) >> 2]);
                            S(i[(a + 140) >> 2]);
                            S(a);
                          }
                          function nb(a) {
                            a = a | 0;
                            var b = 0;
                            b = i[(a + 4) >> 2];
                            J[i[(i[b >> 2] + 24) >> 2]](b);
                            S(i[(a + 48) >> 2]);
                            S(i[(a + 52) >> 2]);
                            S(i[(a + 56) >> 2]);
                            S(i[(a + 68) >> 2]);
                            S(i[(a + 72) >> 2]);
                            S(i[(a + 76) >> 2]);
                            S(i[(a + 92) >> 2]);
                            S(i[(a + 96) >> 2]);
                            S(i[(a + 80) >> 2]);
                            S(i[(a + 84) >> 2]);
                            S(i[(a + 88) >> 2]);
                            S(a);
                          }
                          function Ib(a, b, c, d, e, f) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            if ((c | 0) >= 1) {
                              b = 0;
                              while (1) {
                                d = (o(i[f >> 2], 1664525) + 1013904223) | 0;
                                i[f >> 2] = d;
                                i[((b << 2) + a) >> 2] =
                                  ((((d >> 16) - (d >> 19)) | 0) - -8192) &
                                  -16384;
                                b = (b + 1) | 0;
                                if ((c | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function vb(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0;
                            if ((b | 0) >= 1) {
                              while (1) {
                                e = ((c << 2) + a) | 0;
                                d = i[e >> 2];
                                f = (d | 0) < -262144e3;
                                if (!((d | 0) <= 262144e3 ? !f : 0)) {
                                  i[e >> 2] = f
                                    ? -262144e3
                                    : (d | 0) > 262144e3
                                    ? 262144e3
                                    : 0;
                                }
                                c = (c + 1) | 0;
                                if ((c | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function cb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0;
                            g[i[c >> 2]] = 0;
                            i[(c + 20) >> 2] = 0;
                            i[(c + 12) >> 2] = 0;
                            i[(c + 4) >> 2] = 0;
                            i[(c + 8) >> 2] = 0;
                            d = i[(c + 36) >> 2];
                            J[i[(i[d >> 2] + 28) >> 2]](d, a, c) | 0;
                            d = b;
                            a = Gb(c, (b + 2) | 0);
                            b = a & 65535;
                            h[d >> 1] = ((b << 24) | (b << 8)) >>> 16;
                            return a | 0;
                          }
                          function ma(a) {
                            var b = 0,
                              c = 0;
                            b = i[3652];
                            b;
                            c = a;
                            a = Zb(a);
                            a: {
                              if (
                                (((ac(c, a, b) | 0) != (a | 0) ? -1 : 0) | 0) <
                                0
                              ) {
                                break a;
                              }
                              b: {
                                if (j[(b + 75) | 0] == 10) {
                                  break b;
                                }
                                a = i[(b + 20) >> 2];
                                if (a >>> 0 >= l[(b + 16) >> 2]) {
                                  break b;
                                }
                                i[(b + 20) >> 2] = a + 1;
                                g[a | 0] = 10;
                                break a;
                              }
                              bc(b);
                            }
                          }
                          function $(a, b, c) {
                            var d = 0;
                            c = c >> 2;
                            if (c) {
                              while (1) {
                                d =
                                  (((((((o(h[(b + 2) >> 1], h[(a + 2) >> 1]) +
                                    o(h[b >> 1], h[a >> 1])) |
                                    0) +
                                    o(h[(b + 4) >> 1], h[(a + 4) >> 1])) |
                                    0) +
                                    o(h[(b + 6) >> 1], h[(a + 6) >> 1])) >>
                                    6) +
                                    d) |
                                  0;
                                b = (b + 8) | 0;
                                a = (a + 8) | 0;
                                c = (c + -1) | 0;
                                if (c) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return d;
                          }
                          function ea(a, b, c, d, e) {
                            var f = 0;
                            f = (H - 256) | 0;
                            H = f;
                            if (!((e & 73728) | ((c | 0) <= (d | 0)))) {
                              c = (c - d) | 0;
                              d = c >>> 0 < 256;
                              U(f, b & 255, d ? c : 256);
                              if (!d) {
                                while (1) {
                                  ja(a, f, 256);
                                  c = (c + -256) | 0;
                                  if (c >>> 0 > 255) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              ja(a, f, c);
                            }
                            H = (f + 256) | 0;
                          }
                          function da(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            if ((d | 0) >= 1) {
                              g = c & 16383;
                              h = (c << 2) >> 16;
                              c = 0;
                              while (1) {
                                e = c << 2;
                                f = (i[(e + a) >> 2] << 9) >> 16;
                                i[(b + e) >> 2] =
                                  (o(f, h) + (o(f, g) >> 14)) << 7;
                                c = (c + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ma(a) {
                            var b = 0;
                            b = j[(a + 74) | 0];
                            g[(a + 74) | 0] = (b + -1) | b;
                            b = i[a >> 2];
                            if (b & 8) {
                              i[a >> 2] = b | 32;
                              return -1;
                            }
                            i[(a + 4) >> 2] = 0;
                            i[(a + 8) >> 2] = 0;
                            b = i[(a + 44) >> 2];
                            i[(a + 28) >> 2] = b;
                            i[(a + 20) >> 2] = b;
                            i[(a + 16) >> 2] = b + i[(a + 48) >> 2];
                            return 0;
                          }
                          function ca(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0;
                            if ((d | 0) >= 1) {
                              e = a;
                              while (1) {
                                g = f << 1;
                                e = (e << 16) >> 16;
                                h[(g + c) >> 1] =
                                  (o(e, h[(b + g) >> 1]) + 16384) >>> 15;
                                e = ((o(a, e) + 16384) >>> 15) | 0;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function kb(a) {
                            a = a | 0;
                            var b = 0;
                            b = i[(a + 4) >> 2];
                            J[i[(i[b >> 2] + 36) >> 2]](b);
                            S(i[(a + 44) >> 2]);
                            S(i[(a + 48) >> 2]);
                            S(i[(a + 52) >> 2]);
                            S(i[(a + 56) >> 2]);
                            S(i[(a + 60) >> 2]);
                            S(i[(a + 68) >> 2]);
                            S(i[(a + 72) >> 2]);
                            S(i[(a + 64) >> 2]);
                            S(a);
                          }
                          function ia(a) {
                            var b = 0,
                              c = 0;
                            b = i[3750];
                            c = (a + 3) & -4;
                            a = (b + c) | 0;
                            a: {
                              if (a >>> 0 <= b >>> 0 ? (c | 0) >= 1 : 0) {
                                break a;
                              }
                              if (a >>> 0 > (pc() << 16) >>> 0) {
                                if (!(D(a | 0) | 0)) {
                                  break a;
                                }
                              }
                              i[3750] = a;
                              return b;
                            }
                            i[3790] = 48;
                            return -1;
                          }
                          function za(a) {
                            var b = 0,
                              c = 0,
                              d = 0;
                            if ((g[i[a >> 2]] + -48) >>> 0 < 10) {
                              while (1) {
                                b = i[a >> 2];
                                d = g[b | 0];
                                i[a >> 2] = b + 1;
                                c = (((o(c, 10) + d) | 0) + -48) | 0;
                                if ((g[(b + 1) | 0] + -48) >>> 0 < 10) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function gc(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0;
                            c = (a >>> 16) | 0;
                            e = o(c, 0);
                            d = o(c, 10);
                            c = o(a & 65535, 10);
                            d = (d + ((c >>> 16) | 0)) | 0;
                            a = d & 65535;
                            I = (e + o(b, 10) + (d >>> 16) + (a >>> 16)) | 0;
                            return (c & 65535) | (a << 16);
                          }
                          function pa(a, b, c) {
                            var d = 0;
                            a: {
                              if ((c | 0) < 2) {
                                break a;
                              }
                              c = (c + -1) | 0;
                              while (1) {
                                if (h[b >> 1] >= (a | 0)) {
                                  break a;
                                }
                                b = (b + 2) | 0;
                                d = (d + 1) | 0;
                                if ((c | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                              d = c;
                            }
                            return d;
                          }
                          function oa(a, b) {
                            var c = 0;
                            b = (i[(a + 12) >> 2] + b) | 0;
                            c = i[(a + 8) >> 2];
                            if (
                              !(i[(a + 20) >> 2]
                                ? 0
                                : ((b + (c << 3)) | 0) <= i[(a + 4) >> 2])
                            ) {
                              i[(a + 20) >> 2] = 1;
                              return;
                            }
                            i[(a + 12) >> 2] = b & 7;
                            i[(a + 8) >> 2] = (b >> 3) + c;
                          }
                          function Fb(a) {
                            var b = 0,
                              c = 0;
                            b = i[(a + 12) >> 2];
                            c = i[(a + 8) >> 2];
                            if (((b + (c << 3)) | 0) >= i[(a + 4) >> 2]) {
                              i[(a + 20) >> 2] = 1;
                              return 0;
                            }
                            return i[(a + 20) >> 2]
                              ? 0
                              : (g[(i[a >> 2] + c) | 0] >>> (7 - b)) & 1;
                          }
                          function T(a) {
                            var b = 0,
                              c = 0;
                            b = 0;
                            a: {
                              if (!a) {
                                break a;
                              }
                              c = a;
                              b = a;
                              if ((a | 1) >>> 0 < 65536) {
                                break a;
                              }
                              b = c;
                            }
                            c = b;
                            a = na(b);
                            if (!(!a | !(j[(a + -4) | 0] & 3))) {
                              U(a, 0, c);
                            }
                            return a;
                          }
                          function Wa(a, b, c, d) {
                            if (a | b) {
                              while (1) {
                                c = (c + -1) | 0;
                                g[c | 0] = j[((a & 15) + 14592) | 0] | d;
                                a = ((b & 15) << 28) | (a >>> 4);
                                b = (b >>> 4) | 0;
                                if (a | b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function Jb(a) {
                            var b = 0,
                              c = 0;
                            c = 12144;
                            a: {
                              while (1) {
                                if (i[c >> 2] >= (a | 0)) {
                                  break a;
                                }
                                c = (c + 4) | 0;
                                b = (b + 1) | 0;
                                if ((b | 0) != 31) {
                                  continue;
                                }
                                break;
                              }
                              b = 31;
                            }
                            return b;
                          }
                          function Fa(a) {
                            var b = 0;
                            b = T(2e3);
                            i[a >> 2] = b;
                            if (b) {
                              i[(a + 20) >> 2] = 0;
                              i[(a + 24) >> 2] = 2e3;
                              i[(a + 12) >> 2] = 0;
                              i[(a + 16) >> 2] = 1;
                              i[(a + 4) >> 2] = 0;
                              i[(a + 8) >> 2] = 0;
                            }
                          }
                          function Pa(a) {
                            var b = 0;
                            a = a ? a : 1;
                            a: {
                              while (1) {
                                b = na(a);
                                if (b) {
                                  break a;
                                }
                                b = i[3807];
                                if (b) {
                                  J[b | 0]();
                                  continue;
                                }
                                break;
                              }
                              E();
                              x();
                            }
                            return b;
                          }
                          function Va(a, b, c) {
                            if (a | b) {
                              while (1) {
                                c = (c + -1) | 0;
                                g[c | 0] = (a & 7) | 48;
                                a = ((b & 7) << 29) | (a >>> 3);
                                b = (b >>> 3) | 0;
                                if (a | b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function zb(a) {
                            a = a | 0;
                            S(i[(a + 44) >> 2]);
                            S(i[(a + 48) >> 2]);
                            S(i[(a + 60) >> 2]);
                            S(i[(a + 56) >> 2]);
                            S(i[(a + 64) >> 2]);
                            S(i[(a + 76) >> 2]);
                            S(a);
                          }
                          function ac(a, b, c) {
                            a: {
                              if (i[(c + 76) >> 2] <= -1) {
                                a = xa(a, b, c);
                                break a;
                              }
                              a = xa(a, b, c);
                            }
                            if ((a | 0) == (b | 0)) {
                              return b;
                            }
                            return a;
                          }
                          function la(a, b) {
                            var c = 0;
                            c = (H - 16) | 0;
                            H = c;
                            i[(c + 8) >> 2] = a;
                            i[(c + 4) >> 2] = b;
                            i[c >> 2] = 12377;
                            Y(i[3524], 12767, c);
                            G(1);
                            x();
                          }
                          function ic(a) {
                            var b = 0;
                            b = a & 31;
                            a = (0 - a) & 31;
                            return (
                              (((-1 >>> b) & -2) << b) |
                              (((-1 << a) & -2) >>> a)
                            );
                          }

                          function Y(a, b, c) {
                            var d = 0;
                            d = (H - 16) | 0;
                            H = d;
                            i[(d + 12) >> 2] = c;
                            Xa(a, b, c);
                            H = (d + 16) | 0;
                          }
                          function fb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            oa(a, (V(a, 4) << 3) | 5);
                            return 0;
                          }
                          function _b(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            I = 0;
                            return 0;
                          }
                          function Qa(a, b) {
                            if (!a) {
                              return 0;
                            }
                            return ec(a, b);
                          }
                          function ja(a, b, c) {
                            if (!(j[a | 0] & 32)) {
                              xa(b, c, a);
                            }
                          }
                          function Wb(a) {
                            a = a | 0;
                            a = (H - a) & -16;
                            H = a;
                            return a | 0;
                          }
                          function Za(a) {
                            a = a | 0;
                            return F(i[(a + 60) >> 2]) | 0;
                          }
                          function $b(a) {
                            a = a | 0;
                            return 0;
                          }
                          function Yb() {
                            return H | 0;
                          }
                          function Xb(a) {
                            a = a | 0;
                            H = a;
                          }
                          function Sa() {}
                          // EMSCRIPTEN_END_FUNCS
                          var J = jc([
                            null,
                            Mb,
                            Db,
                            Cb,
                            Bb,
                            Ab,
                            zb,
                            yb,
                            xb,
                            wb,
                            sb,
                            rb,
                            Pb,
                            Ob,
                            Rb,
                            Ib,
                            Sb,
                            Qb,
                            fc,
                            Tb,
                            ub,
                            tb,
                            Eb,
                            ob,
                            nb,
                            mb,
                            lb,
                            kb,
                            jb,
                            ib,
                            hb,
                            qb,
                            pb,
                            fb,
                            Za,
                            Ya,
                            _a,
                            $b,
                            _b,
                          ]);
                          function pc() {
                            return (f.byteLength / 65536) | 0;
                          }
                          return {
                            i: J,
                            j: Sa,
                            k: db,
                            l: cb,
                            m: ab,
                            n: Yb,
                            o: Xb,
                            p: Wb,
                            q: na,
                          };
                        }
                        var K = new Uint8Array(sc.buffer);
                        for (var L = new Uint8Array(123), M = 25; M >= 0; --M) {
                          L[48 + M] = 52 + M;
                          L[65 + M] = M;
                          L[97 + M] = 26 + M;
                        }
                        L[43] = 62;
                        L[47] = 63;
                        function qc(zc, Ac, Bc) {
                          var N,
                            O,
                            M = 0,
                            P = Ac,
                            Q = Bc.length,
                            R =
                              Ac +
                              ((Q * 3) >> 2) -
                              (Bc[Q - 2] == '=') -
                              (Bc[Q - 1] == '=');
                          for (; M < Q; M += 4) {
                            N = L[Bc.charCodeAt(M + 1)];
                            O = L[Bc.charCodeAt(M + 2)];
                            zc[P++] = (L[Bc.charCodeAt(M)] << 2) | (N >> 4);
                            if (P < R) zc[P++] = (N << 4) | (O >> 2);
                            if (P < R)
                              zc[P++] = (O << 6) | L[Bc.charCodeAt(M + 3)];
                          }
                        }
                        qc(
                          K,
                          1024,
                          'BxERGxkWDAT9ABzcJ+jxA/cP+wof5Asf6wn19f755w7qHwTyE/QO+wT5BPsJAP4q0fABCAAJF8cAHPUG4TfTA/sEAv4E+f0G/gf9DAUINvYI+fjo5+Xy+wgFLBcF9/X18/f0+OP46gbxA/T/+/0i/x3wEfwMAgEE/vwC/wv9zBwe9+AZLOzoBAb/'
                        );
                        qc(
                          K,
                          1174,
                          '5/YWHQ3z6vP8APzwCg/c6BwZ//1C3/XxBgADBP4FGOzRHRP+/P8A//4DAQj1BQXHHBwA8AT8DPr/Auw99xjq1h0GEQgEAr8PCAoFBgUDAv79BfcE+xcNF/3BA/v8+gD9F9zSCQUFCAQJ+wH9CgH6CvUY0R8W9A72Bgv5+QfhM/T6BwbvCfXsNO0D+vr4+xfXJQHrCvIIBwXx8Rcn5t8HAuDi6/gEDBEPDgvyCQ3gAvYf9vj4Bvz/CsAXBhQNBgjqECIHKs/kBRoE8SkiKSAhGBcOCCgiBOjX7fEN8yHKGBvUIRvx8RjtDtwO9xj0/CX7EN4FCiHxyvAMGQwBAgAD//z8CwLINhvsDfrS19/1+wcMDvL7CBQGAwT4+9YLCPIZ/gINC+on9wkF0/cH9wz5Iu+aBwLWEiP33gv7/gMWLszn96IIC/v7+wT53fk2BeADGPfqCEEl//Tp+vfkN98O/QISxCnvCPAR9QD1HeQlCcsh8vcH5/n1GuD4GOsW7RP2HfIAAAAAAAAAAPvMCikG4vwQIBbl6iD95P0D3QYRFxUIAgTT7w4X/OH1/Q4BE/UCPfgJ9Af2DP3oY9AXMtv76QAI8iPA+y7nDf/P7fEJIjIZC/r38Ozg3+DlCvgM8Tjy4CED9wFB9/f2/vrpCRED5A3gBP72BPBMDMwGDSH6BPL3/QHx8BwB8QsQCQTr29j6Fgzx6fLv8Pf29w3ZKQX3ENoZLtEEMfIR/gYSBfrf6iwy/gED+gcH/esm7iLy1zzzBhDoIxPz3BgD7/L2JCzU4/0DyvgMNxoE/vsC9RbpAhYB59lCzxX4/gryxBkGChvnEAX+9xrz7Dr+BzT3AgX88Rf/2hcIG/oA5fkn9vIaC9P0CfsiBN0KK+r1OPkUAQoB5gleC+Xy8wH1AA77+vb88fjXFfsB5PgW9yHp/Pz0JwT5A8RQCO8C+gz7AQkPGx8eGxc9LxoK+/j08wXuGfH88fUM/v7w/voYDAv8CQH3DtM5DBTdGgvAIPb2Kvz38CAYBwo09ccdAAgA+hHvyNgHFBIM+hAFB/8JAQodDBAN/hcHCf38+xLADTfnCfcYDucP9djiJQHtFvvhDf4AB/wQvQxC3Bj4EvHpEwDT+QQD8w0jBQ0hChsXAPn1K7Yk9AIF+AbfC/Dy+/n9Ed4b8Av3DyHhCPAH+vk/ye8L/xTSIuIGCRMc9wXo+On+H+3w+/HuABoSJfvx/hEF5RXfLAzl9xELGevh+Q0h+Of5B/YE+vcwrun4BgvpA/0x4xkfBA4QCfzuCuYDBdT3CdHJDwkcAQT9Lgb62uPh8foDAA76CMrOIfsB8iHQGvz7/fv9++TqTTf/AgoK9/K+zwvc+uwK9hAMBP/wLdTOH/4ZKhfg6gALFNjd2Nzg5uvzNOoG6OwR+/gk5/UV5gYi+AcU/QXn+BL79/wB9xQUJzDoCQW/Fh0EA9X1IPoJE+X20fIYCvnc+f/8+/sQNRnm4/z0LcbeIfsC/xvQH/EW+wQHB+f9C+oQ9Aj9B/UtDrftONIY7Bz0/v/c/d8T+gcC8QXh0wgjDRQA9zDz1f3zAvtIvOUCAf75BSQh2PT8+xcTAECvhY86AECvhJE7AEBDhOA7AEDHgUs+AEBSqIkZAAA4PZCFOD26PY+Euj3nPTKE5z0iP76BIj9SOFyPUjgAAHr+BAZ/7JtOm05/7AQG2PsBC9rlZXu1GiL8L/8v/yL8tRple9rlAQvY+wAAAAAAAODg4ADkvfsh1vrgEsf2yiPwG9cqE+3YJNMY6yj48u4cAQ7GNe6o2SfaFe4l7RTVJgoR0DbMxvMh1P/1IPT13hYOANIu293eBecs4isG/MEx4SvXK+ke1SnVGvIs3wHzG/MS2yXSt9Mi3BjnItz17BPnDO4h3LvFItMGCC7q8ugS/w3ULNnQ5g/gH9si3w/SH+ge3CXXH+kpzhb8MuoC6xzvHt4o+cTkHdoq5CrU9RUr8AjUItnJ1RX13Rop9wDeHfh5r3EH8Ooh2yHhJOX53BHeRsdB2/XQFdgR/yzfBvoh9wDsIutF3znjIeEjyQz/Md8b6iPO39ERzjYzXv/71CP8Ftgt2b7nGN8B5hTo6ecM9RXTLOfT7RHVafBSBesBKfAL3x7znfw52yHxLOclwTbcGOEfy8jaGtf8BCXfDeIYMTSicvvi8RcBJtg46QzcHe8o0TPb19kLzyIAOu75/CLwEeUjHgXCQQQwvEzVC/Um7hPxKenC2RfWCv4p6/PzGfcN0SrpwugY1DzrOu79zCDqFtwitTkQWu0DCi3jF9og+8LNJs0o7jXWDegg3g7sHsi15iXmIA875hHjHfkczDX04gUe+9D7IwIC1SgVEBBL59PgCtUS9ioJAP80/wfiJBPQ/DDkGeMg6gDhFuAR9iTA18IkzA8QOuLq4Ab5Cdok6BXsBfv5DvYC5RDsAOAaEwj11x8c5eAiKiLvFvYN4xL05ugLFgX7+za81TnnGAQEGvj07zYe0wEK8RLXC0S9JfDo8CbqBuMeQuUFB/ANAvT5/ewkBOQJAyAwGicDAAfr8wWu+UnsIvf7Af8K+/b/CQH3CgDyC//+/wsUYK/q9PfGCRjiGt0b9A3uOMUP+Rfx/wbnDursL/UQAibp7eL3KPUFBPoIGuv1fwQBBvcC+f79B/sK7QeWW/0J/BX4GrAIAf727+/lIEcG4wvpNtod6idX4fTsA/7+AhQA/90bCfr0A/T6DQEO6sXx7+cN+QcDAAH5Bv092+np4ybhGwH4AuUX5iTeBRjo+gcDxU7CLPABBgARCC0AkgYO/iCzyD79A/ME8Gbx3P8JjwYXAAkJBfj/8gX0ecvl+PcW8wMC/QH+uV8m7Q/w+0cKAuDz+w///vKrHh0GAwIAAAAAAAAAAAK/yPcSEhfy/gAM4xr0AQL0wFr6BAEF+5L94RbjCQAI2PsV+/sNCu4oASPsHuQL+hMHDhLACfoQM0QIEAz4APcU6hkH/PMp3V3uygv/AfcEvkLhFOoZ6QsKCRMPC/vh9unk+vr9/AUD5Bb11hnn8CkiL/oCKu3qBdkgBt0WEeII5vX1A/QhIdsV/wb8AwD7BQz0ORvD/RTvAgAEAP7fxlHpJ/b7Agb5BQT9/vPpuGsP+wD5/foF/A8vDOEZ8AgW58LI7g4cDAL1Sr4p7PkQ7BD4APAE7VwMxfLZMefwF+UT/d8TVeMG+fYQ+fQB+gIE/kAK5yn+4Q8AbjJFIxwT9gLVz8jx8AoDDP/4ARr0/wf15SkZAfXuFvn/0fgX/e/5EoM7+wMSAQIDG91ByzLSJevkBw7b+/sMBfhO7RX68Aj5BQIHAgr6DMQsC9zgHwAC/gIB/Qf2EesKBv4T/jvaqiYI1+LT3wcPHB35GNgHBwX+CRjp7gbjHgIcMfXSCivz9//9+fnv+mHf6wMFAQzV+BwH1fkR7BP/AvMJNiIJ5PX3727FLOYAA/TRSd7VJt8Q+9L8+v7nE+Mc8wUOG9jVBCDz/t38cNYJ9CXkEQ7tI9kXA/L/x/te9wPZBR724Crz8p/BHvcB+QwFFBH33OIZL/fxDOpi+M4P5RXw9QIM9gr9ISSgAO8f9wkD7A31CPwK9gkBcLrlBesCx/3jChPrFfa+/VvdHvQA+TvkGgIO7gEBCxEUysUbBB0gBRMM/AEH9gX+CgAX+xyYLgsQAx0B+PIBB85YwhoI7/IyACD0/eUS+PsIA+z1JfQJIS6b//wBBv8c1vEQBf/+yVUm9/wL/vf6A+z2s1kY/ZjH5uHs+vcOFOku8eEcAfH+Bv4fLbQX5ycM8uzjw7204Lm9RE0uIgXz0NK4r6zExtjkUl1ELR0D7dHk1d3i+PPZpaWFoAoK+u7JxKXI3OXw0LUoHPbkIwklEwHs4dfu5928sC0b/y8NAOPdx86xt9rtBSMO9ukQ+AXo2MLp5erw7tK4sysVIQGwurrAyMzZ3+Ha7e3xICH+B/Hx6Onf18joxwVZQCkbBffRxJ+fhOz31LcfHfxAMAfdxwD95tH9+ti0sdAMUTcKCejVt8e7EAXkyxIdFAD89QbzFwfv3dvb4rzBBhj38gMV8+XHz7Do1/vw+wEtGQz5A/H68PH4BvPWr7CpDgH2/dW70ujk4yQG1cj0DDZPKwk2FgII9NXSzNq7p/tLJiEF88vCqaePncne2z43IRAV/u/S49ra0NnW3LW4qNDiFQLxx8CerLQZAdKw9BL5AyIGJh8XBP8UDvHVsqXoDv02EADl5NTIraSn/SI4KSQWFPj53dbCzwMM9s6poL5cRiYJurnC1tnV9fnOscbO4SAf+vznB+/ausbl1a3kOyQUHwLlubCTnrXf4OH+IQ/6KyH7AOr25d7P9ezXpZyH2TkpCu3O2sXEuu7s+OH48QHy5uchFSARAe3t5sav3eotHgv1A+bQqb2txgP/5uwsChknBffd5doHCgT31quagTQsHArRw9jZ7//239a20BX8RjQK3MIG9/byyBcB5hfQ7wwI+Rcd3OT64+/7KBcKCtLzJAYE4uM+IOD/FvIB/OrTAjYE4sfF9Bv94Qj3BQryIEITCQLn2xfxEtrhBffrDwAWPh4P9PLSTRUhAyId7TICCwna9Ns+AfE2IAYC6BQj6wITGPM3BAkn7R7/60k2IQgSAw8G7dEG/dDOARoUCOnOQfLJ7+Hb5DX/78sBOQv45+LbQAXM0w8XHw8O5xgh/tTI7gbr1QT0EdsU9iIPAg83FfXh+i4ZEPfn+MIcERTg4xoeGe0C8O8azQIyKhO+Fx3+AxPt2yAPBh7eDQv7KB8K1gT3Gve6Ef7pFOrJM+jhFuoP8wP25PA4BMEL7vHu2t0Q+SL/68/RCdsHCEU3FAbf0/b3BvcMRw/91vnoIN3+1u/7AP7fyg303i8XEzcH+EofDhDp5hMM7s/k4ewC8uzRTigN6fUV+hIBLwUmIyAuFggNEPISMxMoJwvm/+8vAsvxH+omFfHwBd81D9pWC/3oMQ389e4cFPTl5iPn3f3swx4KyfTqzMryE+D0LQ/40PcL4Ajw3vMzEib+4O8W/u7kujsb5O327Pf3+OsV+CP+Lf33DAAeB9krG9qlHhoTyfw/Du8NCQ0CBwQGPUj/7x3/6u8I5Ns/LCkDAg4J+kv4+fTx9A0J/B7qvw8A0wT8AQUWCxdVbmtub3duIG5iX21vZGVfcXVlcnkgcmVxdWVzdDogAHdhcm5pbmc6ICVzICVkCgAAAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgEAAACBAAAAAQJqZmT8AAAA/AAAAAAAAAL8zMzO/zcxMv2ZmZr8AAIC/AAAgQQAA0EBmZqZAAACQQJqZeUAAAGBAAABAQAAAIEAzMxNAZmbmPwAAgD8AADBBzcwMQQAA8EAAANBAAACgQJqZeUCamXlAmpl5QAAAYEAAAEBAAACAPwAAMEEAADBBZmYeQQAACEEAAOBAAADAQAAAkEAAAIBAAACAQAAAgEAAAABAAAAwQQAAMEEAADBBAAAwQQAAGEEAAAhBAAAAQQAA4EAAAMBAAACgQAAAQEAAADBBAAAwQQAAMEEAADBBAAAwQQAAMEEAABhBAAAIQQAA4EAAAMBAAACgQAAAMEEAADBBAAAwQQAAMEEAADBBAAAwQQAAMEEAADBBzcwcQQAAGEEAAPBAAADgQAAAkEDNzGxAAABAQAAAIEAAAABAZmbmPwAAwD8AAIA/'
                        );
                        qc(
                          K,
                          5490,
                          'gL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AADBBAAAwQQAAGEEAAAhBAADwQAAAwEAAAKBAmpl5QAAAQEAAAABAAACAPwAAMEEAADBBAAAwQQAAMEEAADBBAAAYQTMzC0GamflAAADgQAAA0EAAAIBAAAAwQQAAMEEAADBBAAAwQQAAMEEAADBBAAAwQQAAMEHNzBxBAADwQAAAsEBQYWNrZXQgaXMgbGFyZ2VyIHRoYW4gYWxsb2NhdGVkIGJ1ZmZlcgBDb3VsZCBub3QgcmVzaXplIGlucHV0IGJ1ZmZlcjogdHJ1bmNhdGluZyBpbnB1dABEbyBub3Qgb3duIGlucHV0IGJ1ZmZlcjogdHJ1bmNhdGluZyBvdmVyc2l6ZSBpbnB1dABCdWZmZXIgdG9vIHNtYWxsIHRvIHBhY2sgYml0cwBDb3VsZCBub3QgcmVzaXplIGlucHV0IGJ1ZmZlcjogbm90IHBhY2tpbmcARG8gbm90IG93biBpbnB1dCBidWZmZXI6IG5vdCBwYWNraW5nAG5vdGlmaWNhdGlvbjogJXMKAHdhcm5pbmc6ICVzCg=='
                        );
                        qc(
                          K,
                          6e3,
                          'FicOLAsj/hf8Bi7kDeXpDAQU+wkl7ukXAAn67AT/7/v8EQABCf4BAgL0COcnDwkQyfUJCwUK/sQIDfoL8BvR9AsBEPkJ/eMJ8hntIiQMKPb96PLb693+3AP6QxwG7/308PHv+cXc8wEHAQIKAgsNCgj+BwMFBAIC/fgE+wYH1g8j/tImHOz3AQf9AP4='
                        );
                        qc(
                          K,
                          6150,
                          '8eQ0IAX77+z2/wwgGS4kIQkO/QYB+AD2+/n5+fv7H+UY4PwK9RX9Exf3Fhj2//bz+fUq3x8T+AD28AHr7wr4DggEC/4F/t8L8CEL/An8CwIG+wj7C/z6GtzwAAT++AwG/yLS6gkJFQkFvvsaAgoNAhMJDK8DDQ0A8hbdBvn8BvoK+uEm3wD29QX0DO8FAPoN9woIGSEC9Aj6Cv4VBxErBQv59+zc7On8/P0b9/fP2dr19wYFFxkFAwMEAQL9/1cnEev37ffx8/Lv9fb1+Pr//f3/yt7l+PX8+wAABAgGCQcJBwYFBQUwChP2DP8J/QIF/QL+/gD+5gYJ+fD3AgcH+9ULFvX3IiXx8/oB/wEBwDg09eUFBAMBAgED//z89vn8/AL/+fn09vH3+/v18PMGEATz8Pb8AtHzGS8T8uz47wD98wEG7/IPAQoG6AD2E7v4DjER+yHjA/wAAvgF+gJ4yPTRF/cG+wEC+wH2BP//BP8A/R7MvR4WC//8AwAHAgAB9vz48wUBAf8FDff99sIWMPz6AgMFAQEEAQ0D7Ar3Df78Cews/xTgvRMAHAsIAvUP7csfAiIKBvzGCAoNDgEMAgAAgCX4LPca/RICBgv/CQEFAwABAQIMA/79BxkJEvrbA/jwA/b5Ed7UCxHx/fD/8wvSv/4IDQIEBAUPBQkG'
                        );
                        qc(
                          K,
                          6680,
                          '9xP0DOQmHf8MAgUX9gME8RX8AwMGEff8+OwaBfYGAe0S8fQv+v759//v/v7yHvIC+fz/9AvnEP30C/kH7wET5B/59gf2AwwF8AYYKePKAAEH/wX6DQr8+Aj35cva/woTERAMDAAD+fwNDOHyBvsDBRErMhkKAfr++NsF1QVJPScM/cPgAioe/RHlCSIU//sCF/nSGjXRFP7fp83AGwsP3vvIGff/4wEoQ+nwECETBw5VFvb29Pn/NFkdC+zb0vER6OQYAgEAF5sXDv/p7gkF8yYB5OQEGzPmItgjLzYmyub6KucN4twSKfzfF+D5/DP9Ecw40ST+6yQKCN8fEwn72Ar36xMSsu77AObc0c3UEigb/h0x5gIgyh63NgP7JBY1Cv+sy+P7A9Q1zQQWR93/Ifvl+SQR6dkQ98nx7CfdBtnyEjDA7/EJJ1ElvCUv6/qYDQYJ/iMI6RIqLRUh+88J+tXIJwLw51cB/fcR5/X3/woC8vIE//Yc6SjgGvcaBOXpAyrEATH9GwrM2P4SLekR1AP9EdI02NEZSx/PNR7i4Nwm+vHwNuXQAybj4Ory/OnzINkJCNPzIvAxKCAfHBcXIC87vAg+LBny6L/wJEPn2usE3/4qBcEoCxrW6cNP4RfsCuA159wK5vsDALkF9tsB6BXK7wHj5/HlIEQt8Nvu+wEAs0f6A+xHvR3dCuITBBARBQDyEwIcGjsDAhgnN87T7u8h3Q7/AQhX3eMA5Q35F/Ml2DLdDhP58jE2+xb+4/jlJg0bMAzX6/EcB/Do7ewL7AkCDRfsCxvlR7sIAvoWDBAQCfD47wEZASjb30JeNQTq59fWGSPw8Tkf4+AVEMQtD/8HOebR4wsIDxOX+DYbCu8G9P/2BAAX9h8NCwoMwBf9+O0QNBjYEAooBQkA8/nr+Pr56zsQyxLEC9EO7hnz6ATZEOQ2Gr0eG+zMFPQ3DBLwJ/L65jioyQwZGtsGSwDerzbiAfkx6fIVCsLGx9HeD/wish8Z9Qcy9irBDtz8OTc5NSrW/w8oJQ8Z9QYBH/76//nAIhwe/wMVAKj0yBnkKAjk8gkMAvrvFjH65g4c7AT0MiMoDdrG4xEeFjwaytn0OuTBCuv49BrCBvb16vr5BAESAroLDgQNE+jeGEMRM+sNFzbiMAHzUBrw/g38BuId6EnGHuUU/uspLR7l/fvu7M/93Qoq7b3L9QkN8d/N4g8HGeIEHOreNuMn0hQQIvwvSwHUyegH/wnWMvjcKUQA/Pbp8c5AJPflDBna0dsgzzPcAvxF5hMHLUMuDcEuD9EE1w36BeslGsn5If/kCu/A8gDc7139974s6wP0Jvrz9BMNK9X29Ab7Cc8g+wIEBQ/wCusIwvhACE//vs/uBSj74tMB+hXgXe7i6yAV7hYIBdfKUBb2+fjpwEI48uLX0vLj2xvyKv734yIOIfIWBAoaGhwgF7jgAwDyI9ay4AYd7tP7B9/T/ereCPgEzef3O7IV++fQQvHv6M/zGenA+ijo7fU53/gBCszKHCcxIvXD19UKD/EzHg/NIN7+3g4SEAEB/f0BAe4GEDAM+9YHJDAH7PYHDAI2J9olNgT1+NL2BfbeLvQd2yck9Rg4EQ4UGQDn5Df5+xsDCeb4Buj24uHeEgQWFSj/49v461zjC/0LSRcWBwTU9/UV8wsJsv8vcvTb7fv16hMM4gcmLev49zfTOOsHES7HqfobHx8HyPQuFfv0JAMD6ysTDPkJ8gD336UHGgP1QFPh0hkCCQUCAv8U7wr75fgUCO0Q6/PhBQUqGAki7BzDFgvZQOz/4vfsGOfo4xbEBvsp96kOIg/HNEUP/Zo6EAMGPLXgGgfH5eDo6+PwPtIfHuXxBw8BBfExvtD8MtQHJRDuGebm8RMT5dEcOQXv4NdEFf5AOAjw8+b38AsG2RntFuEU0zfVCvAv2CjszQPv8vHoNezSLhu8IAPu+wnhEPf2/+kwXy8Z1+D9D+fJJCnlFAUNDuoFAukSLvER7t77+BvJSRAC/+8osiEAAhMENfDx8OT98zEI+eMb8yAUIMMQDiksKBgUBwQwxLMR+tBB8SDiufb9+gr++ePIQ+IH+1b69gAF4Twi2v0YCv4eFxjXDEbVD+8GDRDzCB7x+AUX3p788w3Q4UYMHxkY6Br5IfAIBfXy+L8NCv73AP28BSMHAOH/7/f3ENvu/0XQ5Bbr9QUxNxeq3BACDT/NHvUNGO76Du0BKQn7G9zU3tvr5h/ZDysF+B0U+OzM5P8NGt729xv4CBu+BAzqMQqzIO4D2gz9/wICAODg4ADhxvAW1+jVDsjqyR3zIdcv/Nn3HdcP9Cb48fQfAQLUKOq+1hvaHOkm6w7bHwAVzjTLueUh2//tGe375BYGQdRK39DfCdg58jrvBNMg4SbfJOkc2CfVHfQu3g3pHPAP5SLyrvEr4RngHesF+ybRwc0h0gwDL+Tv4wv2Dtgm/f7/APwFI9j3DdQF5f/5BvUH+AcT8g/8CfYK+Ar3/wEAAAIF7hbLMgHpMtwPA/MO9gYBBf0E/gXgGQX+//wBC+Ma+vEe7gAP7yjXAwn+/gP9//sCFfrw6xcCPA8Q8PcOCf8H9wABAQD/+hHkNtP/Af/6+gILGuP+LusiDOkg6RD2A0IT7BgHC/0A/f/O0gLu/QT//gP97SncCQvoFfAJ/ef9ChL3/vv/+wb8/QLmFe0j8QfzEe0n1TDhEPcH/vsD/AntG8k/3Qoa1P4JBAH6CPcF+P/98C3WBQ/wCg=='
                        );
                        qc(
                          K,
                          8758,
                          '8BjJL9ob7Qf9ARAbFO0SBfkB+wL6COoA/f0I/wf4Af0FABHQOswd+f4D9gbmOuEB+gNd4ycDEQUG////Gw0KE/neDAr8CbQJCOT+9QL/AwGtJtkE8Pr++wX+HhMmIiggLis6KwXu59jfycwUIhzswZ+kPTUvMTVL8suzsQD9+xMWGvfLyUJaSFVESjT818bh7uEbIB4SGAMIBfT9GhxKP/7ZvbOWtjs7SUEsKEdIUlNiWFk8+uHR0PPZ9wcCT//ZxO9XUUEyLRPrvaWp184HEidKCuHkJxgNFwU4LR0K+/P13e749vjnubPrAhAyP1dXBeDYzbwADAY2IgX0IDREQEU7QS0O8OHYv70pMS8l9cy1rPw5MCoqIfXNvPoNAAj4GiDpywAkOExhaW9h/+TZ2NXK1NjuIxDs7eTWHS8mSi0D49DCsJjfODs7ChEuSFRldXt7avnfz826veXhRkPwwqvsUkdWUFVK7ca10+Pf7uctOfTW+wwcJDRAUVIN9+XkFgMCFhoG+tTNAg8KMCsxIu3CrKea6AgRPUQnGBcTEPsMDxsP+NTPxO7g5DQ2PvjQs7pCZVM/PSX0zrXAIRENGQ9NAdbjSEAuMR89LPjRytLiExT/8AAQ9O735uX26jUt9tG1rpeTCBkxTTJBcnV8dnNgWj3308HEtccICxQdAN3P1SgvIyg3Jui0mZDlAxciNEsI49UMPyYjHRgIGQsB8e7V+SUoFezI7e38/gsdMz/+1MK1px45M0ozMi5EQEE0PzdBKxL35t3JuwMGCBHxw6qfAVZdSk5D/9q+0DAnHRkR/w0NHScyM0VSYWL+3NLl8OLz/Pn8Gfv1+ufrIQwfHfjazMG8p9//Ckr+8TtbaWllV1Q++d/O3crRGRFSUfPIrRU6HyoZSEHovqXICf4VCkVLAugLFhkcJiIwIQfj5hEP/w4A/gD6170G/vcTAlVK6r2suc4DC/cCPt7M8S0CFxU0GN/3/wnU1/PvLBbv+vz/FiYaEAIyG93e99cGAPDeMwjy4c8P3y0xIfXbwsotC/u4C//09Rgb9dUuKyH09/8B/OnHuQsIEBH47OHXNTDwA0Ho+Ong2+DP9u8GJgX379IINAMGLSgn+freth8IAfArRPXt4QQGAPrv8Nrw4gIJ2fD/K/YwAwPw4f0+RCsNA/YIFMgMDP7uFvHY3AEHKQABLvrC/PT+9a3z/lsh9gAE9fBPICUOCTPr5MjeABUJ5gsc1srp/vEfHgjZvtncH+TY0iMoFhghMBfeDiggERv9GRrzw+8LBB88+ubXwA0Q5jYf9en39d65697dNzId6uXO2jkhKjkwGgsAz+Ea/PIFTiURAM/06RoOAgLV7/QK+PwIEgz6FPT68+ciDygxBwgNFBTt6v74AjPN+jXr6AQaEfzbGRHc8x8D+hsP9h8cGvb22BD5Dw0p9wD8Mvr5DiYWANACAfPtIP3EC+//6N7/I/vlHCwNGQ8q9Q8zI9wUCPz04xPRMfH8EOPZDuIEGff7zfL92OAmBff4/P/qR/0OGu7qGNfn6AYXE/Yn5uVBLQL55vgW9BAPEN37Iev4ABchIgYVJAb56gjb8h8mC/z92eD4IOn69BAU5PwXDcz/Fgbf2PoEwg0F5iMnCwI59Qns5N80+/r+FvLw0CMBxhQNIf+2OO7q4QwG8gT+99EK/R3v+z0OL/QCSNnvXEDLzfHi2tfj5BsJJAnd1lHrFBnw++/dFQ/kMAL+Ce0d2B7u7hLwxw/s9PHb8SHZFerzIwsN2sEdF+UgEgPmKiHAvu8QOAIkAx8V19kIxw4l/hPc7enj8AH9+PYfQL/m+B0VBBPZIfncODYwKB386Na+1cQT/iUp9tvEwBLqTUkoGQQT7b7+CwUVDhrnqvwSARrbCiX/GPTF9RT6IvDwKhPkzTUgBAo+FfTeGwTQ0M7PH/nr1uf81eo7AhsM9/rw+ODG8OP7KRfi39Lz9to0NAHv9woa5/oh7DU3GeD71hcVQgXkFAlLHfnW2Q8D6RUGCwHjDj8KNhrozc8H6c0PvgE8GQoA4vzxERM7KAT7IQbqxrr7F/o8LOPw0eM07TIcECMfJADrBhUbFioHvtj4BxMuAPw8JC354/rg2QIG9yEUzd4S+hMGCwXt4/4q9dPryTklAvK98OXaRTATAu8U7PDe7+fDCkktENjA7+PqOBHZCPUI5+7z7Qg2OSTv5vwG6ygq/BQfNQreyx/vIwAP+uzBtxYZHREI49m7Eg/x+wsvEPfS4BrAIvsm+S8UAred/dMURswP+vmuHxUvMyf9CQDX+fHKAgAb4QnT6tro6AjfFwUy3O/uzf4NEysM8fQ9JiYHDQAG/wM+CRsW3ybd9x7V9+D/BPwB+/X4Jh8L9tbr2wErD/Pd7e4PF+Y7Aes1CNfO8uQEFRnk2AXY1wQz3/j4ARHEDBnXESIrEy0H2xjxOP4j9jAE0f4F+8oF/d/2Hv7U6NoJ9yoEBsgs8AnY5hLsChzX6/wN7iDi/SUPFhwy2APjwAcz7fUR5djAGPT55QMlMP8C99reLgEb+hPzGgoiFBkoMvr5HgnoAOlHwxY63vwCz98ZHvj68E0CJvjd+uI4Th8h7A3ZFBYEFfgE+gqt1wnn1Q/59N7Z298THhDfKucZvCzx9fwXMg4E2dUU4jwJ7AcQE98lHRDdBybloAAAACgAAAAKAAAAEQAAAJAAAAAzc81MBwAAAAAAAADcKgAAFCsAAEwrAACEKwAAvCsAAPQrAAAsLAAAZCw='
                        );
                        qc(
                          K,
                          10860,
                          'BQAAAAEAAAAIAAAAAgAAAAMAAAADAAAABAAAAAQAAAAFAAAABQAAAAYAAAAHAAAAbmFycm93YmFuZAAAECoAAAEAAACcKgAAAAAAAAQAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAAAAAAB'
                        );
                        qc(
                          K,
                          10988,
                          'CgAAAAsAAAAMAAAADQAAAAAAAAAOAAAADwAAAAAAAAD//wAAKw=='
                        );
                        qc(
                          K,
                          11044,
                          'CgAAAAsAAAAQAAAAEQAAAJwsAAASAAAAEwAAAKgsAADNTAAAdwAAAP////8AAAAAAQAAAAAAAAAKAAAACwAAABAAAAARAAAAvCwAABIAAAATAAAAyCwAAGZGAACgAAAA/////wAAAAABAAAAAAAAAAoAAAALAAAAEAAAABEAAADcLAAAEgAAABMAAADoLAAAmjkAANwAAAD/////AAAAAAMAAAAAAAAAFAAAABUAAAAQAAAAEQAAAPwsAAASAAAAEwAAAAgtAABmJgAALAEAAP////8AAAAAAwAAAAAAAAAUAAAAFQAAABAAAAARAAAA/CwAABIAAAATAAAAHC0AAJoZAABsAQAA/////wAAAAADAAAAAQAAABQAAAAVAAAAEAAAABEAAAD8LAAAEgAAABMAAAAILQAAzQwAAOwBAAAAAAAAAQ=='
                        );
                        qc(
                          K,
                          11380,
                          'CgAAAAsAAAAMAAAADQAAAAAAAAASAAAAEwAAADAtAAAAQAAATwAAANAgAAAFAAAAAAAAAAoAAAAEAAAAcBcAAAQAAAAAAAAA0CAAAAUAAAAHAAAACgAAAAQAAAAABAAABQAAAAAAAADQIAAABQAAAAcAAAAIAAAABQAAAEAFAAAHAAAAAAAAALAJAAAHAAAABwAAAAUAAAAIAAAAkB8AAAYAAAAAAAAABQAAAAgAAACQGgAACAAAAAAAAAAUAAAAAgAAABAYAAAFAAAAAAAAAHgtAAAWAAAAFC4AAAEAAAAEAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAACoKgAAoAAAACgAAAAIAAAAM3PNTAcAM3MAAAAAUC4AAIguAADALgAA+C4='
                        );
                        qc(
                          K,
                          11696,
                          'AwAAAAEAAAAIAAAAAgAAAAMAAAAEAAAABQAAAAUAAAAGAAAABgAAAAcAAAAHAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAIAAAADAAAAAwAAAAQAAABwFQAABQAAAHdpZGViYW5kIChzdWItYmFuZCBDRUxQKQBVbmtub3duIHdiX21vZGVfcXVlcnkgcmVxdWVzdDog'
                        );
                        qc(K, 11864, 'AQAAAAAAAAAfAAAAIA==');
                        qc(K, 11904, '//8AACQ=');
                        qc(K, 11920, 'AQAAAAAAAAAfAAAAIA==');
                        qc(K, 11948, 'EgAAABMAAAAwLwAA//8AAHA=');
                        qc(K, 11976, 'AQAAAAAAAAAfAAAAIA==');
                        qc(K, 12004, 'EgAAABMAAABELwAA//8AAMA=');
                        qc(K, 12032, 'AQAAAAEAAAAfAAAAIA==');
                        qc(
                          K,
                          12060,
                          'EgAAABMAAABELwAA//8AAGABAAAKAAAABAAAAFAhAAAFAAAAAAAAAAgAAAAFAAAAsAsAAAcAAAABAAAAd2FybmluZzogJXMgJWQK'
                        );
                        qc(
                          K,
                          12144,
                          '1EkAAD5iAAC8ggAA+K0AAIHnAAARNAEA8pkBAIUhAgDu1QIAAcYDAHkFBQCZrgYAUOQIAB7VCwDivg8A8fMUAN3hGwBxGiUAsV8xAMuzQQBOblcAaFh0AHnSmgATBs4AhigSAWbTbAFmeuUBGgiGAqSuWwNV/XcEJlLyBV/F6QcxBysPoxd+H8woDDWASAAA6gN4Ct4TaBuUIwUuFDzsVDE4Gi1IQ2Fzc2VydGlvbiBmYWlsZWQ6IHN0LT53aW5kb3dTaXplLXN0LT5mcmFtZVNpemUgPT0gc3QtPnN1YmZyYW1lU2l6ZQBzcmMvbmJfY2VscC5jAGFzc2VydGlvbiBmYWlsZWQ6IFNVQk1PREUobHRwX3F1YW50KQBhc3NlcnRpb24gZmFpbGVkOiBTVUJNT0RFKGlubm92YXRpb25fcXVhbnQp'
                        );
                        qc(K, 12480, '/3/7ehNtTVl+QxcvVB4IEuUJAwU=');
                        qc(K, 12516, 'JAAAAHAAAADAAAAAYAE=');
                        qc(
                          K,
                          12544,
                          'SW52YWxpZCBtb2RlIGVuY291bnRlcmVkLiBUaGUgc3RyZWFtIGlzIGNvcnJ1cHRlZC4ATW9yZSB0aGFuIHR3byB3aWRlYmFuZCBsYXllcnMgZm91bmQuIFRoZSBzdHJlYW0gaXMgY29ycnVwdGVkLgBhc3NlcnRpb24gZmFpbGVkOiBTVUJNT0RFKGx0cF91bnF1YW50KQBhc3NlcnRpb24gZmFpbGVkOiBTVUJNT0RFKGlubm92YXRpb25fdW5xdWFudCkAVW5rbm93biBuYl9jdGwgcmVxdWVzdDogAEZhdGFsIChpbnRlcm5hbCkgZXJyb3IgaW4gJXMsIGxpbmUgJWQ6ICVzCgBub3RpZmljYXRpb246ICVzCgB3YXJuaW5nOiAlcyAlZAoAAAAAAAIA+f/5/xIADwDZ/+f/SwAjAH7/1//UACYAuf7v/+MB4P9P/XwAvAPl/uX6HwL0BjP8XfbFBjEO9fL35mMjyXXJdWMj9+b18jEOxQZd9jP89AYfAuX65f68A3wAT/3g/+MB7/+5/iYA1ADX/37/IwBLAOf/2f8PABIA+f/5/wIAJwAsADIAOQBAAEkAUwBeAGoAeACIAJoArwDGAOEA/wAgAUcBcgGkAdwBGwJjArQCEAN5A+8DdQQNBbkFfAZZB30ApADXABoBcgHkAXsCQANCBJQFTweUCY0MchCMFTwcSW52YWxpZCBtb2RlIGVuY291bnRlcmVkLiBUaGUgc3RyZWFtIGlzIGNvcnJ1cHRlZC4AVW5rbm93biBuYl9jdGwgcmVxdWVzdDogAG5vdGlmaWNhdGlvbjogJXMKAHdhcm5pbmc6ICVzICVkCgBzcGVleC0xLjJiZXRhMwBUaGlzIG1vZGUgaXMgbWVhbnQgdG8gYmUgdXNlZCBhbG9uZQBUaGlzIGRvZXNuJ3QgbG9vayBsaWtlIGEgU3BlZXggZmlsZQBTcGVleCBoZWFkZXIgdG9vIHNtYWxsAHdhcm5pbmc6ICVzCgBub3RpZmljYXRpb246ICVzCgAAAAAAAABA0T9HP2I+KD2cO8Y5rjdbNdcyKjA='
                        );
                        qc(
                          K,
                          13360,
                          'HgUhBSkFNQVIBV8FewWcBcMF7gUfBlUGjwbPBhMHXAeqB/wHVAiwCBAJdQneCUwKvgo0C64LLAyuDDQNvg1LDtwOcA8IEKMQQRHiEYYSLRPXE4MUMRXiFZUWSxcCGLsYdhkyGvAarxtwHDEd9B23HnsfQCAEIcohjyJUIxkk3iSjJWcmKifsJ64obiktKusqqCtjLBwt0y2ILjsv7C+bMEcx8TGYMjwz3TN7NBY1rjVCNtM2YDfqN3A48jhwOeo5YDrSOkA7qTsOPG48yjwhPXQ9wj0LPk8+jz7JPv8+Lz9bP4E/oz+/P9Y/6D/1P/0/AEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABA6T+mPzc/nD7WPeQ8yDuDOhU5fzfDNeIz3jG3L28tCCuFKOYlLyNhIH8djRqMF4MUdhFvDn8LyAigBlNQRUVYX0RFQ09ERV9FUlJPUjogb25seSBzdXBwb3J0IHNwZWV4IG5hcnJvd2JhbmQgYW5kIHdpZGViYW5kLiBUcnlpbmcgdG8gZGVjb2RlIGFzIG5hcnJvd2JhbmQARVJST1I6IFBhY2tldCB3YXMgaW5jb21wbGV0ZS4ARVJST1I6IHN0cmVhbSBjb3JydXB0ZWQ/ICBlbmNvZGVkX2ZyYW1lX3NpemUgKHBhY2tldCBzaXplKS4AU1BFRVhfREVDT0RFX0VSUk9SOiBpbnB1dCBub3QgYSBzcGVleC4AU1BFRVhfREVDT0RFX0VSUk9SOiBpbnB1dCB0b28gc2hvcnQgdG8gZGV0ZXJtaW5lIGNvbXByZXNzaW9uLg=='
                        );
                        qc(K, 14054, '8D8AAAAAAAD4PwAAAAAAAAAABtDPQ+v9TD4=');
                        qc(K, 14091, 'QAO44j8gOQAALSsgICAwWDB4AChudWxsKQ==');
                        qc(
                          K,
                          14128,
                          'EQAKABEREQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAARAA8KERERAwoHAAEACQsLAAAJBgsAAAsABhEAAAARERE='
                        );
                        qc(
                          K,
                          14209,
                          'CwAAAAAAAAAAEQAKChEREQAKAAACAAkLAAAACQALAAAL'
                        );
                        qc(K, 14267, 'DA==');
                        qc(K, 14279, 'DAAAAAAMAAAAAAkMAAAAAAAMAAAM');
                        qc(K, 14325, 'Dg==');
                        qc(K, 14337, 'DQAAAAQNAAAAAAkOAAAAAAAOAAAO');
                        qc(K, 14383, 'EA==');
                        qc(
                          K,
                          14395,
                          'DwAAAAAPAAAAAAkQAAAAAAAQAAAQAAASAAAAEhIS'
                        );
                        qc(K, 14450, 'EgAAABISEgAAAAAAAAk=');
                        qc(K, 14499, 'Cw==');
                        qc(K, 14511, 'CgAAAAAKAAAAAAkLAAAAAAALAAAL');
                        qc(K, 14557, 'DA==');
                        qc(
                          K,
                          14569,
                          'DAAAAAAMAAAAAAkMAAAAAAAMAAAMAAAwMTIzNDU2Nzg5QUJDREVGoDo='
                        );
                        qc(K, 14616, 'yAAAAAAAAAAF');
                        qc(K, 14636, 'Ig==');
                        qc(K, 14660, 'IwAAACQAAAA4Ow==');
                        qc(K, 14684, 'Ag==');
                        qc(K, 14699, '//////8=');
                        qc(K, 14944, 'ZDs=');
                        qc(K, 15e3, 'gEFQAAAAAAAF');
                        qc(K, 15020, 'JQ==');
                        qc(K, 15044, 'IwAAACYAAAB4PQAAAAQ=');
                        qc(K, 15068, 'AQ==');
                        qc(K, 15083, 'Cv////8=');
                        return oc(
                          {
                            Int8Array: Int8Array,
                            Int16Array: Int16Array,
                            Int32Array: Int32Array,
                            Uint8Array: Uint8Array,
                            Uint16Array: Uint16Array,
                            Uint32Array: Uint32Array,
                            Float32Array: Float32Array,
                            Float64Array: Float64Array,
                            NaN: NaN,
                            Infinity: Infinity,
                            Math: Math,
                          },
                          rc,
                          sc.buffer
                        );
                      })(
                        // EMSCRIPTEN_END_ASM

                        asmLibraryArg,
                        wasmMemory
                      );
                  },
                  instantiate: function instantiate(binary, info) {
                    return {
                      then: function then(ok) {
                        var module = new WebAssembly.Module(binary);
                        ok({ instance: new WebAssembly.Instance(module) });
                      },
                    };
                  },
                  RuntimeError: Error,
                };
                wasmBinary = [];
                if (
                  (typeof WebAssembly === 'undefined'
                    ? 'undefined'
                    : _typeof(WebAssembly)) !== 'object'
                ) {
                  abort('no native wasm support detected');
                }
                var wasmMemory;
                var wasmTable;
                var ABORT = false;
                var EXITSTATUS = 0;
                function assert(condition, text) {
                  if (!condition) {
                    abort('Assertion failed: ' + text);
                  }
                }
                function getCFunc(ident) {
                  var func = Module['_' + ident];
                  assert(
                    func,
                    'Cannot call unknown function ' +
                      ident +
                      ', make sure it is exported'
                  );
                  return func;
                }
                function ccall(ident, returnType, argTypes, args, opts) {
                  var toC = {
                    string: function string(str) {
                      var ret = 0;
                      if (str !== null && str !== undefined && str !== 0) {
                        var len = (str.length << 2) + 1;
                        ret = stackAlloc(len);
                        stringToUTF8(str, ret, len);
                      }
                      return ret;
                    },
                    array: function array(arr) {
                      var ret = stackAlloc(arr.length);
                      writeArrayToMemory(arr, ret);
                      return ret;
                    },
                  };
                  function convertReturnValue(ret) {
                    if (returnType === 'string') return UTF8ToString(ret);
                    if (returnType === 'boolean') return Boolean(ret);
                    return ret;
                  }
                  var func = getCFunc(ident);
                  var cArgs = [];
                  var stack = 0;
                  if (args) {
                    for (var i = 0; i < args.length; i++) {
                      var converter = toC[argTypes[i]];
                      if (converter) {
                        if (stack === 0) stack = stackSave();
                        cArgs[i] = converter(args[i]);
                      } else {
                        cArgs[i] = args[i];
                      }
                    }
                  }
                  var ret = func.apply(null, cArgs);
                  ret = convertReturnValue(ret);
                  if (stack !== 0) stackRestore(stack);
                  return ret;
                }
                function cwrap(ident, returnType, argTypes, opts) {
                  argTypes = argTypes || [];
                  var numericArgs = argTypes.every(function (type) {
                    return type === 'number';
                  });
                  var numericRet = returnType !== 'string';
                  if (numericRet && numericArgs && !opts) {
                    return getCFunc(ident);
                  }
                  return function () {
                    return ccall(ident, returnType, argTypes, arguments, opts);
                  };
                }
                var UTF8Decoder =
                  typeof TextDecoder !== 'undefined'
                    ? new TextDecoder('utf8')
                    : undefined;
                function UTF8ArrayToString(heap, idx, maxBytesToRead) {
                  var endIdx = idx + maxBytesToRead;
                  var endPtr = idx;
                  while (heap[endPtr] && !(endPtr >= endIdx)) {
                    ++endPtr;
                  }
                  if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {
                    return UTF8Decoder.decode(heap.subarray(idx, endPtr));
                  } else {
                    var str = '';
                    while (idx < endPtr) {
                      var u0 = heap[idx++];
                      if (!(u0 & 128)) {
                        str += String.fromCharCode(u0);
                        continue;
                      }
                      var u1 = heap[idx++] & 63;
                      if ((u0 & 224) == 192) {
                        str += String.fromCharCode(((u0 & 31) << 6) | u1);
                        continue;
                      }
                      var u2 = heap[idx++] & 63;
                      if ((u0 & 240) == 224) {
                        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
                      } else {
                        u0 =
                          ((u0 & 7) << 18) |
                          (u1 << 12) |
                          (u2 << 6) |
                          (heap[idx++] & 63);
                      }
                      if (u0 < 65536) {
                        str += String.fromCharCode(u0);
                      } else {
                        var ch = u0 - 65536;
                        str += String.fromCharCode(
                          55296 | (ch >> 10),
                          56320 | (ch & 1023)
                        );
                      }
                    }
                  }
                  return str;
                }
                function UTF8ToString(ptr, maxBytesToRead) {
                  return ptr
                    ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead)
                    : '';
                }
                function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
                  if (!(maxBytesToWrite > 0)) return 0;
                  var startIdx = outIdx;
                  var endIdx = outIdx + maxBytesToWrite - 1;
                  for (var i = 0; i < str.length; ++i) {
                    var u = str.charCodeAt(i);
                    if (u >= 55296 && u <= 57343) {
                      var u1 = str.charCodeAt(++i);
                      u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);
                    }
                    if (u <= 127) {
                      if (outIdx >= endIdx) break;
                      heap[outIdx++] = u;
                    } else if (u <= 2047) {
                      if (outIdx + 1 >= endIdx) break;
                      heap[outIdx++] = 192 | (u >> 6);
                      heap[outIdx++] = 128 | (u & 63);
                    } else if (u <= 65535) {
                      if (outIdx + 2 >= endIdx) break;
                      heap[outIdx++] = 224 | (u >> 12);
                      heap[outIdx++] = 128 | ((u >> 6) & 63);
                      heap[outIdx++] = 128 | (u & 63);
                    } else {
                      if (outIdx + 3 >= endIdx) break;
                      heap[outIdx++] = 240 | (u >> 18);
                      heap[outIdx++] = 128 | ((u >> 12) & 63);
                      heap[outIdx++] = 128 | ((u >> 6) & 63);
                      heap[outIdx++] = 128 | (u & 63);
                    }
                  }
                  heap[outIdx] = 0;
                  return outIdx - startIdx;
                }
                function stringToUTF8(str, outPtr, maxBytesToWrite) {
                  return stringToUTF8Array(
                    str,
                    HEAPU8,
                    outPtr,
                    maxBytesToWrite
                  );
                }
                function writeArrayToMemory(array, buffer) {
                  HEAP8.set(array, buffer);
                }
                var WASM_PAGE_SIZE = 65536;
                var buffer,
                  HEAP8,
                  HEAPU8,
                  HEAP16,
                  HEAPU16,
                  HEAP32,
                  HEAPU32,
                  HEAPF32,
                  HEAPF64;
                function updateGlobalBufferAndViews(buf) {
                  buffer = buf;
                  Module['HEAP8'] = HEAP8 = new Int8Array(buf);
                  Module['HEAP16'] = HEAP16 = new Int16Array(buf);
                  Module['HEAP32'] = HEAP32 = new Int32Array(buf);
                  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);
                  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);
                  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);
                  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);
                  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);
                }
                var INITIAL_INITIAL_MEMORY =
                  Module['INITIAL_MEMORY'] || 16777216;
                if (Module['wasmMemory']) {
                  wasmMemory = Module['wasmMemory'];
                } else {
                  wasmMemory = new WebAssembly.Memory({
                    initial: INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,
                    maximum: INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,
                  });
                }
                if (wasmMemory) {
                  buffer = wasmMemory.buffer;
                }
                INITIAL_INITIAL_MEMORY = buffer.byteLength;
                updateGlobalBufferAndViews(buffer);
                var __ATPRERUN__ = [];
                var __ATINIT__ = [];
                var __ATMAIN__ = [];
                var __ATPOSTRUN__ = [];
                var runtimeInitialized = false;
                var runtimeExited = false;
                function preRun() {
                  if (Module['preRun']) {
                    if (typeof Module['preRun'] == 'function')
                      Module['preRun'] = [Module['preRun']];
                    while (Module['preRun'].length) {
                      addOnPreRun(Module['preRun'].shift());
                    }
                  }
                  callRuntimeCallbacks(__ATPRERUN__);
                }
                function initRuntime() {
                  runtimeInitialized = true;
                  callRuntimeCallbacks(__ATINIT__);
                }
                function preMain() {
                  callRuntimeCallbacks(__ATMAIN__);
                }
                function exitRuntime() {
                  runtimeExited = true;
                }
                function postRun() {
                  if (Module['postRun']) {
                    if (typeof Module['postRun'] == 'function')
                      Module['postRun'] = [Module['postRun']];
                    while (Module['postRun'].length) {
                      addOnPostRun(Module['postRun'].shift());
                    }
                  }
                  callRuntimeCallbacks(__ATPOSTRUN__);
                }
                function addOnPreRun(cb) {
                  __ATPRERUN__.unshift(cb);
                }
                function addOnPostRun(cb) {
                  __ATPOSTRUN__.unshift(cb);
                }
                var runDependencies = 0;
                var runDependencyWatcher = null;
                var dependenciesFulfilled = null;
                function addRunDependency(id) {
                  runDependencies++;
                  if (Module['monitorRunDependencies']) {
                    Module['monitorRunDependencies'](runDependencies);
                  }
                }
                function removeRunDependency(id) {
                  runDependencies--;
                  if (Module['monitorRunDependencies']) {
                    Module['monitorRunDependencies'](runDependencies);
                  }
                  if (runDependencies == 0) {
                    if (runDependencyWatcher !== null) {
                      clearInterval(runDependencyWatcher);
                      runDependencyWatcher = null;
                    }
                    if (dependenciesFulfilled) {
                      var callback = dependenciesFulfilled;
                      dependenciesFulfilled = null;
                      callback();
                    }
                  }
                }
                Module['preloadedImages'] = {};
                Module['preloadedAudios'] = {};
                function abort(what) {
                  if (Module['onAbort']) {
                    Module['onAbort'](what);
                  }
                  what += '';
                  err(what);
                  ABORT = true;
                  EXITSTATUS = 1;
                  what =
                    'abort(' +
                    what +
                    '). Build with -s ASSERTIONS=1 for more info.';
                  var e = new WebAssembly.RuntimeError(what);
                  readyPromiseReject(e);
                  throw e;
                }
                function hasPrefix(str, prefix) {
                  return String.prototype.startsWith
                    ? str.startsWith(prefix)
                    : str.indexOf(prefix) === 0;
                }
                var dataURIPrefix = 'data:application/octet-stream;base64,';
                function isDataURI(filename) {
                  return hasPrefix(filename, dataURIPrefix);
                }
                var fileURIPrefix = 'file://';
                function isFileURI(filename) {
                  return hasPrefix(filename, fileURIPrefix);
                }
                var wasmBinaryFile = 'soundhound-speex.wasm';
                if (!isDataURI(wasmBinaryFile)) {
                  wasmBinaryFile = locateFile(wasmBinaryFile);
                }
                function getBinary() {
                  try {
                    if (wasmBinary) {
                      return new Uint8Array(wasmBinary);
                    }
                    var binary = tryParseAsDataURI(wasmBinaryFile);
                    if (binary) {
                      return binary;
                    }
                    if (readBinary) {
                      return readBinary(wasmBinaryFile);
                    } else {
                      throw 'both async and sync fetching of the wasm failed';
                    }
                  } catch (err) {
                    abort(err);
                  }
                }
                function getBinaryPromise() {
                  if (
                    !wasmBinary &&
                    (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) &&
                    typeof fetch === 'function' &&
                    !isFileURI(wasmBinaryFile)
                  ) {
                    return fetch(wasmBinaryFile, { credentials: 'same-origin' })
                      .then(function (response) {
                        if (!response['ok']) {
                          throw (
                            "failed to load wasm binary file at '" +
                            wasmBinaryFile +
                            "'"
                          );
                        }
                        return response['arrayBuffer']();
                      })
                      .catch(function () {
                        return getBinary();
                      });
                  }
                  return Promise.resolve().then(getBinary);
                }
                function createWasm() {
                  var info = { a: asmLibraryArg };
                  function receiveInstance(instance, module) {
                    var exports = instance.exports;
                    Module['asm'] = exports;
                    wasmTable = Module['asm']['i'];
                    removeRunDependency('wasm-instantiate');
                  }
                  addRunDependency('wasm-instantiate');
                  function receiveInstantiatedSource(output) {
                    receiveInstance(output['instance']);
                  }
                  function instantiateArrayBuffer(receiver) {
                    return getBinaryPromise()
                      .then(function (binary) {
                        return WebAssembly.instantiate(binary, info);
                      })
                      .then(receiver, function (reason) {
                        err('failed to asynchronously prepare wasm: ' + reason);
                        abort(reason);
                      });
                  }
                  function instantiateAsync() {
                    if (
                      !wasmBinary &&
                      typeof WebAssembly.instantiateStreaming === 'function' &&
                      !isDataURI(wasmBinaryFile) &&
                      !isFileURI(wasmBinaryFile) &&
                      typeof fetch === 'function'
                    ) {
                      fetch(wasmBinaryFile, {
                        credentials: 'same-origin',
                      }).then(function (response) {
                        var result = WebAssembly.instantiateStreaming(
                          response,
                          info
                        );
                        return result.then(
                          receiveInstantiatedSource,
                          function (reason) {
                            err('wasm streaming compile failed: ' + reason);
                            err('falling back to ArrayBuffer instantiation');
                            return instantiateArrayBuffer(
                              receiveInstantiatedSource
                            );
                          }
                        );
                      });
                    } else {
                      return instantiateArrayBuffer(receiveInstantiatedSource);
                    }
                  }
                  if (Module['instantiateWasm']) {
                    try {
                      var exports = Module['instantiateWasm'](
                        info,
                        receiveInstance
                      );
                      return exports;
                    } catch (e) {
                      err(
                        'Module.instantiateWasm callback failed with error: ' +
                          e
                      );
                      return false;
                    }
                  }
                  instantiateAsync();
                  return {};
                }
                function callRuntimeCallbacks(callbacks) {
                  while (callbacks.length > 0) {
                    var callback = callbacks.shift();
                    if (typeof callback == 'function') {
                      callback(Module);
                      continue;
                    }
                    var func = callback.func;
                    if (typeof func === 'number') {
                      if (callback.arg === undefined) {
                        wasmTable.get(func)();
                      } else {
                        wasmTable.get(func)(callback.arg);
                      }
                    } else {
                      func(callback.arg === undefined ? null : callback.arg);
                    }
                  }
                }
                function _abort() {
                  abort();
                }
                function _emscripten_memcpy_big(dest, src, num) {
                  HEAPU8.copyWithin(dest, src, src + num);
                }
                function abortOnCannotGrowMemory(requestedSize) {
                  abort('OOM');
                }
                function _emscripten_resize_heap(requestedSize) {
                  requestedSize = requestedSize >>> 0;
                  abortOnCannotGrowMemory(requestedSize);
                }
                function _exit(status) {
                  exit(status);
                }
                var SYSCALLS = {
                  mappings: {},
                  buffers: [null, [], []],
                  printChar: function printChar(stream, curr) {
                    var buffer = SYSCALLS.buffers[stream];
                    if (curr === 0 || curr === 10) {
                      (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));
                      buffer.length = 0;
                    } else {
                      buffer.push(curr);
                    }
                  },
                  varargs: undefined,
                  get: function get() {
                    SYSCALLS.varargs += 4;
                    var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];
                    return ret;
                  },
                  getStr: function getStr(ptr) {
                    var ret = UTF8ToString(ptr);
                    return ret;
                  },
                  get64: function get64(low, high) {
                    return low;
                  },
                };
                function _fd_close(fd) {
                  return 0;
                }
                function _fd_seek(
                  fd,
                  offset_low,
                  offset_high,
                  whence,
                  newOffset
                ) {}
                function _fd_write(fd, iov, iovcnt, pnum) {
                  var num = 0;
                  for (var i = 0; i < iovcnt; i++) {
                    var ptr = HEAP32[(iov + i * 8) >> 2];
                    var len = HEAP32[(iov + (i * 8 + 4)) >> 2];
                    for (var j = 0; j < len; j++) {
                      SYSCALLS.printChar(fd, HEAPU8[ptr + j]);
                    }
                    num += len;
                  }
                  HEAP32[pnum >> 2] = num;
                  return 0;
                }
                var ASSERTIONS = false;
                function intArrayToString(array) {
                  var ret = [];
                  for (var i = 0; i < array.length; i++) {
                    var chr = array[i];
                    if (chr > 255) {
                      if (ASSERTIONS) {
                        assert(
                          false,
                          'Character code ' +
                            chr +
                            ' (' +
                            String.fromCharCode(chr) +
                            ')  at offset ' +
                            i +
                            ' not in 0x00-0xFF.'
                        );
                      }
                      chr &= 255;
                    }
                    ret.push(String.fromCharCode(chr));
                  }
                  return ret.join('');
                }
                var decodeBase64 =
                  typeof atob === 'function'
                    ? atob
                    : function (input) {
                        var keyStr =
                          'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
                        var output = '';
                        var chr1, chr2, chr3;
                        var enc1, enc2, enc3, enc4;
                        var i = 0;
                        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
                        do {
                          enc1 = keyStr.indexOf(input.charAt(i++));
                          enc2 = keyStr.indexOf(input.charAt(i++));
                          enc3 = keyStr.indexOf(input.charAt(i++));
                          enc4 = keyStr.indexOf(input.charAt(i++));
                          chr1 = (enc1 << 2) | (enc2 >> 4);
                          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                          chr3 = ((enc3 & 3) << 6) | enc4;
                          output = output + String.fromCharCode(chr1);
                          if (enc3 !== 64) {
                            output = output + String.fromCharCode(chr2);
                          }
                          if (enc4 !== 64) {
                            output = output + String.fromCharCode(chr3);
                          }
                        } while (i < input.length);
                        return output;
                      };
                function intArrayFromBase64(s) {
                  if (
                    typeof ENVIRONMENT_IS_NODE === 'boolean' &&
                    ENVIRONMENT_IS_NODE
                  ) {
                    var buf;
                    try {
                      buf = Buffer.from(s, 'base64');
                    } catch (_) {
                      buf = new Buffer(s, 'base64');
                    }
                    return new Uint8Array(
                      buf['buffer'],
                      buf['byteOffset'],
                      buf['byteLength']
                    );
                  }
                  try {
                    var decoded = decodeBase64(s);
                    var bytes = new Uint8Array(decoded.length);
                    for (var i = 0; i < decoded.length; ++i) {
                      bytes[i] = decoded.charCodeAt(i);
                    }
                    return bytes;
                  } catch (_) {
                    throw new Error(
                      'Converting base64 string to bytes failed.'
                    );
                  }
                }
                function tryParseAsDataURI(filename) {
                  if (!isDataURI(filename)) {
                    return;
                  }
                  return intArrayFromBase64(
                    filename.slice(dataURIPrefix.length)
                  );
                }
                __ATINIT__.push({
                  func: function func() {
                    ___wasm_call_ctors();
                  },
                });
                var asmLibraryArg = {
                  f: _abort,
                  d: _emscripten_memcpy_big,
                  e: _emscripten_resize_heap,
                  h: _exit,
                  g: _fd_close,
                  c: _fd_seek,
                  b: _fd_write,
                  a: wasmMemory,
                };
                var asm = createWasm();
                var ___wasm_call_ctors = (Module['___wasm_call_ctors'] =
                  function () {
                    return (___wasm_call_ctors = Module['___wasm_call_ctors'] =
                      Module['asm']['j']).apply(null, arguments);
                  });
                var _SH_speex_init = (Module['_SH_speex_init'] = function () {
                  return (_SH_speex_init = Module['_SH_speex_init'] =
                    Module['asm']['k']).apply(null, arguments);
                });
                var _SH_speex_encode_frame = (Module['_SH_speex_encode_frame'] =
                  function () {
                    return (_SH_speex_encode_frame = Module[
                      '_SH_speex_encode_frame'
                    ] =
                      Module['asm']['l']).apply(null, arguments);
                  });
                var _SH_speex_speex_to_raw = (Module['_SH_speex_speex_to_raw'] =
                  function () {
                    return (_SH_speex_speex_to_raw = Module[
                      '_SH_speex_speex_to_raw'
                    ] =
                      Module['asm']['m']).apply(null, arguments);
                  });
                var stackSave = (Module['stackSave'] = function () {
                  return (stackSave = Module['stackSave'] =
                    Module['asm']['n']).apply(null, arguments);
                });
                var stackRestore = (Module['stackRestore'] = function () {
                  return (stackRestore = Module['stackRestore'] =
                    Module['asm']['o']).apply(null, arguments);
                });
                var stackAlloc = (Module['stackAlloc'] = function () {
                  return (stackAlloc = Module['stackAlloc'] =
                    Module['asm']['p']).apply(null, arguments);
                });
                var _malloc = (Module['_malloc'] = function () {
                  return (_malloc = Module['_malloc'] =
                    Module['asm']['q']).apply(null, arguments);
                });
                Module['cwrap'] = cwrap;
                var calledRun;
                function ExitStatus(status) {
                  this.name = 'ExitStatus';
                  this.message = 'Program terminated with exit(' + status + ')';
                  this.status = status;
                }
                dependenciesFulfilled = function runCaller() {
                  if (!calledRun) run();
                  if (!calledRun) dependenciesFulfilled = runCaller;
                };
                function run(args) {
                  args = args || arguments_;
                  if (runDependencies > 0) {
                    return;
                  }
                  preRun();
                  if (runDependencies > 0) return;
                  function doRun() {
                    if (calledRun) return;
                    calledRun = true;
                    Module['calledRun'] = true;
                    if (ABORT) return;
                    initRuntime();
                    preMain();
                    readyPromiseResolve(Module);
                    if (Module['onRuntimeInitialized'])
                      Module['onRuntimeInitialized']();
                    postRun();
                  }
                  if (Module['setStatus']) {
                    Module['setStatus']('Running...');
                    setTimeout(function () {
                      setTimeout(function () {
                        Module['setStatus']('');
                      }, 1);
                      doRun();
                    }, 1);
                  } else {
                    doRun();
                  }
                }
                Module['run'] = run;
                function exit(status, implicit) {
                  if (implicit && noExitRuntime && status === 0) {
                    return;
                  }
                  if (noExitRuntime) {
                  } else {
                    EXITSTATUS = status;
                    exitRuntime();
                    if (Module['onExit']) Module['onExit'](status);
                    ABORT = true;
                  }
                  quit_(status, new ExitStatus(status));
                }
                if (Module['preInit']) {
                  if (typeof Module['preInit'] == 'function')
                    Module['preInit'] = [Module['preInit']];
                  while (Module['preInit'].length > 0) {
                    Module['preInit'].pop()();
                  }
                }
                noExitRuntime = true;
                run();

                return Module.ready;
              };
            })();
            if (
              (false ? 'undefined' : _typeof(exports)) === 'object' &&
              (false ? 'undefined' : _typeof(module)) === 'object'
            )
              module.exports = Module;
            else if (true)
              !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
              (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                return Module;
              }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            else if (
              (typeof exports === 'undefined'
                ? 'undefined'
                : _typeof(exports)) === 'object'
            )
              exports['Module'] = Module;

            /*** EXPORTS FROM exports-loader ***/
            module.exports = Module;
            /* WEBPACK VAR INJECTION */
          }).call(
            exports,
            '/index.js',
            __webpack_require__(3),
            '/',
            __webpack_require__(4).Buffer,
            __webpack_require__(20)(module)
          );

          /***/
        },
        /* 81 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (
            __filename,
            process,
            __dirname,
            Buffer,
            module
          ) {
            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            var Module = (function () {
              var _scriptDir =
                typeof document !== 'undefined' && document.currentScript
                  ? document.currentScript.src
                  : undefined;
              if (true) _scriptDir = _scriptDir || __filename;
              return function (Module) {
                Module = Module || {};

                var Module = typeof Module !== 'undefined' ? Module : {};
                var readyPromiseResolve, readyPromiseReject;
                Module['ready'] = new Promise(function (resolve, reject) {
                  readyPromiseResolve = resolve;
                  readyPromiseReject = reject;
                });
                var moduleOverrides = {};
                var key;
                for (key in Module) {
                  if (Module.hasOwnProperty(key)) {
                    moduleOverrides[key] = Module[key];
                  }
                }
                var arguments_ = [];
                var thisProgram = './this.program';
                var quit_ = function quit_(status, toThrow) {
                  throw toThrow;
                };
                var ENVIRONMENT_IS_WEB = false;
                var ENVIRONMENT_IS_WORKER = false;
                var ENVIRONMENT_IS_NODE = false;
                var ENVIRONMENT_IS_SHELL = false;
                ENVIRONMENT_IS_WEB =
                  (typeof window === 'undefined'
                    ? 'undefined'
                    : _typeof(window)) === 'object';
                ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
                ENVIRONMENT_IS_NODE =
                  (typeof process === 'undefined'
                    ? 'undefined'
                    : _typeof(process)) === 'object' &&
                  _typeof(process.versions) === 'object' &&
                  typeof process.versions.node === 'string';
                ENVIRONMENT_IS_SHELL =
                  !ENVIRONMENT_IS_WEB &&
                  !ENVIRONMENT_IS_NODE &&
                  !ENVIRONMENT_IS_WORKER;
                var scriptDirectory = '';
                function locateFile(path) {
                  if (Module['locateFile']) {
                    return Module['locateFile'](path, scriptDirectory);
                  }
                  return scriptDirectory + path;
                }
                var read_, readAsync, readBinary, setWindowTitle;
                var nodeFS;
                var nodePath;
                if (ENVIRONMENT_IS_NODE) {
                  if (ENVIRONMENT_IS_WORKER) {
                    scriptDirectory =
                      __webpack_require__(16).dirname(scriptDirectory) + '/';
                  } else {
                    scriptDirectory = __dirname + '/';
                  }
                  read_ = function shell_read(filename, binary) {
                    var ret = tryParseAsDataURI(filename);
                    if (ret) {
                      return binary ? ret : ret.toString();
                    }
                    if (!nodeFS) nodeFS = __webpack_require__(17);
                    if (!nodePath) nodePath = __webpack_require__(16);
                    filename = nodePath['normalize'](filename);
                    return nodeFS['readFileSync'](
                      filename,
                      binary ? null : 'utf8'
                    );
                  };
                  readBinary = function readBinary(filename) {
                    var ret = read_(filename, true);
                    if (!ret.buffer) {
                      ret = new Uint8Array(ret);
                    }
                    assert(ret.buffer);
                    return ret;
                  };
                  if (process['argv'].length > 1) {
                    thisProgram = process['argv'][1].replace(/\\/g, '/');
                  }
                  arguments_ = process['argv'].slice(2);
                  process['on']('uncaughtException', function (ex) {
                    if (!(ex instanceof ExitStatus)) {
                      throw ex;
                    }
                  });
                  process['on']('unhandledRejection', abort);
                  quit_ = function quit_(status) {
                    process['exit'](status);
                  };
                  Module['inspect'] = function () {
                    return '[Emscripten Module object]';
                  };
                } else if (ENVIRONMENT_IS_SHELL) {
                  if (typeof read != 'undefined') {
                    read_ = function shell_read(f) {
                      var data = tryParseAsDataURI(f);
                      if (data) {
                        return intArrayToString(data);
                      }
                      return read(f);
                    };
                  }
                  readBinary = function readBinary(f) {
                    var data;
                    data = tryParseAsDataURI(f);
                    if (data) {
                      return data;
                    }
                    if (typeof readbuffer === 'function') {
                      return new Uint8Array(readbuffer(f));
                    }
                    data = read(f, 'binary');
                    assert(
                      (typeof data === 'undefined'
                        ? 'undefined'
                        : _typeof(data)) === 'object'
                    );
                    return data;
                  };
                  if (typeof scriptArgs != 'undefined') {
                    arguments_ = scriptArgs;
                  } else if (typeof arguments != 'undefined') {
                    arguments_ = arguments;
                  }
                  if (typeof quit === 'function') {
                    quit_ = function quit_(status) {
                      quit(status);
                    };
                  }
                  if (typeof print !== 'undefined') {
                    if (typeof console === 'undefined') console = {};
                    console.log = print;
                    console.warn = console.error =
                      typeof printErr !== 'undefined' ? printErr : print;
                  }
                } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
                  if (ENVIRONMENT_IS_WORKER) {
                    scriptDirectory = self.location.href;
                  } else if (document.currentScript) {
                    scriptDirectory = document.currentScript.src;
                  }
                  if (_scriptDir) {
                    scriptDirectory = _scriptDir;
                  }
                  if (scriptDirectory.indexOf('blob:') !== 0) {
                    scriptDirectory = scriptDirectory.substr(
                      0,
                      scriptDirectory.lastIndexOf('/') + 1
                    );
                  } else {
                    scriptDirectory = '';
                  }
                  {
                    read_ = function shell_read(url) {
                      try {
                        var xhr = new XMLHttpRequest();
                        xhr.open('GET', url, false);
                        xhr.send(null);
                        return xhr.responseText;
                      } catch (err) {
                        var data = tryParseAsDataURI(url);
                        if (data) {
                          return intArrayToString(data);
                        }
                        throw err;
                      }
                    };
                    if (ENVIRONMENT_IS_WORKER) {
                      readBinary = function readBinary(url) {
                        try {
                          var xhr = new XMLHttpRequest();
                          xhr.open('GET', url, false);
                          xhr.responseType = 'arraybuffer';
                          xhr.send(null);
                          return new Uint8Array(xhr.response);
                        } catch (err) {
                          var data = tryParseAsDataURI(url);
                          if (data) {
                            return data;
                          }
                          throw err;
                        }
                      };
                    }
                    readAsync = function readAsync(url, onload, onerror) {
                      var xhr = new XMLHttpRequest();
                      xhr.open('GET', url, true);
                      xhr.responseType = 'arraybuffer';
                      xhr.onload = function xhr_onload() {
                        if (
                          xhr.status == 200 ||
                          (xhr.status == 0 && xhr.response)
                        ) {
                          onload(xhr.response);
                          return;
                        }
                        var data = tryParseAsDataURI(url);
                        if (data) {
                          onload(data.buffer);
                          return;
                        }
                        onerror();
                      };
                      xhr.onerror = onerror;
                      xhr.send(null);
                    };
                  }
                  setWindowTitle = function setWindowTitle(title) {
                    document.title = title;
                  };
                } else {
                }
                var out = Module['print'] || console.log.bind(console);
                var err = Module['printErr'] || console.warn.bind(console);
                for (key in moduleOverrides) {
                  if (moduleOverrides.hasOwnProperty(key)) {
                    Module[key] = moduleOverrides[key];
                  }
                }
                moduleOverrides = null;
                if (Module['arguments']) arguments_ = Module['arguments'];
                if (Module['thisProgram']) thisProgram = Module['thisProgram'];
                if (Module['quit']) quit_ = Module['quit'];
                var wasmBinary;
                if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];
                var noExitRuntime;
                if (Module['noExitRuntime'])
                  noExitRuntime = Module['noExitRuntime'];
                var WebAssembly = {
                  Memory: function Memory(opts) {
                    this.buffer = new ArrayBuffer(opts['initial'] * 65536);
                  },
                  Module: function Module(binary) {},
                  Instance: function Instance(module, info) {
                    this.exports =
                      // EMSCRIPTEN_START_ASM
                      (function instantiate(rc, sc) {
                        function jc(tc) {
                          tc.set = function (M, uc) {
                            this[M] = uc;
                          };
                          tc.get = function (M) {
                            return this[M];
                          };
                          return tc;
                        }
                        var a = new ArrayBuffer(16);
                        var b = new Int32Array(a);
                        var c = new Float32Array(a);
                        var d = new Float64Array(a);
                        function kc(vc) {
                          return b[vc];
                        }
                        function lc(vc, wc) {
                          b[vc] = wc;
                        }
                        function mc() {
                          return d[0];
                        }
                        function nc(wc) {
                          d[0] = wc;
                        }
                        function oc(xc, yc) {
                          var e = yc.a;
                          var f = e.buffer;
                          var g = new xc.Int8Array(f);
                          var h = new xc.Int16Array(f);
                          var i = new xc.Int32Array(f);
                          var j = new xc.Uint8Array(f);
                          var k = new xc.Uint16Array(f);
                          var l = new xc.Uint32Array(f);
                          var m = new xc.Float32Array(f);
                          var n = new xc.Float64Array(f);
                          var o = xc.Math.imul;
                          var p = xc.Math.fround;
                          var q = xc.Math.abs;
                          var r = xc.Math.clz32;
                          var s = xc.Math.min;
                          var t = xc.Math.max;
                          var u = xc.Math.floor;
                          var v = xc.Math.ceil;
                          var w = xc.Math.sqrt;
                          var x = yc.abort;
                          var y = xc.NaN;
                          var z = xc.Infinity;
                          var A = yc.b;
                          var B = yc.c;
                          var C = yc.d;
                          var D = yc.e;
                          var E = yc.f;
                          var F = yc.g;
                          var G = yc.h;
                          var H = 5259648;
                          var I = 0;
                          // EMSCRIPTEN_START_FUNCS
                          function Bb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              n = p(0),
                              r = p(0),
                              v = 0,
                              w = 0,
                              y = p(0),
                              z = 0,
                              A = 0,
                              B = 0,
                              C = p(0),
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = 0,
                              Y = p(0),
                              $ = 0,
                              ba = 0,
                              ea = 0,
                              ia = 0,
                              ja = 0,
                              ka = 0,
                              ma = 0,
                              na = 0,
                              oa = 0,
                              ra = 0,
                              ua = 0,
                              wa = 0,
                              xa = 0,
                              ya = p(0);
                            z = (H - 48) | 0;
                            H = z;
                            D = i[(a + 64) >> 2];
                            F = i[(a + 24) >> 2];
                            l = i[(a + 72) >> 2];
                            qa(
                              l,
                              (l + (i[(a + 8) >> 2] << 1)) | 0,
                              ((i[(a + 32) >> 2] << 1) + 4) | 0
                            );
                            l = i[(a + 80) >> 2];
                            qa(
                              l,
                              (l + (i[(a + 8) >> 2] << 1)) | 0,
                              ((i[(a + 32) >> 2] << 1) + 4) | 0
                            );
                            K = D & 1;
                            w = (K + D) | 0;
                            d = F << 1;
                            l = (w + d) | 0;
                            N = l & 1;
                            L = (l + N) | 0;
                            l = (d + L) | 0;
                            R = l & 1;
                            G = (l + R) | 0;
                            l = (d + G) | 0;
                            S = l & 1;
                            O = (l + S) | 0;
                            l = (d + O) | 0;
                            ka = l & 1;
                            ma = (l + ka) | 0;
                            l = (d + ma) | 0;
                            na = l & 1;
                            T = (l + na) | 0;
                            l = (d + T) | 0;
                            ea = l & 1;
                            ra = (l + ea) | 0;
                            l = (d + ra) | 0;
                            ua = l & 1;
                            V = (l + ua) | 0;
                            l = (d + V) | 0;
                            wa = l & 1;
                            M = (l + wa) | 0;
                            l = (d + M) | 0;
                            if (i[(a + 220) >> 2]) {
                              sa(
                                b,
                                b,
                                i[(a + 8) >> 2],
                                (i[(a + 216) >> 2] != 0) << 1,
                                (a + 124) | 0
                              );
                            }
                            I = l & 1;
                            A = (I + l) | 0;
                            B = i[(a + 20) >> 2];
                            l = (A + (B << 1)) | 0;
                            xa = l & 1;
                            P = (l + xa) | 0;
                            ia = i[(a + 24) >> 2];
                            j = ia << 1;
                            v = i[(a + 8) >> 2];
                            if ((B | 0) > (v | 0)) {
                              l = (B - v) | 0;
                              f = (l | 0) > 1 ? l : 1;
                              d = i[(a + 88) >> 2];
                              l = i[(a + 68) >> 2];
                              while (1) {
                                e = g << 1;
                                h[(e + A) >> 1] =
                                  o(h[(d + e) >> 1], h[(e + l) >> 1]) >>> 14;
                                g = (g + 1) | 0;
                                if ((g | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((f | 0) < (B | 0)) {
                              e = (v - B) | 0;
                              d = i[(a + 88) >> 2];
                              while (1) {
                                l = f << 1;
                                h[(l + A) >> 1] =
                                  o(
                                    h[(d + l) >> 1],
                                    h[(((e + f) << 1) + b) >> 1]
                                  ) >>> 14;
                                f = (f + 1) | 0;
                                if ((B | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            Q = (((j + P) | 0) + 2) | 0;
                            f = 1;
                            Da(A, P, (ia + 1) | 0, B);
                            l = h[P >> 1];
                            l = (((o(l, h[(a + 60) >> 1]) >>> 15) | 0) + l) | 0;
                            h[P >> 1] = l;
                            j = i[(a + 24) >> 2];
                            a: {
                              if ((j | 0) < 0) {
                                break a;
                              }
                              e = i[(a + 92) >> 2];
                              h[P >> 1] = o(h[e >> 1], (l << 16) >> 16) >>> 14;
                              if (!j) {
                                break a;
                              }
                              while (1) {
                                d = f << 1;
                                l = (d + P) | 0;
                                h[l >> 1] =
                                  o(h[(d + e) >> 1], h[l >> 1]) >>> 14;
                                l = (f | 0) != (j | 0);
                                f = (f + 1) | 0;
                                if (l) {
                                  continue;
                                }
                                break;
                              }
                            }
                            Ea(w, P, j);
                            l = ta(w, i[(a + 24) >> 2], O, 6553, Q);
                            g = i[(a + 24) >> 2];
                            if (!(((l | 0) == (g | 0)) | ((g | 0) < 1))) {
                              d = i[(a + 96) >> 2];
                              f = 0;
                              while (1) {
                                l = f << 1;
                                h[(l + O) >> 1] = k[(d + l) >> 1];
                                f = (f + 1) | 0;
                                if ((g | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = i[(a + 8) >> 2];
                            d = i[(a + 20) >> 2];
                            b: {
                              if (i[(a + 4) >> 2]) {
                                if ((g | 0) < 1) {
                                  break b;
                                }
                                f = 0;
                                while (1) {
                                  l = f << 1;
                                  h[(l + T) >> 1] = k[(l + O) >> 1];
                                  f = (f + 1) | 0;
                                  if ((g | 0) != (f | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break b;
                              }
                              l = i[(a + 16) >> 2];
                              fa(i[(a + 96) >> 2], O, T, g, l, l << 1);
                              g = i[(a + 24) >> 2];
                            }
                            w = (d - e) | 0;
                            ga(T, g, 16);
                            ha(T, V, i[(a + 24) >> 2], Q);
                            c: {
                              d: {
                                l =
                                  i[
                                    (i[(a + 204) >> 2] +
                                      (i[(a + 208) >> 2] << 2)) >>
                                      2
                                  ];
                                if (
                                  !l |
                                  (i[(l + 8) >> 2] < 3
                                    ? i[(a + 188) >> 2] >= 3
                                    : 0) |
                                  (i[(l + 4) >> 2] | (i[l >> 2] != -1))
                                ) {
                                  break d;
                                }
                                if (i[(a + 152) >> 2] | i[(a + 160) >> 2]) {
                                  break d;
                                }
                                g = w << 1;
                                l = 0;
                                break c;
                              }
                              ca(h[(a + 56) >> 1], V, L, i[(a + 24) >> 2]);
                              ca(h[(a + 58) >> 1], V, G, i[(a + 24) >> 2]);
                              g = w << 1;
                              X(i[(a + 84) >> 2], i[(a + 68) >> 2], g);
                              X(
                                (i[(a + 84) >> 2] + g) | 0,
                                b,
                                (i[(a + 8) >> 2] - w) << 1
                              );
                              l = i[(a + 84) >> 2];
                              aa(
                                l,
                                L,
                                G,
                                l,
                                i[(a + 8) >> 2],
                                i[(a + 24) >> 2],
                                i[(a + 112) >> 2]
                              );
                              Ia(
                                i[(a + 84) >> 2],
                                i[(a + 28) >> 2],
                                i[(a + 32) >> 2],
                                i[(a + 8) >> 2],
                                (z + 16) | 0,
                                (z + 4) | 0,
                                6,
                                Q
                              );
                              l = i[(z + 16) >> 2];
                              ba = h[(z + 4) >> 1];
                              v = o(ba, 27853) >> 15;
                              e: {
                                if ((v | 0) >= h[(z + 6) >> 1]) {
                                  break e;
                                }
                                d = i[(z + 20) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                f: {
                                  if ((j ^ (e + j)) < 3) {
                                    break f;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break f;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break f;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break e;
                                  }
                                }
                                l = d;
                              }
                              g: {
                                if ((v | 0) >= h[(z + 8) >> 1]) {
                                  break g;
                                }
                                d = i[(z + 24) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                h: {
                                  if ((j ^ (e + j)) < 3) {
                                    break h;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break h;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break h;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break g;
                                  }
                                }
                                l = d;
                              }
                              i: {
                                if ((v | 0) >= h[(z + 10) >> 1]) {
                                  break i;
                                }
                                d = i[(z + 28) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                j: {
                                  if ((j ^ (e + j)) < 3) {
                                    break j;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break j;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break j;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break i;
                                  }
                                }
                                l = d;
                              }
                              k: {
                                if ((v | 0) >= h[(z + 12) >> 1]) {
                                  break k;
                                }
                                d = i[(z + 32) >> 2];
                                e = ((d << 1) - l) | 0;
                                j = e >> 31;
                                l: {
                                  if ((j ^ (e + j)) < 3) {
                                    break l;
                                  }
                                  e = (o(d, 3) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 4) {
                                    break l;
                                  }
                                  e = ((d << 2) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) < 5) {
                                    break l;
                                  }
                                  e = (o(d, 5) - l) | 0;
                                  j = e >> 31;
                                  if ((j ^ (e + j)) > 5) {
                                    break k;
                                  }
                                }
                                l = d;
                              }
                              if ((v | 0) >= h[(z + 14) >> 1]) {
                                break c;
                              }
                              d = i[(z + 36) >> 2];
                              e = ((d << 1) - l) | 0;
                              j = e >> 31;
                              m: {
                                if ((j ^ (e + j)) < 3) {
                                  break m;
                                }
                                e = (o(d, 3) - l) | 0;
                                j = e >> 31;
                                if ((j ^ (e + j)) < 4) {
                                  break m;
                                }
                                e = ((d << 2) - l) | 0;
                                j = e >> 31;
                                if ((j ^ (e + j)) < 5) {
                                  break m;
                                }
                                e = (o(d, 5) - l) | 0;
                                j = e >> 31;
                                if ((j ^ (e + j)) > 5) {
                                  break c;
                                }
                              }
                              l = d;
                            }
                            X(i[(a + 76) >> 2], i[(a + 68) >> 2], g);
                            X(
                              (i[(a + 76) >> 2] + (w << 1)) | 0,
                              b,
                              (i[(a + 8) >> 2] - w) << 1
                            );
                            d = i[(a + 76) >> 2];
                            va(
                              d,
                              V,
                              d,
                              i[(a + 8) >> 2],
                              i[(a + 24) >> 2],
                              i[(a + 116) >> 2]
                            );
                            v = Z(i[(a + 76) >> 2], i[(a + 8) >> 2]);
                            n: {
                              if (!((i[(a + 208) >> 2] == 1) | ((l | 0) < 1))) {
                                w =
                                  (o((o(ba, ba) << 17) >> 16, -26214) +
                                    268435456) |
                                  0;
                                e = w >>> 0 > 65535;
                                d = e << 3;
                                j = e ? (w >>> 16) | 0 : w;
                                e = j >>> 0 > 255;
                                d = e ? d | 4 : d;
                                f = d | 2;
                                g = d;
                                e = e ? (j >>> 8) | 0 : j;
                                d = e >>> 0 > 15;
                                g =
                                  (d ? f : g) |
                                  ((d ? (e >>> 4) | 0 : e) >>> 0 > 3);
                                d = g << 1;
                                j = (g << 16) >> 16;
                                d =
                                  (((j | 0) > 6
                                    ? w >> (d + -12)
                                    : w << (12 - d)) <<
                                    16) >>
                                  16;
                                e =
                                  (((o(
                                    (((o((o(d, 16816) + -827523072) >> 16, d) <<
                                      2) &
                                      -65536) +
                                      1387593728) >>
                                      16,
                                    d
                                  ) <<
                                    2) &
                                    -65536) +
                                    238157824) >>
                                  16;
                                d = (13 - g) | 0;
                                e = o(
                                  v,
                                  o(
                                    (((j | 0) < 13 ? e >> d : e << (0 - d)) <<
                                      16) >>
                                      16,
                                    72088
                                  ) >> 16
                                );
                                break n;
                              }
                              e = v << 14;
                            }
                            o: {
                              p: {
                                q: {
                                  r: {
                                    s: {
                                      v = i[(a + 140) >> 2];
                                      if (
                                        !(
                                          !v |
                                          (i[(a + 160) >> 2]
                                            ? 0
                                            : !i[(a + 152) >> 2])
                                        )
                                      ) {
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          j = i[(a + 96) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 1;
                                            d =
                                              (h[(d + j) >> 1] -
                                                h[(d + O) >> 1]) |
                                              0;
                                            C = p(C + p(o(d, d) | 0));
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        if (i[(a + 172) >> 2]) {
                                          n = m[(a + 176) >> 2];
                                          t: {
                                            if (
                                              (p(m[(a + 180) >> 2] * n) >
                                                p(0)) ^
                                              1
                                            ) {
                                              break t;
                                            }
                                            r = p(
                                              (+n * -1e-5) /
                                                +p(m[(a + 184) >> 2] + p(1))
                                            );
                                            r =
                                              +r > 0.05
                                                ? p(0.05000000074505806)
                                                : r;
                                            if ((+r < -0.05) ^ 1) {
                                              break t;
                                            }
                                            r = p(-0.05000000074505806);
                                          }
                                          m[(a + 144) >> 2] = t(
                                            p(
                                              s(p(r + m[(a + 144) >> 2]), p(10))
                                            ),
                                            p(0)
                                          );
                                        }
                                        ya = p(C * p(1.4901161193847656e-8));
                                        y = Kb(
                                          v,
                                          b,
                                          i[(a + 8) >> 2],
                                          p(+(ba | 0) * 0.015625)
                                        );
                                        m[(a + 148) >> 2] = y;
                                        if (i[(a + 152) >> 2]) {
                                          i[(z + 16) >> 2] = 8;
                                          n = m[(a + 144) >> 2];
                                          r = p(u(n));
                                          u: {
                                            if (p(q(r)) < p(2147483648)) {
                                              d = ~~r;
                                              break u;
                                            }
                                            d = -2147483648;
                                          }
                                          if ((d | 0) != 10) {
                                            g = 0;
                                            Y = p(n - p(d | 0));
                                            w = (d + 1) | 0;
                                            v = w << 2;
                                            C = p(p(w | 0) - n);
                                            j = d << 2;
                                            n = p(
                                              p(Y * m[(v + 5440) >> 2]) +
                                                p(C * m[(j + 5440) >> 2])
                                            );
                                            r = p(100);
                                            v: {
                                              if (!(y > n)) {
                                                break v;
                                              }
                                              n = p(y - n);
                                              r = p(100);
                                              if ((n < p(100)) ^ 1) {
                                                break v;
                                              }
                                              g = 8;
                                              r = n;
                                            }
                                            n = p(
                                              p(Y * m[(v + 5396) >> 2]) +
                                                p(C * m[(j + 5396) >> 2])
                                            );
                                            w: {
                                              if (!(y > n)) {
                                                break w;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break w;
                                              }
                                              g = 7;
                                              r = n;
                                            }
                                            v = w << 2;
                                            j = d << 2;
                                            n = p(
                                              p(Y * m[(v + 5352) >> 2]) +
                                                p(C * m[(j + 5352) >> 2])
                                            );
                                            x: {
                                              if ((y > n) ^ 1) {
                                                break x;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break x;
                                              }
                                              g = 6;
                                              r = n;
                                            }
                                            n = p(
                                              p(Y * m[(v + 5308) >> 2]) +
                                                p(C * m[(j + 5308) >> 2])
                                            );
                                            y: {
                                              if ((y > n) ^ 1) {
                                                break y;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break y;
                                              }
                                              g = 5;
                                              r = n;
                                            }
                                            v = w << 2;
                                            j = d << 2;
                                            n = p(
                                              p(Y * m[(v + 5264) >> 2]) +
                                                p(C * m[(j + 5264) >> 2])
                                            );
                                            z: {
                                              if ((y > n) ^ 1) {
                                                break z;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break z;
                                              }
                                              g = 4;
                                              r = n;
                                            }
                                            n = p(
                                              p(Y * m[(v + 5220) >> 2]) +
                                                p(C * m[(j + 5220) >> 2])
                                            );
                                            A: {
                                              if ((y > n) ^ 1) {
                                                break A;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break A;
                                              }
                                              g = 3;
                                              r = n;
                                            }
                                            j = w << 2;
                                            d = d << 2;
                                            n = p(
                                              p(Y * m[(j + 5176) >> 2]) +
                                                p(C * m[(d + 5176) >> 2])
                                            );
                                            B: {
                                              if ((y > n) ^ 1) {
                                                break B;
                                              }
                                              n = p(y - n);
                                              if ((n < r) ^ 1) {
                                                break B;
                                              }
                                              g = 2;
                                              r = n;
                                            }
                                            C = p(
                                              p(Y * m[(j + 5132) >> 2]) +
                                                p(C * m[(d + 5132) >> 2])
                                            );
                                            if ((y > C) ^ 1) {
                                              break r;
                                            }
                                            break s;
                                          }
                                          g = 0;
                                          n = m[1370];
                                          r = p(100);
                                          C: {
                                            if ((y > n) ^ 1) {
                                              break C;
                                            }
                                            n = p(y - n);
                                            r = p(100);
                                            if ((n < p(100)) ^ 1) {
                                              break C;
                                            }
                                            g = 8;
                                            r = n;
                                          }
                                          n = m[1359];
                                          D: {
                                            if (!(y > n)) {
                                              break D;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break D;
                                            }
                                            g = 7;
                                            r = n;
                                          }
                                          n = m[1348];
                                          E: {
                                            if ((y > n) ^ 1) {
                                              break E;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break E;
                                            }
                                            g = 6;
                                            r = n;
                                          }
                                          n = m[1337];
                                          F: {
                                            if ((y > n) ^ 1) {
                                              break F;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break F;
                                            }
                                            g = 5;
                                            r = n;
                                          }
                                          n = m[1326];
                                          G: {
                                            if ((y > n) ^ 1) {
                                              break G;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break G;
                                            }
                                            g = 4;
                                            r = n;
                                          }
                                          n = m[1315];
                                          H: {
                                            if ((y > n) ^ 1) {
                                              break H;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break H;
                                            }
                                            g = 3;
                                            r = n;
                                          }
                                          n = m[1304];
                                          I: {
                                            if ((y > n) ^ 1) {
                                              break I;
                                            }
                                            n = p(y - n);
                                            if ((n < r) ^ 1) {
                                              break I;
                                            }
                                            g = 2;
                                            r = n;
                                          }
                                          C = m[1293];
                                          if (!((y > C) ^ 1)) {
                                            break s;
                                          }
                                          break r;
                                        }
                                        if (!((y < p(2)) ^ 1)) {
                                          J: {
                                            K: {
                                              if (+ya > 0.05) {
                                                break K;
                                              }
                                              d = i[(a + 168) >> 2];
                                              if (!d | ((d | 0) > 20)) {
                                                break K;
                                              }
                                              if (i[(a + 164) >> 2]) {
                                                break J;
                                              }
                                            }
                                            i[(a + 168) >> 2] = 1;
                                            i[(a + 208) >> 2] = 1;
                                            break o;
                                          }
                                          i[(a + 168) >> 2] = d + 1;
                                          i[(a + 208) >> 2] = 0;
                                          break o;
                                        }
                                        i[(a + 168) >> 2] = 0;
                                        i[(a + 208) >> 2] = i[(a + 212) >> 2];
                                        break o;
                                      }
                                      i[(a + 148) >> 2] = -1082130432;
                                      break o;
                                    }
                                    if (!(p(y - C) < r)) {
                                      break r;
                                    }
                                    i[(z + 16) >> 2] = 1;
                                    f = (a + 168) | 0;
                                    break q;
                                  }
                                  i[(z + 16) >> 2] = g;
                                  f = (a + 168) | 0;
                                  if (g) {
                                    break q;
                                  }
                                  L: {
                                    M: {
                                      if (+ya > 0.05) {
                                        break M;
                                      }
                                      d = i[(a + 168) >> 2];
                                      if (!d | ((d | 0) > 20)) {
                                        break M;
                                      }
                                      if (i[(a + 164) >> 2]) {
                                        break L;
                                      }
                                    }
                                    i[(z + 16) >> 2] = 1;
                                    i[(a + 168) >> 2] = 1;
                                    break p;
                                  }
                                  i[(z + 16) >> 2] = 0;
                                  i[(a + 168) >> 2] = d + 1;
                                  break p;
                                }
                                i[f >> 2] = 0;
                              }
                              J[i[(i[a >> 2] + 44) >> 2]](a, 6, (z + 16) | 0) |
                                0;
                              N: {
                                if (i[(a + 156) >> 2] < 1) {
                                  break N;
                                }
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  19,
                                  (z + 4) | 0
                                ) | 0;
                                d = i[(a + 156) >> 2];
                                if (i[(z + 4) >> 2] <= (d | 0)) {
                                  break N;
                                }
                                i[(z + 4) >> 2] = d;
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  18,
                                  (z + 4) | 0
                                ) | 0;
                              }
                              if (!i[(a + 172) >> 2]) {
                                break o;
                              }
                              J[i[(i[a >> 2] + 44) >> 2]](a, 19, (z + 4) | 0) |
                                0;
                              d = i[(z + 4) >> 2];
                              m[(a + 184) >> 2] = m[(a + 184) >> 2] + p(1);
                              d = (d - i[(a + 172) >> 2]) | 0;
                              m[(a + 176) >> 2] = m[(a + 176) >> 2] + p(d | 0);
                              m[(a + 180) >> 2] =
                                +(d | 0) * 0.05 + +m[(a + 180) >> 2] * 0.95;
                            }
                            if (i[(a + 200) >> 2]) {
                              W(c, 0, 1);
                              W(c, i[(a + 208) >> 2], 4);
                            }
                            O: {
                              P: {
                                Q: {
                                  g =
                                    i[
                                      (i[(a + 204) >> 2] +
                                        (i[(a + 208) >> 2] << 2)) >>
                                        2
                                    ];
                                  R: {
                                    if (!g) {
                                      g = i[(a + 8) >> 2];
                                      if ((g | 0) >= 1) {
                                        d = i[(a + 76) >> 2];
                                        l = i[(a + 84) >> 2];
                                        f = 0;
                                        while (1) {
                                          c = f << 1;
                                          h[(c + l) >> 1] = 0;
                                          h[(c + d) >> 1] = 0;
                                          f = (f + 1) | 0;
                                          if ((g | 0) != (f | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      if (i[(a + 24) >> 2] >= 1) {
                                        c = i[(a + 108) >> 2];
                                        f = 0;
                                        while (1) {
                                          i[(c + (f << 2)) >> 2] = 0;
                                          f = (f + 1) | 0;
                                          if ((f | 0) < i[(a + 24) >> 2]) {
                                            continue;
                                          }
                                          break;
                                        }
                                        g = i[(a + 8) >> 2];
                                      }
                                      i[(a + 40) >> 2] = 1;
                                      i[(a + 4) >> 2] = 1;
                                      c = ((g << 2) + b) | 0;
                                      b = i[(a + 20) >> 2];
                                      X(
                                        i[(a + 68) >> 2],
                                        (c - (b << 1)) | 0,
                                        (b - g) << 1
                                      );
                                      if (i[(a + 24) >> 2] < 1) {
                                        g = 0;
                                        break R;
                                      }
                                      b = i[(a + 104) >> 2];
                                      g = 0;
                                      f = 0;
                                      while (1) {
                                        i[(b + (f << 2)) >> 2] = 0;
                                        f = (f + 1) | 0;
                                        if ((f | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                      break R;
                                    }
                                    v = i[(a + 24) >> 2];
                                    if (!(!i[(a + 4) >> 2] | ((v | 0) < 1))) {
                                      j = i[(a + 96) >> 2];
                                      f = 0;
                                      while (1) {
                                        d = f << 1;
                                        h[(d + j) >> 1] = k[(d + O) >> 1];
                                        f = (f + 1) | 0;
                                        if ((v | 0) != (f | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    J[i[(g + 16) >> 2]](O, ma, v, c);
                                    d =
                                      i[
                                        (i[(a + 204) >> 2] +
                                          (i[(a + 208) >> 2] << 2)) >>
                                          2
                                      ];
                                    if (i[d >> 2] != -1) {
                                      W(c, (l - i[(a + 28) >> 2]) | 0, 7);
                                      d =
                                        i[
                                          (i[(a + 204) >> 2] +
                                            (i[(a + 208) >> 2] << 2)) >>
                                            2
                                        ];
                                    }
                                    if (i[(d + 4) >> 2]) {
                                      d = (o(o(ba, 58982) >> 16, 15) + 32) >> 6;
                                      d = (d | 0) < 15 ? d : 15;
                                      d = (d | 0) > 0 ? d : 0;
                                      W(c, d, 4);
                                      ba =
                                        (o((d << 22) >> 16, 2185) + 16384) >>
                                        15;
                                    }
                                    w = Jb(e);
                                    W(c, w, 5);
                                    f = i[(a + 24) >> 2];
                                    if (!(!i[(a + 4) >> 2] | ((f | 0) < 1))) {
                                      e = i[(a + 100) >> 2];
                                      g = 0;
                                      while (1) {
                                        d = g << 1;
                                        h[(d + e) >> 1] = k[(d + ma) >> 1];
                                        g = (g + 1) | 0;
                                        if ((g | 0) != (f | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    S: {
                                      g = i[(a + 16) >> 2];
                                      if ((g | 0) < 1) {
                                        break S;
                                      }
                                      v = Q & 1;
                                      $ = (v + Q) | 0;
                                      ja = i[(a + 12) >> 2];
                                      E = ja << 1;
                                      d = ($ + E) | 0;
                                      Q = (0 - d) & 3;
                                      P = (d + Q) | 0;
                                      e = ja << 2;
                                      d = (P + e) | 0;
                                      j = (0 - d) & 3;
                                      oa = (d + j) | 0;
                                      d = (oa + e) | 0;
                                      A = d & 1;
                                      F =
                                        (Q +
                                          ((j +
                                            ((((o(F, 18) + o(ja, 12)) | 0) +
                                              ((B + ia) << 1)) |
                                              0)) |
                                            0)) |
                                        0;
                                      B = (d + A) | 0;
                                      j = (B + E) | 0;
                                      e = j & 1;
                                      ua =
                                        (((D +
                                          ((K +
                                            ((N +
                                              ((((S +
                                                ((((((((ua +
                                                  ((wa +
                                                    ((I +
                                                      ((((v +
                                                        ((A + ((F + e) | 0)) |
                                                          0)) |
                                                        0) +
                                                        xa) |
                                                        0)) |
                                                      0)) |
                                                    0)) |
                                                  0) +
                                                  ea) |
                                                  0) +
                                                  na) |
                                                  0) +
                                                  ka) |
                                                  0)) |
                                                0) +
                                                R) |
                                                0)) |
                                              0)) |
                                            0)) |
                                          0) +
                                          2) |
                                        0;
                                      d = i[((w << 2) + 12144) >> 2];
                                      v =
                                        (o((d << 1) >> 16, 28406) +
                                          ((o(d & 32767, 28406) >>> 15) | 0)) |
                                        0;
                                      ka = v & 16383;
                                      wa = (a + 36) | 0;
                                      na = (v << 2) >> 16;
                                      R = (e + j) | 0;
                                      d = (R + E) | 0;
                                      F = ((d & 1) + d) | 0;
                                      d = (F + E) | 0;
                                      E = (((0 - d) & 3) + d) | 0;
                                      N = (E + (f << 2)) | 0;
                                      xa = (((0 - N) & 3) + N) | 0;
                                      ia = (v - -8192) >> 14;
                                      Q = (ia << 16) >> 17;
                                      D = 0;
                                      while (1) {
                                        A = i[(a + 76) >> 2];
                                        j = i[(a + 84) >> 2];
                                        fa(i[(a + 96) >> 2], O, T, f, D, g);
                                        fa(
                                          i[(a + 100) >> 2],
                                          ma,
                                          ra,
                                          i[(a + 24) >> 2],
                                          D,
                                          i[(a + 16) >> 2]
                                        );
                                        ga(T, i[(a + 24) >> 2], 16);
                                        ga(ra, i[(a + 24) >> 2], 16);
                                        ha(T, V, i[(a + 24) >> 2], N);
                                        ha(ra, M, i[(a + 24) >> 2], N);
                                        f = 0;
                                        g = 8192;
                                        e = i[(a + 24) >> 2];
                                        if ((e | 0) >= 1) {
                                          while (1) {
                                            d = f << 1;
                                            g =
                                              (((h[((d | 2) + M) >> 1] + g) |
                                                0) -
                                                h[(d + M) >> 1]) |
                                              0;
                                            f = (f + 2) | 0;
                                            if ((f | 0) < (e | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        K = D << 2;
                                        i[(K + i[(a + 132) >> 2]) >> 2] = g;
                                        ca(
                                          h[(a + 56) >> 1],
                                          V,
                                          L,
                                          i[(a + 24) >> 2]
                                        );
                                        e = i[(a + 24) >> 2];
                                        d = h[(a + 58) >> 1];
                                        T: {
                                          if ((d | 0) <= -1) {
                                            if ((e | 0) < 1) {
                                              break T;
                                            }
                                            U(G, 0, e << 1);
                                            break T;
                                          }
                                          ca(d, V, G, e);
                                        }
                                        g =
                                          (i[(a + 20) >> 2] - i[(a + 8) >> 2]) |
                                          0;
                                        if ((g | 0) != i[(a + 12) >> 2]) {
                                          break Q;
                                        }
                                        ea = o(D, ja);
                                        I = ea << 1;
                                        w = (I + j) | 0;
                                        U: {
                                          if (D) {
                                            if ((g | 0) < 1) {
                                              break U;
                                            }
                                            j = o(g, (D + -1) | 0);
                                            f = 0;
                                            while (1) {
                                              e = f << 1;
                                              d = k[(((f + j) << 1) + b) >> 1];
                                              h[(e + w) >> 1] = d;
                                              h[(e + F) >> 1] = d;
                                              f = (f + 1) | 0;
                                              if ((g | 0) != (f | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                            break U;
                                          }
                                          if ((g | 0) < 1) {
                                            break U;
                                          }
                                          d = i[(a + 68) >> 2];
                                          f = 0;
                                          while (1) {
                                            j = f << 1;
                                            e = k[(j + d) >> 1];
                                            h[(j + w) >> 1] = e;
                                            h[(j + F) >> 1] = e;
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        va(
                                          F,
                                          M,
                                          F,
                                          g,
                                          i[(a + 24) >> 2],
                                          i[(a + 120) >> 2]
                                        );
                                        d = ja >> !i[(a + 188) >> 2];
                                        La(M, L, G, R, d, i[(a + 24) >> 2], N);
                                        j = i[(a + 12) >> 2];
                                        if ((d | 0) < (j | 0)) {
                                          e = d << 1;
                                          d = (d + 1) | 0;
                                          U(
                                            (e + ua) | 0,
                                            0,
                                            ((((j | 0) > (d | 0) ? j : d) <<
                                              1) -
                                              e) |
                                              0
                                          );
                                        }
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          e = i[(a + 104) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + E) >> 2] =
                                              i[(d + e) >> 2] << 1;
                                            f = (f + 1) | 0;
                                            g = i[(a + 24) >> 2];
                                            if ((f | 0) < (g | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        d = i[(a + 12) >> 2];
                                        if ((d | 0) >= 1) {
                                          U(B, 0, d << 1);
                                        }
                                        _(B, M, B, d, g, E);
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          e = i[(a + 108) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + E) >> 2] =
                                              i[(d + e) >> 2] << 1;
                                            f = (f + 1) | 0;
                                            g = i[(a + 24) >> 2];
                                            if ((f | 0) < (g | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        aa(B, L, G, B, i[(a + 12) >> 2], g, E);
                                        g = i[(a + 24) >> 2];
                                        if ((g | 0) >= 1) {
                                          e = i[(a + 108) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + E) >> 2] = i[(d + e) >> 2];
                                            f = (f + 1) | 0;
                                            g = i[(a + 24) >> 2];
                                            if ((f | 0) < (g | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        aa(w, L, G, w, i[(a + 12) >> 2], g, E);
                                        if (
                                          !(
                                            i[(a + 188) >> 2] |
                                            (i[(a + 24) >> 2] < 1)
                                          )
                                        ) {
                                          e = i[(a + 108) >> 2];
                                          f = 0;
                                          while (1) {
                                            d = f << 2;
                                            i[(d + e) >> 2] = i[(d + E) >> 2];
                                            f = (f + 1) | 0;
                                            if ((f | 0) < i[(a + 24) >> 2]) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        f = 0;
                                        j = i[(a + 12) >> 2];
                                        if ((j | 0) >= 1) {
                                          while (1) {
                                            e = f << 1;
                                            d =
                                              (h[(e + w) >> 1] -
                                                ((h[(e + B) >> 1] + 1) >> 1)) |
                                              0;
                                            d = (d | 0) > -32767 ? d : -32767;
                                            h[(e + $) >> 1] =
                                              (d | 0) < 32767 ? d : 32767;
                                            f = (f + 1) | 0;
                                            if ((j | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        j = U((A + I) | 0, 0, j << 1);
                                        A =
                                          i[
                                            (i[(a + 204) >> 2] +
                                              (i[(a + 208) >> 2] << 2)) >>
                                              2
                                          ];
                                        I = i[(A + 24) >> 2];
                                        if (!I) {
                                          break P;
                                        }
                                        d = l;
                                        g = d;
                                        V: {
                                          W: {
                                            X: {
                                              S = i[A >> 2];
                                              switch ((S + 1) | 0) {
                                                case 1:
                                                  break V;
                                                case 0:
                                                  break W;
                                                default:
                                                  break X;
                                              }
                                            }
                                            e = (i[(a + 32) >> 2] - S) | 0;
                                            d =
                                              (((S + i[(a + 28) >> 2]) | 0) +
                                                -1) |
                                              0;
                                            l = (l | 0) < (d | 0) ? d : l;
                                            l = (l | 0) > (e | 0) ? e : l;
                                            g = (S + l) | 0;
                                            d = (((l - S) | 0) + 1) | 0;
                                            break V;
                                          }
                                          g = i[(a + 32) >> 2];
                                          d = i[(a + 28) >> 2];
                                        }
                                        f = 0;
                                        d =
                                          J[I | 0](
                                            $,
                                            w,
                                            M,
                                            L,
                                            G,
                                            oa,
                                            i[(A + 32) >> 2],
                                            d,
                                            (g | 0) > (ea | 0)
                                              ? i[(a + 40) >> 2]
                                                ? ea
                                                : g
                                              : g,
                                            ba,
                                            i[(a + 24) >> 2],
                                            i[(a + 12) >> 2],
                                            c,
                                            N,
                                            j,
                                            R,
                                            i[(a + 188) >> 2],
                                            0,
                                            i[(a + 196) >> 2],
                                            wa
                                          ) | 0;
                                        i[(K + i[(a + 52) >> 2]) >> 2] = d;
                                        A = U(P, 0, i[(a + 12) >> 2] << 2);
                                        e = i[(a + 12) >> 2];
                                        if ((e | 0) >= 1) {
                                          while (1) {
                                            d = (F + (f << 1)) | 0;
                                            h[d >> 1] =
                                              k[d >> 1] -
                                              (((i[(oa + (f << 2)) >> 2] +
                                                4096) >>>
                                                13) |
                                                0);
                                            f = (f + 1) | 0;
                                            if ((e | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        d =
                                          ((((Z(F, e) << 14) + Q) | 0) /
                                            (ia | 0)) |
                                          0;
                                        e = (d | 0) < 32768 ? d : 32767;
                                        d = v;
                                        Y: {
                                          Z: {
                                            switch (
                                              i[
                                                (i[
                                                  (i[(a + 204) >> 2] +
                                                    (i[(a + 208) >> 2] << 2)) >>
                                                    2
                                                ] +
                                                  8) >>
                                                  2
                                              ]
                                            ) {
                                              case 3:
                                                d = pa(
                                                  (e << 16) >> 16,
                                                  12272,
                                                  8
                                                );
                                                W(c, d, 3);
                                                d = h[((d << 1) + 12288) >> 1];
                                                d =
                                                  ((o(d, ka) >> 14) +
                                                    o(d, na)) |
                                                  0;
                                                break Y;
                                              case 0:
                                                break Y;
                                              default:
                                                break Z;
                                            }
                                          }
                                          d = pa((e << 16) >> 16, 12304, 2);
                                          W(c, d, 1);
                                          d = h[((d << 1) + 12306) >> 1];
                                          d = ((o(d, ka) >> 14) + o(d, na)) | 0;
                                        }
                                        Aa($, $, d, i[(a + 12) >> 2]);
                                        g =
                                          i[
                                            (i[(a + 204) >> 2] +
                                              (i[(a + 208) >> 2] << 2)) >>
                                              2
                                          ];
                                        e = i[(g + 36) >> 2];
                                        if (!e) {
                                          break O;
                                        }
                                        J[e | 0](
                                          $,
                                          M,
                                          L,
                                          G,
                                          i[(g + 44) >> 2],
                                          i[(a + 24) >> 2],
                                          i[(a + 12) >> 2],
                                          A,
                                          R,
                                          c,
                                          N,
                                          i[(a + 188) >> 2],
                                          i[(g + 12) >> 2]
                                        );
                                        da(A, A, d, i[(a + 12) >> 2]);
                                        f = 0;
                                        g = i[(a + 12) >> 2];
                                        if ((g | 0) >= 1) {
                                          while (1) {
                                            e = f << 2;
                                            e =
                                              ((i[(e + oa) >> 2] << 1) +
                                                i[(e + A) >> 2]) |
                                              0;
                                            h[(j + (f << 1)) >> 1] =
                                              (e | 0) > 536862719
                                                ? 32767
                                                : (e | 0) < -536862720
                                                ? -32767
                                                : ((e - -8192) >>> 14) | 0;
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        _: {
                                          if (
                                            i[
                                              (i[
                                                (i[(a + 204) >> 2] +
                                                  (i[(a + 208) >> 2] << 2)) >>
                                                  2
                                              ] +
                                                12) >>
                                                2
                                            ]
                                          ) {
                                            f = 0;
                                            e = g << 2;
                                            K = U(xa, 0, e);
                                            g = (e + K) | 0;
                                            I = i[(a + 12) >> 2];
                                            if ((I | 0) >= 1) {
                                              while (1) {
                                                e = ($ + (f << 1)) | 0;
                                                h[e >> 1] =
                                                  (o(h[e >> 1], 18022) +
                                                    4096) >>>
                                                  13;
                                                f = (f + 1) | 0;
                                                if ((I | 0) != (f | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                            f = 0;
                                            e =
                                              i[
                                                (i[(a + 204) >> 2] +
                                                  (i[(a + 208) >> 2] << 2)) >>
                                                  2
                                              ];
                                            J[i[(e + 36) >> 2]](
                                              $,
                                              M,
                                              L,
                                              G,
                                              i[(e + 44) >> 2],
                                              i[(a + 24) >> 2],
                                              I,
                                              K,
                                              R,
                                              c,
                                              g,
                                              i[(a + 188) >> 2],
                                              0
                                            );
                                            da(
                                              K,
                                              K,
                                              (o((d << 1) >> 16, 14895) +
                                                ((o(d & 32767, 14895) >>> 15) |
                                                  0)) |
                                                0,
                                              i[(a + 12) >> 2]
                                            );
                                            g = i[(a + 12) >> 2];
                                            if ((g | 0) < 1) {
                                              break _;
                                            }
                                            while (1) {
                                              e = f << 2;
                                              d = (e + A) | 0;
                                              i[d >> 2] =
                                                i[(e + K) >> 2] + i[d >> 2];
                                              f = (f + 1) | 0;
                                              g = i[(a + 12) >> 2];
                                              if ((f | 0) < (g | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          f = 0;
                                          if ((g | 0) < 1) {
                                            break _;
                                          }
                                          while (1) {
                                            d = f << 2;
                                            d =
                                              ((i[(d + oa) >> 2] << 1) +
                                                i[(d + A) >> 2]) |
                                              0;
                                            h[(j + (f << 1)) >> 1] =
                                              (d | 0) > 536862719
                                                ? 32767
                                                : (d | 0) < -536862720
                                                ? -32767
                                                : ((d - -8192) >>> 14) | 0;
                                            f = (f + 1) | 0;
                                            if ((g | 0) != (f | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        e = M;
                                        d = w;
                                        if (i[(a + 136) >> 2]) {
                                          g = Ra(A, g);
                                          h[
                                            (i[(a + 136) >> 2] + (D << 1)) >> 1
                                          ] = g;
                                          g = i[(a + 12) >> 2];
                                        }
                                        _(
                                          j,
                                          e,
                                          d,
                                          g,
                                          i[(a + 24) >> 2],
                                          i[(a + 104) >> 2]
                                        );
                                        if (i[(a + 188) >> 2]) {
                                          aa(
                                            w,
                                            L,
                                            G,
                                            w,
                                            i[(a + 12) >> 2],
                                            i[(a + 24) >> 2],
                                            i[(a + 108) >> 2]
                                          );
                                        }
                                        D = (D + 1) | 0;
                                        g = i[(a + 16) >> 2];
                                        if ((D | 0) >= (g | 0)) {
                                          break S;
                                        }
                                        f = i[(a + 24) >> 2];
                                        ja = i[(a + 12) >> 2];
                                        continue;
                                      }
                                    }
                                    e = i[(a + 208) >> 2];
                                    $: {
                                      if ((e | 0) < 1) {
                                        break $;
                                      }
                                      j = i[(a + 24) >> 2];
                                      aa: {
                                        if ((j | 0) < 1) {
                                          break aa;
                                        }
                                        d = i[(a + 96) >> 2];
                                        f = 0;
                                        while (1) {
                                          l = f << 1;
                                          h[(l + d) >> 1] = k[(l + O) >> 1];
                                          f = (f + 1) | 0;
                                          if ((j | 0) != (f | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        if ((j | 0) < 1) {
                                          break aa;
                                        }
                                        d = i[(a + 100) >> 2];
                                        f = 0;
                                        while (1) {
                                          l = f << 1;
                                          h[(l + d) >> 1] = k[(l + ma) >> 1];
                                          f = (f + 1) | 0;
                                          if ((j | 0) != (f | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      if ((e | 0) != 1) {
                                        break $;
                                      }
                                      if (i[(a + 168) >> 2]) {
                                        W(c, 15, 4);
                                        break $;
                                      }
                                      W(c, 0, 4);
                                    }
                                    i[(a + 4) >> 2] = 0;
                                    c = i[(a + 8) >> 2];
                                    d = ((c << 2) + b) | 0;
                                    b = i[(a + 20) >> 2];
                                    X(
                                      i[(a + 68) >> 2],
                                      (d - (b << 1)) | 0,
                                      (b - c) << 1
                                    );
                                    b = i[(a + 208) >> 2];
                                    if (
                                      !(i[
                                        (i[
                                          (i[(a + 204) >> 2] + (b << 2)) >> 2
                                        ] +
                                          36) >>
                                          2
                                      ] != 14
                                        ? b
                                        : 0)
                                    ) {
                                      g = 1;
                                      i[(a + 40) >> 2] = 1;
                                      break R;
                                    }
                                    i[(a + 40) >> 2] = 0;
                                    g = 1;
                                  }
                                  H = (z + 48) | 0;
                                  return g | 0;
                                }
                                la(12310, 708);
                                x();
                              }
                              la(12391, 760);
                              x();
                            }
                            la(12428, 842);
                            x();
                          }
                          function na(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              k = 0,
                              m = 0,
                              n = 0,
                              o = 0;
                            o = (H - 16) | 0;
                            H = o;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            i: {
                                              j: {
                                                k: {
                                                  if (a >>> 0 <= 244) {
                                                    f = i[3808];
                                                    g =
                                                      a >>> 0 < 11
                                                        ? 16
                                                        : (a + 11) & -8;
                                                    a = (g >>> 3) | 0;
                                                    b = (f >>> a) | 0;
                                                    if (b & 3) {
                                                      c =
                                                        (a + ((b ^ -1) & 1)) |
                                                        0;
                                                      e = c << 3;
                                                      b = i[(e + 15280) >> 2];
                                                      a = (b + 8) | 0;
                                                      d = i[(b + 8) >> 2];
                                                      e = (e + 15272) | 0;
                                                      l: {
                                                        if (
                                                          (d | 0) ==
                                                          (e | 0)
                                                        ) {
                                                          i[3808] = ic(c) & f;
                                                          break l;
                                                        }
                                                        i[(d + 12) >> 2] = e;
                                                        i[(e + 8) >> 2] = d;
                                                      }
                                                      c = c << 3;
                                                      i[(b + 4) >> 2] = c | 3;
                                                      b = (b + c) | 0;
                                                      i[(b + 4) >> 2] =
                                                        i[(b + 4) >> 2] | 1;
                                                      break a;
                                                    }
                                                    k = i[3810];
                                                    if (g >>> 0 <= k >>> 0) {
                                                      break k;
                                                    }
                                                    if (b) {
                                                      c = 2 << a;
                                                      a =
                                                        ((0 - c) | c) &
                                                        (b << a);
                                                      a =
                                                        (((0 - a) & a) + -1) |
                                                        0;
                                                      b = (a >>> 12) & 16;
                                                      c = b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 5) & 8;
                                                      c = c | b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 2) & 4;
                                                      c = c | b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 1) & 2;
                                                      c = c | b;
                                                      a = (a >>> b) | 0;
                                                      b = (a >>> 1) & 1;
                                                      c =
                                                        ((c | b) +
                                                          ((a >>> b) | 0)) |
                                                        0;
                                                      d = c << 3;
                                                      b = i[(d + 15280) >> 2];
                                                      a = i[(b + 8) >> 2];
                                                      d = (d + 15272) | 0;
                                                      m: {
                                                        if (
                                                          (a | 0) ==
                                                          (d | 0)
                                                        ) {
                                                          f = ic(c) & f;
                                                          i[3808] = f;
                                                          break m;
                                                        }
                                                        i[(a + 12) >> 2] = d;
                                                        i[(d + 8) >> 2] = a;
                                                      }
                                                      a = (b + 8) | 0;
                                                      i[(b + 4) >> 2] = g | 3;
                                                      h = (b + g) | 0;
                                                      c = c << 3;
                                                      e = (c - g) | 0;
                                                      i[(h + 4) >> 2] = e | 1;
                                                      i[(b + c) >> 2] = e;
                                                      if (k) {
                                                        c = (k >>> 3) | 0;
                                                        b =
                                                          ((c << 3) + 15272) |
                                                          0;
                                                        d = i[3813];
                                                        c = 1 << c;
                                                        n: {
                                                          if (!(c & f)) {
                                                            i[3808] = c | f;
                                                            c = b;
                                                            break n;
                                                          }
                                                          c = i[(b + 8) >> 2];
                                                        }
                                                        i[(b + 8) >> 2] = d;
                                                        i[(c + 12) >> 2] = d;
                                                        i[(d + 12) >> 2] = b;
                                                        i[(d + 8) >> 2] = c;
                                                      }
                                                      i[3813] = h;
                                                      i[3810] = e;
                                                      break a;
                                                    }
                                                    n = i[3809];
                                                    if (!n) {
                                                      break k;
                                                    }
                                                    a =
                                                      ((n & (0 - n)) + -1) | 0;
                                                    b = (a >>> 12) & 16;
                                                    c = b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 5) & 8;
                                                    c = c | b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 2) & 4;
                                                    c = c | b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 1) & 2;
                                                    c = c | b;
                                                    a = (a >>> b) | 0;
                                                    b = (a >>> 1) & 1;
                                                    b =
                                                      i[
                                                        ((((c | b) +
                                                          ((a >>> b) | 0)) <<
                                                          2) +
                                                          15536) >>
                                                          2
                                                      ];
                                                    d =
                                                      ((i[(b + 4) >> 2] & -8) -
                                                        g) |
                                                      0;
                                                    c = b;
                                                    while (1) {
                                                      o: {
                                                        a = i[(c + 16) >> 2];
                                                        if (!a) {
                                                          a = i[(c + 20) >> 2];
                                                          if (!a) {
                                                            break o;
                                                          }
                                                        }
                                                        e =
                                                          ((i[(a + 4) >> 2] &
                                                            -8) -
                                                            g) |
                                                          0;
                                                        c = e >>> 0 < d >>> 0;
                                                        d = c ? e : d;
                                                        b = c ? a : b;
                                                        c = a;
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                    m = i[(b + 24) >> 2];
                                                    e = i[(b + 12) >> 2];
                                                    if ((e | 0) != (b | 0)) {
                                                      a = i[(b + 8) >> 2];
                                                      i[(a + 12) >> 2] = e;
                                                      i[(e + 8) >> 2] = a;
                                                      break b;
                                                    }
                                                    c = (b + 20) | 0;
                                                    a = i[c >> 2];
                                                    if (!a) {
                                                      a = i[(b + 16) >> 2];
                                                      if (!a) {
                                                        break j;
                                                      }
                                                      c = (b + 16) | 0;
                                                    }
                                                    while (1) {
                                                      h = c;
                                                      e = a;
                                                      c = (a + 20) | 0;
                                                      a = i[c >> 2];
                                                      if (a) {
                                                        continue;
                                                      }
                                                      c = (e + 16) | 0;
                                                      a = i[(e + 16) >> 2];
                                                      if (a) {
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                    i[h >> 2] = 0;
                                                    break b;
                                                  }
                                                  g = -1;
                                                  if (a >>> 0 > 4294967231) {
                                                    break k;
                                                  }
                                                  b = (a + 11) | 0;
                                                  g = b & -8;
                                                  k = i[3809];
                                                  if (!k) {
                                                    break k;
                                                  }
                                                  c = (0 - g) | 0;
                                                  b = (b >>> 8) | 0;
                                                  f = 0;
                                                  p: {
                                                    if (!b) {
                                                      break p;
                                                    }
                                                    f = 31;
                                                    if (g >>> 0 > 16777215) {
                                                      break p;
                                                    }
                                                    d =
                                                      ((b + 1048320) >>> 16) &
                                                      8;
                                                    b = b << d;
                                                    a =
                                                      ((b + 520192) >>> 16) & 4;
                                                    f = b << a;
                                                    b =
                                                      ((f + 245760) >>> 16) & 2;
                                                    a =
                                                      ((((f << b) >>> 15) | 0) -
                                                        (b | (a | d))) |
                                                      0;
                                                    f =
                                                      (((a << 1) |
                                                        ((g >>> (a + 21)) &
                                                          1)) +
                                                        28) |
                                                      0;
                                                  }
                                                  d =
                                                    i[((f << 2) + 15536) >> 2];
                                                  q: {
                                                    r: {
                                                      s: {
                                                        if (!d) {
                                                          a = 0;
                                                          break s;
                                                        }
                                                        b =
                                                          g <<
                                                          ((f | 0) == 31
                                                            ? 0
                                                            : (25 -
                                                                ((f >>> 1) |
                                                                  0)) |
                                                              0);
                                                        a = 0;
                                                        while (1) {
                                                          t: {
                                                            h =
                                                              ((i[
                                                                (d + 4) >> 2
                                                              ] &
                                                                -8) -
                                                                g) |
                                                              0;
                                                            if (
                                                              h >>> 0 >=
                                                              c >>> 0
                                                            ) {
                                                              break t;
                                                            }
                                                            e = d;
                                                            c = h;
                                                            if (c) {
                                                              break t;
                                                            }
                                                            c = 0;
                                                            a = d;
                                                            break r;
                                                          }
                                                          h = i[(d + 20) >> 2];
                                                          d =
                                                            i[
                                                              (((((b >>> 29) &
                                                                4) +
                                                                d) |
                                                                0) +
                                                                16) >>
                                                                2
                                                            ];
                                                          a = h
                                                            ? (h | 0) == (d | 0)
                                                              ? a
                                                              : h
                                                            : a;
                                                          b =
                                                            b << ((d | 0) != 0);
                                                          if (d) {
                                                            continue;
                                                          }
                                                          break;
                                                        }
                                                      }
                                                      if (!(a | e)) {
                                                        a = 2 << f;
                                                        a = ((0 - a) | a) & k;
                                                        if (!a) {
                                                          break k;
                                                        }
                                                        a =
                                                          ((a & (0 - a)) + -1) |
                                                          0;
                                                        b = (a >>> 12) & 16;
                                                        d = b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 5) & 8;
                                                        d = d | b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 2) & 4;
                                                        d = d | b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 1) & 2;
                                                        d = d | b;
                                                        a = (a >>> b) | 0;
                                                        b = (a >>> 1) & 1;
                                                        a =
                                                          i[
                                                            ((((d | b) +
                                                              ((a >>> b) |
                                                                0)) <<
                                                              2) +
                                                              15536) >>
                                                              2
                                                          ];
                                                      }
                                                      if (!a) {
                                                        break q;
                                                      }
                                                    }
                                                    while (1) {
                                                      d =
                                                        ((i[(a + 4) >> 2] &
                                                          -8) -
                                                          g) |
                                                        0;
                                                      b = d >>> 0 < c >>> 0;
                                                      c = b ? d : c;
                                                      e = b ? a : e;
                                                      b = i[(a + 16) >> 2];
                                                      if (b) {
                                                        a = b;
                                                      } else {
                                                        a = i[(a + 20) >> 2];
                                                      }
                                                      if (a) {
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                  }
                                                  if (
                                                    !e |
                                                    (c >>> 0 >=
                                                      (i[3810] - g) >>> 0)
                                                  ) {
                                                    break k;
                                                  }
                                                  h = i[(e + 24) >> 2];
                                                  b = i[(e + 12) >> 2];
                                                  if ((e | 0) != (b | 0)) {
                                                    a = i[(e + 8) >> 2];
                                                    i[(a + 12) >> 2] = b;
                                                    i[(b + 8) >> 2] = a;
                                                    break c;
                                                  }
                                                  d = (e + 20) | 0;
                                                  a = i[d >> 2];
                                                  if (!a) {
                                                    a = i[(e + 16) >> 2];
                                                    if (!a) {
                                                      break i;
                                                    }
                                                    d = (e + 16) | 0;
                                                  }
                                                  while (1) {
                                                    f = d;
                                                    b = a;
                                                    d = (a + 20) | 0;
                                                    a = i[d >> 2];
                                                    if (a) {
                                                      continue;
                                                    }
                                                    d = (b + 16) | 0;
                                                    a = i[(b + 16) >> 2];
                                                    if (a) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                  i[f >> 2] = 0;
                                                  break c;
                                                }
                                                b = i[3810];
                                                if (b >>> 0 >= g >>> 0) {
                                                  a = i[3813];
                                                  c = (b - g) | 0;
                                                  u: {
                                                    if (c >>> 0 >= 16) {
                                                      i[3810] = c;
                                                      d = (a + g) | 0;
                                                      i[3813] = d;
                                                      i[(d + 4) >> 2] = c | 1;
                                                      i[(a + b) >> 2] = c;
                                                      i[(a + 4) >> 2] = g | 3;
                                                      break u;
                                                    }
                                                    i[3813] = 0;
                                                    i[3810] = 0;
                                                    i[(a + 4) >> 2] = b | 3;
                                                    b = (a + b) | 0;
                                                    i[(b + 4) >> 2] =
                                                      i[(b + 4) >> 2] | 1;
                                                  }
                                                  a = (a + 8) | 0;
                                                  break a;
                                                }
                                                d = i[3811];
                                                if (d >>> 0 > g >>> 0) {
                                                  b = (d - g) | 0;
                                                  i[3811] = b;
                                                  a = i[3814];
                                                  c = (a + g) | 0;
                                                  i[3814] = c;
                                                  i[(c + 4) >> 2] = b | 1;
                                                  i[(a + 4) >> 2] = g | 3;
                                                  a = (a + 8) | 0;
                                                  break a;
                                                }
                                                a = 0;
                                                e = (g + 47) | 0;
                                                c = e;
                                                if (i[3926]) {
                                                  b = i[3928];
                                                } else {
                                                  i[3929] = -1;
                                                  i[3930] = -1;
                                                  i[3927] = 4096;
                                                  i[3928] = 4096;
                                                  i[3926] =
                                                    ((o + 12) & -16) ^
                                                    1431655768;
                                                  i[3931] = 0;
                                                  i[3919] = 0;
                                                  b = 4096;
                                                }
                                                f = (c + b) | 0;
                                                h = (0 - b) | 0;
                                                c = f & h;
                                                if (c >>> 0 <= g >>> 0) {
                                                  break a;
                                                }
                                                b = i[3918];
                                                if (b) {
                                                  k = i[3916];
                                                  m = (k + c) | 0;
                                                  if (
                                                    (m >>> 0 <= k >>> 0) |
                                                    (m >>> 0 > b >>> 0)
                                                  ) {
                                                    break a;
                                                  }
                                                }
                                                if (j[15676] & 4) {
                                                  break f;
                                                }
                                                v: {
                                                  w: {
                                                    b = i[3814];
                                                    if (b) {
                                                      a = 15680;
                                                      while (1) {
                                                        k = i[a >> 2];
                                                        if (
                                                          (k +
                                                            i[(a + 4) >> 2]) >>>
                                                            0 >
                                                          b >>> 0
                                                            ? k >>> 0 <= b >>> 0
                                                            : 0
                                                        ) {
                                                          break w;
                                                        }
                                                        a = i[(a + 8) >> 2];
                                                        if (a) {
                                                          continue;
                                                        }
                                                        break;
                                                      }
                                                    }
                                                    b = ia(0);
                                                    if ((b | 0) == -1) {
                                                      break g;
                                                    }
                                                    f = c;
                                                    a = i[3927];
                                                    d = (a + -1) | 0;
                                                    if (d & b) {
                                                      f =
                                                        (((c - b) | 0) +
                                                          ((b + d) & (0 - a))) |
                                                        0;
                                                    }
                                                    if (
                                                      (f >>> 0 <= g >>> 0) |
                                                      (f >>> 0 > 2147483646)
                                                    ) {
                                                      break g;
                                                    }
                                                    a = i[3918];
                                                    if (a) {
                                                      d = i[3916];
                                                      h = (d + f) | 0;
                                                      if (
                                                        (h >>> 0 <= d >>> 0) |
                                                        (h >>> 0 > a >>> 0)
                                                      ) {
                                                        break g;
                                                      }
                                                    }
                                                    a = ia(f);
                                                    if ((b | 0) != (a | 0)) {
                                                      break v;
                                                    }
                                                    break e;
                                                  }
                                                  f = h & (f - d);
                                                  if (f >>> 0 > 2147483646) {
                                                    break g;
                                                  }
                                                  b = ia(f);
                                                  if (
                                                    (b | 0) ==
                                                    ((i[a >> 2] +
                                                      i[(a + 4) >> 2]) |
                                                      0)
                                                  ) {
                                                    break h;
                                                  }
                                                  a = b;
                                                }
                                                if (
                                                  !(
                                                    ((a | 0) == -1) |
                                                    ((g + 48) >>> 0 <= f >>> 0)
                                                  )
                                                ) {
                                                  b = i[3928];
                                                  b =
                                                    (b + ((e - f) | 0)) &
                                                    (0 - b);
                                                  if (b >>> 0 > 2147483646) {
                                                    b = a;
                                                    break e;
                                                  }
                                                  if ((ia(b) | 0) != -1) {
                                                    f = (b + f) | 0;
                                                    b = a;
                                                    break e;
                                                  }
                                                  ia((0 - f) | 0);
                                                  break g;
                                                }
                                                b = a;
                                                if ((a | 0) != -1) {
                                                  break e;
                                                }
                                                break g;
                                              }
                                              e = 0;
                                              break b;
                                            }
                                            b = 0;
                                            break c;
                                          }
                                          if ((b | 0) != -1) {
                                            break e;
                                          }
                                        }
                                        i[3919] = i[3919] | 4;
                                      }
                                      if (c >>> 0 > 2147483646) {
                                        break d;
                                      }
                                      b = ia(c);
                                      a = ia(0);
                                      if (
                                        (b >>> 0 >= a >>> 0) |
                                        ((b | 0) == -1) |
                                        ((a | 0) == -1)
                                      ) {
                                        break d;
                                      }
                                      f = (a - b) | 0;
                                      if (f >>> 0 <= (g + 40) >>> 0) {
                                        break d;
                                      }
                                    }
                                    a = (i[3916] + f) | 0;
                                    i[3916] = a;
                                    if (a >>> 0 > l[3917]) {
                                      i[3917] = a;
                                    }
                                    x: {
                                      y: {
                                        z: {
                                          c = i[3814];
                                          if (c) {
                                            a = 15680;
                                            while (1) {
                                              d = i[a >> 2];
                                              e = i[(a + 4) >> 2];
                                              if (((d + e) | 0) == (b | 0)) {
                                                break z;
                                              }
                                              a = i[(a + 8) >> 2];
                                              if (a) {
                                                continue;
                                              }
                                              break;
                                            }
                                            break y;
                                          }
                                          a = i[3812];
                                          if (!(b >>> 0 >= a >>> 0 ? a : 0)) {
                                            i[3812] = b;
                                          }
                                          a = 0;
                                          i[3921] = f;
                                          i[3920] = b;
                                          i[3816] = -1;
                                          i[3817] = i[3926];
                                          i[3923] = 0;
                                          while (1) {
                                            c = a << 3;
                                            d = (c + 15272) | 0;
                                            i[(c + 15280) >> 2] = d;
                                            i[(c + 15284) >> 2] = d;
                                            a = (a + 1) | 0;
                                            if ((a | 0) != 32) {
                                              continue;
                                            }
                                            break;
                                          }
                                          a = (f + -40) | 0;
                                          c = (b + 8) & 7 ? (-8 - b) & 7 : 0;
                                          d = (a - c) | 0;
                                          i[3811] = d;
                                          c = (b + c) | 0;
                                          i[3814] = c;
                                          i[(c + 4) >> 2] = d | 1;
                                          i[(((a + b) | 0) + 4) >> 2] = 40;
                                          i[3815] = i[3930];
                                          break x;
                                        }
                                        if (
                                          (j[(a + 12) | 0] & 8) |
                                          (b >>> 0 <= c >>> 0) |
                                          (d >>> 0 > c >>> 0)
                                        ) {
                                          break y;
                                        }
                                        i[(a + 4) >> 2] = e + f;
                                        a = (c + 8) & 7 ? (-8 - c) & 7 : 0;
                                        b = (a + c) | 0;
                                        i[3814] = b;
                                        d = (i[3811] + f) | 0;
                                        a = (d - a) | 0;
                                        i[3811] = a;
                                        i[(b + 4) >> 2] = a | 1;
                                        i[(((c + d) | 0) + 4) >> 2] = 40;
                                        i[3815] = i[3930];
                                        break x;
                                      }
                                      e = i[3812];
                                      if (b >>> 0 < e >>> 0) {
                                        i[3812] = b;
                                        e = 0;
                                      }
                                      d = (b + f) | 0;
                                      a = 15680;
                                      A: {
                                        B: {
                                          C: {
                                            D: {
                                              E: {
                                                F: {
                                                  while (1) {
                                                    if ((d | 0) != i[a >> 2]) {
                                                      a = i[(a + 8) >> 2];
                                                      if (a) {
                                                        continue;
                                                      }
                                                      break F;
                                                    }
                                                    break;
                                                  }
                                                  if (!(j[(a + 12) | 0] & 8)) {
                                                    break E;
                                                  }
                                                }
                                                a = 15680;
                                                while (1) {
                                                  d = i[a >> 2];
                                                  if (d >>> 0 <= c >>> 0) {
                                                    e =
                                                      (d + i[(a + 4) >> 2]) | 0;
                                                    if (e >>> 0 > c >>> 0) {
                                                      break D;
                                                    }
                                                  }
                                                  a = i[(a + 8) >> 2];
                                                  continue;
                                                }
                                              }
                                              i[a >> 2] = b;
                                              i[(a + 4) >> 2] =
                                                i[(a + 4) >> 2] + f;
                                              m =
                                                (((b + 8) & 7
                                                  ? (-8 - b) & 7
                                                  : 0) +
                                                  b) |
                                                0;
                                              i[(m + 4) >> 2] = g | 3;
                                              b =
                                                (d +
                                                  ((d + 8) & 7
                                                    ? (-8 - d) & 7
                                                    : 0)) |
                                                0;
                                              a = (((b - m) | 0) - g) | 0;
                                              h = (g + m) | 0;
                                              if ((b | 0) == (c | 0)) {
                                                i[3814] = h;
                                                a = (i[3811] + a) | 0;
                                                i[3811] = a;
                                                i[(h + 4) >> 2] = a | 1;
                                                break B;
                                              }
                                              if (i[3813] == (b | 0)) {
                                                i[3813] = h;
                                                a = (i[3810] + a) | 0;
                                                i[3810] = a;
                                                i[(h + 4) >> 2] = a | 1;
                                                i[(a + h) >> 2] = a;
                                                break B;
                                              }
                                              c = i[(b + 4) >> 2];
                                              if ((c & 3) == 1) {
                                                n = c & -8;
                                                G: {
                                                  if (c >>> 0 <= 255) {
                                                    e = (c >>> 3) | 0;
                                                    c = i[(b + 8) >> 2];
                                                    d = i[(b + 12) >> 2];
                                                    if ((d | 0) == (c | 0)) {
                                                      i[3808] = i[3808] & ic(e);
                                                      break G;
                                                    }
                                                    i[(c + 12) >> 2] = d;
                                                    i[(d + 8) >> 2] = c;
                                                    break G;
                                                  }
                                                  k = i[(b + 24) >> 2];
                                                  f = i[(b + 12) >> 2];
                                                  H: {
                                                    if ((f | 0) != (b | 0)) {
                                                      c = i[(b + 8) >> 2];
                                                      i[(c + 12) >> 2] = f;
                                                      i[(f + 8) >> 2] = c;
                                                      break H;
                                                    }
                                                    I: {
                                                      d = (b + 20) | 0;
                                                      g = i[d >> 2];
                                                      if (g) {
                                                        break I;
                                                      }
                                                      d = (b + 16) | 0;
                                                      g = i[d >> 2];
                                                      if (g) {
                                                        break I;
                                                      }
                                                      f = 0;
                                                      break H;
                                                    }
                                                    while (1) {
                                                      c = d;
                                                      f = g;
                                                      d = (g + 20) | 0;
                                                      g = i[d >> 2];
                                                      if (g) {
                                                        continue;
                                                      }
                                                      d = (f + 16) | 0;
                                                      g = i[(f + 16) >> 2];
                                                      if (g) {
                                                        continue;
                                                      }
                                                      break;
                                                    }
                                                    i[c >> 2] = 0;
                                                  }
                                                  if (!k) {
                                                    break G;
                                                  }
                                                  c = i[(b + 28) >> 2];
                                                  d = ((c << 2) + 15536) | 0;
                                                  J: {
                                                    if (i[d >> 2] == (b | 0)) {
                                                      i[d >> 2] = f;
                                                      if (f) {
                                                        break J;
                                                      }
                                                      i[3809] = i[3809] & ic(c);
                                                      break G;
                                                    }
                                                    i[
                                                      (k +
                                                        (i[(k + 16) >> 2] ==
                                                        (b | 0)
                                                          ? 16
                                                          : 20)) >>
                                                        2
                                                    ] = f;
                                                    if (!f) {
                                                      break G;
                                                    }
                                                  }
                                                  i[(f + 24) >> 2] = k;
                                                  c = i[(b + 16) >> 2];
                                                  if (c) {
                                                    i[(f + 16) >> 2] = c;
                                                    i[(c + 24) >> 2] = f;
                                                  }
                                                  c = i[(b + 20) >> 2];
                                                  if (!c) {
                                                    break G;
                                                  }
                                                  i[(f + 20) >> 2] = c;
                                                  i[(c + 24) >> 2] = f;
                                                }
                                                b = (b + n) | 0;
                                                a = (a + n) | 0;
                                              }
                                              i[(b + 4) >> 2] =
                                                i[(b + 4) >> 2] & -2;
                                              i[(h + 4) >> 2] = a | 1;
                                              i[(a + h) >> 2] = a;
                                              if (a >>> 0 <= 255) {
                                                b = (a >>> 3) | 0;
                                                a = ((b << 3) + 15272) | 0;
                                                c = i[3808];
                                                b = 1 << b;
                                                K: {
                                                  if (!(c & b)) {
                                                    i[3808] = b | c;
                                                    b = a;
                                                    break K;
                                                  }
                                                  b = i[(a + 8) >> 2];
                                                }
                                                i[(a + 8) >> 2] = h;
                                                i[(b + 12) >> 2] = h;
                                                i[(h + 12) >> 2] = a;
                                                i[(h + 8) >> 2] = b;
                                                break B;
                                              }
                                              c = h;
                                              d = (a >>> 8) | 0;
                                              b = 0;
                                              L: {
                                                if (!d) {
                                                  break L;
                                                }
                                                b = 31;
                                                if (a >>> 0 > 16777215) {
                                                  break L;
                                                }
                                                e = ((d + 1048320) >>> 16) & 8;
                                                d = d << e;
                                                b = ((d + 520192) >>> 16) & 4;
                                                g = d << b;
                                                d = ((g + 245760) >>> 16) & 2;
                                                b =
                                                  ((((g << d) >>> 15) | 0) -
                                                    (d | (b | e))) |
                                                  0;
                                                b =
                                                  (((b << 1) |
                                                    ((a >>> (b + 21)) & 1)) +
                                                    28) |
                                                  0;
                                              }
                                              i[(c + 28) >> 2] = b;
                                              i[(h + 16) >> 2] = 0;
                                              i[(h + 20) >> 2] = 0;
                                              c = ((b << 2) + 15536) | 0;
                                              d = i[3809];
                                              e = 1 << b;
                                              M: {
                                                if (!(d & e)) {
                                                  i[3809] = d | e;
                                                  i[c >> 2] = h;
                                                  break M;
                                                }
                                                d =
                                                  a <<
                                                  ((b | 0) == 31
                                                    ? 0
                                                    : (25 - ((b >>> 1) | 0)) |
                                                      0);
                                                b = i[c >> 2];
                                                while (1) {
                                                  c = b;
                                                  if (
                                                    (i[(b + 4) >> 2] & -8) ==
                                                    (a | 0)
                                                  ) {
                                                    break C;
                                                  }
                                                  b = (d >>> 29) | 0;
                                                  d = d << 1;
                                                  e = ((b & 4) + c) | 0;
                                                  b = i[(e + 16) >> 2];
                                                  if (b) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                                i[(e + 16) >> 2] = h;
                                              }
                                              i[(h + 24) >> 2] = c;
                                              i[(h + 12) >> 2] = h;
                                              i[(h + 8) >> 2] = h;
                                              break B;
                                            }
                                            a = (f + -40) | 0;
                                            d = (b + 8) & 7 ? (-8 - b) & 7 : 0;
                                            h = (a - d) | 0;
                                            i[3811] = h;
                                            d = (b + d) | 0;
                                            i[3814] = d;
                                            i[(d + 4) >> 2] = h | 1;
                                            i[(((a + b) | 0) + 4) >> 2] = 40;
                                            i[3815] = i[3930];
                                            a =
                                              (((e +
                                                ((e + -39) & 7
                                                  ? (39 - e) & 7
                                                  : 0)) |
                                                0) +
                                                -47) |
                                              0;
                                            d =
                                              a >>> 0 < (c + 16) >>> 0 ? c : a;
                                            i[(d + 4) >> 2] = 27;
                                            a = i[3923];
                                            i[(d + 16) >> 2] = i[3922];
                                            i[(d + 20) >> 2] = a;
                                            a = i[3921];
                                            i[(d + 8) >> 2] = i[3920];
                                            i[(d + 12) >> 2] = a;
                                            i[3922] = d + 8;
                                            i[3921] = f;
                                            i[3920] = b;
                                            i[3923] = 0;
                                            a = (d + 24) | 0;
                                            while (1) {
                                              i[(a + 4) >> 2] = 7;
                                              b = (a + 8) | 0;
                                              a = (a + 4) | 0;
                                              if (e >>> 0 > b >>> 0) {
                                                continue;
                                              }
                                              break;
                                            }
                                            if ((c | 0) == (d | 0)) {
                                              break x;
                                            }
                                            i[(d + 4) >> 2] =
                                              i[(d + 4) >> 2] & -2;
                                            e = (d - c) | 0;
                                            i[(c + 4) >> 2] = e | 1;
                                            i[d >> 2] = e;
                                            if (e >>> 0 <= 255) {
                                              b = (e >>> 3) | 0;
                                              a = ((b << 3) + 15272) | 0;
                                              d = i[3808];
                                              b = 1 << b;
                                              N: {
                                                if (!(d & b)) {
                                                  i[3808] = b | d;
                                                  b = a;
                                                  break N;
                                                }
                                                b = i[(a + 8) >> 2];
                                              }
                                              i[(a + 8) >> 2] = c;
                                              i[(b + 12) >> 2] = c;
                                              i[(c + 12) >> 2] = a;
                                              i[(c + 8) >> 2] = b;
                                              break x;
                                            }
                                            i[(c + 16) >> 2] = 0;
                                            i[(c + 20) >> 2] = 0;
                                            b = c;
                                            d = (e >>> 8) | 0;
                                            a = 0;
                                            O: {
                                              if (!d) {
                                                break O;
                                              }
                                              a = 31;
                                              if (e >>> 0 > 16777215) {
                                                break O;
                                              }
                                              f = ((d + 1048320) >>> 16) & 8;
                                              d = d << f;
                                              a = ((d + 520192) >>> 16) & 4;
                                              h = d << a;
                                              d = ((h + 245760) >>> 16) & 2;
                                              a =
                                                ((((h << d) >>> 15) | 0) -
                                                  (d | (a | f))) |
                                                0;
                                              a =
                                                (((a << 1) |
                                                  ((e >>> (a + 21)) & 1)) +
                                                  28) |
                                                0;
                                            }
                                            i[(b + 28) >> 2] = a;
                                            b = ((a << 2) + 15536) | 0;
                                            d = i[3809];
                                            f = 1 << a;
                                            P: {
                                              if (!(d & f)) {
                                                i[3809] = d | f;
                                                i[b >> 2] = c;
                                                i[(c + 24) >> 2] = b;
                                                break P;
                                              }
                                              a =
                                                e <<
                                                ((a | 0) == 31
                                                  ? 0
                                                  : (25 - ((a >>> 1) | 0)) | 0);
                                              b = i[b >> 2];
                                              while (1) {
                                                d = b;
                                                if (
                                                  (e | 0) ==
                                                  (i[(b + 4) >> 2] & -8)
                                                ) {
                                                  break A;
                                                }
                                                b = (a >>> 29) | 0;
                                                a = a << 1;
                                                f = (d + (b & 4)) | 0;
                                                b = i[(f + 16) >> 2];
                                                if (b) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              i[(f + 16) >> 2] = c;
                                              i[(c + 24) >> 2] = d;
                                            }
                                            i[(c + 12) >> 2] = c;
                                            i[(c + 8) >> 2] = c;
                                            break x;
                                          }
                                          a = i[(c + 8) >> 2];
                                          i[(a + 12) >> 2] = h;
                                          i[(c + 8) >> 2] = h;
                                          i[(h + 24) >> 2] = 0;
                                          i[(h + 12) >> 2] = c;
                                          i[(h + 8) >> 2] = a;
                                        }
                                        a = (m + 8) | 0;
                                        break a;
                                      }
                                      a = i[(d + 8) >> 2];
                                      i[(a + 12) >> 2] = c;
                                      i[(d + 8) >> 2] = c;
                                      i[(c + 24) >> 2] = 0;
                                      i[(c + 12) >> 2] = d;
                                      i[(c + 8) >> 2] = a;
                                    }
                                    a = i[3811];
                                    if (a >>> 0 <= g >>> 0) {
                                      break d;
                                    }
                                    b = (a - g) | 0;
                                    i[3811] = b;
                                    a = i[3814];
                                    c = (a + g) | 0;
                                    i[3814] = c;
                                    i[(c + 4) >> 2] = b | 1;
                                    i[(a + 4) >> 2] = g | 3;
                                    a = (a + 8) | 0;
                                    break a;
                                  }
                                  i[3790] = 48;
                                  a = 0;
                                  break a;
                                }
                                Q: {
                                  if (!h) {
                                    break Q;
                                  }
                                  a = i[(e + 28) >> 2];
                                  d = ((a << 2) + 15536) | 0;
                                  R: {
                                    if (i[d >> 2] == (e | 0)) {
                                      i[d >> 2] = b;
                                      if (b) {
                                        break R;
                                      }
                                      k = ic(a) & k;
                                      i[3809] = k;
                                      break Q;
                                    }
                                    i[
                                      (h +
                                        (i[(h + 16) >> 2] == (e | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = b;
                                    if (!b) {
                                      break Q;
                                    }
                                  }
                                  i[(b + 24) >> 2] = h;
                                  a = i[(e + 16) >> 2];
                                  if (a) {
                                    i[(b + 16) >> 2] = a;
                                    i[(a + 24) >> 2] = b;
                                  }
                                  a = i[(e + 20) >> 2];
                                  if (!a) {
                                    break Q;
                                  }
                                  i[(b + 20) >> 2] = a;
                                  i[(a + 24) >> 2] = b;
                                }
                                S: {
                                  if (c >>> 0 <= 15) {
                                    a = (c + g) | 0;
                                    i[(e + 4) >> 2] = a | 3;
                                    a = (a + e) | 0;
                                    i[(a + 4) >> 2] = i[(a + 4) >> 2] | 1;
                                    break S;
                                  }
                                  i[(e + 4) >> 2] = g | 3;
                                  d = (e + g) | 0;
                                  i[(d + 4) >> 2] = c | 1;
                                  i[(c + d) >> 2] = c;
                                  if (c >>> 0 <= 255) {
                                    b = (c >>> 3) | 0;
                                    a = ((b << 3) + 15272) | 0;
                                    c = i[3808];
                                    b = 1 << b;
                                    T: {
                                      if (!(c & b)) {
                                        i[3808] = b | c;
                                        b = a;
                                        break T;
                                      }
                                      b = i[(a + 8) >> 2];
                                    }
                                    i[(a + 8) >> 2] = d;
                                    i[(b + 12) >> 2] = d;
                                    i[(d + 12) >> 2] = a;
                                    i[(d + 8) >> 2] = b;
                                    break S;
                                  }
                                  b = d;
                                  g = (c >>> 8) | 0;
                                  a = 0;
                                  U: {
                                    if (!g) {
                                      break U;
                                    }
                                    a = 31;
                                    if (c >>> 0 > 16777215) {
                                      break U;
                                    }
                                    f = ((g + 1048320) >>> 16) & 8;
                                    g = g << f;
                                    a = ((g + 520192) >>> 16) & 4;
                                    h = g << a;
                                    g = ((h + 245760) >>> 16) & 2;
                                    a =
                                      ((((h << g) >>> 15) | 0) -
                                        (g | (a | f))) |
                                      0;
                                    a =
                                      (((a << 1) | ((c >>> (a + 21)) & 1)) +
                                        28) |
                                      0;
                                  }
                                  i[(b + 28) >> 2] = a;
                                  i[(d + 16) >> 2] = 0;
                                  i[(d + 20) >> 2] = 0;
                                  b = ((a << 2) + 15536) | 0;
                                  V: {
                                    g = 1 << a;
                                    W: {
                                      if (!(g & k)) {
                                        i[3809] = g | k;
                                        i[b >> 2] = d;
                                        break W;
                                      }
                                      a =
                                        c <<
                                        ((a | 0) == 31
                                          ? 0
                                          : (25 - ((a >>> 1) | 0)) | 0);
                                      g = i[b >> 2];
                                      while (1) {
                                        b = g;
                                        if ((i[(b + 4) >> 2] & -8) == (c | 0)) {
                                          break V;
                                        }
                                        g = (a >>> 29) | 0;
                                        a = a << 1;
                                        f = ((g & 4) + b) | 0;
                                        g = i[(f + 16) >> 2];
                                        if (g) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[(f + 16) >> 2] = d;
                                    }
                                    i[(d + 24) >> 2] = b;
                                    i[(d + 12) >> 2] = d;
                                    i[(d + 8) >> 2] = d;
                                    break S;
                                  }
                                  a = i[(b + 8) >> 2];
                                  i[(a + 12) >> 2] = d;
                                  i[(b + 8) >> 2] = d;
                                  i[(d + 24) >> 2] = 0;
                                  i[(d + 12) >> 2] = b;
                                  i[(d + 8) >> 2] = a;
                                }
                                a = (e + 8) | 0;
                                break a;
                              }
                              X: {
                                if (!m) {
                                  break X;
                                }
                                a = i[(b + 28) >> 2];
                                c = ((a << 2) + 15536) | 0;
                                Y: {
                                  if (i[c >> 2] == (b | 0)) {
                                    i[c >> 2] = e;
                                    if (e) {
                                      break Y;
                                    }
                                    i[3809] = ic(a) & n;
                                    break X;
                                  }
                                  i[
                                    (m +
                                      (i[(m + 16) >> 2] == (b | 0)
                                        ? 16
                                        : 20)) >>
                                      2
                                  ] = e;
                                  if (!e) {
                                    break X;
                                  }
                                }
                                i[(e + 24) >> 2] = m;
                                a = i[(b + 16) >> 2];
                                if (a) {
                                  i[(e + 16) >> 2] = a;
                                  i[(a + 24) >> 2] = e;
                                }
                                a = i[(b + 20) >> 2];
                                if (!a) {
                                  break X;
                                }
                                i[(e + 20) >> 2] = a;
                                i[(a + 24) >> 2] = e;
                              }
                              Z: {
                                if (d >>> 0 <= 15) {
                                  a = (d + g) | 0;
                                  i[(b + 4) >> 2] = a | 3;
                                  a = (a + b) | 0;
                                  i[(a + 4) >> 2] = i[(a + 4) >> 2] | 1;
                                  break Z;
                                }
                                i[(b + 4) >> 2] = g | 3;
                                g = (b + g) | 0;
                                i[(g + 4) >> 2] = d | 1;
                                i[(d + g) >> 2] = d;
                                if (k) {
                                  c = (k >>> 3) | 0;
                                  a = ((c << 3) + 15272) | 0;
                                  e = i[3813];
                                  c = 1 << c;
                                  _: {
                                    if (!(c & f)) {
                                      i[3808] = c | f;
                                      c = a;
                                      break _;
                                    }
                                    c = i[(a + 8) >> 2];
                                  }
                                  i[(a + 8) >> 2] = e;
                                  i[(c + 12) >> 2] = e;
                                  i[(e + 12) >> 2] = a;
                                  i[(e + 8) >> 2] = c;
                                }
                                i[3813] = g;
                                i[3810] = d;
                              }
                              a = (b + 8) | 0;
                            }
                            H = (o + 16) | 0;
                            return a | 0;
                          }
                          function yb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0;
                            r = (H - 32) | 0;
                            H = r;
                            f = i[(a + 44) >> 2];
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      if (!b) {
                                        if (i[(a + 484) >> 2]) {
                                          break e;
                                        }
                                        b = i[(a + 8) >> 2];
                                        if ((b | 0) <= 9) {
                                          j = h[((b << 1) + 12480) >> 1] << 1;
                                        }
                                        b = h[(a + 102) >> 1];
                                        f = h[(a + 98) >> 1];
                                        d = h[(a + 100) >> 1];
                                        f: {
                                          if ((f | 0) < (d | 0)) {
                                            if ((d | 0) < (b | 0)) {
                                              break f;
                                            }
                                            d = (f | 0) < (b | 0) ? b : f;
                                            break f;
                                          }
                                          if ((b | 0) < (d | 0)) {
                                            break f;
                                          }
                                          d = (b | 0) < (f | 0) ? b : f;
                                        }
                                        b = h[(a + 96) >> 1];
                                        if ((d | 0) < (b | 0)) {
                                          h[(a + 96) >> 1] = d;
                                          b = d;
                                        }
                                        f = Z(
                                          i[(a + 52) >> 2],
                                          i[(a + 12) >> 2]
                                        );
                                        d = i[(a + 48) >> 2];
                                        qa(
                                          d,
                                          (d + (i[(a + 12) >> 2] << 1)) | 0,
                                          (((i[(a + 16) >> 2] +
                                            (i[(a + 32) >> 2] << 1)) <<
                                            1) +
                                            24) |
                                            0
                                        );
                                        e =
                                          (o(i[(a + 108) >> 2], 1664525) +
                                            1013904223) |
                                          0;
                                        i[(a + 108) >> 2] = e;
                                        b =
                                          o(
                                            (((b | 0) < 54 ? b : 54) << 25) >>
                                              16,
                                            j
                                          ) >> 16;
                                        n = i[(a + 12) >> 2];
                                        if ((n | 0) >= 1) {
                                          d = i[(a + 28) >> 2];
                                          p = i[(a + 32) >> 2];
                                          g = o(
                                            e >> 16,
                                            ((i[(a + 8) >> 2] << 16) + 65536) >>
                                              16
                                          );
                                          g =
                                            (i[(a + 92) >> 2] +
                                              ((((g - (g >> 3)) << 2) +
                                                32768) >>
                                                30)) |
                                            0;
                                          p = (g | 0) > (p | 0) ? p : g;
                                          p = (p | 0) < (d | 0) ? d : p;
                                          j =
                                            (o(
                                              f,
                                              o(
                                                (2147418112 -
                                                  ((o(b, b) << 1) & -65536)) >>
                                                  16,
                                                j
                                              ) >> 16
                                            ) <<
                                              1) >>
                                            16;
                                          f = i[(a + 52) >> 2];
                                          d = 0;
                                          while (1) {
                                            e =
                                              (o(e, 1664525) + 1013904223) | 0;
                                            g = o(j, e >> 16);
                                            h[(f + (d << 1)) >> 1] =
                                              ((((g - (g >> 3)) | 0) -
                                                -8192) >>>
                                                14) +
                                              (o(
                                                b,
                                                h[(f + ((d - p) << 1)) >> 1]
                                              ) >>>
                                                15);
                                            d = (d + 1) | 0;
                                            if ((n | 0) != (d | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          i[(a + 108) >> 2] = e;
                                        }
                                        f = i[(a + 60) >> 2];
                                        ca(32113, f, f, i[(a + 24) >> 2]);
                                        _(
                                          (i[(a + 52) >> 2] -
                                            (i[(a + 16) >> 2] << 1)) |
                                            0,
                                          i[(a + 60) >> 2],
                                          c,
                                          i[(a + 12) >> 2],
                                          i[(a + 24) >> 2],
                                          i[(a + 64) >> 2]
                                        );
                                        sa(
                                          c,
                                          c,
                                          i[(a + 12) >> 2],
                                          1,
                                          (a + 68) | 0
                                        );
                                        d = 0;
                                        i[(a + 4) >> 2] = 0;
                                        i[(a + 8) >> 2] = i[(a + 8) >> 2] + 1;
                                        c = i[(a + 104) >> 2];
                                        i[(a + 104) >> 2] = c + 1;
                                        h[((((c << 1) + a) | 0) + 98) >> 1] =
                                          (b + 256) >>> 9;
                                        if ((c | 0) < 2) {
                                          break c;
                                        }
                                        i[(a + 104) >> 2] = 0;
                                        break c;
                                      }
                                      if (!i[(a + 112) >> 2]) {
                                        break d;
                                      }
                                      if (
                                        ((i[(b + 20) >> 2]
                                          ? -1
                                          : (((i[(b + 4) >> 2] -
                                              i[(b + 12) >> 2]) |
                                              0) -
                                              (i[(b + 8) >> 2] << 3)) |
                                            0) |
                                          0) <
                                        5
                                      ) {
                                        d = -1;
                                        break c;
                                      }
                                      j = (a + 128) | 0;
                                      while (1) {
                                        g: {
                                          if (!V(b, 1)) {
                                            break g;
                                          }
                                          oa(
                                            b,
                                            (i[((V(b, 3) << 2) + 12512) >> 2] +
                                              -4) |
                                              0
                                          );
                                          if (
                                            ((i[(b + 20) >> 2]
                                              ? -1
                                              : (((i[(b + 4) >> 2] -
                                                  i[(b + 12) >> 2]) |
                                                  0) -
                                                  (i[(b + 8) >> 2] << 3)) |
                                                0) |
                                              0) <
                                            5
                                          ) {
                                            d = -1;
                                            break c;
                                          }
                                          if (!V(b, 1)) {
                                            break g;
                                          }
                                          oa(
                                            b,
                                            (i[((V(b, 3) << 2) + 12512) >> 2] +
                                              -4) |
                                              0
                                          );
                                          if (!V(b, 1)) {
                                            break g;
                                          }
                                          i[(r + 16) >> 2] = 12595;
                                          Y(i[3524], 12810, (r + 16) | 0);
                                          d = -2;
                                          break c;
                                        }
                                        if (
                                          ((i[(b + 20) >> 2]
                                            ? -1
                                            : (((i[(b + 4) >> 2] -
                                                i[(b + 12) >> 2]) |
                                                0) -
                                                (i[(b + 8) >> 2] << 3)) |
                                              0) |
                                            0) <
                                          4
                                        ) {
                                          d = -1;
                                          break c;
                                        }
                                        d = -1;
                                        h: {
                                          i: {
                                            j: {
                                              k: {
                                                e = V(b, 4);
                                                switch ((e + -13) | 0) {
                                                  case 1:
                                                    break i;
                                                  case 0:
                                                    break k;
                                                  case 2:
                                                    break c;
                                                  default:
                                                    break j;
                                                }
                                              }
                                              d =
                                                J[i[(a + 452) >> 2]](
                                                  b,
                                                  a,
                                                  i[(a + 456) >> 2]
                                                ) | 0;
                                              if (!d) {
                                                break h;
                                              }
                                              break c;
                                            }
                                            if ((e | 0) < 9) {
                                              break e;
                                            }
                                            i[r >> 2] = 12544;
                                            Y(i[3524], 12810, r);
                                            d = -2;
                                            break c;
                                          }
                                          d = gb(b, j, a);
                                          if (d) {
                                            break c;
                                          }
                                        }
                                        if (
                                          ((i[(b + 20) >> 2]
                                            ? -1
                                            : (((i[(b + 4) >> 2] -
                                                i[(b + 12) >> 2]) |
                                                0) -
                                                (i[(b + 8) >> 2] << 3)) |
                                              0) |
                                            0) >=
                                          5
                                        ) {
                                          continue;
                                        }
                                        break;
                                      }
                                      d = -1;
                                      break c;
                                    }
                                    i[(a + 120) >> 2] = e;
                                  }
                                  d = i[(a + 48) >> 2];
                                  qa(
                                    d,
                                    (d + (i[(a + 12) >> 2] << 1)) | 0,
                                    (((i[(a + 16) >> 2] +
                                      (i[(a + 32) >> 2] << 1)) <<
                                      1) +
                                      24) |
                                      0
                                  );
                                  s = (f + (f & 1)) | 0;
                                  f = i[(a + 24) >> 2];
                                  j = (s + (f << 1)) | 0;
                                  d =
                                    i[
                                      (i[(a + 116) >> 2] +
                                        (i[(a + 120) >> 2] << 2)) >>
                                        2
                                    ];
                                  if (!d) {
                                    ca(30474, i[(a + 60) >> 2], s, f);
                                    f = Z(i[(a + 52) >> 2], i[(a + 12) >> 2]);
                                    d = 0;
                                    b = i[(a + 12) >> 2];
                                    l: {
                                      if ((b | 0) <= 0) {
                                        g = i[(a + 52) >> 2];
                                        break l;
                                      }
                                      e = i[(a + 108) >> 2];
                                      g = i[(a + 52) >> 2];
                                      while (1) {
                                        e = (o(e, 1664525) + 1013904223) | 0;
                                        j = o(f, e >> 16);
                                        h[((d << 1) + g) >> 1] =
                                          (((j - (j >> 3)) | 0) - -8192) >>> 14;
                                        d = (d + 1) | 0;
                                        if ((b | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[(a + 108) >> 2] = e;
                                    }
                                    i[(a + 4) >> 2] = 1;
                                    _(
                                      g,
                                      s,
                                      c,
                                      b,
                                      i[(a + 24) >> 2],
                                      i[(a + 64) >> 2]
                                    );
                                    d = 0;
                                    i[(a + 8) >> 2] = 0;
                                    break c;
                                  }
                                  J[i[(d + 20) >> 2]](s, f, b);
                                  m: {
                                    if (!i[(a + 8) >> 2]) {
                                      break m;
                                    }
                                    f = i[(a + 24) >> 2];
                                    if ((f | 0) < 1) {
                                      break m;
                                    }
                                    g = i[(a + 56) >> 2];
                                    d = 0;
                                    e = 0;
                                    while (1) {
                                      n = d << 1;
                                      q =
                                        (h[(n + g) >> 1] - h[(n + s) >> 1]) | 0;
                                      n = q >> 31;
                                      e = ((n ^ (n + q)) + e) | 0;
                                      d = (d + 1) | 0;
                                      if ((f | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    if ((f | 0) < 1) {
                                      break m;
                                    }
                                    f = (19661 >>> (e >>> 15)) | 0;
                                    n = i[(a + 64) >> 2];
                                    d = 0;
                                    while (1) {
                                      g = (n + (d << 2)) | 0;
                                      e = i[g >> 2];
                                      i[g >> 2] =
                                        o(f, (e << 1) >> 16) +
                                        ((o(f, e & 32767) >>> 15) | 0);
                                      d = (d + 1) | 0;
                                      if ((d | 0) < i[(a + 24) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  n: {
                                    if (
                                      i[(a + 8) >> 2] ? 0 : !i[(a + 4) >> 2]
                                    ) {
                                      break n;
                                    }
                                    f = i[(a + 24) >> 2];
                                    if ((f | 0) < 1) {
                                      break n;
                                    }
                                    e = i[(a + 56) >> 2];
                                    d = 0;
                                    while (1) {
                                      n = d << 1;
                                      h[(n + e) >> 1] = k[(n + s) >> 1];
                                      d = (d + 1) | 0;
                                      if ((f | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  f =
                                    i[
                                      (i[(a + 116) >> 2] +
                                        (i[(a + 120) >> 2] << 2)) >>
                                        2
                                    ];
                                  if (i[f >> 2] != -1) {
                                    p = (i[(a + 28) >> 2] + V(b, 7)) | 0;
                                    f =
                                      i[
                                        (i[(a + 116) >> 2] +
                                          (i[(a + 120) >> 2] << 2)) >>
                                          2
                                      ];
                                  }
                                  if (i[(f + 4) >> 2]) {
                                    A =
                                      (o((V(b, 4) << 22) >> 16, 2185) +
                                        16384) >>
                                      15;
                                  }
                                  f = V(b, 5);
                                  v = (j + (j & 1)) | 0;
                                  d = (v + (i[(a + 24) >> 2] << 1)) | 0;
                                  B = (((0 - d) & 3) + d) | 0;
                                  d = i[(a + 16) >> 2] << 2;
                                  j = (B + d) | 0;
                                  e = (0 - j) & 3;
                                  n = i[((f << 2) + 12144) >> 2];
                                  g = o(n & 32767, 28406);
                                  f = i[(a + 120) >> 2];
                                  if ((f | 0) == 1) {
                                    i[(a + 484) >> 2] = (V(b, 4) | 0) == 15;
                                    f = i[(a + 120) >> 2];
                                  }
                                  if ((f | 0) >= 2) {
                                    i[(a + 484) >> 2] = 0;
                                  }
                                  t = (e + j) | 0;
                                  q = (t + d) | 0;
                                  n =
                                    (o((n << 1) >> 16, 28406) +
                                      ((g >>> 15) | 0)) |
                                    0;
                                  o: {
                                    if (i[(a + 20) >> 2] <= 0) {
                                      f = 40;
                                      break o;
                                    }
                                    f = (p << 16) >> 15;
                                    d = f >>> 0 > 65535;
                                    j = d << 3;
                                    g = j | 4;
                                    e = j;
                                    d = d ? (f >>> 16) | 0 : f;
                                    j = d >>> 0 > 255;
                                    e = j ? g : e;
                                    d = j ? (d >>> 8) | 0 : d;
                                    j = d >>> 0 > 15;
                                    d =
                                      (j ? e | 2 : e) |
                                      ((j ? (d >>> 4) | 0 : d) >>> 0 > 3);
                                    j = d << 1;
                                    g = n << 2;
                                    e = (o(A, 24576) + -311296) | 0;
                                    e = e & 536870912 ? 0 : (e >>> 14) | 0;
                                    e = (e << 16) >> 16 < 64 ? e : 64;
                                    m = f >> (j + -12);
                                    f = f << (12 - j);
                                    j = (d << 16) >> 16;
                                    f = (((j | 0) > 6 ? m : f) << 16) >> 16;
                                    f =
                                      (((o(
                                        (((o(
                                          (o(f, 16816) + -827523072) >> 16,
                                          f
                                        ) <<
                                          2) &
                                          -65536) +
                                          1387593728) >>
                                          16,
                                        f
                                      ) <<
                                        2) &
                                        -65536) +
                                        238157824) >>
                                      16;
                                    d = (13 - d) | 0;
                                    K = o(
                                      (((o(
                                        (g + 32768) >> 16,
                                        (e << 16) >> 16
                                      ) <<
                                        10) +
                                        32768) >>>
                                        16) |
                                        0,
                                      (j | 0) < 13 ? f >> d : f << (0 - d)
                                    );
                                    L = o(e, 5046272) >> 16;
                                    M = (o(e, -28508160) + 2147418112) >> 16;
                                    C = (a + 108) | 0;
                                    D = n & 16383;
                                    E = g >> 16;
                                    N = (q + ((0 - q) & 3)) | 0;
                                    d = i[(a + 16) >> 2];
                                    f = 40;
                                    while (1) {
                                      w = i[(a + 80) >> 2];
                                      l = o(d, z);
                                      F = l << 1;
                                      u = U(
                                        (F + i[(a + 52) >> 2]) | 0,
                                        0,
                                        d << 1
                                      );
                                      e =
                                        i[
                                          (i[(a + 116) >> 2] +
                                            (i[(a + 120) >> 2] << 2)) >>
                                            2
                                        ];
                                      m = i[(e + 28) >> 2];
                                      if (!m) {
                                        break b;
                                      }
                                      d = f;
                                      j = p;
                                      g = j;
                                      p: {
                                        q: {
                                          r: {
                                            f = i[e >> 2];
                                            switch ((f + 1) | 0) {
                                              case 1:
                                                break p;
                                              case 0:
                                                break q;
                                              default:
                                                break r;
                                            }
                                          }
                                          j = i[(a + 32) >> 2];
                                          g = (f + p) | 0;
                                          g = (g | 0) > (j | 0) ? j : g;
                                          j = i[(a + 28) >> 2];
                                          f = (((p - f) | 0) + 1) | 0;
                                          j = (f | 0) < (j | 0) ? j : f;
                                          break p;
                                        }
                                        g = i[(a + 32) >> 2];
                                        j = i[(a + 28) >> 2];
                                      }
                                      J[m | 0](
                                        u,
                                        t,
                                        j,
                                        g,
                                        A,
                                        i[(e + 32) >> 2],
                                        i[(a + 16) >> 2],
                                        (r + 28) | 0,
                                        (r + 22) | 0,
                                        b,
                                        q,
                                        i[(a + 8) >> 2],
                                        l,
                                        h[(a + 96) >> 1],
                                        0
                                      );
                                      vb(t, i[(a + 16) >> 2]);
                                      j = h[(r + 24) >> 1];
                                      f = j >> 31;
                                      s: {
                                        t: {
                                          j = f ^ (f + j);
                                          f = h[(r + 22) >> 1];
                                          j =
                                            (j +
                                              ((f | 0) > 0
                                                ? f
                                                : (0 - ((f >>> 1) | 0)) | 0)) |
                                            0;
                                          f = h[(r + 26) >> 1];
                                          j =
                                            ((j +
                                              ((f | 0) > 0
                                                ? f
                                                : (0 - ((f >>> 1) | 0)) | 0)) <<
                                              16) >>
                                            16;
                                          e = (G << 16) >> 16;
                                          u: {
                                            if ((j | 0) <= (e | 0)) {
                                              break u;
                                            }
                                            f = i[(r + 28) >> 2];
                                            l = ((d << 1) - f) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 3) {
                                              break u;
                                            }
                                            l = (o(d, 3) - f) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 4) {
                                              break u;
                                            }
                                            l = ((d << 2) - f) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) > 4) {
                                              break t;
                                            }
                                          }
                                          if (o(e, 19661) >> 15 < (j | 0)) {
                                            f = i[(r + 28) >> 2];
                                            l = (d - (f << 1)) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 3) {
                                              break t;
                                            }
                                            l = (d + o(f, -3)) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 4) {
                                              break t;
                                            }
                                            l = (d - (f << 2)) | 0;
                                            g = l >> 31;
                                            if ((g ^ (g + l)) < 5) {
                                              break t;
                                            }
                                          }
                                          if (o(j, 21955) >> 15 <= (e | 0)) {
                                            f = d;
                                            break s;
                                          }
                                          f = i[(r + 28) >> 2];
                                          l = ((d << 1) - f) | 0;
                                          g = l >> 31;
                                          if ((g ^ (g + l)) < 3) {
                                            break t;
                                          }
                                          l = (o(d, 3) - f) | 0;
                                          g = l >> 31;
                                          if ((g ^ (g + l)) < 4) {
                                            break t;
                                          }
                                          l = ((d << 2) - f) | 0;
                                          g = l >> 31;
                                          if ((g ^ (g + l)) <= 4) {
                                            break t;
                                          }
                                          f = d;
                                          break s;
                                        }
                                        G = (j | 0) > (e | 0) ? j : G;
                                      }
                                      l = U(B, 0, i[(a + 16) >> 2] << 2);
                                      e = n;
                                      v: {
                                        w: {
                                          switch (
                                            (i[
                                              (i[
                                                (i[(a + 116) >> 2] +
                                                  (i[(a + 120) >> 2] << 2)) >>
                                                  2
                                              ] +
                                                8) >>
                                                2
                                            ] +
                                              -1) |
                                            0
                                          ) {
                                            case 2:
                                              d =
                                                h[
                                                  ((V(b, 3) << 1) + 12288) >> 1
                                                ];
                                              e =
                                                ((o(d, D) >> 14) + o(d, E)) | 0;
                                              break v;
                                            case 0:
                                              break w;
                                            default:
                                              break v;
                                          }
                                        }
                                        d = h[((V(b, 1) << 1) + 12306) >> 1];
                                        e = ((o(d, D) >> 14) + o(d, E)) | 0;
                                      }
                                      d =
                                        i[
                                          (i[(a + 116) >> 2] +
                                            (i[(a + 120) >> 2] << 2)) >>
                                            2
                                        ];
                                      g = i[(d + 40) >> 2];
                                      if (!g) {
                                        break a;
                                      }
                                      J[g | 0](
                                        l,
                                        i[(d + 44) >> 2],
                                        i[(a + 16) >> 2],
                                        b,
                                        q,
                                        C
                                      );
                                      da(l, l, e, i[(a + 16) >> 2]);
                                      d = i[(a + 16) >> 2];
                                      x: {
                                        y: {
                                          if (
                                            i[
                                              (i[
                                                (i[(a + 116) >> 2] +
                                                  (i[(a + 120) >> 2] << 2)) >>
                                                  2
                                              ] +
                                                12) >>
                                                2
                                            ]
                                          ) {
                                            g = 0;
                                            d = d << 2;
                                            m = U(N, 0, d);
                                            I =
                                              i[
                                                (i[(a + 116) >> 2] +
                                                  (i[(a + 120) >> 2] << 2)) >>
                                                  2
                                              ];
                                            J[i[(I + 40) >> 2]](
                                              m,
                                              i[(I + 44) >> 2],
                                              i[(a + 16) >> 2],
                                              b,
                                              (d + m) | 0,
                                              C
                                            );
                                            da(
                                              m,
                                              m,
                                              (o((e << 1) >> 16, 14895) +
                                                ((o(e & 32767, 14895) >>> 15) |
                                                  0)) |
                                                0,
                                              i[(a + 16) >> 2]
                                            );
                                            d = i[(a + 16) >> 2];
                                            if ((d | 0) < 1) {
                                              break y;
                                            }
                                            while (1) {
                                              d = g << 2;
                                              e = (d + l) | 0;
                                              i[e >> 2] =
                                                i[(d + m) >> 2] + i[e >> 2];
                                              g = (g + 1) | 0;
                                              d = i[(a + 16) >> 2];
                                              if ((g | 0) < (d | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          if ((d | 0) < 1) {
                                            break x;
                                          }
                                          e = 0;
                                          g = (d | 0) > 0;
                                          while (1) {
                                            m = e << 2;
                                            m =
                                              ((i[(m + t) >> 2] << 1) +
                                                i[(l + m) >> 2]) |
                                              0;
                                            h[(u + (e << 1)) >> 1] =
                                              (m | 0) > 536862719
                                                ? 32767
                                                : (m | 0) < -536862720
                                                ? -32767
                                                : ((m - -8192) >>> 14) | 0;
                                            e = (e + 1) | 0;
                                            if ((e | 0) != (d | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        m = w ? (w + F) | 0 : 0;
                                        if (!m) {
                                          break x;
                                        }
                                        e = 0;
                                        if (!g) {
                                          break x;
                                        }
                                        while (1) {
                                          h[(m + (e << 1)) >> 1] =
                                            (i[(l + (e << 2)) >> 2] - -8192) >>>
                                            14;
                                          e = (e + 1) | 0;
                                          if ((e | 0) != (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      y = (j + y) | 0;
                                      z: {
                                        if (i[(a + 120) >> 2] != 1) {
                                          break z;
                                        }
                                        u = U(u, 0, d << 1);
                                        e = i[(a + 480) >> 2];
                                        d = i[(a + 16) >> 2];
                                        if ((e | 0) < (d | 0)) {
                                          while (1) {
                                            if ((e | 0) >= 0) {
                                              h[(u + (e << 1)) >> 1] = K;
                                            }
                                            e = (e + p) | 0;
                                            if ((e | 0) < (d | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          i[(a + 480) >> 2] = e;
                                        }
                                        i[(a + 480) >> 2] = e - d;
                                        if ((d | 0) < 1) {
                                          break z;
                                        }
                                        j = i[(a + 472) >> 2];
                                        g = 0;
                                        while (1) {
                                          m = (u + (g << 1)) | 0;
                                          w = h[m >> 1];
                                          e = i[(l + (g << 2)) >> 2];
                                          h[m >> 1] =
                                            (o(((e << 2) + 32768) >> 16, M) >>>
                                              15) +
                                            ((o(h[(a + 468) >> 1], 19660) +
                                              (o(w, 45876) & -65536)) >>>
                                              16) -
                                            (o(((j << 2) + 32768) >> 16, L) >>>
                                              15);
                                          i[(a + 472) >> 2] = e;
                                          h[(a + 468) >> 1] = w;
                                          j =
                                            ((((o(h[(a + 476) >> 1], 26214) +
                                              o(h[m >> 1], 6554)) |
                                              0) +
                                              16384) >>>
                                              15) |
                                            0;
                                          h[(a + 476) >> 1] = j;
                                          h[m >> 1] = k[m >> 1] - j;
                                          j = e;
                                          g = (g + 1) | 0;
                                          if ((g | 0) != (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      y = (y << 16) >> 16;
                                      z = (z + 1) | 0;
                                      if ((z | 0) < i[(a + 20) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    l = (y + 2) >> 2;
                                  }
                                  b = (q + (q & 1)) | 0;
                                  d = i[(a + 24) >> 2];
                                  p = (b + (d << 1)) | 0;
                                  A: {
                                    B: {
                                      if (!i[(a + 124) >> 2]) {
                                        break B;
                                      }
                                      j =
                                        h[
                                          (i[
                                            (i[(a + 116) >> 2] +
                                              (i[(a + 120) >> 2] << 2)) >>
                                              2
                                          ] +
                                            48) >>
                                            1
                                        ];
                                      if (i[(a + 8) >> 2] | ((j | 0) < 1)) {
                                        break B;
                                      }
                                      e = i[(a + 16) >> 2] << 1;
                                      Ja(
                                        (i[(a + 52) >> 2] - e) | 0,
                                        c,
                                        e,
                                        f,
                                        j,
                                        p
                                      );
                                      d = i[(a + 16) >> 2];
                                      j = d << 1;
                                      Ja(
                                        (j + i[(a + 52) >> 2]) | 0,
                                        ((d << 2) + c) | 0,
                                        j,
                                        f,
                                        h[
                                          (i[
                                            (i[(a + 116) >> 2] +
                                              (i[(a + 120) >> 2] << 2)) >>
                                              2
                                          ] +
                                            48) >>
                                            1
                                        ],
                                        p
                                      );
                                      break A;
                                    }
                                    X(
                                      c,
                                      (i[(a + 52) >> 2] -
                                        (i[(a + 16) >> 2] << 1)) |
                                        0,
                                      i[(a + 12) >> 2] << 1
                                    );
                                  }
                                  C: {
                                    if (!i[(a + 8) >> 2]) {
                                      break C;
                                    }
                                    d = Z(i[(a + 52) >> 2], i[(a + 12) >> 2]);
                                    e = i[(a + 12) >> 2];
                                    if ((e | 0) < 1) {
                                      break C;
                                    }
                                    d = ((d << 16) + 65536) | 0;
                                    d = (((n + (d >> 17)) | 0) / (d >> 16)) | 0;
                                    g =
                                      (((d | 0) < 32767 ? d : 32767) << 16) >>
                                      16;
                                    q = i[(a + 16) >> 2];
                                    j = i[(a + 52) >> 2];
                                    d = 0;
                                    while (1) {
                                      m = d << 1;
                                      t = (m + j) | 0;
                                      h[t >> 1] = o(g, h[t >> 1]) >>> 14;
                                      h[(c + m) >> 1] =
                                        k[(j + ((d - q) << 1)) >> 1];
                                      d = (d + 1) | 0;
                                      if ((e | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  d = i[(a + 20) >> 2];
                                  if ((d | 0) >= 1) {
                                    j = i[(a + 24) >> 2];
                                    g = 0;
                                    while (1) {
                                      q = i[(a + 16) >> 2];
                                      fa(i[(a + 56) >> 2], s, b, j, g, d);
                                      ga(b, i[(a + 24) >> 2], 16);
                                      ha(b, v, i[(a + 24) >> 2], p);
                                      e = 8192;
                                      d = 0;
                                      j = i[(a + 24) >> 2];
                                      if ((j | 0) >= 1) {
                                        while (1) {
                                          m = e;
                                          e = d << 1;
                                          e =
                                            (((m + h[((e | 2) + v) >> 1]) | 0) -
                                              h[(e + v) >> 1]) |
                                            0;
                                          d = (d + 2) | 0;
                                          if ((d | 0) < (j | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      i[(i[(a + 76) >> 2] + (g << 2)) >> 2] = e;
                                      d = ((o(g, q) << 1) + c) | 0;
                                      _(
                                        d,
                                        i[(a + 60) >> 2],
                                        d,
                                        i[(a + 16) >> 2],
                                        i[(a + 24) >> 2],
                                        i[(a + 64) >> 2]
                                      );
                                      j = i[(a + 24) >> 2];
                                      if ((j | 0) >= 1) {
                                        e = i[(a + 60) >> 2];
                                        d = 0;
                                        while (1) {
                                          q = d << 1;
                                          h[(q + e) >> 1] = k[(q + v) >> 1];
                                          d = (d + 1) | 0;
                                          if ((j | 0) != (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      g = (g + 1) | 0;
                                      d = i[(a + 20) >> 2];
                                      if ((g | 0) < (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if (i[(a + 492) >> 2]) {
                                    sa(
                                      c,
                                      c,
                                      i[(a + 12) >> 2],
                                      i[(a + 488) >> 2] ? 3 : 1,
                                      (a + 68) | 0
                                    );
                                  }
                                  b = ((((n - -8192) >>> 14) | 0) + 1) | 0;
                                  h[(a + 84) >> 1] = b;
                                  c = o(h[(a + 86) >> 1], 32440) >> 15;
                                  b = (b << 16) >> 16;
                                  c = (c | 0) > (b | 0) ? c : b;
                                  h[(a + 86) >> 1] = c;
                                  d =
                                    (o(h[(a + 88) >> 1], 66192) + 65536) >> 16;
                                  b = (d | 0) < (b | 0) ? d : b;
                                  h[(a + 88) >> 1] = b;
                                  if ((b | 0) >= (c | 0)) {
                                    h[(a + 86) >> 1] = b + 1;
                                  }
                                  b = i[(a + 24) >> 2];
                                  if ((b | 0) >= 1) {
                                    c = i[(a + 56) >> 2];
                                    d = 0;
                                    while (1) {
                                      j = d << 1;
                                      h[(j + c) >> 1] = k[(j + s) >> 1];
                                      d = (d + 1) | 0;
                                      if ((b | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  h[(a + 96) >> 1] = l;
                                  i[(a + 92) >> 2] = f;
                                  i[(a + 4) >> 2] = 0;
                                  i[(a + 8) >> 2] = 0;
                                  b = i[(a + 104) >> 2];
                                  i[(a + 104) >> 2] = b + 1;
                                  h[((((b << 1) + a) | 0) + 98) >> 1] = l;
                                  if ((b | 0) >= 2) {
                                    i[(a + 104) >> 2] = 0;
                                  }
                                  h[(a + 40) >> 1] = n;
                                  d = 0;
                                }
                                H = (r + 32) | 0;
                                return d | 0;
                              }
                              la(12657, 1321);
                              x();
                            }
                            la(12696, 1397);
                            x();
                          }
                          function mb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              n = 0,
                              r = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = p(0),
                              z = 0,
                              A = 0,
                              B = p(0),
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = p(0),
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = p(0),
                              Y = 0,
                              $ = 0,
                              ea = 0;
                            x = (H - 16) | 0;
                            H = x;
                            z = i[i[a >> 2] >> 2];
                            v = i[(a + 12) >> 2];
                            d = ((v << 1) + b) | 0;
                            f = i[(a + 44) >> 2];
                            Ub(b, b, d, i[(a + 8) >> 2], i[(a + 52) >> 2], f);
                            a: {
                              if (!(i[(a + 108) >> 2] | i[(a + 136) >> 2])) {
                                B = p(1);
                                I = p(1);
                                break a;
                              }
                              B = p(p(Z(b, i[(a + 12) >> 2]) | 0) + p(1));
                              I = p(p(Z(d, i[(a + 12) >> 2]) | 0) + p(1));
                            }
                            e = i[(a + 20) >> 2];
                            g = i[(a + 4) >> 2];
                            R = (f + (f & 1)) | 0;
                            J[i[(i[g >> 2] + 44) >> 2]](g, 104, R) | 0;
                            f = i[(a + 4) >> 2];
                            J[i[(i[f >> 2] + 28) >> 2]](f, b, c) | 0;
                            f = d;
                            j = i[(a + 24) >> 2];
                            G = i[(a + 12) >> 2];
                            d = (j - G) << 1;
                            K = X((f - d) | 0, i[(a + 48) >> 2], d);
                            d = i[(a + 12) >> 2];
                            X(
                              i[(a + 48) >> 2],
                              ((d << 1) + K) | 0,
                              (i[(a + 24) >> 2] - d) << 1
                            );
                            f = i[(a + 20) >> 2];
                            d = i[(a + 4) >> 2];
                            e = ((e << 1) + R) | 0;
                            S = (((0 - e) & 3) + e) | 0;
                            J[i[(i[d >> 2] + 44) >> 2]](d, 100, S) | 0;
                            d = i[(a + 4) >> 2];
                            e = ((f << 2) + S) | 0;
                            T = ((e & 1) + e) | 0;
                            J[i[(i[d >> 2] + 44) >> 2]](d, 101, T) | 0;
                            d = i[(a + 4) >> 2];
                            J[i[(i[d >> 2] + 44) >> 2]](d, 9, (x + 12) | 0) | 0;
                            i[(x + 12) >> 2] = !i[(x + 12) >> 2];
                            A = i[(a + 28) >> 2];
                            d = A << 1;
                            f = ((f << 1) + T) | 0;
                            w = ((f & 1) + f) | 0;
                            f = (d + w) | 0;
                            N = ((f & 1) + f) | 0;
                            f = (N + d) | 0;
                            C = ((f & 1) + f) | 0;
                            f = (C + d) | 0;
                            D = ((f & 1) + f) | 0;
                            f = (D + d) | 0;
                            E = ((f & 1) + f) | 0;
                            f = (E + d) | 0;
                            L = ((f & 1) + f) | 0;
                            f = (L + d) | 0;
                            O = ((f & 1) + f) | 0;
                            f = (O + d) | 0;
                            P = ((f & 1) + f) | 0;
                            f = (P + d) | 0;
                            f = ((f & 1) + f) | 0;
                            d = (((d + f) | 0) + 2) | 0;
                            g = ((d & 1) + d) | 0;
                            d = i[(a + 24) >> 2];
                            n = d << 1;
                            b: {
                              if (i[(a + 16) >> 2] != 80) {
                                if ((d | 0) < 1) {
                                  break b;
                                }
                                r = i[(a + 60) >> 2];
                                e = 0;
                                while (1) {
                                  l = e << 1;
                                  h[(l + g) >> 1] =
                                    o(h[(l + r) >> 1], h[(l + K) >> 1]) >>> 14;
                                  e = (e + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break b;
                              }
                              if ((d | 0) < 1) {
                                break b;
                              }
                              l = i[(a + 60) >> 2];
                              e = 0;
                              while (1) {
                                r = e << 1;
                                h[(r + g) >> 1] =
                                  o(h[(l + (e & -2)) >> 1], h[(r + K) >> 1]) >>>
                                  14;
                                e = (e + 1) | 0;
                                if ((d | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            l = (g + n) | 0;
                            e = 1;
                            Da(g, f, (A + 1) | 0, d);
                            d = h[f >> 1];
                            g = (((o(d, h[(a + 36) >> 1]) >>> 15) | 0) + d) | 0;
                            h[f >> 1] = g;
                            d = i[(a + 28) >> 2];
                            c: {
                              if ((d | 0) < 0) {
                                break c;
                              }
                              A = i[(a + 64) >> 2];
                              h[f >> 1] = o(h[A >> 1], (g << 16) >> 16) >>> 14;
                              if (!d) {
                                break c;
                              }
                              while (1) {
                                g = e << 1;
                                n = (g + f) | 0;
                                h[n >> 1] =
                                  o(h[(g + A) >> 1], h[n >> 1]) >>> 14;
                                g = (d | 0) != (e | 0);
                                e = (e + 1) | 0;
                                if (g) {
                                  continue;
                                }
                                break;
                              }
                            }
                            Ea(w, f, d);
                            f = ta(w, i[(a + 28) >> 2], E, 6553, l);
                            d = i[(a + 28) >> 2];
                            d: {
                              if ((f | 0) == (d | 0)) {
                                break d;
                              }
                              f = ta(w, d, E, 1638, l);
                              d = i[(a + 28) >> 2];
                              if (((f | 0) == (d | 0)) | ((d | 0) < 1)) {
                                break d;
                              }
                              f = i[(a + 68) >> 2];
                              e = 0;
                              while (1) {
                                g = e << 1;
                                h[(g + E) >> 1] = k[(f + g) >> 1];
                                e = (e + 1) | 0;
                                if ((d | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e: {
                              if (
                                i[(x + 12) >> 2] |
                                (i[(a + 136) >> 2] ? 0 : !i[(a + 108) >> 2])
                              ) {
                                break e;
                              }
                              if (i[(a + 120) >> 2]) {
                                V = m[(a + 124) >> 2];
                                f: {
                                  if ((p(m[(a + 128) >> 2] * V) > p(0)) ^ 1) {
                                    break f;
                                  }
                                  y = p(
                                    (+V * -1e-5) / +p(m[(a + 132) >> 2] + p(1))
                                  );
                                  y = +y > 0.1 ? p(0.10000000149011612) : y;
                                  if ((+y < -0.1) ^ 1) {
                                    break f;
                                  }
                                  y = p(-0.10000000149011612);
                                }
                                m[(a + 104) >> 2] = t(
                                  p(s(p(y + m[(a + 104) >> 2]), p(10))),
                                  p(0)
                                );
                              }
                              d = i[(a + 4) >> 2];
                              J[i[(i[d >> 2] + 44) >> 2]](
                                d,
                                29,
                                (a + 140) | 0
                              ) | 0;
                              Y = ba(+p(I / B));
                              if (i[(a + 108) >> 2]) {
                                e = (i[(z + 152) >> 2] + -1) | 0;
                                i[(x + 8) >> 2] = e;
                                I = p(
                                  t(
                                    p(
                                      p(
                                        p(s(p(t(p(Y + Y), p(-4))), p(2))) + p(2)
                                      ) + m[(a + 140) >> 2]
                                    ),
                                    p(-1)
                                  )
                                );
                                m[(a + 140) >> 2] = I;
                                g: {
                                  if (!e) {
                                    break g;
                                  }
                                  f = i[(z + 148) >> 2];
                                  B = m[(a + 104) >> 2];
                                  y = p(u(B));
                                  h: {
                                    if (p(q(y)) < p(2147483648)) {
                                      d = ~~y;
                                      break h;
                                    }
                                    d = -2147483648;
                                  }
                                  if ((d | 0) == 10) {
                                    while (1) {
                                      if (
                                        (((o(
                                          i[
                                            (i[
                                              (i[(a + 148) >> 2] + (e << 2)) >>
                                                2
                                            ] +
                                              52) >>
                                              2
                                          ],
                                          i[(a + 164) >> 2]
                                        ) |
                                          0) /
                                          i[(a + 8) >> 2]) |
                                          0) <=
                                        i[(a + 116) >> 2]
                                          ? !(
                                              (I >=
                                                m[
                                                  (((f + o(e, 44)) | 0) + 40) >>
                                                    2
                                                ]) ^
                                              1
                                            )
                                          : 0
                                      ) {
                                        break g;
                                      }
                                      e = (e + -1) | 0;
                                      i[(x + 8) >> 2] = e;
                                      if (e) {
                                        continue;
                                      }
                                      break g;
                                    }
                                  }
                                  y = p(B - p(d | 0));
                                  g = (d + 1) | 0;
                                  B = p(p(g | 0) - B);
                                  while (1) {
                                    w = (f + o(e, 44)) | 0;
                                    if (
                                      (((o(
                                        i[
                                          (i[
                                            (i[(a + 148) >> 2] + (e << 2)) >> 2
                                          ] +
                                            52) >>
                                            2
                                        ],
                                        i[(a + 164) >> 2]
                                      ) |
                                        0) /
                                        i[(a + 8) >> 2]) |
                                        0) <=
                                      i[(a + 116) >> 2]
                                        ? !(
                                            (I >=
                                              p(
                                                p(y * m[(w + (g << 2)) >> 2]) +
                                                  p(B * m[(w + (d << 2)) >> 2])
                                              )) ^
                                            1
                                          )
                                        : 0
                                    ) {
                                      break g;
                                    }
                                    e = (e + -1) | 0;
                                    i[(x + 8) >> 2] = e;
                                    if (e) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  10,
                                  (x + 8) | 0
                                ) | 0;
                                if (!i[(a + 120) >> 2]) {
                                  break e;
                                }
                                J[i[(i[a >> 2] + 44) >> 2]](
                                  a,
                                  19,
                                  (x + 4) | 0
                                ) | 0;
                                d = i[(x + 4) >> 2];
                                m[(a + 132) >> 2] = m[(a + 132) >> 2] + p(1);
                                d = (d - i[(a + 120) >> 2]) | 0;
                                m[(a + 124) >> 2] =
                                  m[(a + 124) >> 2] + p(d | 0);
                                m[(a + 128) >> 2] =
                                  +(d | 0) * 0.05 + +m[(a + 128) >> 2] * 0.95;
                                break e;
                              }
                              i[(a + 152) >> 2] =
                                m[(a + 140) >> 2] < p(2)
                                  ? 1
                                  : i[(a + 156) >> 2];
                            }
                            if (i[(a + 144) >> 2]) {
                              W(c, 1, 1);
                              W(c, i[(x + 12) >> 2] ? 0 : i[(a + 152) >> 2], 3);
                            }
                            i: {
                              j: {
                                if (!i[(x + 12) >> 2]) {
                                  d =
                                    i[
                                      (i[(a + 148) >> 2] +
                                        (i[(a + 152) >> 2] << 2)) >>
                                        2
                                    ];
                                  if (d) {
                                    break j;
                                  }
                                }
                                c = i[(a + 12) >> 2];
                                if ((c | 0) >= 1) {
                                  U(
                                    (((((v + G) | 0) - j) << 1) + b) | 0,
                                    0,
                                    c << 1
                                  );
                                }
                                d = i[(a + 28) >> 2];
                                if ((d | 0) >= 1) {
                                  b = i[(a + 88) >> 2];
                                  e = 0;
                                  while (1) {
                                    i[(b + (e << 2)) >> 2] = 0;
                                    e = (e + 1) | 0;
                                    d = i[(a + 28) >> 2];
                                    if ((e | 0) < (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                i[(a + 32) >> 2] = 1;
                                _(
                                  K,
                                  i[(a + 76) >> 2],
                                  K,
                                  i[(a + 12) >> 2],
                                  d,
                                  i[(a + 80) >> 2]
                                );
                                a = !i[(x + 12) >> 2];
                                break i;
                              }
                              J[i[(d + 16) >> 2]](E, L, i[(a + 28) >> 2], c);
                              e = i[(a + 28) >> 2];
                              k: {
                                if (!i[(a + 32) >> 2] | ((e | 0) < 1)) {
                                  break k;
                                }
                                b = i[(a + 68) >> 2];
                                d = 0;
                                while (1) {
                                  f = d << 1;
                                  h[(f + b) >> 1] = k[(f + E) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((e | 0) < 1) {
                                  break k;
                                }
                                b = i[(a + 72) >> 2];
                                d = 0;
                                while (1) {
                                  f = d << 1;
                                  h[(f + b) >> 1] = k[(f + L) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              d = i[(a + 20) >> 2];
                              if ((d | 0) >= 1) {
                                w = (l + ((0 - l) & 3)) | 0;
                                b = (w + (e << 2)) | 0;
                                G = ((b & 1) + b) | 0;
                                b = i[(a + 16) >> 2];
                                f = b << 1;
                                g = (G + f) | 0;
                                $ = (((0 - g) & 3) + g) | 0;
                                g = ($ + (b << 2)) | 0;
                                z = ((g & 1) + g) | 0;
                                l = (f + z) | 0;
                                g = 0;
                                while (1) {
                                  fa(i[(a + 68) >> 2], E, O, e, g, d);
                                  fa(
                                    i[(a + 72) >> 2],
                                    L,
                                    P,
                                    i[(a + 28) >> 2],
                                    g,
                                    i[(a + 20) >> 2]
                                  );
                                  ga(O, i[(a + 28) >> 2], 410);
                                  ga(P, i[(a + 28) >> 2], 410);
                                  f = ((l & 1) + l) | 0;
                                  d = b << 1;
                                  e = (f + d) | 0;
                                  v = ((e & 1) + e) | 0;
                                  n = d;
                                  d = (d + v) | 0;
                                  A = ((d & 1) + d) | 0;
                                  l = (n + A) | 0;
                                  ha(O, N, i[(a + 28) >> 2], l);
                                  ha(P, i[(a + 76) >> 2], i[(a + 28) >> 2], l);
                                  ca(h[(a + 38) >> 1], N, C, i[(a + 28) >> 2]);
                                  ca(h[(a + 40) >> 1], N, D, i[(a + 28) >> 2]);
                                  M = g << 2;
                                  Q = (M + i[(a + 92) >> 2]) | 0;
                                  i[Q >> 2] = 8192;
                                  j = i[(a + 76) >> 2];
                                  e = 0;
                                  n = 8192;
                                  d = 8192;
                                  r = i[(a + 28) >> 2];
                                  if ((r | 0) >= 1) {
                                    while (1) {
                                      ea = n;
                                      n = e << 1;
                                      r = h[(n + j) >> 1];
                                      F = h[(j + (n | 2)) >> 1];
                                      n = (ea + ((r + F) | 0)) | 0;
                                      i[Q >> 2] = n;
                                      d = (((d + F) | 0) - r) | 0;
                                      e = (e + 2) | 0;
                                      r = i[(a + 28) >> 2];
                                      if ((e | 0) < (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  e = i[(M + S) >> 2];
                                  n = ((o(b, g) << 1) + K) | 0;
                                  va(
                                    n,
                                    j,
                                    f,
                                    i[(a + 16) >> 2],
                                    r,
                                    i[(a + 84) >> 2]
                                  );
                                  b = (d + 82) | 0;
                                  b =
                                    ((((((e << 7) + ((b << 16) >> 17)) | 0) +
                                      10496) |
                                      0) /
                                      (b | 0)) |
                                    0;
                                  b = (b | 0) > -32767 ? b : -32767;
                                  j = (b | 0) < 32767 ? b : 32767;
                                  e = Z(f, i[(a + 16) >> 2]);
                                  l: {
                                    if (
                                      !i[
                                        (i[
                                          (i[(a + 148) >> 2] +
                                            (i[(a + 152) >> 2] << 2)) >>
                                            2
                                        ] +
                                          36) >>
                                          2
                                      ]
                                    ) {
                                      b = g << 1;
                                      d = ((k[(b + R) >> 1] << 16) + 65536) | 0;
                                      d = pa(
                                        ((((o(e, j) + (d >> 17)) | 0) /
                                          (d >> 16)) <<
                                          16) >>
                                          16,
                                        12976,
                                        32
                                      );
                                      d = (d | 0) > 0 ? d : 0;
                                      W(c, (d | 0) < 31 ? d : 31, 5);
                                      d = i[(a + 100) >> 2];
                                      if (!d) {
                                        break l;
                                      }
                                      h[(b + d) >> 1] = e;
                                      break l;
                                    }
                                    M = g << 1;
                                    b = ((k[(M + T) >> 1] << 16) + 65536) | 0;
                                    r = b >> 16;
                                    b =
                                      (((o(j, ((e << 16) + 65536) >> 16) +
                                        (b >> 17)) |
                                        0) /
                                        (r | 0)) |
                                      0;
                                    d = c;
                                    if (i[(a + 16) >> 2] == 80) {
                                      b =
                                        ((o((b << 16) >> 16, 23171) + 16384) >>>
                                          15) |
                                        0;
                                    }
                                    b = pa((b << 16) >> 16, 13040, 16);
                                    W(d, b, 4);
                                    e =
                                      (o(h[((b << 1) + 13040) >> 1], 28626) >>>
                                        15) |
                                      0;
                                    b = i[(a + 16) >> 2];
                                    if ((b | 0) == 80) {
                                      e =
                                        (o((e << 16) >> 16, 23170) - -8192) >>
                                        14;
                                    }
                                    La(
                                      i[(a + 76) >> 2],
                                      C,
                                      D,
                                      G,
                                      b,
                                      i[(a + 28) >> 2],
                                      l
                                    );
                                    j =
                                      (((((e << 16) >> 8) + (j >> 1)) | 0) /
                                        (j | 0)) |
                                      0;
                                    b = i[(a + 16) >> 2];
                                    if ((b | 0) >= 1) {
                                      U(v, 0, b << 1);
                                    }
                                    b = i[(a + 28) >> 2];
                                    if ((b | 0) >= 1) {
                                      d = i[(a + 80) >> 2];
                                      e = 0;
                                      while (1) {
                                        b = e << 2;
                                        i[(b + w) >> 2] = i[(b + d) >> 2];
                                        e = (e + 1) | 0;
                                        b = i[(a + 28) >> 2];
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    _(
                                      v,
                                      i[(a + 76) >> 2],
                                      v,
                                      i[(a + 16) >> 2],
                                      b,
                                      w
                                    );
                                    b = i[(a + 28) >> 2];
                                    if ((b | 0) >= 1) {
                                      d = i[(a + 88) >> 2];
                                      e = 0;
                                      while (1) {
                                        b = e << 2;
                                        i[(b + w) >> 2] = i[(b + d) >> 2];
                                        e = (e + 1) | 0;
                                        b = i[(a + 28) >> 2];
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    aa(v, C, D, v, i[(a + 16) >> 2], b, w);
                                    b = i[(a + 28) >> 2];
                                    if ((b | 0) >= 1) {
                                      d = i[(a + 88) >> 2];
                                      e = 0;
                                      while (1) {
                                        b = e << 2;
                                        i[(b + w) >> 2] = i[(b + d) >> 2];
                                        e = (e + 1) | 0;
                                        b = i[(a + 28) >> 2];
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    aa(n, C, D, A, i[(a + 16) >> 2], b, w);
                                    e = 0;
                                    b = i[(a + 16) >> 2];
                                    if ((b | 0) >= 1) {
                                      while (1) {
                                        d = e << 1;
                                        h[(d + z) >> 1] =
                                          k[(d + A) >> 1] - k[(d + v) >> 1];
                                        e = (e + 1) | 0;
                                        if ((b | 0) != (e | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    r = o(r, (j << 16) >> 16);
                                    d = r << 6;
                                    Aa(z, z, d, b);
                                    v = U($, 0, i[(a + 16) >> 2] << 2);
                                    b =
                                      i[
                                        (i[(a + 148) >> 2] +
                                          (i[(a + 152) >> 2] << 2)) >>
                                          2
                                      ];
                                    J[i[(b + 36) >> 2]](
                                      z,
                                      i[(a + 76) >> 2],
                                      C,
                                      D,
                                      i[(b + 44) >> 2],
                                      i[(a + 28) >> 2],
                                      i[(a + 16) >> 2],
                                      v,
                                      G,
                                      c,
                                      l,
                                      i[(a + 160) >> 2],
                                      i[(b + 12) >> 2]
                                    );
                                    da(v, v, d, i[(a + 16) >> 2]);
                                    m: {
                                      n: {
                                        if (
                                          !i[
                                            (i[
                                              (i[(a + 148) >> 2] +
                                                (i[(a + 152) >> 2] << 2)) >>
                                                2
                                            ] +
                                              12) >>
                                              2
                                          ]
                                        ) {
                                          d = i[(a + 16) >> 2];
                                          break n;
                                        }
                                        e = 0;
                                        j = i[(a + 16) >> 2] << 2;
                                        b = U((((0 - l) & 3) + l) | 0, 0, j);
                                        Q = (b + j) | 0;
                                        j = i[(a + 16) >> 2];
                                        if ((j | 0) >= 1) {
                                          while (1) {
                                            F = (z + (e << 1)) | 0;
                                            h[F >> 1] =
                                              (o(h[F >> 1], 20480) + 4096) >>>
                                              13;
                                            e = (e + 1) | 0;
                                            if ((j | 0) != (e | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        e = 0;
                                        F =
                                          i[
                                            (i[(a + 148) >> 2] +
                                              (i[(a + 152) >> 2] << 2)) >>
                                              2
                                          ];
                                        J[i[(F + 36) >> 2]](
                                          z,
                                          i[(a + 76) >> 2],
                                          C,
                                          D,
                                          i[(F + 44) >> 2],
                                          i[(a + 28) >> 2],
                                          j,
                                          b,
                                          G,
                                          c,
                                          Q,
                                          i[(a + 160) >> 2],
                                          0
                                        );
                                        da(
                                          b,
                                          b,
                                          (o((r << 7) >> 16, 13107) +
                                            (((o(d & 32704, 13107) + 16384) >>>
                                              15) |
                                              0)) |
                                            0,
                                          i[(a + 16) >> 2]
                                        );
                                        d = i[(a + 16) >> 2];
                                        if ((d | 0) < 1) {
                                          break m;
                                        }
                                        while (1) {
                                          d = e << 2;
                                          j = (d + v) | 0;
                                          i[j >> 2] =
                                            i[(b + d) >> 2] + i[j >> 2];
                                          e = (e + 1) | 0;
                                          d = i[(a + 16) >> 2];
                                          if ((e | 0) < (d | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      e = 0;
                                      if ((d | 0) < 1) {
                                        break m;
                                      }
                                      while (1) {
                                        h[(f + (e << 1)) >> 1] =
                                          (i[(v + (e << 2)) >> 2] - -8192) >>>
                                          14;
                                        e = (e + 1) | 0;
                                        if ((d | 0) != (e | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    b = f;
                                    if (i[(a + 100) >> 2]) {
                                      d = Ra(v, d);
                                      h[(M + i[(a + 100) >> 2]) >> 1] =
                                        o(d, 23171) >>> 15;
                                      d = i[(a + 16) >> 2];
                                    }
                                    e = Z(b, d);
                                  }
                                  h[(i[(a + 96) >> 2] + (g << 1)) >> 1] = e;
                                  d = i[(a + 80) >> 2];
                                  e = 0;
                                  b = i[(a + 28) >> 2];
                                  if ((b | 0) >= 1) {
                                    while (1) {
                                      b = e << 2;
                                      i[(b + w) >> 2] = i[(b + d) >> 2];
                                      e = (e + 1) | 0;
                                      b = i[(a + 28) >> 2];
                                      if ((e | 0) < (b | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  _(
                                    f,
                                    i[(a + 76) >> 2],
                                    n,
                                    i[(a + 16) >> 2],
                                    b,
                                    d
                                  );
                                  aa(
                                    n,
                                    C,
                                    D,
                                    A,
                                    i[(a + 16) >> 2],
                                    i[(a + 28) >> 2],
                                    i[(a + 88) >> 2]
                                  );
                                  g = (g + 1) | 0;
                                  d = i[(a + 20) >> 2];
                                  if ((g | 0) < (d | 0)) {
                                    e = i[(a + 28) >> 2];
                                    b = i[(a + 16) >> 2];
                                    continue;
                                  }
                                  break;
                                }
                                e = i[(a + 28) >> 2];
                              }
                              o: {
                                if ((e | 0) < 1) {
                                  break o;
                                }
                                b = i[(a + 68) >> 2];
                                d = 0;
                                while (1) {
                                  c = d << 1;
                                  h[(c + b) >> 1] = k[(c + E) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((e | 0) < 1) {
                                  break o;
                                }
                                b = i[(a + 72) >> 2];
                                d = 0;
                                while (1) {
                                  c = d << 1;
                                  h[(c + b) >> 1] = k[(c + L) >> 1];
                                  d = (d + 1) | 0;
                                  if ((d | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              i[(a + 32) >> 2] = 0;
                              a = 1;
                            }
                            H = (x + 16) | 0;
                            return a | 0;
                          }
                          function fc(a, b, c, d, e, f, j, l, m, n, p, q, r) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            j = j | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            var s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              J = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = 0,
                              Y = 0,
                              Z = 0,
                              _ = 0,
                              $ = 0,
                              aa = 0,
                              ba = 0,
                              ca = 0,
                              da = 0,
                              ea = 0,
                              fa = 0,
                              ga = 0,
                              ha = 0,
                              ia = 0;
                            R = (H - 16) | 0;
                            H = R;
                            Y = (q | 0) < 10 ? q : 10;
                            q = Y << 1;
                            E = ((q | 0) / 3) | 0;
                            a: {
                              b: {
                                if (!((q + -3) >>> 0 > 2 ? (Y | 0) >= 3 : 0)) {
                                  G = i[(e + 16) >> 2];
                                  S = i[(e + 8) >> 2];
                                  u = i[(e + 4) >> 2];
                                  J = ((p & 1) + p) | 0;
                                  x = i[e >> 2];
                                  v = i[(e + 12) >> 2];
                                  p = (J + ((x << v) << 1)) | 0;
                                  F = (((0 - p) & 3) + p) | 0;
                                  N = 1 << v;
                                  q = N << 2;
                                  p = (F + q) | 0;
                                  B = j << 1;
                                  T = X(((p & 1) + p) | 0, a, B);
                                  p = (B + T) | 0;
                                  O = (((0 - p) & 3) + p) | 0;
                                  p = (O + (j << 2)) | 0;
                                  I = ((p & 1) + p) | 0;
                                  c: {
                                    if ((v | 0) == 31) {
                                      break c;
                                    }
                                    if ((x | 0) > 0) {
                                      while (1) {
                                        p = o(x, P);
                                        q = 0;
                                        while (1) {
                                          h[(I + (q << 1)) >> 1] =
                                            g[(S + ((p + q) | 0)) | 0];
                                          q = (q + 1) | 0;
                                          if ((x | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        t = 0;
                                        C = (F + (P << 2)) | 0;
                                        i[C >> 2] = 0;
                                        s = 1;
                                        v = (J + (p << 1)) | 0;
                                        y = 0;
                                        while (1) {
                                          p = 0;
                                          q = 0;
                                          while (1) {
                                            p =
                                              (o(
                                                h[(((y - q) << 1) + m) >> 1],
                                                h[(I + (q << 1)) >> 1]
                                              ) +
                                                p) |
                                              0;
                                            q = (q + 1) | 0;
                                            if ((s | 0) != (q | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          h[(v + (y << 1)) >> 1] = p >>> 13;
                                          s = (s + 1) | 0;
                                          p = (p << 3) >> 16;
                                          t = (o(p, p) + t) | 0;
                                          y = (y + 1) | 0;
                                          if ((x | 0) != (y | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        i[C >> 2] = t;
                                        P = (P + 1) | 0;
                                        if ((N | 0) != (P | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      break c;
                                    }
                                    U(F, 0, q);
                                  }
                                  if ((u | 0) < 1) {
                                    break b;
                                  }
                                  p = 0;
                                  while (1) {
                                    D = o(p, x);
                                    q = (T + (D << 1)) | 0;
                                    d: {
                                      if (G) {
                                        Ga(
                                          q,
                                          J,
                                          x,
                                          N,
                                          F,
                                          1,
                                          (R + 12) | 0,
                                          (R + 8) | 0
                                        );
                                        break d;
                                      }
                                      Ha(
                                        q,
                                        J,
                                        x,
                                        N,
                                        F,
                                        1,
                                        (R + 12) | 0,
                                        (R + 8) | 0
                                      );
                                    }
                                    W(
                                      n,
                                      i[(R + 12) >> 2],
                                      (G + i[(e + 12) >> 2]) | 0
                                    );
                                    s = i[(R + 12) >> 2];
                                    t = (s | 0) < (N | 0);
                                    K = o(x, (s - (t ? 0 : N)) | 0);
                                    C = (J + (K << 1)) | 0;
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            if (!t) {
                                              q = 0;
                                              if ((x | 0) <= 0) {
                                                break g;
                                              }
                                              while (1) {
                                                v = (T + ((q + D) << 1)) | 0;
                                                h[v >> 1] =
                                                  k[(C + (q << 1)) >> 1] +
                                                  k[v >> 1];
                                                q = (q + 1) | 0;
                                                if ((x | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              break h;
                                            }
                                            q = 0;
                                            if ((x | 0) < 1) {
                                              break g;
                                            }
                                            while (1) {
                                              v = (T + ((q + D) << 1)) | 0;
                                              h[v >> 1] =
                                                k[v >> 1] -
                                                k[(C + (q << 1)) >> 1];
                                              q = (q + 1) | 0;
                                              if ((x | 0) != (q | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          i: {
                                            if (!t) {
                                              q = 0;
                                              if ((x | 0) <= 0) {
                                                break g;
                                              }
                                              while (1) {
                                                i[(O + ((q + D) << 2)) >> 2] =
                                                  0 -
                                                  (g[(S + ((q + K) | 0)) | 0] <<
                                                    9);
                                                q = (q + 1) | 0;
                                                if ((x | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              break i;
                                            }
                                            q = 0;
                                            if ((x | 0) < 1) {
                                              break g;
                                            }
                                            while (1) {
                                              i[(O + ((q + D) << 2)) >> 2] =
                                                g[(S + ((q + K) | 0)) | 0] << 9;
                                              q = (q + 1) | 0;
                                              if ((x | 0) != (q | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                          }
                                          if ((x | 0) > 0) {
                                            break f;
                                          }
                                        }
                                        p = (p + 1) | 0;
                                        break e;
                                      }
                                      p = (p + 1) | 0;
                                      q = o(x, p);
                                      w = (j - q) | 0;
                                      if ((w | 0) < 1) {
                                        break e;
                                      }
                                      z = (T + (q << 1)) | 0;
                                      t = 0;
                                      if ((s | 0) < (N | 0)) {
                                        while (1) {
                                          D = (((x - t) << 1) + m) | 0;
                                          s = g[(S + ((t + K) | 0)) | 0] << 3;
                                          q = 0;
                                          while (1) {
                                            C = q << 1;
                                            v = (C + z) | 0;
                                            h[v >> 1] =
                                              k[v >> 1] -
                                              (((o(s, h[(C + D) >> 1]) +
                                                32768) >>>
                                                16) |
                                                0);
                                            q = (q + 1) | 0;
                                            if ((w | 0) != (q | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                          t = (t + 1) | 0;
                                          if ((x | 0) != (t | 0)) {
                                            continue;
                                          }
                                          break e;
                                        }
                                      }
                                      while (1) {
                                        D = (((x - t) << 1) + m) | 0;
                                        s = g[(S + ((t + K) | 0)) | 0] << 3;
                                        q = 0;
                                        while (1) {
                                          C = q << 1;
                                          v = (C + z) | 0;
                                          h[v >> 1] =
                                            k[v >> 1] -
                                            (((32768 -
                                              o(s, h[(C + D) >> 1])) >>>
                                              16) |
                                              0);
                                          q = (q + 1) | 0;
                                          if ((w | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        t = (t + 1) | 0;
                                        if ((x | 0) != (t | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    if ((p | 0) != (u | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break b;
                                }
                                q = 0;
                                t = (((0 - p) & 3) + p) | 0;
                                u = E << 2;
                                p = (t + u) | 0;
                                C = (((0 - p) & 3) + p) | 0;
                                p = (C + u) | 0;
                                fa = (((0 - p) & 3) + p) | 0;
                                p = (fa + u) | 0;
                                ba = (((0 - p) & 3) + p) | 0;
                                p = (u + ba) | 0;
                                ga = ((p & 1) + p) | 0;
                                A = i[e >> 2];
                                y = i[(e + 12) >> 2];
                                p = (ga + ((A << y) << 1)) | 0;
                                ca = (((0 - p) & 3) + p) | 0;
                                Q = 1 << y;
                                D = Q << 2;
                                p = (ca + D) | 0;
                                J = ((p & 1) + p) | 0;
                                V = j << 1;
                                p = (J + V) | 0;
                                da = (((0 - p) & 3) + p) | 0;
                                p = (da + (j << 2)) | 0;
                                N = (((0 - p) & 3) + p) | 0;
                                L = i[(e + 4) >> 2];
                                p = (N + (L << 2)) | 0;
                                w = ((p & 1) + p) | 0;
                                z = (w + (o(E, V) << 1)) | 0;
                                s = (E | 0) > 1 ? E : 1;
                                S = (0 - V) | 0;
                                M = (0 - u) | 0;
                                T = i[(e + 16) >> 2];
                                ea = i[(e + 8) >> 2];
                                while (1) {
                                  v = q << 2;
                                  p = q << 1;
                                  i[(v + t) >> 2] = w + (o(p, j) << 1);
                                  i[(v + C) >> 2] = w + (o(p | 1, j) << 1);
                                  q = (q + 1) | 0;
                                  if ((s | 0) != (q | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                q = 0;
                                F = (u + ((z + ((0 - z) & 3)) | 0)) | 0;
                                B = (u + ((((0 - F) & 3) + F) | 0)) | 0;
                                O = (u + ((((0 - B) & 3) + B) | 0)) | 0;
                                I = (u + ((((0 - O) & 3) + O) | 0)) | 0;
                                K = (u + ((((0 - I) & 3) + I) | 0)) | 0;
                                z = (((0 - K) & 3) + K) | 0;
                                G = (z + u) | 0;
                                u = (((0 - G) & 3) + G) | 0;
                                w = (u + (o(E, L) << 3)) | 0;
                                j: {
                                  if ((Y | 0) <= 1) {
                                    X(J, a, V);
                                    break j;
                                  }
                                  s = (E | 0) > 1 ? E : 1;
                                  while (1) {
                                    v = q << 2;
                                    p = q << 1;
                                    i[(v + ba) >> 2] = u + (o(p, L) << 2);
                                    i[(v + fa) >> 2] = u + (o(L, p | 1) << 2);
                                    q = (q + 1) | 0;
                                    if ((s | 0) != (q | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  v = X(J, a, V);
                                  if ((Y | 0) < 2) {
                                    break j;
                                  }
                                  p = (E | 0) > 1 ? E : 1;
                                  q = 0;
                                  while (1) {
                                    X(i[((q << 2) + t) >> 2], v, V);
                                    q = (q + 1) | 0;
                                    if ((p | 0) != (q | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                ha = ((w & 1) + w) | 0;
                                k: {
                                  if ((y | 0) == 31) {
                                    break k;
                                  }
                                  w = 0;
                                  if ((A | 0) > 0) {
                                    while (1) {
                                      p = o(w, A);
                                      q = 0;
                                      while (1) {
                                        h[(ha + (q << 1)) >> 1] =
                                          g[(ea + ((p + q) | 0)) | 0];
                                        q = (q + 1) | 0;
                                        if ((A | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      u = 0;
                                      D = (ca + (w << 2)) | 0;
                                      i[D >> 2] = 0;
                                      s = 1;
                                      v = ((p << 1) + ga) | 0;
                                      y = 0;
                                      while (1) {
                                        p = 0;
                                        q = 0;
                                        while (1) {
                                          p =
                                            (o(
                                              h[(((y - q) << 1) + m) >> 1],
                                              h[(ha + (q << 1)) >> 1]
                                            ) +
                                              p) |
                                            0;
                                          q = (q + 1) | 0;
                                          if ((s | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        h[(v + (y << 1)) >> 1] = p >>> 13;
                                        s = (s + 1) | 0;
                                        p = (p << 3) >> 16;
                                        u = (o(p, p) + u) | 0;
                                        y = (y + 1) | 0;
                                        if ((A | 0) != (y | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[D >> 2] = u;
                                      w = (w + 1) | 0;
                                      if ((Q | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break k;
                                    }
                                  }
                                  U(ca, 0, D);
                                }
                                if ((Y | 0) >= 2) {
                                  U(z, 0, ((E | 0) > 1 ? E : 1) << 2);
                                }
                                l: {
                                  if ((L | 0) < 1) {
                                    break l;
                                  }
                                  J = (G + M) | 0;
                                  _ = (I + M) | 0;
                                  $ = (M + O) | 0;
                                  ia = (B + M) | 0;
                                  x = (F + M) | 0;
                                  Z = (E | 0) > 1 ? E : 1;
                                  aa = (M + K) | 0;
                                  D = (E + -1) | 0;
                                  O = (aa + (D << 2)) | 0;
                                  while (1) {
                                    v = C;
                                    C = t;
                                    q = 0;
                                    p = (Y | 0) > 1;
                                    m: {
                                      if (!p) {
                                        break m;
                                      }
                                      while (1) {
                                        i[(aa + (q << 2)) >> 2] = 2147483647;
                                        q = (q + 1) | 0;
                                        if ((Z | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      q = 0;
                                      if (!p) {
                                        break m;
                                      }
                                      while (1) {
                                        p = q << 2;
                                        i[(p + _) >> 2] = 0;
                                        i[(p + $) >> 2] = 0;
                                        q = (q + 1) | 0;
                                        if ((Z | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      y = (Y | 0) < 2;
                                      if (y) {
                                        break m;
                                      }
                                      I = o(A, P);
                                      M = 0;
                                      while (1) {
                                        s = M << 2;
                                        t = (i[(s + C) >> 2] + (I << 1)) | 0;
                                        p = 0;
                                        q = 0;
                                        K = (A | 0) < 1;
                                        if (!K) {
                                          while (1) {
                                            B = p;
                                            p = h[(t + (q << 1)) >> 1];
                                            p = (B + o(p, p)) | 0;
                                            q = (q + 1) | 0;
                                            if ((A | 0) != (q | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        n: {
                                          if (T) {
                                            Ga(t, ga, A, Q, ca, E, x, ia);
                                            break n;
                                          }
                                          Ha(t, ga, A, Q, ca, E, x, ia);
                                        }
                                        G = (p >>> 1) | 0;
                                        u = (s + J) | 0;
                                        t = 0;
                                        while (1) {
                                          q = 0;
                                          w = t << 2;
                                          F =
                                            (i[(w + ia) >> 2] +
                                              ((G + i[u >> 2]) | 0)) |
                                            0;
                                          o: {
                                            if ((F | 0) >= i[O >> 2]) {
                                              break o;
                                            }
                                            while (1) {
                                              z = (aa + (q << 2)) | 0;
                                              if ((F | 0) >= i[z >> 2]) {
                                                q = (q + 1) | 0;
                                                if ((Z | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break o;
                                              }
                                              break;
                                            }
                                            s = D;
                                            p = s;
                                            if ((p | 0) > (q | 0)) {
                                              while (1) {
                                                B = p << 2;
                                                p = (p + -1) | 0;
                                                s = p << 2;
                                                i[(B + aa) >> 2] =
                                                  i[(s + aa) >> 2];
                                                i[(B + $) >> 2] =
                                                  i[(s + $) >> 2];
                                                i[(B + _) >> 2] =
                                                  i[(s + _) >> 2];
                                                if ((p | 0) > (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              s = q;
                                            }
                                            i[z >> 2] = F;
                                            p = s << 2;
                                            i[(p + $) >> 2] = i[(x + w) >> 2];
                                            i[(p + _) >> 2] = M;
                                          }
                                          t = (t + 1) | 0;
                                          if ((Z | 0) != (t | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        if (P) {
                                          M = (M + 1) | 0;
                                          if ((M | 0) < (E | 0)) {
                                            continue;
                                          }
                                        }
                                        break;
                                      }
                                      if (y) {
                                        break m;
                                      }
                                      p = o(A, (P + 1) | 0);
                                      F = (j - p) | 0;
                                      t = 0;
                                      while (1) {
                                        if ((p | 0) < (j | 0)) {
                                          q = t << 2;
                                          w = i[(q + v) >> 2];
                                          z =
                                            i[
                                              ((i[(q + _) >> 2] << 2) + C) >> 2
                                            ];
                                          q = p;
                                          while (1) {
                                            s = q << 1;
                                            h[(s + w) >> 1] = k[(s + z) >> 1];
                                            q = (q + 1) | 0;
                                            if ((q | 0) < (j | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        p: {
                                          if (((F | 0) < 1) | K) {
                                            break p;
                                          }
                                          q = t << 2;
                                          B = (i[(q + v) >> 2] + (p << 1)) | 0;
                                          q = i[(q + $) >> 2];
                                          I = o(
                                            A,
                                            (q - ((q | 0) < (Q | 0) ? 0 : Q)) |
                                              0
                                          );
                                          s = 0;
                                          if ((q | 0) < (Q | 0)) {
                                            while (1) {
                                              G = (((A - s) << 1) + m) | 0;
                                              u =
                                                g[(ea + ((s + I) | 0)) | 0] <<
                                                3;
                                              q = 0;
                                              while (1) {
                                                w = q << 1;
                                                z = (w + B) | 0;
                                                h[z >> 1] =
                                                  k[z >> 1] -
                                                  (((o(u, h[(w + G) >> 1]) +
                                                    32768) >>>
                                                    16) |
                                                    0);
                                                q = (q + 1) | 0;
                                                if ((F | 0) != (q | 0)) {
                                                  continue;
                                                }
                                                break;
                                              }
                                              s = (s + 1) | 0;
                                              if ((A | 0) != (s | 0)) {
                                                continue;
                                              }
                                              break p;
                                            }
                                          }
                                          while (1) {
                                            G = (((A - s) << 1) + m) | 0;
                                            u =
                                              g[(ea + ((s + I) | 0)) | 0] << 3;
                                            q = 0;
                                            while (1) {
                                              w = q << 1;
                                              z = (w + B) | 0;
                                              h[z >> 1] =
                                                k[z >> 1] -
                                                (((32768 -
                                                  o(u, h[(w + G) >> 1])) >>>
                                                  16) |
                                                  0);
                                              q = (q + 1) | 0;
                                              if ((F | 0) != (q | 0)) {
                                                continue;
                                              }
                                              break;
                                            }
                                            s = (s + 1) | 0;
                                            if ((A | 0) != (s | 0)) {
                                              continue;
                                            }
                                            break;
                                          }
                                        }
                                        G = t << 2;
                                        u = (G + _) | 0;
                                        w = (G + ba) | 0;
                                        z = i[w >> 2];
                                        q = 0;
                                        while (1) {
                                          s = q << 2;
                                          i[(s + z) >> 2] =
                                            i[
                                              (s +
                                                i[
                                                  ((i[u >> 2] << 2) + fa) >> 2
                                                ]) >>
                                                2
                                            ];
                                          q = (q + 1) | 0;
                                          if ((L | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        i[(i[w >> 2] + (P << 2)) >> 2] =
                                          i[(G + $) >> 2];
                                        t = (t + 1) | 0;
                                        if ((Z | 0) != (t | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      t = 0;
                                      if (y) {
                                        break m;
                                      }
                                      while (1) {
                                        p = t << 2;
                                        z = i[(p + fa) >> 2];
                                        s = i[(p + ba) >> 2];
                                        q = 0;
                                        while (1) {
                                          p = q << 2;
                                          i[(p + z) >> 2] = i[(p + s) >> 2];
                                          q = (q + 1) | 0;
                                          if ((L | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        t = (t + 1) | 0;
                                        if ((Z | 0) != (t | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      q = 0;
                                      if (y) {
                                        break m;
                                      }
                                      while (1) {
                                        p = q << 2;
                                        i[(p + J) >> 2] = i[(p + aa) >> 2];
                                        q = (q + 1) | 0;
                                        if ((Z | 0) != (q | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    t = v;
                                    P = (P + 1) | 0;
                                    if ((L | 0) != (P | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  q = 0;
                                  if ((L | 0) <= 0) {
                                    break l;
                                  }
                                  while (1) {
                                    m = q << 2;
                                    p = i[(m + i[ba >> 2]) >> 2];
                                    i[(m + N) >> 2] = p;
                                    W(n, p, (i[(e + 12) >> 2] + T) | 0);
                                    q = (q + 1) | 0;
                                    if ((L | 0) != (q | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if (((L | 0) < 1) | ((A | 0) < 1)) {
                                    break l;
                                  }
                                  u = 0;
                                  while (1) {
                                    e = i[((u << 2) + N) >> 2];
                                    n = (e | 0) < (Q | 0);
                                    m = o(A, (e - (n ? 0 : Q)) | 0);
                                    e = o(u, A);
                                    q = 0;
                                    p = 0;
                                    q: {
                                      if (!n) {
                                        while (1) {
                                          i[(da + ((e + q) << 2)) >> 2] =
                                            0 -
                                            (g[(ea + ((m + q) | 0)) | 0] << 9);
                                          q = (q + 1) | 0;
                                          if ((A | 0) != (q | 0)) {
                                            continue;
                                          }
                                          break q;
                                        }
                                      }
                                      while (1) {
                                        i[(da + ((e + p) << 2)) >> 2] =
                                          g[(ea + ((m + p) | 0)) | 0] << 9;
                                        p = (p + 1) | 0;
                                        if ((A | 0) != (p | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    u = (u + 1) | 0;
                                    if ((L | 0) != (u | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                r: {
                                  if ((j | 0) >= 1) {
                                    q = 0;
                                    while (1) {
                                      m = q << 2;
                                      e = (m + l) | 0;
                                      i[e >> 2] = i[(m + da) >> 2] + i[e >> 2];
                                      q = (q + 1) | 0;
                                      if ((q | 0) != (j | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    if (!r) {
                                      break a;
                                    }
                                    y = (V + ha) | 0;
                                    l = (S + y) | 0;
                                    e = l;
                                    if ((j | 0) < 1) {
                                      break r;
                                    }
                                    q = 0;
                                    while (1) {
                                      h[(l + (q << 1)) >> 1] =
                                        (i[(da + (q << 2)) >> 2] + 32) >>> 6;
                                      q = (q + 1) | 0;
                                      if ((q | 0) != (j | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    ka(l, b, c, d, l, j, f, y);
                                    if ((j | 0) < 1) {
                                      break a;
                                    }
                                    q = 0;
                                    while (1) {
                                      c = q << 1;
                                      b = (c + a) | 0;
                                      h[b >> 1] =
                                        k[b >> 1] -
                                        (((h[(c + l) >> 1] + 2) >>> 2) | 0);
                                      q = (q + 1) | 0;
                                      if ((q | 0) != (j | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  }
                                  if (!r) {
                                    break a;
                                  }
                                  y = (V + ha) | 0;
                                  e = (S + y) | 0;
                                }
                                ka(e, b, c, d, e, j, f, y);
                                break a;
                              }
                              n = (0 - B) | 0;
                              q = 0;
                              if ((j | 0) > 0) {
                                while (1) {
                                  m = q << 2;
                                  e = (m + l) | 0;
                                  i[e >> 2] = i[(m + O) >> 2] + i[e >> 2];
                                  q = (q + 1) | 0;
                                  if ((q | 0) != (j | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if (!r) {
                                  break a;
                                }
                                e = (B + I) | 0;
                                l = (e + n) | 0;
                                q = 0;
                                while (1) {
                                  h[(l + (q << 1)) >> 1] =
                                    (i[(O + (q << 2)) >> 2] + 32) >>> 6;
                                  q = (q + 1) | 0;
                                  if ((q | 0) != (j | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                ka(l, b, c, d, l, j, f, e);
                                q = 0;
                                while (1) {
                                  c = q << 1;
                                  b = (c + a) | 0;
                                  h[b >> 1] =
                                    k[b >> 1] -
                                    (((h[(c + l) >> 1] + 2) >>> 2) | 0);
                                  q = (q + 1) | 0;
                                  if ((q | 0) != (j | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if (!r) {
                                break a;
                              }
                              e = (B + I) | 0;
                              a = (e + n) | 0;
                              ka(a, b, c, d, a, j, f, e);
                            }
                            H = (R + 16) | 0;
                          }
                          function Sb(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w,
                            x,
                            y,
                            z
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            s = s | 0;
                            t = t | 0;
                            u = u | 0;
                            v = v | 0;
                            w = w | 0;
                            x = x | 0;
                            y = y | 0;
                            z = z | 0;
                            var A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              J = 0,
                              K = 0,
                              L = 0,
                              M = 0,
                              N = 0,
                              O = 0,
                              P = 0,
                              Q = 0,
                              R = 0,
                              S = 0,
                              T = 0,
                              V = 0,
                              Y = 0,
                              Z = 0,
                              $ = 0,
                              ba = 0,
                              ca = 0,
                              da = 0,
                              ea = 0,
                              fa = 0,
                              ga = 0,
                              ha = 0,
                              ia = 0,
                              ja = 0,
                              ka = 0,
                              la = 0,
                              ma = 0,
                              na = 0,
                              oa = 0,
                              pa = 0,
                              qa = 0;
                            B = (H - 80) | 0;
                            H = B;
                            a: {
                              b: {
                                c: {
                                  if ((n | 0) >= (m | 0)) {
                                    p = (w | 0) < 10 ? w : 10;
                                    Q = (p | 0) > 1 ? p : 1;
                                    J = (0 - t) & 3;
                                    A = i[(l + 4) >> 2];
                                    F = i[l >> 2];
                                    if ((r | 0) <= 0) {
                                      break b;
                                    }
                                    w = 0;
                                    break c;
                                  }
                                  W(s, 0, i[(l + 8) >> 2]);
                                  W(s, 0, i[(l + 4) >> 2]);
                                  U(f, 0, r << 2);
                                  break a;
                                }
                                while (1) {
                                  p = h[((w << 1) + a) >> 1];
                                  G = p >> 31;
                                  if ((G ^ (p + G)) < 16384) {
                                    w = (w + 1) | 0;
                                    if ((w | 0) != (r | 0)) {
                                      continue;
                                    }
                                    break b;
                                  }
                                  break;
                                }
                                Z = 1;
                              }
                              G = Q << 2;
                              $ = (t + J) | 0;
                              w = (0 - n) | 0;
                              d: {
                                if ((w | 0) >= (r | 0)) {
                                  break d;
                                }
                                while (1) {
                                  p = h[((w << 1) + u) >> 1];
                                  t = p >> 31;
                                  if ((t ^ (p + t)) < 16384) {
                                    w = (w + 1) | 0;
                                    if ((w | 0) != (r | 0)) {
                                      continue;
                                    }
                                    break d;
                                  }
                                  break;
                                }
                                Z = 1;
                              }
                              t = (G + $) | 0;
                              p = (((n - m) | 0) + 1) | 0;
                              da = (Q | 0) > (p | 0) ? p : Q;
                              e: {
                                if ((m | 0) != (n | 0)) {
                                  Ia(b, m, n, r, $, 0, da, t);
                                  break e;
                                }
                                i[$ >> 2] = n;
                              }
                              L = r << 1;
                              R = r << 2;
                              ea = (t + ((0 - t) & 3)) | 0;
                              b = (R + ea) | 0;
                              G = ((b & 1) + b) | 0;
                              b = (L + G) | 0;
                              fa = ((b & 1) + b) | 0;
                              if ((da | 0) >= 1) {
                                na = 1 << A;
                                ba = (F + ((x << 2) << A)) | 0;
                                b = (L + fa) | 0;
                                F = ((b & 1) + b) | 0;
                                b = (F + o(r, 6)) | 0;
                                b = (((b + L) | 0) + (b & 1)) | 0;
                                ga = (((0 - b) & 3) + b) | 0;
                                ka = q << 2;
                                K = (b - L) | 0;
                                x = (F + (L << 1)) | 0;
                                J = (F + L) | 0;
                                b = (y | 0) > 2 ? y : 2;
                                P = o((b | 0) < 30 ? b : 30, 655);
                                b = r >> 2;
                                la = (r + -1) | 0;
                                Q = !Z;
                                oa = (A | 0) == 31;
                                ha = -1;
                                while (1) {
                                  E = i[((ia << 2) + $) >> 2];
                                  pa = U(f, 0, R);
                                  N = i[z >> 2];
                                  i[(B + 76) >> 2] = x;
                                  i[(B + 72) >> 2] = J;
                                  i[(B + 68) >> 2] = F;
                                  w = 0;
                                  n = Q;
                                  f: {
                                    if ((r | 0) < 1) {
                                      break f;
                                    }
                                    while (1) {
                                      n = w << 1;
                                      h[(n + G) >> 1] = k[(a + n) >> 1];
                                      w = (w + 1) | 0;
                                      if ((w | 0) != (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    t = (1 - E) | 0;
                                    w = 0;
                                    while (1) {
                                      y = ((w << 1) + K) | 0;
                                      p = (t + w) | 0;
                                      g: {
                                        if ((p | 0) >= 0) {
                                          p = (p - E) | 0;
                                          n = 0;
                                          if ((p | 0) > -1) {
                                            break g;
                                          }
                                        }
                                        n = k[((p << 1) + u) >> 1];
                                      }
                                      h[y >> 1] = n;
                                      w = (w + 1) | 0;
                                      if ((w | 0) != (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    w = 0;
                                    p = 0;
                                    n = 1;
                                    if (!Z) {
                                      break f;
                                    }
                                    while (1) {
                                      n = ((p << 1) + K) | 0;
                                      h[n >> 1] = h[n >> 1] >>> 1;
                                      p = (p + 1) | 0;
                                      if ((r | 0) != (p | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    while (1) {
                                      n = (G + (w << 1)) | 0;
                                      h[n >> 1] = h[n >> 1] >>> 1;
                                      w = (w + 1) | 0;
                                      if ((w | 0) != (r | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    n = 0;
                                  }
                                  h: {
                                    if ((q | 0) <= 0) {
                                      _(K, c, K, r, q, ga);
                                      break h;
                                    }
                                    p = U(ga, 0, ka);
                                    _(K, c, K, r, q, p);
                                    U(p, 0, ka);
                                  }
                                  aa(K, d, e, K, r, q, ga);
                                  w = 0;
                                  i: {
                                    j: {
                                      k: {
                                        if ((r | 0) <= 0) {
                                          D = n ^ 1;
                                          y = E ^ -1;
                                          break k;
                                        }
                                        while (1) {
                                          p = w << 1;
                                          h[(p + x) >> 1] = k[(p + K) >> 1];
                                          w = (w + 1) | 0;
                                          if ((w | 0) != (r | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        D = n ^ 1;
                                        y = E ^ -1;
                                        if ((r | 0) > 1) {
                                          break j;
                                        }
                                      }
                                      h[J >> 1] =
                                        o(
                                          h[v >> 1],
                                          h[(u - (E << 1)) >> 1] >> D
                                        ) >>> 14;
                                      C =
                                        (o(
                                          h[v >> 1],
                                          h[((y << 1) + u) >> 1] >> D
                                        ) >>>
                                          14) |
                                        0;
                                      h[F >> 1] = C;
                                      break i;
                                    }
                                    t = h[(u - (E << 1)) >> 1] >> D;
                                    h[J >> 1] = o(t, h[v >> 1]) >>> 14;
                                    w = 0;
                                    while (1) {
                                      n = (w + 1) | 0;
                                      p = n << 1;
                                      h[(p + J) >> 1] =
                                        k[(x + (w << 1)) >> 1] +
                                        (((o(t, h[(p + v) >> 1]) - -8192) >>>
                                          14) |
                                          0);
                                      w = n;
                                      if ((la | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    t = h[((y << 1) + u) >> 1] >> D;
                                    C = (o(t, h[v >> 1]) >>> 14) | 0;
                                    h[F >> 1] = C;
                                    w = 0;
                                    while (1) {
                                      n = (w + 1) | 0;
                                      p = n << 1;
                                      h[(p + F) >> 1] =
                                        k[(J + (w << 1)) >> 1] +
                                        (((o(t, h[(p + v) >> 1]) - -8192) >>>
                                          14) |
                                          0);
                                      w = n;
                                      if ((la | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  S = 0;
                                  t = 0;
                                  D = 0;
                                  n = 0;
                                  y = 0;
                                  T = 0;
                                  A = 0;
                                  V = 0;
                                  Y = 0;
                                  I = 0;
                                  if (b) {
                                    p = F;
                                    n = b;
                                    w = G;
                                    while (1) {
                                      I =
                                        (((((((o(
                                          h[(w + 2) >> 1],
                                          h[(p + 2) >> 1]
                                        ) +
                                          o(h[w >> 1], (C << 16) >> 16)) |
                                          0) +
                                          o(h[(w + 4) >> 1], h[(p + 4) >> 1])) |
                                          0) +
                                          o(
                                            h[(w + 6) >> 1],
                                            h[(p + 6) >> 1]
                                          )) >>
                                          6) +
                                          I) |
                                        0;
                                      n = (n + -1) | 0;
                                      if (n) {
                                        w = (w + 8) | 0;
                                        p = (p + 8) | 0;
                                        C = k[p >> 1];
                                        continue;
                                      } else {
                                        w = J;
                                        n = b;
                                        p = G;
                                        while (1) {
                                          Y =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              Y) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = x;
                                        n = b;
                                        p = G;
                                        while (1) {
                                          V =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              V) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = F;
                                        p = b;
                                        while (1) {
                                          n = h[(w + 2) >> 1];
                                          A = o(n, n);
                                          n = h[w >> 1];
                                          A = (A + o(n, n)) | 0;
                                          n = h[(w + 4) >> 1];
                                          A = (A + o(n, n)) | 0;
                                          n = h[(w + 6) >> 1];
                                          t =
                                            ((((A + o(n, n)) >>> 6) | 0) + t) |
                                            0;
                                          w = (w + 8) | 0;
                                          p = (p + -1) | 0;
                                          if (p) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = J;
                                        n = b;
                                        p = F;
                                        while (1) {
                                          T =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              T) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = J;
                                        A = b;
                                        p = i[(B + 72) >> 2];
                                        n = p;
                                        while (1) {
                                          D =
                                            (((((((o(
                                              h[(n + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[n >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(n + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(n + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              D) |
                                            0;
                                          n = (n + 8) | 0;
                                          w = (w + 8) | 0;
                                          A = (A + -1) | 0;
                                          if (A) {
                                            continue;
                                          }
                                          break;
                                        }
                                        w = x;
                                        A = b;
                                        n = F;
                                        while (1) {
                                          y =
                                            (((((((o(
                                              h[(n + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[n >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(n + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(n + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              y) |
                                            0;
                                          n = (n + 8) | 0;
                                          w = (w + 8) | 0;
                                          A = (A + -1) | 0;
                                          if (A) {
                                            continue;
                                          }
                                          break;
                                        }
                                        A = 0;
                                        w = x;
                                        n = b;
                                        while (1) {
                                          A =
                                            (((((((o(
                                              h[(p + 2) >> 1],
                                              h[(w + 2) >> 1]
                                            ) +
                                              o(h[p >> 1], h[w >> 1])) |
                                              0) +
                                              o(
                                                h[(p + 4) >> 1],
                                                h[(w + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(p + 6) >> 1],
                                                h[(w + 6) >> 1]
                                              )) >>
                                              6) +
                                              A) |
                                            0;
                                          p = (p + 8) | 0;
                                          w = (w + 8) | 0;
                                          n = (n + -1) | 0;
                                          if (n) {
                                            continue;
                                          }
                                          break;
                                        }
                                        n = 0;
                                        w = i[(B + 76) >> 2];
                                        p = x;
                                        C = b;
                                        while (1) {
                                          n =
                                            (((((((o(
                                              h[(w + 2) >> 1],
                                              h[(p + 2) >> 1]
                                            ) +
                                              o(h[w >> 1], h[p >> 1])) |
                                              0) +
                                              o(
                                                h[(w + 4) >> 1],
                                                h[(p + 4) >> 1]
                                              )) |
                                              0) +
                                              o(
                                                h[(w + 6) >> 1],
                                                h[(p + 6) >> 1]
                                              )) >>
                                              6) +
                                              n) |
                                            0;
                                          w = (w + 8) | 0;
                                          p = (p + 8) | 0;
                                          C = (C + -1) | 0;
                                          if (C) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      break;
                                    }
                                  }
                                  i[(B + 52) >> 2] = y << 1;
                                  i[(B + 48) >> 2] = T << 1;
                                  i[(B + 44) >> 2] = A << 1;
                                  i[(B + 40) >> 2] = I << 1;
                                  i[(B + 36) >> 2] = Y << 1;
                                  i[(B + 32) >> 2] = V << 1;
                                  i[(B + 64) >> 2] =
                                    ((((o(t & 32767, P) >>> 15) | 0) + t) | 0) +
                                    o((t << 1) >> 16, P);
                                  i[(B + 60) >> 2] =
                                    ((((o(D & 32767, P) >>> 15) | 0) + D) | 0) +
                                    o((D << 1) >> 16, P);
                                  i[(B + 56) >> 2] =
                                    ((((o(n & 32767, P) >>> 15) | 0) + n) | 0) +
                                    o((n << 1) >> 16, P);
                                  wa((B + 32) | 0, B, 32767, 9);
                                  if (!oa) {
                                    T = (N | 0) > 262144 ? 31 : 128;
                                    t = -2147483647;
                                    D = 0;
                                    V = h[(B + 16) >> 1];
                                    Y = h[(B + 14) >> 1];
                                    I = h[(B + 12) >> 1];
                                    N = h[(B + 10) >> 1];
                                    C = h[(B + 8) >> 1];
                                    A = h[(B + 6) >> 1];
                                    y = h[(B + 4) >> 1];
                                    w = h[(B + 2) >> 1];
                                    p = h[B >> 1];
                                    while (1) {
                                      ca = ((D << 2) + ba) | 0;
                                      O = (g[(ca + 1) | 0] + 32) | 0;
                                      M = (g[ca | 0] + 32) | 0;
                                      n = (g[(ca + 2) | 0] + 32) | 0;
                                      n =
                                        ((((o(O, w) << 6) + (o(M, p) << 6)) |
                                          0) +
                                          (o(n, y) << 6) -
                                          (((((((((o(A, (o(M, O) << 16) >> 16) +
                                            o(I, o(M, M) & 65535)) |
                                            0) +
                                            o(Y, o(O, O) & 65535)) |
                                            0) +
                                            o(V, o(n, n) & 65535)) |
                                            0) +
                                            o(C, (o(n, O) << 16) >> 16)) |
                                            0) +
                                            o(N, (o(n, M) << 16) >> 16))) |
                                        0;
                                      M = (n | 0) > (t | 0);
                                      O = n;
                                      n = (T | 0) < g[(ca + 3) | 0];
                                      t = M ? (n ? t : O) : t;
                                      S = M ? (n ? S : D) : S;
                                      D = (D + 1) | 0;
                                      if ((na | 0) != (D | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  p = S << 2;
                                  A = g[((p | 1) + ba) | 0];
                                  n = g[((p | 2) + ba) | 0];
                                  y = g[(p + ba) | 0];
                                  I = U(pa, 0, R);
                                  N = (n + 32) | 0;
                                  C = (E + 1) | 0;
                                  w = (C | 0) > (r | 0) ? r : C;
                                  if ((w | 0) > 0) {
                                    t = N << 7;
                                    n = 0;
                                    while (1) {
                                      p = (I + (n << 2)) | 0;
                                      i[p >> 2] =
                                        i[p >> 2] +
                                        o(t, h[(((n - C) << 1) + u) >> 1]);
                                      n = (n + 1) | 0;
                                      if ((w | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  C = (C + E) | 0;
                                  t = (C | 0) < (r | 0) ? C : r;
                                  if ((w | 0) < (t | 0)) {
                                    p = N << 7;
                                    while (1) {
                                      n = (I + (w << 2)) | 0;
                                      i[n >> 2] =
                                        i[n >> 2] +
                                        o(p, h[(((w - C) << 1) + u) >> 1]);
                                      w = (w + 1) | 0;
                                      if ((t | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  C = (A + 32) | 0;
                                  w = (E | 0) > (r | 0) ? r : E;
                                  if ((w | 0) > 0) {
                                    t = C << 7;
                                    n = 0;
                                    while (1) {
                                      p = (I + (n << 2)) | 0;
                                      i[p >> 2] =
                                        i[p >> 2] +
                                        o(t, h[(((n - E) << 1) + u) >> 1]);
                                      n = (n + 1) | 0;
                                      if ((w | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  A = E << 1;
                                  t = (A | 0) < (r | 0) ? A : r;
                                  if ((w | 0) < (t | 0)) {
                                    p = C << 7;
                                    while (1) {
                                      n = (I + (w << 2)) | 0;
                                      i[n >> 2] =
                                        i[n >> 2] +
                                        o(p, h[(((w - A) << 1) + u) >> 1]);
                                      w = (w + 1) | 0;
                                      if ((t | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  A = (y + 32) | 0;
                                  y = (E + -1) | 0;
                                  w = (y | 0) > (r | 0) ? r : y;
                                  if ((w | 0) >= 1) {
                                    t = A << 7;
                                    n = 0;
                                    while (1) {
                                      p = (I + (n << 2)) | 0;
                                      i[p >> 2] =
                                        i[p >> 2] +
                                        o(t, h[(((n - y) << 1) + u) >> 1]);
                                      n = (n + 1) | 0;
                                      if ((w | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  y = (y + E) | 0;
                                  t = (y | 0) < (r | 0) ? y : r;
                                  if ((w | 0) < (t | 0)) {
                                    p = A << 7;
                                    while (1) {
                                      n = (I + (w << 2)) | 0;
                                      i[n >> 2] =
                                        i[n >> 2] +
                                        o(p, h[(((w - y) << 1) + u) >> 1]);
                                      w = (w + 1) | 0;
                                      if ((t | 0) != (w | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if ((r | 0) > 0) {
                                    n = 0;
                                    while (1) {
                                      t = n << 1;
                                      p = (t + G) | 0;
                                      h[p >> 1] =
                                        k[p >> 1] -
                                        (((((((o(C, h[(t + J) >> 1]) +
                                          o(A, h[(t + x) >> 1])) |
                                          0) +
                                          o(N, h[(t + F) >> 1])) <<
                                          10) +
                                          32768) >>>
                                          16) |
                                          0);
                                      n = (n + 1) | 0;
                                      if ((r | 0) != (n | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  n = 0;
                                  w = G;
                                  t = b;
                                  if (t) {
                                    while (1) {
                                      p = n;
                                      n = h[(w + 2) >> 1];
                                      y = o(n, n);
                                      n = h[w >> 1];
                                      y = (y + o(n, n)) | 0;
                                      n = h[(w + 4) >> 1];
                                      y = (y + o(n, n)) | 0;
                                      n = h[(w + 6) >> 1];
                                      n = (p + (((y + o(n, n)) >>> 6) | 0)) | 0;
                                      w = (w + 8) | 0;
                                      t = (t + -1) | 0;
                                      if (t) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if (
                                    !((n | 0) >= (ha | 0) ? (ha | 0) >= 0 : 0)
                                  ) {
                                    X(ea, I, R);
                                    X(fa, G, L);
                                    ha = n;
                                    ma = S;
                                    qa = E;
                                  }
                                  ia = (ia + 1) | 0;
                                  if ((ia | 0) != (da | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              W(s, (qa - m) | 0, i[(l + 8) >> 2]);
                              W(s, ma, i[(l + 4) >> 2]);
                              d = i[z >> 2];
                              c = (d | 0) < 1024;
                              b =
                                (j[(i[l >> 2] + ((ma << 2) | 3)) | 0] << 24) >>
                                16;
                              i[z >> 2] =
                                o(b, c ? 0 : (d << 3) >> 16) +
                                (o(b, c ? 1024 : d & 8191) >> 13);
                              X(f, ea, R);
                              b = X(a, fa, L);
                              if (!(!Z | ((r | 0) < 1))) {
                                while (1) {
                                  a = (b + (ja << 1)) | 0;
                                  h[a >> 1] = k[a >> 1] << 1;
                                  ja = (ja + 1) | 0;
                                  if ((ja | 0) != (r | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              m = E;
                            }
                            H = (B + 80) | 0;
                            return m | 0;
                          }
                          function ub(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0;
                            r = (H - 32) | 0;
                            H = r;
                            a: {
                              b: {
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                while (1) {
                                  f = e << 1;
                                  h[(f + b) >> 1] = k[(a + f) >> 1];
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                f = h[b >> 1];
                                n = r;
                                l = (c + -1) | 0;
                                e = 25736;
                                c: {
                                  if (!l) {
                                    break c;
                                  }
                                  e = k[(b + 2) >> 1];
                                }
                                e = (e - f) | 0;
                                h[n >> 1] =
                                  81920 /
                                  (((((e << 16) >> 16 < (f | 0) ? e : f) <<
                                    16) +
                                    19660800) >>
                                    16);
                                e = 1;
                                if ((c | 0) != 1) {
                                  while (1) {
                                    n = e << 1;
                                    f = (n + b) | 0;
                                    q = k[f >> 1];
                                    m = ((q - k[(f + -2) >> 1]) << 16) >> 16;
                                    f = (e + 1) | 0;
                                    e =
                                      (((e | 0) != (l | 0)
                                        ? k[((f << 1) + b) >> 1]
                                        : 25736) -
                                        q) |
                                      0;
                                    h[(n + r) >> 1] =
                                      81920 /
                                      (((((e << 16) >> 16 < (m | 0) ? e : m) <<
                                        16) +
                                        19660800) >>
                                        16);
                                    e = f;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                e = 0;
                                while (1) {
                                  f = ((e << 1) + b) | 0;
                                  e = (e + 1) | 0;
                                  h[f >> 1] = k[f >> 1] - (e << 11);
                                  if ((c | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                q = 2147483647;
                                m = 0;
                                f = 8848;
                                l = 0;
                                while (1) {
                                  n = 0;
                                  e = f;
                                  s = 0;
                                  while (1) {
                                    p = n;
                                    n =
                                      ((k[((s << 1) + b) >> 1] -
                                        (g[e | 0] << 5)) <<
                                        16) >>
                                      16;
                                    n = (p + o(n, n)) | 0;
                                    e = (e + 1) | 0;
                                    s = (s + 1) | 0;
                                    if ((s | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  e = (n | 0) < (q | 0);
                                  m = e ? l : m;
                                  q = e ? n : q;
                                  f = (c + f) | 0;
                                  l = (l + 1) | 0;
                                  if ((l | 0) != 64) {
                                    continue;
                                  }
                                  break;
                                }
                                f = o(c, m);
                                e = 0;
                                while (1) {
                                  l = ((e << 1) + b) | 0;
                                  h[l >> 1] =
                                    k[l >> 1] -
                                    (g[(((e + f) | 0) + 8848) | 0] << 5);
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                W(d, m, 6);
                                e = 0;
                                if ((c | 0) <= 0) {
                                  break a;
                                }
                                while (1) {
                                  f = ((e << 1) + b) | 0;
                                  h[f >> 1] = k[f >> 1] << 1;
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              W(d, 0, 6);
                            }
                            t = k[b >> 1];
                            u = k[(b + 8) >> 1];
                            v = k[(b + 6) >> 1];
                            w = k[(b + 4) >> 1];
                            i = k[(b + 2) >> 1];
                            l = 2147483647;
                            f = 0;
                            e = 9488;
                            n = h[(r + 8) >> 1];
                            q = h[(r + 6) >> 1];
                            s = h[(r + 4) >> 1];
                            y = h[(r + 2) >> 1];
                            z = h[r >> 1];
                            m = 0;
                            while (1) {
                              j = ((t - (g[e | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                ((o(z, j & 32767) >> 15) +
                                  o(z, (j << 1) >> 16)) |
                                0;
                              j = ((i - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                (((p + (o(y, j & 32767) >> 15)) | 0) +
                                  o(y, (j << 1) >> 16)) |
                                0;
                              j = ((w - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                (((p + (o(s, j & 32767) >> 15)) | 0) +
                                  o(s, (j << 1) >> 16)) |
                                0;
                              j = ((v - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              p =
                                (((p + (o(q, j & 32767) >> 15)) | 0) +
                                  o(q, (j << 1) >> 16)) |
                                0;
                              j = ((u - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              j = o(j, j);
                              x =
                                (((p + (o(n, j & 32767) >> 15)) | 0) +
                                  o(n, (j << 1) >> 16)) |
                                0;
                              j = (x | 0) < (l | 0);
                              l = j ? x : l;
                              f = j ? m : f;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[b >> 1] = k[b >> 1] - (g[(e + 9488) | 0] << 5);
                            h[(b + 2) >> 1] =
                              k[(b + 2) >> 1] - (g[(e + 9489) | 0] << 5);
                            h[(b + 4) >> 1] =
                              k[(b + 4) >> 1] - (g[(e + 9490) | 0] << 5);
                            h[(b + 6) >> 1] =
                              k[(b + 6) >> 1] - (g[(e + 9491) | 0] << 5);
                            h[(b + 8) >> 1] =
                              k[(b + 8) >> 1] - (g[(e + 9492) | 0] << 5);
                            W(d, f, 6);
                            j = k[b >> 1] << 1;
                            h[b >> 1] = j;
                            t = k[(b + 2) >> 1] << 1;
                            h[(b + 2) >> 1] = t;
                            u = k[(b + 4) >> 1] << 1;
                            h[(b + 4) >> 1] = u;
                            v = k[(b + 6) >> 1] << 1;
                            h[(b + 6) >> 1] = v;
                            w = k[(b + 8) >> 1] << 1;
                            h[(b + 8) >> 1] = w;
                            m = 2147483647;
                            f = 0;
                            e = 9808;
                            l = 0;
                            while (1) {
                              p = f;
                              f = ((j - (g[e | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                ((o(z, f & 32764) >> 15) +
                                  o(z, (f << 1) >> 16)) |
                                0;
                              f = ((t - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(y, f & 32764) >> 15)) | 0) +
                                  o(y, (f << 1) >> 16)) |
                                0;
                              f = ((u - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(s, f & 32764) >> 15)) | 0) +
                                  o(s, (f << 1) >> 16)) |
                                0;
                              f = ((v - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(q, f & 32764) >> 15)) | 0) +
                                  o(q, (f << 1) >> 16)) |
                                0;
                              f = ((w - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(n, f & 32764) >> 15)) | 0) +
                                  o(n, (f << 1) >> 16)) |
                                0;
                              x = (i | 0) < (m | 0);
                              f = x ? l : p;
                              l = (l + 1) | 0;
                              if ((l | 0) != 64) {
                                m = x ? i : m;
                                e = (e + 5) | 0;
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[(b + 8) >> 1] = w - (g[(e + 9812) | 0] << 5);
                            h[(b + 6) >> 1] = v - (g[(e + 9811) | 0] << 5);
                            h[(b + 4) >> 1] = u - (g[(e + 9810) | 0] << 5);
                            h[(b + 2) >> 1] = t - (g[(e + 9809) | 0] << 5);
                            h[b >> 1] = j - (g[(e + 9808) | 0] << 5);
                            W(d, f, 6);
                            j = k[(b + 10) >> 1];
                            t = k[(b + 18) >> 1];
                            u = k[(b + 16) >> 1];
                            v = k[(b + 14) >> 1];
                            w = k[(b + 12) >> 1];
                            l = 2147483647;
                            f = 0;
                            e = 10128;
                            n = h[(r + 18) >> 1];
                            q = h[(r + 16) >> 1];
                            s = h[(r + 14) >> 1];
                            y = h[(r + 12) >> 1];
                            z = h[(r + 10) >> 1];
                            m = 0;
                            while (1) {
                              i = ((j - (g[e | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                ((o(z, i & 32767) >> 15) +
                                  o(z, (i << 1) >> 16)) |
                                0;
                              i = ((w - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                (((p + (o(y, i & 32767) >> 15)) | 0) +
                                  o(y, (i << 1) >> 16)) |
                                0;
                              i = ((v - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                (((p + (o(s, i & 32767) >> 15)) | 0) +
                                  o(s, (i << 1) >> 16)) |
                                0;
                              i = ((u - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              p =
                                (((p + (o(q, i & 32767) >> 15)) | 0) +
                                  o(q, (i << 1) >> 16)) |
                                0;
                              i = ((t - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              x =
                                (((p + (o(n, i & 32767) >> 15)) | 0) +
                                  o(n, (i << 1) >> 16)) |
                                0;
                              i = (x | 0) < (l | 0);
                              l = i ? x : l;
                              f = i ? m : f;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[(b + 18) >> 1] = t - (g[(e + 10132) | 0] << 5);
                            h[(b + 16) >> 1] = u - (g[(e + 10131) | 0] << 5);
                            h[(b + 14) >> 1] = v - (g[(e + 10130) | 0] << 5);
                            h[(b + 12) >> 1] = w - (g[(e + 10129) | 0] << 5);
                            h[(b + 10) >> 1] = j - (g[(e + 10128) | 0] << 5);
                            W(d, f, 6);
                            j = k[(b + 10) >> 1] << 1;
                            h[(b + 10) >> 1] = j;
                            t = k[(b + 12) >> 1] << 1;
                            h[(b + 12) >> 1] = t;
                            u = k[(b + 14) >> 1] << 1;
                            h[(b + 14) >> 1] = u;
                            v = k[(b + 16) >> 1] << 1;
                            h[(b + 16) >> 1] = v;
                            w = k[(b + 18) >> 1] << 1;
                            h[(b + 18) >> 1] = w;
                            m = 2147483647;
                            f = 0;
                            e = 10448;
                            l = 0;
                            while (1) {
                              p = f;
                              f = ((j - (g[e | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                ((o(z, f & 32764) >> 15) +
                                  o(z, (f << 1) >> 16)) |
                                0;
                              f = ((t - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(y, f & 32764) >> 15)) | 0) +
                                  o(y, (f << 1) >> 16)) |
                                0;
                              f = ((u - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(s, f & 32764) >> 15)) | 0) +
                                  o(s, (f << 1) >> 16)) |
                                0;
                              f = ((v - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(q, f & 32764) >> 15)) | 0) +
                                  o(q, (f << 1) >> 16)) |
                                0;
                              f = ((w - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              i =
                                (((i + (o(n, f & 32764) >> 15)) | 0) +
                                  o(n, (f << 1) >> 16)) |
                                0;
                              x = (i | 0) < (m | 0);
                              f = x ? l : p;
                              l = (l + 1) | 0;
                              if ((l | 0) != 64) {
                                m = x ? i : m;
                                e = (e + 5) | 0;
                                continue;
                              }
                              break;
                            }
                            e = o(f, 5);
                            h[(b + 18) >> 1] = w - (g[(e + 10452) | 0] << 5);
                            h[(b + 16) >> 1] = v - (g[(e + 10451) | 0] << 5);
                            h[(b + 14) >> 1] = u - (g[(e + 10450) | 0] << 5);
                            h[(b + 12) >> 1] = t - (g[(e + 10449) | 0] << 5);
                            h[(b + 10) >> 1] = j - (g[(e + 10448) | 0] << 5);
                            W(d, f, 6);
                            e = 0;
                            d: {
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = ((e << 1) + b) | 0;
                                h[d >> 1] = (h[d >> 1] + 2) >>> 2;
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              e = 0;
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = e << 1;
                                f = (d + b) | 0;
                                h[f >> 1] = k[(a + d) >> 1] - k[f >> 1];
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (r + 32) | 0;
                          }
                          function ra(a, b, c, d, e) {
                            var f = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0;
                            f = (H - 80) | 0;
                            H = f;
                            i[(f + 76) >> 2] = b;
                            z = (f + 55) | 0;
                            w = (f + 56) | 0;
                            b = 0;
                            a: {
                              b: while (1) {
                                c: {
                                  if ((t | 0) < 0) {
                                    break c;
                                  }
                                  if ((b | 0) > ((2147483647 - t) | 0)) {
                                    i[3790] = 61;
                                    t = -1;
                                    break c;
                                  }
                                  t = (b + t) | 0;
                                }
                                d: {
                                  e: {
                                    f: {
                                      p = i[(f + 76) >> 2];
                                      b = p;
                                      l = j[b | 0];
                                      if (l) {
                                        while (1) {
                                          g: {
                                            k = l & 255;
                                            h: {
                                              if (!k) {
                                                l = b;
                                                break h;
                                              }
                                              if ((k | 0) != 37) {
                                                break g;
                                              }
                                              l = b;
                                              while (1) {
                                                if (j[(b + 1) | 0] != 37) {
                                                  break h;
                                                }
                                                k = (b + 2) | 0;
                                                i[(f + 76) >> 2] = k;
                                                l = (l + 1) | 0;
                                                m = j[(b + 2) | 0];
                                                b = k;
                                                if ((m | 0) == 37) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                            b = (l - p) | 0;
                                            if (a) {
                                              ja(a, p, b);
                                            }
                                            if (b) {
                                              continue b;
                                            }
                                            u = -1;
                                            l = 1;
                                            k = f;
                                            b = i[(f + 76) >> 2];
                                            if (
                                              !(
                                                (j[(b + 2) | 0] != 36) |
                                                ((g[
                                                  (i[(f + 76) >> 2] + 1) | 0
                                                ] +
                                                  -48) >>>
                                                  0 >=
                                                  10)
                                              )
                                            ) {
                                              u = (g[(b + 1) | 0] + -48) | 0;
                                              x = 1;
                                              l = 3;
                                            }
                                            b = (l + b) | 0;
                                            i[(k + 76) >> 2] = b;
                                            l = 0;
                                            v = g[b | 0];
                                            m = (v + -32) | 0;
                                            i: {
                                              if (m >>> 0 > 31) {
                                                k = b;
                                                break i;
                                              }
                                              k = b;
                                              m = 1 << m;
                                              if (!(m & 75913)) {
                                                break i;
                                              }
                                              while (1) {
                                                k = (b + 1) | 0;
                                                i[(f + 76) >> 2] = k;
                                                l = l | m;
                                                v = g[(b + 1) | 0];
                                                m = (v + -32) | 0;
                                                if (m >>> 0 > 31) {
                                                  break i;
                                                }
                                                b = k;
                                                m = 1 << m;
                                                if (m & 75913) {
                                                  continue;
                                                }
                                                break;
                                              }
                                            }
                                            j: {
                                              if ((v | 0) == 42) {
                                                m = f;
                                                k: {
                                                  l: {
                                                    if (
                                                      (g[(k + 1) | 0] + -48) >>>
                                                        0 >=
                                                      10
                                                    ) {
                                                      break l;
                                                    }
                                                    b = i[(f + 76) >> 2];
                                                    if (j[(b + 2) | 0] != 36) {
                                                      break l;
                                                    }
                                                    i[
                                                      ((((g[(b + 1) | 0] << 2) +
                                                        e) |
                                                        0) +
                                                        -192) >>
                                                        2
                                                    ] = 10;
                                                    r =
                                                      i[
                                                        ((((g[(b + 1) | 0] <<
                                                          3) +
                                                          d) |
                                                          0) +
                                                          -384) >>
                                                          2
                                                      ];
                                                    x = 1;
                                                    b = (b + 3) | 0;
                                                    break k;
                                                  }
                                                  if (x) {
                                                    break f;
                                                  }
                                                  x = 0;
                                                  r = 0;
                                                  if (a) {
                                                    b = i[c >> 2];
                                                    i[c >> 2] = b + 4;
                                                    r = i[b >> 2];
                                                  }
                                                  b =
                                                    (i[(f + 76) >> 2] + 1) | 0;
                                                }
                                                i[(m + 76) >> 2] = b;
                                                if ((r | 0) > -1) {
                                                  break j;
                                                }
                                                r = (0 - r) | 0;
                                                l = l | 8192;
                                                break j;
                                              }
                                              r = za((f + 76) | 0);
                                              if ((r | 0) < 0) {
                                                break f;
                                              }
                                              b = i[(f + 76) >> 2];
                                            }
                                            q = -1;
                                            m: {
                                              if (j[b | 0] != 46) {
                                                break m;
                                              }
                                              if (j[(b + 1) | 0] == 42) {
                                                n: {
                                                  if (
                                                    (g[(b + 2) | 0] + -48) >>>
                                                      0 >=
                                                    10
                                                  ) {
                                                    break n;
                                                  }
                                                  b = i[(f + 76) >> 2];
                                                  if (j[(b + 3) | 0] != 36) {
                                                    break n;
                                                  }
                                                  i[
                                                    ((((g[(b + 2) | 0] << 2) +
                                                      e) |
                                                      0) +
                                                      -192) >>
                                                      2
                                                  ] = 10;
                                                  q =
                                                    i[
                                                      ((((g[(b + 2) | 0] << 3) +
                                                        d) |
                                                        0) +
                                                        -384) >>
                                                        2
                                                    ];
                                                  b = (b + 4) | 0;
                                                  i[(f + 76) >> 2] = b;
                                                  break m;
                                                }
                                                if (x) {
                                                  break f;
                                                }
                                                if (a) {
                                                  b = i[c >> 2];
                                                  i[c >> 2] = b + 4;
                                                  q = i[b >> 2];
                                                } else {
                                                  q = 0;
                                                }
                                                b = (i[(f + 76) >> 2] + 2) | 0;
                                                i[(f + 76) >> 2] = b;
                                                break m;
                                              }
                                              i[(f + 76) >> 2] = b + 1;
                                              q = za((f + 76) | 0);
                                              b = i[(f + 76) >> 2];
                                            }
                                            k = 0;
                                            while (1) {
                                              y = k;
                                              s = -1;
                                              if ((g[b | 0] + -65) >>> 0 > 57) {
                                                break a;
                                              }
                                              v = (b + 1) | 0;
                                              i[(f + 76) >> 2] = v;
                                              k = g[b | 0];
                                              b = v;
                                              k =
                                                j[
                                                  (((k + o(y, 58)) | 0) +
                                                    14063) |
                                                    0
                                                ];
                                              if ((k + -1) >>> 0 < 8) {
                                                continue;
                                              }
                                              break;
                                            }
                                            if (!k) {
                                              break a;
                                            }
                                            o: {
                                              p: {
                                                q: {
                                                  if ((k | 0) == 19) {
                                                    if ((u | 0) <= -1) {
                                                      break q;
                                                    }
                                                    break a;
                                                  }
                                                  if ((u | 0) < 0) {
                                                    break p;
                                                  }
                                                  i[((u << 2) + e) >> 2] = k;
                                                  b = ((u << 3) + d) | 0;
                                                  k = i[(b + 4) >> 2];
                                                  i[(f + 64) >> 2] = i[b >> 2];
                                                  i[(f + 68) >> 2] = k;
                                                }
                                                b = 0;
                                                if (!a) {
                                                  continue b;
                                                }
                                                break o;
                                              }
                                              if (!a) {
                                                break d;
                                              }
                                              ya((f - -64) | 0, k, c);
                                              v = i[(f + 76) >> 2];
                                            }
                                            m = l & -65537;
                                            l = l & 8192 ? m : l;
                                            s = 0;
                                            u = 14100;
                                            k = w;
                                            r: {
                                              s: {
                                                t: {
                                                  u: {
                                                    v: {
                                                      w: {
                                                        x: {
                                                          y: {
                                                            z: {
                                                              A: {
                                                                B: {
                                                                  C: {
                                                                    D: {
                                                                      E: {
                                                                        F: {
                                                                          G: {
                                                                            b =
                                                                              g[
                                                                                (v +
                                                                                  -1) |
                                                                                  0
                                                                              ];
                                                                            b =
                                                                              y
                                                                                ? (b &
                                                                                    15) ==
                                                                                  3
                                                                                  ? b &
                                                                                    -33
                                                                                  : b
                                                                                : b;
                                                                            switch (
                                                                              (b +
                                                                                -88) |
                                                                              0
                                                                            ) {
                                                                              case 11:
                                                                                break r;
                                                                              case 9:
                                                                              case 13:
                                                                              case 14:
                                                                              case 15:
                                                                                break s;
                                                                              case 27:
                                                                                break x;
                                                                              case 12:
                                                                              case 17:
                                                                                break A;
                                                                              case 23:
                                                                                break B;
                                                                              case 0:
                                                                              case 32:
                                                                                break C;
                                                                              case 24:
                                                                                break D;
                                                                              case 22:
                                                                                break E;
                                                                              case 29:
                                                                                break F;
                                                                              case 1:
                                                                              case 2:
                                                                              case 3:
                                                                              case 4:
                                                                              case 5:
                                                                              case 6:
                                                                              case 7:
                                                                              case 8:
                                                                              case 10:
                                                                              case 16:
                                                                              case 18:
                                                                              case 19:
                                                                              case 20:
                                                                              case 21:
                                                                              case 25:
                                                                              case 26:
                                                                              case 28:
                                                                              case 30:
                                                                              case 31:
                                                                                break e;
                                                                              default:
                                                                                break G;
                                                                            }
                                                                          }
                                                                          H: {
                                                                            switch (
                                                                              (b +
                                                                                -65) |
                                                                              0
                                                                            ) {
                                                                              case 0:
                                                                              case 4:
                                                                              case 5:
                                                                              case 6:
                                                                                break s;
                                                                              case 2:
                                                                                break v;
                                                                              case 1:
                                                                              case 3:
                                                                                break e;
                                                                              default:
                                                                                break H;
                                                                            }
                                                                          }
                                                                          if (
                                                                            (b |
                                                                              0) ==
                                                                            83
                                                                          ) {
                                                                            break w;
                                                                          }
                                                                          break e;
                                                                        }
                                                                        b =
                                                                          i[
                                                                            (f +
                                                                              64) >>
                                                                              2
                                                                          ];
                                                                        p =
                                                                          i[
                                                                            (f +
                                                                              68) >>
                                                                              2
                                                                          ];
                                                                        u = 14100;
                                                                        break z;
                                                                      }
                                                                      b = 0;
                                                                      I: {
                                                                        switch (
                                                                          y &
                                                                          255
                                                                        ) {
                                                                          case 0:
                                                                            i[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 1:
                                                                            i[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 2:
                                                                            k =
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ];
                                                                            i[
                                                                              k >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            i[
                                                                              (k +
                                                                                4) >>
                                                                                2
                                                                            ] =
                                                                              t >>
                                                                              31;
                                                                            continue b;
                                                                          case 3:
                                                                            h[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                1
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 4:
                                                                            g[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ]
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 6:
                                                                            i[
                                                                              i[
                                                                                (f +
                                                                                  64) >>
                                                                                  2
                                                                              ] >>
                                                                                2
                                                                            ] =
                                                                              t;
                                                                            continue b;
                                                                          case 7:
                                                                            break I;
                                                                          default:
                                                                            continue b;
                                                                        }
                                                                      }
                                                                      k =
                                                                        i[
                                                                          (f +
                                                                            64) >>
                                                                            2
                                                                        ];
                                                                      i[
                                                                        k >> 2
                                                                      ] = t;
                                                                      i[
                                                                        (k +
                                                                          4) >>
                                                                          2
                                                                      ] =
                                                                        t >> 31;
                                                                      continue b;
                                                                    }
                                                                    q =
                                                                      q >>> 0 >
                                                                      8
                                                                        ? q
                                                                        : 8;
                                                                    l = l | 8;
                                                                    b = 120;
                                                                  }
                                                                  p = Wa(
                                                                    i[
                                                                      (f +
                                                                        64) >>
                                                                        2
                                                                    ],
                                                                    i[
                                                                      (f +
                                                                        68) >>
                                                                        2
                                                                    ],
                                                                    w,
                                                                    b & 32
                                                                  );
                                                                  if (
                                                                    !(l & 8) |
                                                                    !(
                                                                      i[
                                                                        (f +
                                                                          64) >>
                                                                          2
                                                                      ] |
                                                                      i[
                                                                        (f +
                                                                          68) >>
                                                                          2
                                                                      ]
                                                                    )
                                                                  ) {
                                                                    break y;
                                                                  }
                                                                  u =
                                                                    (((b >>>
                                                                      4) |
                                                                      0) +
                                                                      14100) |
                                                                    0;
                                                                  s = 2;
                                                                  break y;
                                                                }
                                                                p = Va(
                                                                  i[
                                                                    (f + 64) >>
                                                                      2
                                                                  ],
                                                                  i[
                                                                    (f + 68) >>
                                                                      2
                                                                  ],
                                                                  w
                                                                );
                                                                if (!(l & 8)) {
                                                                  break y;
                                                                }
                                                                b = (w - p) | 0;
                                                                q =
                                                                  (q | 0) >
                                                                  (b | 0)
                                                                    ? q
                                                                    : (b + 1) |
                                                                      0;
                                                                break y;
                                                              }
                                                              m =
                                                                i[
                                                                  (f + 68) >> 2
                                                                ];
                                                              p = m;
                                                              b =
                                                                i[
                                                                  (f + 64) >> 2
                                                                ];
                                                              if (
                                                                (m | 0) < -1
                                                                  ? 1
                                                                  : (m | 0) <=
                                                                    -1
                                                              ) {
                                                                p =
                                                                  (0 -
                                                                    ((p +
                                                                      (0 <
                                                                        b >>>
                                                                          0)) |
                                                                      0)) |
                                                                  0;
                                                                b = (0 - b) | 0;
                                                                i[
                                                                  (f + 64) >> 2
                                                                ] = b;
                                                                i[
                                                                  (f + 68) >> 2
                                                                ] = p;
                                                                s = 1;
                                                                u = 14100;
                                                                break z;
                                                              }
                                                              if (l & 2048) {
                                                                s = 1;
                                                                u = 14101;
                                                                break z;
                                                              }
                                                              s = l & 1;
                                                              u = s
                                                                ? 14102
                                                                : 14100;
                                                            }
                                                            p = Ua(b, p, w);
                                                          }
                                                          l =
                                                            (q | 0) > -1
                                                              ? l & -65537
                                                              : l;
                                                          b = i[(f + 64) >> 2];
                                                          m = i[(f + 68) >> 2];
                                                          if (
                                                            !(!!(b | m) | q)
                                                          ) {
                                                            q = 0;
                                                            p = w;
                                                            break e;
                                                          }
                                                          b =
                                                            (!(b | m) +
                                                              ((w - p) | 0)) |
                                                            0;
                                                          q =
                                                            (q | 0) > (b | 0)
                                                              ? q
                                                              : b;
                                                          break e;
                                                        }
                                                        b = i[(f + 64) >> 2];
                                                        p = b ? b : 14110;
                                                        b = Ta(p, q);
                                                        k = b ? b : (p + q) | 0;
                                                        l = m;
                                                        q = b ? (b - p) | 0 : q;
                                                        break e;
                                                      }
                                                      k = i[(f + 64) >> 2];
                                                      if (q) {
                                                        break u;
                                                      }
                                                      b = 0;
                                                      ea(a, 32, r, 0, l);
                                                      break t;
                                                    }
                                                    i[(f + 12) >> 2] = 0;
                                                    i[(f + 8) >> 2] =
                                                      i[(f + 64) >> 2];
                                                    i[(f + 64) >> 2] = f + 8;
                                                    q = -1;
                                                    k = (f + 8) | 0;
                                                  }
                                                  b = 0;
                                                  J: {
                                                    while (1) {
                                                      p = i[k >> 2];
                                                      if (!p) {
                                                        break J;
                                                      }
                                                      p = Qa((f + 4) | 0, p);
                                                      m = (p | 0) < 0;
                                                      if (
                                                        !(
                                                          m |
                                                          (p >>> 0 >
                                                            (q - b) >>> 0)
                                                        )
                                                      ) {
                                                        k = (k + 4) | 0;
                                                        b = (b + p) | 0;
                                                        if (q >>> 0 > b >>> 0) {
                                                          continue;
                                                        }
                                                        break J;
                                                      }
                                                      break;
                                                    }
                                                    s = -1;
                                                    if (m) {
                                                      break a;
                                                    }
                                                  }
                                                  ea(a, 32, r, b, l);
                                                  if (!b) {
                                                    b = 0;
                                                    break t;
                                                  }
                                                  m = 0;
                                                  k = i[(f + 64) >> 2];
                                                  while (1) {
                                                    p = i[k >> 2];
                                                    if (!p) {
                                                      break t;
                                                    }
                                                    p = Qa((f + 4) | 0, p);
                                                    m = (p + m) | 0;
                                                    if ((m | 0) > (b | 0)) {
                                                      break t;
                                                    }
                                                    ja(a, (f + 4) | 0, p);
                                                    k = (k + 4) | 0;
                                                    if (m >>> 0 < b >>> 0) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                }
                                                ea(a, 32, r, b, l ^ 8192);
                                                b = (r | 0) > (b | 0) ? r : b;
                                                continue b;
                                              }
                                              b =
                                                J[0](
                                                  a,
                                                  n[(f + 64) >> 3],
                                                  r,
                                                  q,
                                                  l,
                                                  b
                                                ) | 0;
                                              continue b;
                                            }
                                            g[(f + 55) | 0] = i[(f + 64) >> 2];
                                            q = 1;
                                            p = z;
                                            l = m;
                                            break e;
                                          }
                                          k = (b + 1) | 0;
                                          i[(f + 76) >> 2] = k;
                                          l = j[(b + 1) | 0];
                                          b = k;
                                          continue;
                                        }
                                      }
                                      s = t;
                                      if (a) {
                                        break a;
                                      }
                                      if (!x) {
                                        break d;
                                      }
                                      b = 1;
                                      while (1) {
                                        a = i[((b << 2) + e) >> 2];
                                        if (a) {
                                          ya(((b << 3) + d) | 0, a, c);
                                          s = 1;
                                          b = (b + 1) | 0;
                                          if ((b | 0) != 10) {
                                            continue;
                                          }
                                          break a;
                                        }
                                        break;
                                      }
                                      s = 1;
                                      if (b >>> 0 >= 10) {
                                        break a;
                                      }
                                      while (1) {
                                        if (i[((b << 2) + e) >> 2]) {
                                          break f;
                                        }
                                        b = (b + 1) | 0;
                                        if ((b | 0) != 10) {
                                          continue;
                                        }
                                        break;
                                      }
                                      break a;
                                    }
                                    s = -1;
                                    break a;
                                  }
                                  m = (k - p) | 0;
                                  q = (q | 0) < (m | 0) ? m : q;
                                  k = (q + s) | 0;
                                  b = (r | 0) < (k | 0) ? k : r;
                                  ea(a, 32, b, k, l);
                                  ja(a, u, s);
                                  ea(a, 48, b, k, l ^ 65536);
                                  ea(a, 48, q, m, 0);
                                  ja(a, p, m);
                                  ea(a, 32, b, k, l ^ 8192);
                                  continue;
                                }
                                break;
                              }
                              s = 0;
                            }
                            H = (f + 80) | 0;
                            return s;
                          }
                          function jb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0;
                            r = (H - 16) | 0;
                            H = r;
                            j = i[(a + 40) >> 2];
                            E = i[i[a >> 2] >> 2];
                            e = i[(a + 4) >> 2];
                            C = ((i[(a + 12) >> 2] << 1) + c) | 0;
                            J[i[(i[e >> 2] + 48) >> 2]](e, 104, C) | 0;
                            e = i[(a + 4) >> 2];
                            e = J[i[(i[e >> 2] + 40) >> 2]](e, b, c) | 0;
                            f = i[(a + 4) >> 2];
                            J[i[(i[f >> 2] + 48) >> 2]](f, 103, (r + 12) | 0) |
                              0;
                            a: {
                              if (e) {
                                break a;
                              }
                              if (!b) {
                                Ca(a, c, i[(r + 12) >> 2], j);
                                e = 0;
                                break a;
                              }
                              b: {
                                if (!i[(a + 88) >> 2]) {
                                  d = i[(a + 96) >> 2];
                                  break b;
                                }
                                c: {
                                  if (
                                    ((i[(b + 20) >> 2]
                                      ? -1
                                      : (((i[(b + 4) >> 2] - i[(b + 12) >> 2]) |
                                          0) -
                                          (i[(b + 8) >> 2] << 3)) |
                                        0) |
                                      0) >=
                                    1
                                  ) {
                                    if (Fb(b)) {
                                      break c;
                                    }
                                  }
                                  i[(a + 96) >> 2] = 0;
                                  break b;
                                }
                                V(b, 1);
                                d = V(b, 3);
                                i[(a + 96) >> 2] = d;
                                if (!d) {
                                  d = 0;
                                  break b;
                                }
                                if (i[(i[(a + 92) >> 2] + (d << 2)) >> 2]) {
                                  break b;
                                }
                                i[r >> 2] = 13072;
                                Y(i[3524], 13148, r);
                                e = -2;
                                break a;
                              }
                              d: {
                                if (!i[(i[(a + 92) >> 2] + (d << 2)) >> 2]) {
                                  if (i[(r + 12) >> 2]) {
                                    break d;
                                  }
                                  d = 0;
                                  b = i[(a + 12) >> 2];
                                  if ((b | 0) > 0) {
                                    while (1) {
                                      h[(((b + d) << 1) + c) >> 1] = 0;
                                      d = (d + 1) | 0;
                                      if ((b | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  i[(a + 28) >> 2] = 1;
                                  d = ((b << 1) + c) | 0;
                                  _(
                                    d,
                                    i[(a + 60) >> 2],
                                    d,
                                    b,
                                    i[(a + 24) >> 2],
                                    i[(a + 64) >> 2]
                                  );
                                  ua(
                                    c,
                                    ((i[(a + 12) >> 2] << 1) + c) | 0,
                                    c,
                                    i[(a + 8) >> 2],
                                    i[(a + 44) >> 2],
                                    i[(a + 48) >> 2],
                                    j
                                  );
                                  e = 0;
                                  break a;
                                }
                                d = i[(a + 20) >> 2];
                                e = i[(a + 4) >> 2];
                                A = (j + ((0 - j) & 3)) | 0;
                                J[i[(i[e >> 2] + 48) >> 2]](e, 100, A) | 0;
                                e = i[(a + 4) >> 2];
                                j = ((d << 2) + A) | 0;
                                B = ((j & 1) + j) | 0;
                                J[i[(i[e >> 2] + 48) >> 2]](e, 101, B) | 0;
                                d = ((d << 1) + B) | 0;
                                u = ((d & 1) + d) | 0;
                                d = i[(a + 24) >> 2];
                                J[
                                  i[
                                    (i[
                                      (i[(a + 92) >> 2] +
                                        (i[(a + 96) >> 2] << 2)) >>
                                        2
                                    ] +
                                      20) >>
                                      2
                                  ]
                                ](u, d, b);
                                d = d << 1;
                                e = (d + u) | 0;
                                x = ((e & 1) + e) | 0;
                                j = (x + d) | 0;
                                e = i[(a + 24) >> 2];
                                if (!(!i[(a + 28) >> 2] | ((e | 0) < 1))) {
                                  f = i[(a + 56) >> 2];
                                  d = 0;
                                  while (1) {
                                    n = d << 1;
                                    h[(n + f) >> 1] = k[(n + u) >> 1];
                                    d = (d + 1) | 0;
                                    if ((e | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                v = (j + (j & 1)) | 0;
                                j = (v + (e << 1)) | 0;
                                d = i[(a + 20) >> 2];
                                if ((d | 0) >= 1) {
                                  D = (a + 84) | 0;
                                  n = 0;
                                  while (1) {
                                    g = (((0 - j) & 3) + j) | 0;
                                    e = i[(a + 16) >> 2];
                                    f = e << 2;
                                    j = (g + f) | 0;
                                    l = o(e, n);
                                    m = i[(a + 12) >> 2];
                                    s = 0;
                                    e = i[(a + 76) >> 2];
                                    if (e) {
                                      s = (e + (l << 2)) | 0;
                                      U(s, 0, f);
                                      d = i[(a + 20) >> 2];
                                    }
                                    fa(
                                      i[(a + 56) >> 2],
                                      u,
                                      x,
                                      i[(a + 24) >> 2],
                                      n,
                                      d
                                    );
                                    ga(x, i[(a + 24) >> 2], 410);
                                    ha(x, v, i[(a + 24) >> 2], j);
                                    f = 8192;
                                    p = n << 2;
                                    y = (p + i[(a + 68) >> 2]) | 0;
                                    i[y >> 2] = 8192;
                                    d = 0;
                                    e = 8192;
                                    if (i[(a + 24) >> 2] >= 1) {
                                      while (1) {
                                        q = f;
                                        f = d << 1;
                                        z = h[(f + v) >> 1];
                                        w = h[((f | 2) + v) >> 1];
                                        f = (q + ((z + w) | 0)) | 0;
                                        i[y >> 2] = f;
                                        e = (((e + w) | 0) - z) | 0;
                                        d = (d + 2) | 0;
                                        if ((d | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    y = l << 1;
                                    z = ((m << 1) + c) | 0;
                                    d = i[(p + A) >> 2];
                                    f = U(g, 0, i[(a + 16) >> 2] << 2);
                                    q = d << 7;
                                    d = (e + 82) | 0;
                                    d =
                                      (((((q + ((d << 16) >> 17)) | 0) +
                                        10496) |
                                        0) /
                                        (d | 0)) |
                                      0;
                                    d = (d | 0) > -32767 ? d : -32767;
                                    d = (d | 0) < 32767 ? d : 32767;
                                    e: {
                                      if (
                                        !i[
                                          (i[
                                            (i[(a + 92) >> 2] +
                                              (i[(a + 96) >> 2] << 2)) >>
                                              2
                                          ] +
                                            40) >>
                                            2
                                        ]
                                      ) {
                                        g = ((V(b, 5) << 16) + 16121856) | 0;
                                        m = (g << 8) >> 16;
                                        e = 2147483647;
                                        f: {
                                          if ((m | 0) > 21290) {
                                            break f;
                                          }
                                          e = 0;
                                          if (
                                            ((g >>> 8) << 16) >> 16 <
                                            -21290
                                          ) {
                                            break f;
                                          }
                                          g = (o(m, 23637) - -8192) | 0;
                                          e = (g >>> 11) & 16376;
                                          e =
                                            ((((o(
                                              ((((o(
                                                (((o(e, 1301) >>> 14) | 0) +
                                                  3726) |
                                                  0,
                                                e
                                              ) <<
                                                2) &
                                                536805376) +
                                                744226816) >>>
                                                16) |
                                                0,
                                              e
                                            ) <<
                                              2) &
                                              2147418112) +
                                              1073741824) >>>
                                              16) |
                                            0;
                                          g = g << 2;
                                          m = (-2 - (g >> 27)) | 0;
                                          e =
                                            g >> 16 < -4096
                                              ? (e >>> m) | 0
                                              : e << (0 - m);
                                        }
                                        if (i[(a + 16) >> 2] < 1) {
                                          break e;
                                        }
                                        d =
                                          ((((d >> 1) + e) | 0) / (d | 0)) | 0;
                                        e = (d << 6) & 32704;
                                        g = (d << 7) >> 16;
                                        m = h[(E + 22) >> 1] << 1;
                                        d = 0;
                                        while (1) {
                                          p = d << 2;
                                          w = (((d + l) << 1) + C) | 0;
                                          q = o(m, h[w >> 1]) >> 16;
                                          i[(p + f) >> 2] =
                                            (((o(e, q) + 16384) >> 15) +
                                              o(g, q)) <<
                                            14;
                                          q = (f + (p | 4)) | 0;
                                          p = o(m, h[(w + 2) >> 1]) >> 16;
                                          i[q >> 2] =
                                            0 -
                                            ((((o(p, e) + 16384) >> 15) +
                                              o(g, p)) <<
                                              14);
                                          d = (d + 2) | 0;
                                          if ((d | 0) < i[(a + 16) >> 2]) {
                                            continue;
                                          }
                                          break;
                                        }
                                        break e;
                                      }
                                      e =
                                        (o(
                                          h[((V(b, 4) << 1) + 13040) >> 1],
                                          28626
                                        ) >>>
                                          15) |
                                        0;
                                      l = h[((n << 1) + B) >> 1];
                                      g = i[(a + 16) >> 2];
                                      if ((g | 0) == 80) {
                                        e =
                                          (o((e << 16) >> 16, 23170) - -8192) >>
                                          14;
                                      }
                                      m =
                                        i[
                                          (i[(a + 92) >> 2] +
                                            (i[(a + 96) >> 2] << 2)) >>
                                            2
                                        ];
                                      J[i[(m + 40) >> 2]](
                                        f,
                                        i[(m + 44) >> 2],
                                        g,
                                        b,
                                        j,
                                        D
                                      );
                                      l =
                                        ((((o(l, (e << 16) >> 16) << 3) +
                                          (d >> 1)) |
                                          0) /
                                          (d | 0)) |
                                        0;
                                      g = l << 11;
                                      da(f, f, g, i[(a + 16) >> 2]);
                                      if (
                                        !i[
                                          (i[
                                            (i[(a + 92) >> 2] +
                                              (i[(a + 96) >> 2] << 2)) >>
                                              2
                                          ] +
                                            12) >>
                                            2
                                        ]
                                      ) {
                                        break e;
                                      }
                                      d = 0;
                                      m = i[(a + 16) >> 2] << 2;
                                      e = U((((0 - j) & 3) + j) | 0, 0, m);
                                      p =
                                        i[
                                          (i[(a + 92) >> 2] +
                                            (i[(a + 96) >> 2] << 2)) >>
                                            2
                                        ];
                                      J[i[(p + 40) >> 2]](
                                        e,
                                        i[(p + 44) >> 2],
                                        i[(a + 16) >> 2],
                                        b,
                                        (e + m) | 0,
                                        D
                                      );
                                      da(
                                        e,
                                        e,
                                        (o((l << 12) >> 16, 13107) +
                                          (((o(g & 30720, 13107) + 16384) >>>
                                            15) |
                                            0)) |
                                          0,
                                        i[(a + 16) >> 2]
                                      );
                                      if (i[(a + 16) >> 2] < 1) {
                                        break e;
                                      }
                                      while (1) {
                                        l = d << 2;
                                        g = (l + f) | 0;
                                        i[g >> 2] = i[(e + l) >> 2] + i[g >> 2];
                                        d = (d + 1) | 0;
                                        if ((d | 0) < i[(a + 16) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    l = (y + z) | 0;
                                    e = i[(a + 16) >> 2];
                                    g: {
                                      if (!i[(a + 76) >> 2]) {
                                        break g;
                                      }
                                      d = 0;
                                      if ((e | 0) < 1) {
                                        break g;
                                      }
                                      while (1) {
                                        g = d << 2;
                                        h[(g + s) >> 1] =
                                          (i[(f + g) >> 2] - -8192) >>> 14;
                                        d = (d + 1) | 0;
                                        if ((e | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    _(
                                      i[(a + 52) >> 2],
                                      i[(a + 60) >> 2],
                                      l,
                                      e,
                                      i[(a + 24) >> 2],
                                      i[(a + 64) >> 2]
                                    );
                                    e = i[(a + 16) >> 2];
                                    if ((e | 0) >= 1) {
                                      l = i[(a + 52) >> 2];
                                      d = 0;
                                      while (1) {
                                        h[(l + (d << 1)) >> 1] =
                                          (i[(f + (d << 2)) >> 2] - -8192) >>>
                                          14;
                                        d = (d + 1) | 0;
                                        if ((e | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    f = i[(a + 24) >> 2];
                                    if ((f | 0) >= 1) {
                                      l = i[(a + 60) >> 2];
                                      d = 0;
                                      while (1) {
                                        s = d << 1;
                                        h[(s + l) >> 1] = k[(v + s) >> 1];
                                        d = (d + 1) | 0;
                                        if ((f | 0) != (d | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    d = Z(i[(a + 52) >> 2], e);
                                    h[(i[(a + 72) >> 2] + (n << 1)) >> 1] = d;
                                    e = o(d, d);
                                    d = i[(a + 20) >> 2];
                                    t = ((((e | 0) / (d | 0)) | 0) + t) | 0;
                                    n = (n + 1) | 0;
                                    if ((n | 0) < (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                e = 0;
                                b = t >>> 0 > 65535;
                                d = b << 3;
                                q = d | 4;
                                f = d;
                                b = b ? (t >>> 16) | 0 : t;
                                d = b >>> 0 > 255;
                                f = d ? q : f;
                                b = d ? (b >>> 8) | 0 : b;
                                d = b >>> 0 > 15;
                                b =
                                  (d ? f | 2 : f) |
                                  ((d ? (b >>> 4) | 0 : b) >>> 0 > 3);
                                d = b << 1;
                                f = b & 65535;
                                d =
                                  ((f >>> 0 > 6
                                    ? t >> (d + -12)
                                    : t << (12 - d)) <<
                                    16) >>
                                  16;
                                d =
                                  (((o(
                                    (((o((o(d, 16816) + -827523072) >> 16, d) <<
                                      2) &
                                      -65536) +
                                      1387593728) >>
                                      16,
                                    d
                                  ) <<
                                    2) &
                                    -65536) +
                                    238157824) >>
                                  16;
                                b = (13 - b) | 0;
                                h[(a + 80) >> 1] =
                                  f >>> 0 < 13 ? d >> b : d << (0 - b);
                                ua(
                                  c,
                                  ((i[(a + 12) >> 2] << 1) + c) | 0,
                                  c,
                                  i[(a + 8) >> 2],
                                  i[(a + 44) >> 2],
                                  i[(a + 48) >> 2],
                                  j
                                );
                                b = i[(a + 24) >> 2];
                                if ((b | 0) >= 1) {
                                  c = i[(a + 56) >> 2];
                                  d = 0;
                                  while (1) {
                                    j = d << 1;
                                    h[(j + c) >> 1] = k[(j + u) >> 1];
                                    d = (d + 1) | 0;
                                    if ((b | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                i[(a + 28) >> 2] = 0;
                                break a;
                              }
                              Ca(a, c, 1, j);
                              e = 0;
                            }
                            H = (r + 16) | 0;
                            return e | 0;
                          }
                          function ib(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = p(0),
                              l = p(0),
                              n = 0;
                            e = (H - 32) | 0;
                            H = e;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            switch ((b + -3) | 0) {
                                              case 98:
                                                d = i[(a + 20) >> 2];
                                                if ((d | 0) >= 1) {
                                                  break g;
                                                }
                                                b = 0;
                                                break a;
                                              case 0:
                                                i[c >> 2] = i[(a + 8) >> 2];
                                                b = 0;
                                                break a;
                                              case 7:
                                                b = i[c >> 2];
                                                i[(a + 156) >> 2] = b;
                                                i[(a + 152) >> 2] = b;
                                                b = 0;
                                                break a;
                                              case 5:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  8,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 31:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  34,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 32:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  35,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 6:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  9,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 3:
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  4,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 9:
                                                i[(a + 108) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  12,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 10:
                                                i[c >> 2] = i[(a + 108) >> 2];
                                                b = 0;
                                                break a;
                                              case 27:
                                                i[(a + 136) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  30,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 28:
                                                i[c >> 2] = i[(a + 136) >> 2];
                                                b = 0;
                                                break a;
                                              case 11:
                                                j = m[c >> 2];
                                                l = p(+j + 0.6);
                                                m[(e + 24) >> 2] = l;
                                                m[(a + 104) >> 2] = j;
                                                if (!((l > p(10)) ^ 1)) {
                                                  i[(e + 24) >> 2] = 1092616192;
                                                }
                                                b = e;
                                                n = u(+m[c >> 2] + 0.5);
                                                i: {
                                                  if (q(n) < 2147483648) {
                                                    c = ~~n;
                                                    break i;
                                                  }
                                                  c = -2147483648;
                                                }
                                                i[(b + 28) >> 2] =
                                                  (c | 0) < 10 ? c : 10;
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 44) >> 2]](
                                                  b,
                                                  14,
                                                  (e + 24) | 0
                                                ) | 0;
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  4,
                                                  (e + 28) | 0
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 12:
                                                i[c >> 2] = i[(a + 104) >> 2];
                                                b = 0;
                                                break a;
                                              case 29:
                                                d = i[c >> 2];
                                                i[(a + 120) >> 2] = d;
                                                b = 0;
                                                i[(a + 108) >> 2] =
                                                  (d | 0) != 0;
                                                d = i[(a + 4) >> 2];
                                                J[i[(i[d >> 2] + 44) >> 2]](
                                                  d,
                                                  12,
                                                  (a + 108) | 0
                                                ) | 0;
                                                if (!i[(a + 108) >> 2]) {
                                                  break a;
                                                }
                                                i[(e + 28) >> 2] = 10;
                                                c = i[c >> 2];
                                                while (1) {
                                                  j: {
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      4,
                                                      (e + 28) | 0
                                                    ) | 0;
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      19,
                                                      (e + 24) | 0
                                                    ) | 0;
                                                    b = i[(e + 28) >> 2];
                                                    if (
                                                      i[(e + 24) >> 2] <=
                                                      (c | 0)
                                                    ) {
                                                      d = b;
                                                      break j;
                                                    }
                                                    d = (b + -1) | 0;
                                                    i[(e + 28) >> 2] = d;
                                                    if ((b | 0) > 0) {
                                                      continue;
                                                    }
                                                  }
                                                  break;
                                                }
                                                b = 0;
                                                m[(e + 20) >> 2] =
                                                  ((d | 0) > 0 ? d : 0) | 0;
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  14,
                                                  (e + 20) | 0
                                                ) | 0;
                                                i[(a + 124) >> 2] = 0;
                                                i[(a + 128) >> 2] = 0;
                                                i[(a + 132) >> 2] = 0;
                                                break a;
                                              case 30:
                                                i[c >> 2] = i[(a + 120) >> 2];
                                                b = 0;
                                                break a;
                                              case 1:
                                                b = 0;
                                                c = i[c >> 2];
                                                c = (c | 0) > 0 ? c : 0;
                                                c =
                                                  (i[i[a >> 2] >> 2] +
                                                    (((c | 0) < 10 ? c : 10) <<
                                                      2)) |
                                                  0;
                                                d = i[(c + 104) >> 2];
                                                i[(a + 156) >> 2] = d;
                                                i[(a + 152) >> 2] = d;
                                                i[(e + 28) >> 2] =
                                                  i[(c + 60) >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  6,
                                                  (e + 28) | 0
                                                ) | 0;
                                                break a;
                                              case 13:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 44) >> 2]](
                                                  b,
                                                  16,
                                                  c
                                                ) | 0;
                                                b = a;
                                                a = i[c >> 2];
                                                i[(b + 160) >> 2] =
                                                  (a | 0) > 1 ? a : 1;
                                                H = (e + 32) | 0;
                                                return 0;
                                              case 14:
                                                i[c >> 2] = i[(a + 160) >> 2];
                                                b = 0;
                                                break a;
                                              case 15:
                                                i[(e + 28) >> 2] = 10;
                                                b = i[c >> 2];
                                                while (1) {
                                                  k: {
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      4,
                                                      (e + 28) | 0
                                                    ) | 0;
                                                    J[i[(i[a >> 2] + 44) >> 2]](
                                                      a,
                                                      19,
                                                      (e + 24) | 0
                                                    ) | 0;
                                                    if (
                                                      i[(e + 24) >> 2] <=
                                                      (b | 0)
                                                    ) {
                                                      break k;
                                                    }
                                                    c = i[(e + 28) >> 2];
                                                    i[(e + 28) >> 2] = c + -1;
                                                    if ((c | 0) > 0) {
                                                      continue;
                                                    }
                                                  }
                                                  break;
                                                }
                                                b = 0;
                                                break a;
                                              case 16:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 44) >> 2]](
                                                  b,
                                                  19,
                                                  c
                                                ) | 0;
                                                b = i[(a + 164) >> 2];
                                                d =
                                                  i[
                                                    (i[(a + 148) >> 2] +
                                                      (i[(a + 152) >> 2] <<
                                                        2)) >>
                                                      2
                                                  ];
                                                if (d) {
                                                  i[c >> 2] =
                                                    i[c >> 2] +
                                                    (((o(b, i[(d + 52) >> 2]) |
                                                      0) /
                                                      i[(a + 8) >> 2]) |
                                                      0);
                                                  b = 0;
                                                  break a;
                                                }
                                                i[c >> 2] =
                                                  i[c >> 2] +
                                                  (((b << 2) /
                                                    i[(a + 8) >> 2]) |
                                                    0);
                                                b = 0;
                                                break a;
                                              case 21:
                                                b = i[c >> 2];
                                                i[(a + 164) >> 2] = b;
                                                i[(e + 28) >> 2] = b >> 1;
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  24,
                                                  (e + 28) | 0
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 22:
                                                i[c >> 2] = i[(a + 164) >> 2];
                                                b = 0;
                                                break a;
                                              case 23:
                                                i[(a + 32) >> 2] = 1;
                                                b = i[(a + 28) >> 2];
                                                l: {
                                                  if ((b | 0) < 1) {
                                                    break l;
                                                  }
                                                  d = (b + 1) | 0;
                                                  f = i[(a + 68) >> 2];
                                                  c = 0;
                                                  while (1) {
                                                    g = (f + (c << 1)) | 0;
                                                    c = (c + 1) | 0;
                                                    h[g >> 1] =
                                                      (o(
                                                        (c << 16) >> 16,
                                                        25736
                                                      ) |
                                                        0) /
                                                      (d | 0);
                                                    if ((b | 0) != (c | 0)) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                  if ((b | 0) < 1) {
                                                    break l;
                                                  }
                                                  d = i[(a + 88) >> 2];
                                                  f = i[(a + 80) >> 2];
                                                  g = i[(a + 84) >> 2];
                                                  c = 0;
                                                  while (1) {
                                                    b = c << 2;
                                                    i[(b + g) >> 2] = 0;
                                                    i[(b + f) >> 2] = 0;
                                                    i[(b + d) >> 2] = 0;
                                                    c = (c + 1) | 0;
                                                    if (
                                                      (c | 0) <
                                                      i[(a + 28) >> 2]
                                                    ) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                }
                                                c = i[(a + 52) >> 2];
                                                d = i[(a + 56) >> 2];
                                                b = 0;
                                                a = 0;
                                                while (1) {
                                                  f = a << 1;
                                                  h[(f + d) >> 1] = 0;
                                                  h[(c + f) >> 1] = 0;
                                                  a = (a + 1) | 0;
                                                  if ((a | 0) != 64) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                                break a;
                                              case 33:
                                                i[(a + 144) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  36,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 34:
                                                i[c >> 2] = i[(a + 144) >> 2];
                                                b = 0;
                                                break a;
                                              case 36:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  39,
                                                  c
                                                ) | 0;
                                                i[c >> 2] =
                                                  (i[c >> 2] << 1) + 63;
                                                b = 0;
                                                break a;
                                              case 37:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  40,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 38:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  41,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 39:
                                                d = i[c >> 2];
                                                i[(a + 112) >> 2] = d;
                                                m: {
                                                  if ((d | 0) >= 42200) {
                                                    i[(a + 116) >> 2] = 17600;
                                                    b = -17600;
                                                    break m;
                                                  }
                                                  if ((d | 0) >= 27800) {
                                                    i[(a + 116) >> 2] = 9600;
                                                    b = -9600;
                                                    break m;
                                                  }
                                                  if ((d | 0) >= 20601) {
                                                    i[(a + 116) >> 2] = 5600;
                                                    b = -5600;
                                                    break m;
                                                  }
                                                  i[(a + 116) >> 2] = 1800;
                                                  b = -1800;
                                                }
                                                c = e;
                                                if (i[(a + 16) >> 2] == 80) {
                                                  i[(a + 116) >> 2] = 1800;
                                                  b = -1800;
                                                }
                                                i[(c + 28) >> 2] = b + d;
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  42,
                                                  (e + 28) | 0
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 40:
                                                i[c >> 2] = i[(a + 112) >> 2];
                                                b = 0;
                                                break a;
                                              case 41:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  44,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 42:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 44) >> 2]](
                                                  a,
                                                  45,
                                                  c
                                                ) | 0;
                                                b = 0;
                                                break a;
                                              case 103:
                                                break c;
                                              case 102:
                                                break d;
                                              case 101:
                                                break e;
                                              case 26:
                                                break f;
                                              case 97:
                                                break h;
                                              default:
                                                break b;
                                            }
                                          }
                                          if (i[(a + 20) >> 2] < 1) {
                                            b = 0;
                                            break a;
                                          }
                                          f = i[(a + 92) >> 2];
                                          b = 0;
                                          while (1) {
                                            g = d << 2;
                                            i[(g + c) >> 2] = i[(f + g) >> 2];
                                            d = (d + 1) | 0;
                                            if ((d | 0) < i[(a + 20) >> 2]) {
                                              continue;
                                            }
                                            break;
                                          }
                                          break a;
                                        }
                                        f = i[(a + 96) >> 2];
                                        b = 0;
                                        a = 0;
                                        while (1) {
                                          g = a << 1;
                                          h[(g + c) >> 1] = k[(f + g) >> 1];
                                          a = (a + 1) | 0;
                                          if ((d | 0) != (a | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        break a;
                                      }
                                      i[c >> 2] = i[(a + 140) >> 2];
                                      b = 0;
                                      break a;
                                    }
                                    i[(a + 100) >> 2] = c;
                                    b = 0;
                                    break a;
                                  }
                                  a = i[(a + 4) >> 2];
                                  J[i[(i[a >> 2] + 44) >> 2]](a, 105, c) | 0;
                                  b = 0;
                                  break a;
                                }
                                i[c >> 2] = i[(a + 44) >> 2];
                                b = 0;
                                break a;
                              }
                              i[(e + 4) >> 2] = b;
                              i[e >> 2] = 13123;
                              Y(i[3524], 13166, e);
                              b = -1;
                            }
                            H = (e + 32) | 0;
                            return b | 0;
                          }
                          function Ka(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0,
                              E = 0,
                              F = 0,
                              G = 0,
                              I = 0,
                              J = 0,
                              K = 0,
                              L = 0,
                              M = 0;
                            g = (H - 112) | 0;
                            H = g;
                            j = (a - (c << 1)) | 0;
                            G = $(a, (j + -6) | 0, 80);
                            i[g >> 2] = G;
                            I = $(a, (j + -4) | 0, 80);
                            i[(g + 4) >> 2] = I;
                            J = $(a, (j + -2) | 0, 80);
                            i[(g + 8) >> 2] = J;
                            K = $(a, j, 80);
                            i[(g + 12) >> 2] = K;
                            L = $(a, (j + 2) | 0, 80);
                            i[(g + 16) >> 2] = L;
                            M = $(a, (j + 4) | 0, 80);
                            i[(g + 20) >> 2] = M;
                            w = $(a, (j + 6) | 0, 80);
                            i[(g + 24) >> 2] = w;
                            B = w & 32767;
                            C = (w << 1) >> 16;
                            j = i[(g + 20) >> 2];
                            x = j & 32767;
                            d = i[(g + 16) >> 2];
                            s = d & 32767;
                            e = i[(g + 12) >> 2];
                            p = e & 32767;
                            l = i[(g + 8) >> 2];
                            t = l & 32767;
                            m = i[(g + 4) >> 2];
                            y = m & 32767;
                            f = i[g >> 2];
                            D = f & 32767;
                            z = (j << 1) >> 16;
                            u = (d << 1) >> 16;
                            q = (e << 1) >> 16;
                            v = (l << 1) >> 16;
                            A = (m << 1) >> 16;
                            E = (f << 1) >> 16;
                            while (1) {
                              f = o(F, 14);
                              F = (F + 1) | 0;
                              r = (o(F, 28) + g) | 0;
                              n = h[(f + 2432) >> 1];
                              l = h[(f + 2434) >> 1];
                              d = h[(f + 2436) >> 1];
                              j = h[(f + 2438) >> 1];
                              i[(r + 24) >> 2] =
                                (((((((((((((o(n, p) >> 15) + o(q, n)) | 0) +
                                  (o(l, s) >> 15)) |
                                  0) +
                                  o(l, u)) |
                                  0) +
                                  (o(d, x) >> 15)) |
                                  0) +
                                  o(d, z)) |
                                  0) +
                                  (o(j, B) >> 15)) |
                                  0) +
                                o(j, C);
                              e = h[(f + 2440) >> 1];
                              m = h[(f + 2442) >> 1];
                              f = h[(f + 2444) >> 1];
                              i[r >> 2] =
                                ((((((((((((o(j, E) + (o(j, D) >> 15)) | 0) +
                                  (o(e, y) >> 15)) |
                                  0) +
                                  o(e, A)) |
                                  0) +
                                  (o(m, t) >> 15)) |
                                  0) +
                                  o(m, v)) |
                                  0) +
                                  (o(f, p) >> 15)) |
                                  0) +
                                o(f, q);
                              i[(r + 20) >> 2] =
                                ((((((((((((((((o(n, v) + (o(n, t) >> 15)) |
                                  0) +
                                  (o(l, p) >> 15)) |
                                  0) +
                                  o(l, q)) |
                                  0) +
                                  (o(d, s) >> 15)) |
                                  0) +
                                  o(d, u)) |
                                  0) +
                                  (o(j, x) >> 15)) |
                                  0) +
                                  o(j, z)) |
                                  0) +
                                  (o(e, B) >> 15)) |
                                  0) +
                                o(e, C);
                              i[(r + 4) >> 2] =
                                ((((((((((((((((o(d, E) + (o(d, D) >> 15)) |
                                  0) +
                                  (o(j, y) >> 15)) |
                                  0) +
                                  o(j, A)) |
                                  0) +
                                  (o(e, t) >> 15)) |
                                  0) +
                                  o(e, v)) |
                                  0) +
                                  (o(m, p) >> 15)) |
                                  0) +
                                  o(m, q)) |
                                  0) +
                                  (o(f, s) >> 15)) |
                                  0) +
                                o(f, u);
                              i[(r + 16) >> 2] =
                                ((((((((((((((((((((o(n, A) + (o(n, y) >> 15)) |
                                  0) +
                                  (o(l, t) >> 15)) |
                                  0) +
                                  o(l, v)) |
                                  0) +
                                  (o(d, p) >> 15)) |
                                  0) +
                                  o(d, q)) |
                                  0) +
                                  (o(j, s) >> 15)) |
                                  0) +
                                  o(j, u)) |
                                  0) +
                                  (o(e, x) >> 15)) |
                                  0) +
                                  o(e, z)) |
                                  0) +
                                  (o(m, B) >> 15)) |
                                  0) +
                                o(m, C);
                              i[(r + 8) >> 2] =
                                ((((((((((((((((((((o(l, E) + (o(l, D) >> 15)) |
                                  0) +
                                  (o(d, y) >> 15)) |
                                  0) +
                                  o(d, A)) |
                                  0) +
                                  (o(j, t) >> 15)) |
                                  0) +
                                  o(j, v)) |
                                  0) +
                                  (o(e, p) >> 15)) |
                                  0) +
                                  o(e, q)) |
                                  0) +
                                  (o(m, s) >> 15)) |
                                  0) +
                                  o(m, u)) |
                                  0) +
                                  (o(f, x) >> 15)) |
                                  0) +
                                o(f, z);
                              i[(r + 12) >> 2] =
                                ((((((((((((((((((((((((o(n, E) +
                                  (o(n, D) >> 15)) |
                                  0) +
                                  (o(l, y) >> 15)) |
                                  0) +
                                  o(l, A)) |
                                  0) +
                                  (o(d, t) >> 15)) |
                                  0) +
                                  o(d, v)) |
                                  0) +
                                  (o(j, p) >> 15)) |
                                  0) +
                                  o(j, q)) |
                                  0) +
                                  (o(e, s) >> 15)) |
                                  0) +
                                  o(e, u)) |
                                  0) +
                                  (o(m, x) >> 15)) |
                                  0) +
                                  o(m, z)) |
                                  0) +
                                  (o(f, B) >> 15)) |
                                  0) +
                                o(f, C);
                              if ((F | 0) != 3) {
                                continue;
                              }
                              break;
                            }
                            j = 0;
                            e = (I | 0) > (G | 0);
                            l = e ? I : G;
                            d = (J | 0) > (l | 0);
                            f = d ? 2 : e;
                            d = d ? J : l;
                            e = (K | 0) > (d | 0);
                            f = e ? 3 : f;
                            d = e ? K : d;
                            e = (L | 0) > (d | 0);
                            f = e ? 4 : f;
                            d = e ? L : d;
                            e = (M | 0) > (d | 0);
                            f = e ? 5 : f;
                            d = e ? M : d;
                            e = (w | 0) > (d | 0);
                            F = e ? 6 : f;
                            l = i[(g + 28) >> 2];
                            e = e ? w : d;
                            d = (l | 0) > (e | 0);
                            m = i[(g + 32) >> 2];
                            l = d ? l : e;
                            e = (m | 0) > (l | 0);
                            p = i[(g + 36) >> 2];
                            m = e ? m : l;
                            l = (p | 0) > (m | 0);
                            q = i[(g + 40) >> 2];
                            p = l ? p : m;
                            m = (q | 0) > (p | 0);
                            f = i[(g + 44) >> 2];
                            q = m ? q : p;
                            p = (f | 0) > (q | 0);
                            n = i[(g + 48) >> 2];
                            f = p ? f : q;
                            q = (n | 0) > (f | 0);
                            s = i[(g + 52) >> 2];
                            n = q ? n : f;
                            f = (s | 0) > (n | 0);
                            t = i[(g + 56) >> 2];
                            s = f ? s : n;
                            n = (t | 0) > (s | 0);
                            u = i[(g + 60) >> 2];
                            t = n ? t : s;
                            s = (u | 0) > (t | 0);
                            v = i[(g - -64) >> 2];
                            u = s ? u : t;
                            t = (v | 0) > (u | 0);
                            r = i[(g + 68) >> 2];
                            v = t ? v : u;
                            u = (r | 0) > (v | 0);
                            x = i[(g + 72) >> 2];
                            r = u ? r : v;
                            v = (x | 0) > (r | 0);
                            y = i[(g + 76) >> 2];
                            x = v ? x : r;
                            r = (y | 0) > (x | 0);
                            z = i[(g + 80) >> 2];
                            y = r ? y : x;
                            x = (z | 0) > (y | 0);
                            A = i[(g + 84) >> 2];
                            z = x ? z : y;
                            y = (A | 0) > (z | 0);
                            w = i[(g + 88) >> 2];
                            A = y ? A : z;
                            z = (w | 0) > (A | 0);
                            B = i[(g + 92) >> 2];
                            w = z ? w : A;
                            A = (B | 0) > (w | 0);
                            C = i[(g + 96) >> 2];
                            B = A ? B : w;
                            w = (C | 0) > (B | 0);
                            D = i[(g + 100) >> 2];
                            C = w ? C : B;
                            B = (D | 0) > (C | 0);
                            E = i[(g + 104) >> 2];
                            D = B ? D : C;
                            C = (E | 0) > (D | 0);
                            E = i[(g + 108) >> 2] > ((C ? E : D) | 0);
                            D = E
                              ? 6
                              : C
                              ? 5
                              : B
                              ? 4
                              : w
                              ? 3
                              : A
                              ? 2
                              : z
                              ? 1
                              : y
                              ? 0
                              : x
                              ? 6
                              : r
                              ? 5
                              : v
                              ? 4
                              : u
                              ? 3
                              : t
                              ? 2
                              : s
                              ? 1
                              : n
                              ? 0
                              : f
                              ? 6
                              : q
                              ? 5
                              : p
                              ? 4
                              : m
                              ? 3
                              : l
                              ? 2
                              : e
                              ? 1
                              : d
                              ? 0
                              : F;
                            d = E
                              ? 3
                              : C
                              ? 3
                              : B
                              ? 3
                              : w
                              ? 3
                              : A
                              ? 3
                              : z
                              ? 3
                              : y
                              ? 3
                              : x
                              ? 2
                              : r
                              ? 2
                              : v
                              ? 2
                              : u
                              ? 2
                              : t
                              ? 2
                              : s
                              ? 2
                              : n
                              ? 2
                              : f | (q | (p | (m | (l | (d | e)))));
                            a: {
                              if (!d) {
                                while (1) {
                                  h[((j << 1) + b) >> 1] =
                                    k[
                                      (((((D + ((j - c) | 0)) << 1) + a) | 0) +
                                        -6) >>
                                        1
                                    ];
                                  j = (j + 1) | 0;
                                  if ((j | 0) != 80) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              e = (((D - c) | 0) + -6) | 0;
                              c = o((d + -1) | 0, 14);
                              d = h[(c + 2444) >> 1];
                              l = h[(c + 2442) >> 1];
                              m = h[(c + 2440) >> 1];
                              p = h[(c + 2438) >> 1];
                              q = h[(c + 2436) >> 1];
                              f = h[(c + 2434) >> 1];
                              n = h[(c + 2432) >> 1];
                              while (1) {
                                c = (((j + e) << 1) + a) | 0;
                                h[((j << 1) + b) >> 1] =
                                  (((o(d, h[(c + 12) >> 1]) +
                                    ((((((((((o(f, h[(c + 2) >> 1]) +
                                      o(n, h[c >> 1])) |
                                      0) +
                                      o(q, h[(c + 4) >> 1])) |
                                      0) +
                                      o(p, h[(c + 6) >> 1])) |
                                      0) +
                                      o(m, h[(c + 8) >> 1])) |
                                      0) +
                                      o(l, h[(c + 10) >> 1])) |
                                      0)) |
                                    0) +
                                    16384) >>>
                                  15;
                                j = (j + 1) | 0;
                                if ((j | 0) != 80) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (g + 112) | 0;
                          }
                          function Ia(a, b, c, d, e, f, g, j) {
                            var l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0;
                            z = ((j & 1) + j) | 0;
                            t = (c - b) | 0;
                            w = (t + 1) | 0;
                            j = w << 1;
                            n = (z + j) | 0;
                            A = ((n & 1) + n) | 0;
                            j = (A + j) | 0;
                            r = (((0 - j) & 3) + j) | 0;
                            s = w << 2;
                            j = (r + s) | 0;
                            x = (((0 - j) & 3) + j) | 0;
                            j = (x + (g << 2)) | 0;
                            B = (((0 - j) & 3) + j) | 0;
                            if ((g | 0) >= 1) {
                              while (1) {
                                j = l << 2;
                                i[(j + x) >> 2] = -1;
                                i[(j + B) >> 2] = 0;
                                i[(e + j) >> 2] = b;
                                l = (l + 1) | 0;
                                if ((l | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            p = (0 - c) | 0;
                            a: {
                              if ((p | 0) >= (d | 0)) {
                                break a;
                              }
                              l = p;
                              while (1) {
                                n = h[((l << 1) + a) >> 1];
                                j = n >> 31;
                                if ((j ^ (j + n)) < 16384) {
                                  l = (l + 1) | 0;
                                  if ((l | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                                break;
                              }
                              l = p;
                              while (1) {
                                C = 1;
                                j = ((l << 1) + a) | 0;
                                h[j >> 1] = h[j >> 1] >>> 1;
                                l = (l + 1) | 0;
                                if ((l | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            n = d >> 2;
                            b: {
                              if (n) {
                                l = (a - (b << 1)) | 0;
                                j = 0;
                                m = n;
                                while (1) {
                                  q = j;
                                  j = h[(l + 2) >> 1];
                                  u = o(j, j);
                                  j = h[l >> 1];
                                  u = (u + o(j, j)) | 0;
                                  j = h[(l + 4) >> 1];
                                  u = (u + o(j, j)) | 0;
                                  j = h[(l + 6) >> 1];
                                  j = (q + (((u + o(j, j)) >>> 6) | 0)) | 0;
                                  l = (l + 8) | 0;
                                  m = (m + -1) | 0;
                                  if (m) {
                                    continue;
                                  }
                                  break;
                                }
                                i[r >> 2] = j;
                                l = a;
                                j = n;
                                while (1) {
                                  m = h[(l + 2) >> 1];
                                  q = o(m, m);
                                  m = h[l >> 1];
                                  q = (q + o(m, m)) | 0;
                                  m = h[(l + 4) >> 1];
                                  q = (q + o(m, m)) | 0;
                                  m = h[(l + 6) >> 1];
                                  y = ((((q + o(m, m)) >>> 6) | 0) + y) | 0;
                                  l = (l + 8) | 0;
                                  j = (j + -1) | 0;
                                  if (j) {
                                    continue;
                                  }
                                  break;
                                }
                                break b;
                              }
                              i[r >> 2] = 0;
                            }
                            if ((c | 0) > (b | 0)) {
                              j = i[r >> 2];
                              l = b;
                              while (1) {
                                q = j;
                                j = l ^ -1;
                                m = h[((j << 1) + a) >> 1];
                                j = h[(((d + j) << 1) + a) >> 1];
                                j =
                                  (q +
                                    ((o(m, m) >>> 6) | 0) -
                                    (o(j, j) >>> 6)) |
                                  0;
                                j = (j | 0) > 0 ? j : 0;
                                i[(((r + ((l - b) << 2)) | 0) + 4) >> 2] = j;
                                l = (l + 1) | 0;
                                if ((l | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            D = wa(r, A, 32766, w);
                            c: {
                              if ((t | 0) < 0) {
                                break c;
                              }
                              if (n) {
                                q = ((p << 1) + a) | 0;
                                while (1) {
                                  l = (q + (v << 1)) | 0;
                                  m = 0;
                                  j = a;
                                  s = n;
                                  while (1) {
                                    m =
                                      (((((((o(
                                        h[(l + 2) >> 1],
                                        h[(j + 2) >> 1]
                                      ) +
                                        o(h[l >> 1], h[j >> 1])) |
                                        0) +
                                        o(h[(l + 4) >> 1], h[(j + 4) >> 1])) |
                                        0) +
                                        o(h[(l + 6) >> 1], h[(j + 6) >> 1])) >>
                                        6) +
                                        m) |
                                      0;
                                    l = (l + 8) | 0;
                                    j = (j + 8) | 0;
                                    s = (s + -1) | 0;
                                    if (s) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[(r + ((t - v) << 2)) >> 2] = m;
                                  j = (v | 0) != (t | 0);
                                  v = (v + 1) | 0;
                                  if (j) {
                                    continue;
                                  }
                                  break;
                                }
                                break c;
                              }
                              U(r, 0, s);
                            }
                            w = wa(r, z, 180, w);
                            if (!((C ^ 1) | ((p | 0) >= (d | 0)))) {
                              while (1) {
                                j = ((p << 1) + a) | 0;
                                h[j >> 1] = k[j >> 1] << 1;
                                p = (p + 1) | 0;
                                if ((p | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            d: {
                              if ((c | 0) < (b | 0)) {
                                break d;
                              }
                              p = (c | 0) > (b | 0) ? c : b;
                              c = (g + -1) | 0;
                              a = c << 2;
                              s = (a + e) | 0;
                              d = (a + x) | 0;
                              j = (a + B) | 0;
                              if ((g | 0) >= 2) {
                                l = b;
                                while (1) {
                                  a = l;
                                  l = (a - b) << 1;
                                  n = k[(l + z) >> 1];
                                  n = (o(n, n) << 16) >> 16;
                                  l = h[(l + A) >> 1];
                                  m = ((l << 16) + 65536) >> 16;
                                  e: {
                                    if (
                                      (o(n, h[j >> 1]) | 0) <=
                                      (o(m, h[d >> 1]) | 0)
                                    ) {
                                      break e;
                                    }
                                    i[d >> 2] = n;
                                    C = (l + 1) | 0;
                                    i[j >> 2] = C;
                                    i[s >> 2] = a;
                                    l = 0;
                                    while (1) {
                                      r = l << 2;
                                      q = (r + B) | 0;
                                      u = (r + x) | 0;
                                      if (
                                        (o(n, h[q >> 1]) | 0) <=
                                        (o(m, h[u >> 1]) | 0)
                                      ) {
                                        l = (l + 1) | 0;
                                        if ((c | 0) != (l | 0)) {
                                          continue;
                                        }
                                        break e;
                                      }
                                      break;
                                    }
                                    m = c;
                                    if ((c | 0) > (l | 0)) {
                                      while (1) {
                                        v = m << 2;
                                        m = (m + -1) | 0;
                                        t = m << 2;
                                        i[(v + x) >> 2] = i[(t + x) >> 2];
                                        i[(v + B) >> 2] = i[(t + B) >> 2];
                                        i[(e + v) >> 2] = i[(e + t) >> 2];
                                        if ((m | 0) > (l | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    i[u >> 2] = n;
                                    i[q >> 2] = C;
                                    i[(e + r) >> 2] = a;
                                  }
                                  l = (a + 1) | 0;
                                  if ((a | 0) != (p | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break d;
                              }
                              l = b;
                              while (1) {
                                a = (l - b) << 1;
                                c = k[(a + z) >> 1];
                                c = (o(c, c) << 16) >> 16;
                                a = h[(a + A) >> 1];
                                if (
                                  (o(c, h[j >> 1]) | 0) >
                                  (o(h[d >> 1], ((a << 16) + 65536) >> 16) | 0)
                                ) {
                                  i[d >> 2] = c;
                                  i[j >> 2] = a + 1;
                                  i[s >> 2] = l;
                                }
                                a = (l | 0) != (p | 0);
                                l = (l + 1) | 0;
                                if (a) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if (!(!f | ((g | 0) < 1))) {
                              a = y >>> 0 > 65535;
                              c = a << 3;
                              j = c | 4;
                              d = c;
                              a = a ? (y >>> 16) | 0 : y;
                              c = a >>> 0 > 255;
                              d = c ? j : d;
                              a = c ? (a >>> 8) | 0 : a;
                              c = a >>> 0 > 15;
                              a =
                                (c ? d | 2 : d) |
                                ((c ? (a >>> 4) | 0 : a) >>> 0 > 3);
                              c = a << 1;
                              d = (a << 16) >> 16;
                              c =
                                (((d | 0) > 6
                                  ? y >> (c + -12)
                                  : y << (12 - c)) <<
                                  16) >>
                                16;
                              c =
                                (((o(
                                  (((o((o(c, 16816) + -827523072) >> 16, c) <<
                                    2) &
                                    -65536) +
                                    1387593728) >>
                                    16,
                                  c
                                ) <<
                                  2) &
                                  -65536) +
                                  238157824) >>
                                16;
                              a = (13 - a) | 0;
                              l =
                                (((d | 0) < 13 ? c >> a : c << (0 - a)) <<
                                  16) >>
                                16;
                              j = 0;
                              while (1) {
                                n = (i[((j << 2) + e) >> 2] - b) << 1;
                                a = h[(n + A) >> 1] << D;
                                c = a >>> 0 > 65535;
                                d = c << 3;
                                p = d | 4;
                                m = d;
                                c = c ? (a >>> 16) | 0 : a;
                                d = c >>> 0 > 255;
                                m = d ? p : m;
                                c = d ? (c >>> 8) | 0 : c;
                                d = c >>> 0 > 15;
                                c =
                                  (d ? m | 2 : m) |
                                  ((d ? (c >>> 4) | 0 : c) >>> 0 > 3);
                                d = c << 1;
                                m = a >> (d + -12);
                                a = a << (12 - d);
                                d = (c << 16) >> 16;
                                a = (((d | 0) > 6 ? m : a) << 16) >> 16;
                                a =
                                  (((o(
                                    (((o((o(a, 16816) + -827523072) >> 16, a) <<
                                      2) &
                                      -65536) +
                                      1387593728) >>
                                      16,
                                    a
                                  ) <<
                                    2) &
                                    -65536) +
                                    238157824) >>
                                  16;
                                c = (13 - c) | 0;
                                a =
                                  ((h[(n + z) >> 1] << w) /
                                    (((o(
                                      l,
                                      (((d | 0) < 13 ? a >> c : a << (0 - c)) <<
                                        16) >>
                                        16
                                    ) >>
                                      6) +
                                      10) |
                                      0)) |
                                  0;
                                h[((j << 1) + f) >> 1] = a & 32768 ? 0 : a;
                                j = (j + 1) | 0;
                                if ((j | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function ta(a, b, c, d, e) {
                            var f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0,
                              D = 0;
                            m = (((0 - e) & 3) + e) | 0;
                            q = ((b | 0) / 2) | 0;
                            p = (q + 1) | 0;
                            e = p << 2;
                            j = (m + e) | 0;
                            g = (((0 - j) & 3) + j) | 0;
                            i[g >> 2] = 8192;
                            i[m >> 2] = 8192;
                            t = (e + g) | 0;
                            a: {
                              if ((b | 0) < 2) {
                                break a;
                              }
                              e = (m + 4) | 0;
                              f = (g + 4) | 0;
                              b: {
                                if (
                                  !((f >>> 0 >= j >>> 0) | (m >>> 0 >= t >>> 0))
                                ) {
                                  j = m;
                                  l = g;
                                  while (1) {
                                    r = h[((((n ^ -1) + b) << 1) + a) >> 1];
                                    s = h[((n << 1) + a) >> 1];
                                    i[f >> 2] = ((r + s) | 0) - i[l >> 2];
                                    i[e >> 2] = i[j >> 2] + ((s - r) | 0);
                                    e = (e + 4) | 0;
                                    j = (j + 4) | 0;
                                    f = (f + 4) | 0;
                                    l = (l + 4) | 0;
                                    n = (n + 1) | 0;
                                    if ((q | 0) != (n | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break b;
                                }
                                l = i[m >> 2];
                                j = g;
                                while (1) {
                                  r = h[((((n ^ -1) + b) << 1) + a) >> 1];
                                  s = h[((n << 1) + a) >> 1];
                                  i[f >> 2] = ((r + s) | 0) - i[j >> 2];
                                  l = (((s - r) | 0) + l) | 0;
                                  i[e >> 2] = l;
                                  e = (e + 4) | 0;
                                  f = (f + 4) | 0;
                                  j = (j + 4) | 0;
                                  n = (n + 1) | 0;
                                  if ((q | 0) != (n | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if ((b | 0) <= 1) {
                                break a;
                              }
                              a = 0;
                              e = m;
                              f = g;
                              while (1) {
                                i[f >> 2] = (i[f >> 2] + 2) >> 2;
                                i[e >> 2] = (i[e >> 2] + 2) >> 2;
                                e = (e + 4) | 0;
                                f = (f + 4) | 0;
                                a = (a + 1) | 0;
                                if ((q | 0) != (a | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            a = q << 2;
                            e = (a + g) | 0;
                            i[e >> 2] = (i[e >> 2] + 4) >> 3;
                            a = (a + m) | 0;
                            i[a >> 2] = (i[a >> 2] + 4) >> 3;
                            c: {
                              if ((b | 0) < -1) {
                                break c;
                              }
                              x = (t + (t & 1)) | 0;
                              a = (x + (p << 1)) | 0;
                              z = ((a & 1) + a) | 0;
                              e = 0;
                              while (1) {
                                a = e << 1;
                                f = e << 2;
                                h[(a + x) >> 1] = i[(f + g) >> 2];
                                h[(a + z) >> 1] = i[(f + m) >> 2];
                                a = (e | 0) == (q | 0);
                                e = (e + 1) | 0;
                                if (!a) {
                                  continue;
                                }
                                break;
                              }
                              if ((b | 0) < 1) {
                                break c;
                              }
                              g = 16384;
                              C = (q + -1) << 1;
                              A = (b | 0) < 4;
                              m = 0;
                              while (1) {
                                s = w & 1 ? z : x;
                                t = (C + s) | 0;
                                r = h[t >> 1];
                                u = ((q << 1) + s) | 0;
                                p = h[u >> 1];
                                a = (g << 16) >> 16 < 16383 ? g : 16383;
                                f = (a << 16) >> 16 > -16383 ? a : -16383;
                                n = (f << 16) >> 16;
                                j = (p + ((o(n, r) - -8192) >> 14)) | 0;
                                a = 16384;
                                e = 2;
                                if (!A) {
                                  while (1) {
                                    l =
                                      (((o(n, (f << 16) >> 16) >>> 13) | 0) -
                                        a) |
                                      0;
                                    j =
                                      (((o(
                                        h[(((q - e) << 1) + s) >> 1],
                                        (l << 16) >> 16
                                      ) -
                                        -8192) >>
                                        14) +
                                        j) |
                                      0;
                                    v = (e | 0) != (q | 0);
                                    a = f;
                                    f = l;
                                    e = (e + 1) | 0;
                                    if (v) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                d: {
                                  if ((m << 16) >> 16 < -16384) {
                                    break d;
                                  }
                                  D = ((w << 1) + c) | 0;
                                  while (1) {
                                    e = 2;
                                    a = (g << 16) >> 16;
                                    a = o(
                                      (1073741824 -
                                        (o((o(a, a) << 2) >> 16, 56e3) &
                                          -65536)) >>
                                        16,
                                      d
                                    );
                                    a =
                                      (g -
                                        ((j + 511) >>> 0 < 1023
                                          ? ((((a << 1) >> 16) + 1) >>> 1) | 0
                                          : (a >>> 15) | 0)) |
                                      0;
                                    m = (a << 16) >> 16;
                                    v = (p << 16) >> 16;
                                    a = (m | 0) < 16383 ? a : 16383;
                                    f = (a << 16) >> 16 > -16383 ? a : -16383;
                                    p = (f << 16) >> 16;
                                    a = (v + ((o(p, r) - -8192) >> 14)) | 0;
                                    n = 16384;
                                    if (!A) {
                                      while (1) {
                                        l =
                                          (((o(p, (f << 16) >> 16) >>> 13) |
                                            0) -
                                            n) |
                                          0;
                                        a =
                                          (((o(
                                            h[(((q - e) << 1) + s) >> 1],
                                            (l << 16) >> 16
                                          ) -
                                            -8192) >>
                                            14) +
                                            a) |
                                          0;
                                        y = (e | 0) != (q | 0);
                                        n = f;
                                        f = l;
                                        e = (e + 1) | 0;
                                        if (y) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    if (!((a ^ j) & 1879048192 ? 0 : j)) {
                                      p = 0;
                                      e: {
                                        if ((b | 0) <= 3) {
                                          while (1) {
                                            l =
                                              ((((((g << 16) >> 16) << 15) +
                                                32768) >>>
                                                16) +
                                                (((((m << 16) >> 16) << 15) +
                                                  32768) >>>
                                                  16)) |
                                              0;
                                            a =
                                              (l << 16) >> 16 < 16383
                                                ? l
                                                : 16383;
                                            e =
                                              (((o(
                                                (((a << 16) >> 16 > -16383
                                                  ? a
                                                  : -16383) <<
                                                  16) >>
                                                  16,
                                                r
                                              ) -
                                                -8192) >>
                                                14) +
                                                v) |
                                              0;
                                            a =
                                              !j |
                                              (((e ^ j) & 1879048192) != 0);
                                            j = a ? j : e;
                                            g = a ? g : l;
                                            m = a ? l : m;
                                            a = (p | 0) == 10;
                                            p = (p + 1) | 0;
                                            if (!a) {
                                              continue;
                                            }
                                            break e;
                                          }
                                        }
                                        while (1) {
                                          l =
                                            ((((((g << 16) >> 16) << 15) +
                                              32768) >>>
                                              16) +
                                              (((((m << 16) >> 16) << 15) +
                                                32768) >>>
                                                16)) |
                                            0;
                                          a =
                                            (l << 16) >> 16 < 16383 ? l : 16383;
                                          f =
                                            (a << 16) >> 16 > -16383
                                              ? a
                                              : -16383;
                                          u = (f << 16) >> 16;
                                          a =
                                            (((o(u, r) - -8192) >> 14) + v) | 0;
                                          e = 2;
                                          n = 16384;
                                          while (1) {
                                            t =
                                              (((o(u, (f << 16) >> 16) >>> 13) |
                                                0) -
                                                n) |
                                              0;
                                            a =
                                              (((o(
                                                h[(((q - e) << 1) + s) >> 1],
                                                (t << 16) >> 16
                                              ) -
                                                -8192) >>
                                                14) +
                                                a) |
                                              0;
                                            y = (e | 0) != (q | 0);
                                            n = f;
                                            f = t;
                                            e = (e + 1) | 0;
                                            if (y) {
                                              continue;
                                            }
                                            break;
                                          }
                                          e =
                                            !j | (((a ^ j) & 1879048192) != 0);
                                          g = e ? g : l;
                                          m = e ? l : m;
                                          j = e ? j : a;
                                          a = (p | 0) == 10;
                                          p = (p + 1) | 0;
                                          if (!a) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      B = (B + 1) | 0;
                                      j = (l << 16) >> 16 < 0;
                                      a =
                                        (((j ? l : (0 - l) | 0) << 16) +
                                          1073741824) >>
                                        17;
                                      e =
                                        (o(
                                          (((o(
                                            ((o(a, 1486) >> 13) + 2242) | 0,
                                            a
                                          ) <<
                                            3) &
                                            -65536) +
                                            1079312384) >>
                                            16,
                                          a
                                        ) <<
                                          3) >>
                                        16;
                                      a = e << 13;
                                      f = a >>> 0 > 65535;
                                      g = f << 3;
                                      e = f ? (e >>> 3) & 65535 : a;
                                      f = e >>> 0 > 255;
                                      g = f ? g | 4 : g;
                                      e = f ? (e >>> 8) | 0 : e;
                                      f = e >>> 0 > 15;
                                      e =
                                        (f ? g | 2 : g) |
                                        ((f ? (e >>> 4) | 0 : e) >>> 0 > 3);
                                      f = e << 1;
                                      g = a >> (f + -12);
                                      a = a << (12 - f);
                                      f = (e << 16) >> 16;
                                      a = (((f | 0) > 6 ? g : a) << 16) >> 16;
                                      a =
                                        (((o(
                                          (((o(
                                            (o(a, 16816) + -827523072) >> 16,
                                            a
                                          ) <<
                                            2) &
                                            -65536) +
                                            1387593728) >>
                                            16,
                                          a
                                        ) <<
                                          2) &
                                          -65536) +
                                          238157824) >>
                                        16;
                                      e = (13 - e) | 0;
                                      a = (f | 0) < 13 ? a >> e : a << (0 - e);
                                      h[D >> 1] = j ? (25736 - a) | 0 : a;
                                      g = l;
                                      break d;
                                    }
                                    if ((m | 0) < -16384) {
                                      g = m;
                                    } else {
                                      r = h[t >> 1];
                                      p = k[u >> 1];
                                      g = m;
                                      j = a;
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                w = (w + 1) | 0;
                                if ((w | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return B;
                          }
                          function xb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              j = 0;
                            d = (H - 32) | 0;
                            H = d;
                            a: {
                              b: {
                                switch ((b + -3) | 0) {
                                  case 98:
                                    if (i[(a + 16) >> 2] < 1) {
                                      break a;
                                    }
                                    b = 0;
                                    while (1) {
                                      f = i[(a + 12) >> 2];
                                      h[((b << 1) + c) >> 1] = Z(
                                        (i[(a + 76) >> 2] + (o(f, b) << 1)) | 0,
                                        f
                                      );
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 16) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 0:
                                    i[c >> 2] = i[(a + 8) >> 2];
                                    break a;
                                  case 3:
                                  case 5:
                                    b = i[c >> 2];
                                    i[(a + 212) >> 2] = b;
                                    i[(a + 208) >> 2] = b;
                                    break a;
                                  case 4:
                                  case 6:
                                    i[c >> 2] = i[(a + 208) >> 2];
                                    break a;
                                  case 9:
                                    i[(a + 152) >> 2] = i[c >> 2];
                                    break a;
                                  case 10:
                                    i[c >> 2] = i[(a + 152) >> 2];
                                    break a;
                                  case 27:
                                    i[(a + 160) >> 2] = i[c >> 2];
                                    break a;
                                  case 28:
                                    i[c >> 2] = i[(a + 160) >> 2];
                                    break a;
                                  case 31:
                                    i[(a + 164) >> 2] = i[c >> 2];
                                    break a;
                                  case 32:
                                    i[c >> 2] = i[(a + 164) >> 2];
                                    break a;
                                  case 29:
                                    b = i[c >> 2];
                                    i[(a + 172) >> 2] = b;
                                    i[(a + 152) >> 2] = (b | 0) != 0;
                                    if (!b) {
                                      break a;
                                    }
                                    i[(d + 28) >> 2] = 10;
                                    e = i[c >> 2];
                                    while (1) {
                                      c: {
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          4,
                                          (d + 28) | 0
                                        ) | 0;
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          19,
                                          (d + 24) | 0
                                        ) | 0;
                                        c = i[(d + 28) >> 2];
                                        if (i[(d + 24) >> 2] <= (e | 0)) {
                                          b = c;
                                          break c;
                                        }
                                        b = (c + -1) | 0;
                                        i[(d + 28) >> 2] = b;
                                        if ((c | 0) > 0) {
                                          continue;
                                        }
                                      }
                                      break;
                                    }
                                    e = 0;
                                    m[(d + 20) >> 2] =
                                      ((b | 0) > 0 ? b : 0) | 0;
                                    J[i[(i[a >> 2] + 44) >> 2]](
                                      a,
                                      14,
                                      (d + 20) | 0
                                    ) | 0;
                                    i[(a + 176) >> 2] = 0;
                                    i[(a + 180) >> 2] = 0;
                                    i[(a + 184) >> 2] = 0;
                                    break a;
                                  case 30:
                                    i[c >> 2] = i[(a + 172) >> 2];
                                    break a;
                                  case 11:
                                    i[(a + 144) >> 2] = i[c >> 2];
                                    break a;
                                  case 12:
                                    i[c >> 2] = i[(a + 144) >> 2];
                                    break a;
                                  case 1:
                                    b = i[c >> 2];
                                    b = (b | 0) > 0 ? b : 0;
                                    b =
                                      i[
                                        (((i[i[a >> 2] >> 2] +
                                          (((b | 0) < 10 ? b : 10) << 2)) |
                                          0) +
                                          96) >>
                                          2
                                      ];
                                    i[(a + 212) >> 2] = b;
                                    i[(a + 208) >> 2] = b;
                                    break a;
                                  case 13:
                                    b = a;
                                    a = i[c >> 2];
                                    i[(b + 188) >> 2] = (a | 0) > 0 ? a : 0;
                                    break a;
                                  case 14:
                                    i[c >> 2] = i[(a + 188) >> 2];
                                    break a;
                                  case 15:
                                    i[(d + 28) >> 2] = 10;
                                    b = i[c >> 2];
                                    while (1) {
                                      d: {
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          4,
                                          (d + 28) | 0
                                        ) | 0;
                                        J[i[(i[a >> 2] + 44) >> 2]](
                                          a,
                                          19,
                                          (d + 24) | 0
                                        ) | 0;
                                        if (i[(d + 24) >> 2] <= (b | 0)) {
                                          break d;
                                        }
                                        c = i[(d + 28) >> 2];
                                        i[(d + 28) >> 2] = c + -1;
                                        if ((c | 0) > 0) {
                                          continue;
                                        }
                                      }
                                      break;
                                    }
                                    break a;
                                  case 16:
                                    b = i[(a + 192) >> 2];
                                    e =
                                      i[
                                        (i[(a + 204) >> 2] +
                                          (i[(a + 208) >> 2] << 2)) >>
                                          2
                                      ];
                                    if (e) {
                                      i[c >> 2] =
                                        (o(b, i[(e + 52) >> 2]) | 0) /
                                        i[(a + 8) >> 2];
                                      e = 0;
                                      break a;
                                    }
                                    i[c >> 2] = (o(b, 5) | 0) / i[(a + 8) >> 2];
                                    e = 0;
                                    break a;
                                  case 21:
                                    i[(a + 192) >> 2] = i[c >> 2];
                                    break a;
                                  case 22:
                                    i[c >> 2] = i[(a + 192) >> 2];
                                    break a;
                                  case 23:
                                    i[(a + 4) >> 2] = 1;
                                    i[(a + 40) >> 2] = 1;
                                    b = i[(a + 24) >> 2];
                                    e: {
                                      if ((b | 0) < 1) {
                                        break e;
                                      }
                                      e = (b + 1) | 0;
                                      f = i[(a + 96) >> 2];
                                      c = 0;
                                      while (1) {
                                        g = (f + (c << 1)) | 0;
                                        c = (c + 1) | 0;
                                        h[g >> 1] =
                                          (o((c << 16) >> 16, 25736) | 0) /
                                          (e | 0);
                                        if ((b | 0) != (c | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                      if ((b | 0) < 1) {
                                        break e;
                                      }
                                      e = i[(a + 108) >> 2];
                                      f = i[(a + 112) >> 2];
                                      g = i[(a + 104) >> 2];
                                      j = i[(a + 116) >> 2];
                                      b = 0;
                                      while (1) {
                                        c = b << 2;
                                        i[(c + j) >> 2] = 0;
                                        i[(c + g) >> 2] = 0;
                                        i[(c + f) >> 2] = 0;
                                        i[(c + e) >> 2] = 0;
                                        b = (b + 1) | 0;
                                        if ((b | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    b = i[(a + 8) >> 2];
                                    e = (b + i[(a + 32) >> 2]) | 0;
                                    if ((e | 0) >= 0) {
                                      f = i[(a + 72) >> 2];
                                      g = i[(a + 80) >> 2];
                                      c = 0;
                                      while (1) {
                                        j = c << 1;
                                        h[(j + g) >> 1] = 0;
                                        h[(f + j) >> 1] = 0;
                                        j = (c | 0) == (e | 0);
                                        c = (c + 1) | 0;
                                        if (!j) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    e = 0;
                                    c = i[(a + 20) >> 2];
                                    if ((c | 0) <= (b | 0)) {
                                      break a;
                                    }
                                    f = i[(a + 68) >> 2];
                                    a = (c - b) | 0;
                                    U(f, 0, ((a | 0) > 1 ? a : 1) << 1);
                                    break a;
                                  case 33:
                                    i[(a + 200) >> 2] = i[c >> 2];
                                    break a;
                                  case 34:
                                    i[c >> 2] = i[(a + 200) >> 2];
                                    break a;
                                  case 36:
                                    i[c >> 2] =
                                      i[(a + 20) >> 2] - i[(a + 8) >> 2];
                                    break a;
                                  case 37:
                                    b = a;
                                    a = i[c >> 2];
                                    i[(b + 196) >> 2] = (a | 0) < 100 ? a : 100;
                                    H = (d + 32) | 0;
                                    return 0;
                                  case 38:
                                    i[c >> 2] = i[(a + 196) >> 2];
                                    break a;
                                  case 39:
                                    i[(a + 156) >> 2] = i[c >> 2];
                                    break a;
                                  case 40:
                                    i[c >> 2] = i[(a + 156) >> 2];
                                    break a;
                                  case 41:
                                    i[(a + 220) >> 2] = i[c >> 2];
                                    break a;
                                  case 42:
                                    i[c >> 2] = i[(a + 220) >> 2];
                                    break a;
                                  case 97:
                                    if (i[(a + 16) >> 2] < 1) {
                                      break a;
                                    }
                                    f = i[(a + 132) >> 2];
                                    b = 0;
                                    while (1) {
                                      g = b << 2;
                                      i[(g + c) >> 2] = i[(f + g) >> 2];
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 16) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 26:
                                    i[c >> 2] = i[(a + 148) >> 2];
                                    break a;
                                  case 101:
                                    i[(a + 136) >> 2] = c;
                                    break a;
                                  case 102:
                                    i[(a + 216) >> 2] = i[c >> 2];
                                    break a;
                                  case 103:
                                    i[c >> 2] = i[(a + 64) >> 2];
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 12742;
                              Y(i[3524], 12828, d);
                              e = -1;
                            }
                            H = (d + 32) | 0;
                            return e | 0;
                          }
                          function sb(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0;
                            q = (H - 32) | 0;
                            H = q;
                            a: {
                              b: {
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                while (1) {
                                  j = e << 1;
                                  h[(j + b) >> 1] = k[(a + j) >> 1];
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                j = h[b >> 1];
                                l = q;
                                m = (c + -1) | 0;
                                e = 25736;
                                c: {
                                  if (!m) {
                                    break c;
                                  }
                                  e = k[(b + 2) >> 1];
                                }
                                e = (e - j) | 0;
                                h[l >> 1] =
                                  81920 /
                                  (((((e << 16) >> 16 < (j | 0) ? e : j) <<
                                    16) +
                                    19660800) >>
                                    16);
                                e = 1;
                                if ((c | 0) != 1) {
                                  while (1) {
                                    p = e << 1;
                                    j = (p + b) | 0;
                                    r = k[j >> 1];
                                    n = ((r - k[(j + -2) >> 1]) << 16) >> 16;
                                    j = (e + 1) | 0;
                                    e =
                                      (((e | 0) != (m | 0)
                                        ? k[((j << 1) + b) >> 1]
                                        : 25736) -
                                        r) |
                                      0;
                                    h[(q + p) >> 1] =
                                      81920 /
                                      (((((e << 16) >> 16 < (n | 0) ? e : n) <<
                                        16) +
                                        19660800) >>
                                        16);
                                    e = j;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                e = 0;
                                while (1) {
                                  j = ((e << 1) + b) | 0;
                                  e = (e + 1) | 0;
                                  h[j >> 1] = k[j >> 1] - (e << 11);
                                  if ((c | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                if ((c | 0) < 1) {
                                  break b;
                                }
                                r = 2147483647;
                                n = 0;
                                j = 8848;
                                while (1) {
                                  m = 0;
                                  e = j;
                                  p = 0;
                                  while (1) {
                                    l = m;
                                    m =
                                      ((k[((p << 1) + b) >> 1] -
                                        (g[e | 0] << 5)) <<
                                        16) >>
                                      16;
                                    m = (l + o(m, m)) | 0;
                                    e = (e + 1) | 0;
                                    p = (p + 1) | 0;
                                    if ((p | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  e = (m | 0) < (r | 0);
                                  n = e ? s : n;
                                  r = e ? m : r;
                                  j = (c + j) | 0;
                                  s = (s + 1) | 0;
                                  if ((s | 0) != 64) {
                                    continue;
                                  }
                                  break;
                                }
                                j = o(c, n);
                                e = 0;
                                while (1) {
                                  m = ((e << 1) + b) | 0;
                                  h[m >> 1] =
                                    k[m >> 1] -
                                    (g[(((e + j) | 0) + 8848) | 0] << 5);
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                W(d, n, 6);
                                e = 0;
                                if ((c | 0) <= 0) {
                                  break a;
                                }
                                while (1) {
                                  j = ((e << 1) + b) | 0;
                                  h[j >> 1] = k[j >> 1] << 1;
                                  e = (e + 1) | 0;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              W(d, 0, 6);
                            }
                            v = k[b >> 1];
                            w = k[(b + 8) >> 1];
                            x = k[(b + 6) >> 1];
                            i = k[(b + 4) >> 1];
                            y = k[(b + 2) >> 1];
                            p = 2147483647;
                            n = 0;
                            e = 9488;
                            j = h[(q + 8) >> 1];
                            r = h[(q + 6) >> 1];
                            s = h[(q + 4) >> 1];
                            t = h[(q + 2) >> 1];
                            u = h[q >> 1];
                            m = 0;
                            while (1) {
                              f = ((v - (g[e | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                ((o(u, f & 32767) >> 15) +
                                  o(u, (f << 1) >> 16)) |
                                0;
                              f = ((y - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(t, f & 32767) >> 15)) | 0) +
                                  o(t, (f << 1) >> 16)) |
                                0;
                              f = ((i - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(s, f & 32767) >> 15)) | 0) +
                                  o(s, (f << 1) >> 16)) |
                                0;
                              f = ((x - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(r, f & 32767) >> 15)) | 0) +
                                  o(r, (f << 1) >> 16)) |
                                0;
                              f = ((w - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              f = o(f, f);
                              l =
                                (((l + (o(j, f & 32767) >> 15)) | 0) +
                                  o(j, (f << 1) >> 16)) |
                                0;
                              f = (l | 0) < (p | 0);
                              p = f ? l : p;
                              n = f ? m : n;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(n, 5);
                            h[b >> 1] = k[b >> 1] - (g[(e + 9488) | 0] << 5);
                            h[(b + 2) >> 1] =
                              k[(b + 2) >> 1] - (g[(e + 9489) | 0] << 5);
                            h[(b + 4) >> 1] =
                              k[(b + 4) >> 1] - (g[(e + 9490) | 0] << 5);
                            h[(b + 6) >> 1] =
                              k[(b + 6) >> 1] - (g[(e + 9491) | 0] << 5);
                            h[(b + 8) >> 1] =
                              k[(b + 8) >> 1] - (g[(e + 9492) | 0] << 5);
                            W(d, n, 6);
                            y = k[(b + 10) >> 1];
                            j = k[(b + 18) >> 1];
                            r = k[(b + 16) >> 1];
                            s = k[(b + 14) >> 1];
                            t = k[(b + 12) >> 1];
                            p = 2147483647;
                            n = 0;
                            e = 10128;
                            u = h[(q + 18) >> 1];
                            f = h[(q + 16) >> 1];
                            v = h[(q + 14) >> 1];
                            w = h[(q + 12) >> 1];
                            x = h[(q + 10) >> 1];
                            m = 0;
                            while (1) {
                              i = ((y - (g[e | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                ((o(x, i & 32767) >> 15) +
                                  o(x, (i << 1) >> 16)) |
                                0;
                              i = ((t - (g[(e + 1) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(w, i & 32767) >> 15)) | 0) +
                                  o(w, (i << 1) >> 16)) |
                                0;
                              i = ((s - (g[(e + 2) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(v, i & 32767) >> 15)) | 0) +
                                  o(v, (i << 1) >> 16)) |
                                0;
                              i = ((r - (g[(e + 3) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(f, i & 32767) >> 15)) | 0) +
                                  o(f, (i << 1) >> 16)) |
                                0;
                              i = ((j - (g[(e + 4) | 0] << 5)) << 16) >> 16;
                              i = o(i, i);
                              l =
                                (((l + (o(u, i & 32767) >> 15)) | 0) +
                                  o(u, (i << 1) >> 16)) |
                                0;
                              i = (l | 0) < (p | 0);
                              p = i ? l : p;
                              n = i ? m : n;
                              e = (e + 5) | 0;
                              m = (m + 1) | 0;
                              if ((m | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            e = o(n, 5);
                            h[(b + 18) >> 1] = j - (g[(e + 10132) | 0] << 5);
                            h[(b + 16) >> 1] = r - (g[(e + 10131) | 0] << 5);
                            h[(b + 14) >> 1] = s - (g[(e + 10130) | 0] << 5);
                            h[(b + 12) >> 1] = t - (g[(e + 10129) | 0] << 5);
                            h[(b + 10) >> 1] =
                              k[(b + 10) >> 1] - (g[(e + 10128) | 0] << 5);
                            W(d, n, 6);
                            e = 0;
                            d: {
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = ((e << 1) + b) | 0;
                                h[d >> 1] = (h[d >> 1] + 1) >>> 1;
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              e = 0;
                              if ((c | 0) <= 0) {
                                break d;
                              }
                              while (1) {
                                d = e << 1;
                                j = (d + b) | 0;
                                h[j >> 1] = k[(a + d) >> 1] - k[j >> 1];
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (q + 32) | 0;
                          }
                          function Ja(a, b, c, d, e, f) {
                            var g = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            r = ((f & 1) + f) | 0;
                            Ka(a, r, d);
                            f = 0;
                            j = (r + (c << 1)) | 0;
                            Ka(a, j, (d | 0) > 40 ? d << 1 : (0 - d) | 0);
                            t = 1;
                            a: {
                              if ((c | 0) <= 0) {
                                break a;
                              }
                              b: {
                                while (1) {
                                  i = h[((f << 1) + a) >> 1];
                                  g = i >> 31;
                                  if ((g ^ (g + i)) > 16383) {
                                    break b;
                                  }
                                  f = (f + 1) | 0;
                                  if ((f | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              f = 0;
                              while (1) {
                                g = ((f << 1) + a) | 0;
                                h[g >> 1] = h[g >> 1] >>> 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              f = c << 1;
                              g = (f | 0) > 1 ? f : 1;
                              t = 0;
                              f = 0;
                              while (1) {
                                i = (r + (f << 1)) | 0;
                                h[i >> 1] = h[i >> 1] >>> 1;
                                f = (f + 1) | 0;
                                if ((g | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            p = $(r, r, c);
                            i = $(j, j, c);
                            f = ($(a, a, c) + 1) | 0;
                            g = f >>> 0 > 65535;
                            l = g << 3;
                            q = l | 4;
                            n = l;
                            g = g ? (f >>> 16) | 0 : f;
                            l = g >>> 0 > 255;
                            m = l ? q : n;
                            g = l ? (g >>> 8) | 0 : g;
                            l = g >>> 0 > 15;
                            g =
                              (l ? m | 2 : m) |
                              ((l ? (g >>> 4) | 0 : g) >>> 0 > 3);
                            l = g << 1;
                            i = (i + 1e3) | 0;
                            m = i >>> 0 > 65535;
                            n = m << 3;
                            s = n | 4;
                            q = n;
                            m = m ? (i >>> 16) | 0 : i;
                            n = m >>> 0 > 255;
                            s = n ? s : q;
                            m = n ? (m >>> 8) | 0 : m;
                            n = m >>> 0 > 15;
                            m =
                              (n ? s | 2 : s) |
                              ((n ? (m >>> 4) | 0 : m) >>> 0 > 3);
                            n = m << 1;
                            q = f >> (l + -12);
                            f = f << (12 - l);
                            l = (g << 16) >> 16;
                            f = (((l | 0) > 6 ? q : f) << 16) >> 16;
                            f =
                              (((o(
                                (((o((o(f, 16816) + -827523072) >> 16, f) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                f
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            g = (13 - g) | 0;
                            l = ((l | 0) < 13 ? f >> g : f << (0 - g)) << 16;
                            g = l >> 16;
                            s = ((((g + 32) >>> 6) | 0) + 1) | 0;
                            f = i >> (n + -12);
                            n = i << (12 - n);
                            i = (m << 16) >> 16;
                            f = (((i | 0) > 6 ? f : n) << 16) >> 16;
                            f =
                              (((o(
                                (((o((o(f, 16816) + -827523072) >> 16, f) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                f
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            m = (13 - m) | 0;
                            f = (i | 0) < 13 ? f >> m : f << (0 - m);
                            u = (f << 16) >> 10 < (g | 0) ? s : f;
                            i = $(r, a, c);
                            f = $(j, a, c);
                            n = (f | 0) > 0 ? f : 0;
                            m = 16384;
                            f = (p + 1e3) | 0;
                            j = f >>> 0 > 65535;
                            p = j << 3;
                            v = p | 4;
                            q = p;
                            j = j ? (f >>> 16) | 0 : f;
                            p = j >>> 0 > 255;
                            q = p ? v : q;
                            j = p ? (j >>> 8) | 0 : j;
                            p = j >>> 0 > 15;
                            j =
                              (p ? q | 2 : q) |
                              ((p ? (j >>> 4) | 0 : j) >>> 0 > 3);
                            p = j << 1;
                            q = (i | 0) > 0 ? i : 0;
                            i = (j << 16) >> 16;
                            f =
                              (((i | 0) > 6 ? f >> (p + -12) : f << (12 - p)) <<
                                16) >>
                              16;
                            f =
                              (((o(
                                (((o((o(f, 16816) + -827523072) >> 16, f) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                f
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            j = (13 - j) | 0;
                            f = (i | 0) < 13 ? f >> j : f << (0 - j);
                            i =
                              (((f << 16) >> 10 < (g | 0) ? s : f) << 16) >> 16;
                            if ((q | 0) <= (o(i, g) | 0)) {
                              m =
                                (((((((((l >> 17) + q) | 0) / (g | 0)) << 14) +
                                  (i >> 1)) |
                                  0) /
                                  (i | 0)) <<
                                  16) >>
                                16;
                            }
                            j = (u << 16) >> 16;
                            c: {
                              if ((n | 0) > (o(j, g) | 0)) {
                                f = j >> 1;
                                g = 16384;
                                break c;
                              }
                              f = j >> 1;
                              g =
                                ((((f +
                                  ((((n + (l >> 17)) | 0) / (g | 0)) << 14)) |
                                  0) /
                                  (j | 0)) <<
                                  16) >>
                                16;
                            }
                            l = l >> 8;
                            n = (((l + (i >> 1)) | 0) / (i | 0)) | 0;
                            i = (((f + l) | 0) / (j | 0)) | 0;
                            d: {
                              if ((e | 0) < 1) {
                                f = 0;
                                e = 0;
                                break d;
                              }
                              e = (o(e & 65535, 13107) >>> 15) | 0;
                              f = (e + 2294) | 0;
                              e = ((o(e, 112720) & -65536) + 1073741824) >> 16;
                            }
                            j = f << 14;
                            g =
                              (32767 -
                                ((o(g, (o(e, g) << 1) >> 16) >>> 13) | 0)) |
                              0;
                            l = (f << 16) >> 16;
                            g = ((g << 16) >> 16 < (l | 0) ? f : g) << 16;
                            g = (((j + (g >> 17)) | 0) / (g >> 16)) | 0;
                            e =
                              (32767 -
                                ((o((o(e, m) << 1) >> 16, m) >>> 13) | 0)) |
                              0;
                            e = ((e << 16) >> 16 < (l | 0) ? f : e) << 16;
                            e =
                              o(
                                (n << 16) >> 14,
                                ((((j + (e >> 17)) | 0) / (e >> 16)) << 16) >>
                                  16
                              ) >> 16;
                            e: {
                              if ((d | 0) > 40) {
                                f = o(e, 22938) >> 15;
                                d =
                                  o(
                                    o((i << 16) >> 14, (g << 16) >> 16) >> 16,
                                    9830
                                  ) >> 15;
                                break e;
                              }
                              f = (o(e, 19661) >>> 15) | 0;
                              d =
                                (o(
                                  o((i << 16) >> 14, (g << 16) >> 16) >> 16,
                                  19661
                                ) >>>
                                  15) |
                                0;
                            }
                            g = (c | 0) < 1;
                            if (!g) {
                              e = (d << 16) >> 16;
                              i = (f << 16) >> 16;
                              f = 0;
                              while (1) {
                                d = f << 1;
                                h[(d + b) >> 1] =
                                  k[(a + d) >> 1] +
                                  (((((o(e, h[(r + ((c + f) << 1)) >> 1]) +
                                    o(i, h[(d + r) >> 1])) <<
                                    8) +
                                    32768) >>>
                                    16) |
                                    0);
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            d = Z(b, c);
                            e = Z(a, c);
                            f: {
                              if (g) {
                                break f;
                              }
                              f = (d | 0) > 1 ? d : 1;
                              d = f & 65535;
                              e = (e | 0) > 1 ? e : 1;
                              d =
                                ((((((((e & 65535) >>> 0 > d >>> 0 ? f : e) &
                                  65535) <<
                                  14) |
                                  (d >>> 1)) >>>
                                  0) /
                                  (d >>> 0)) <<
                                  16) >>
                                16;
                              f = 0;
                              while (1) {
                                e = ((f << 1) + b) | 0;
                                h[e >> 1] = o(d, h[e >> 1]) >>> 14;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              if (((c | 0) < 1) | t) {
                                break f;
                              }
                              f = 0;
                              while (1) {
                                d = ((f << 1) + a) | 0;
                                h[d >> 1] = k[d >> 1] << 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              f = 0;
                              if ((c | 0) <= 0) {
                                break f;
                              }
                              while (1) {
                                d = ((f << 1) + b) | 0;
                                a = h[d >> 1];
                                a = (a | 0) > -16383 ? a : -16383;
                                h[d >> 1] = ((a | 0) < 16383 ? a : 16383) << 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function S(a) {
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            a: {
                              if (!a) {
                                break a;
                              }
                              d = (a + -8) | 0;
                              c = i[(a + -4) >> 2];
                              a = c & -8;
                              f = (d + a) | 0;
                              b: {
                                if (c & 1) {
                                  break b;
                                }
                                if (!(c & 3)) {
                                  break a;
                                }
                                c = i[d >> 2];
                                d = (d - c) | 0;
                                if (d >>> 0 < l[3812]) {
                                  break a;
                                }
                                a = (a + c) | 0;
                                if (i[3813] != (d | 0)) {
                                  if (c >>> 0 <= 255) {
                                    e = i[(d + 8) >> 2];
                                    c = (c >>> 3) | 0;
                                    b = i[(d + 12) >> 2];
                                    if ((b | 0) == (e | 0)) {
                                      i[3808] = i[3808] & ic(c);
                                      break b;
                                    }
                                    i[(e + 12) >> 2] = b;
                                    i[(b + 8) >> 2] = e;
                                    break b;
                                  }
                                  h = i[(d + 24) >> 2];
                                  c = i[(d + 12) >> 2];
                                  c: {
                                    if ((d | 0) != (c | 0)) {
                                      b = i[(d + 8) >> 2];
                                      i[(b + 12) >> 2] = c;
                                      i[(c + 8) >> 2] = b;
                                      break c;
                                    }
                                    d: {
                                      e = (d + 20) | 0;
                                      b = i[e >> 2];
                                      if (b) {
                                        break d;
                                      }
                                      e = (d + 16) | 0;
                                      b = i[e >> 2];
                                      if (b) {
                                        break d;
                                      }
                                      c = 0;
                                      break c;
                                    }
                                    while (1) {
                                      g = e;
                                      c = b;
                                      e = (c + 20) | 0;
                                      b = i[e >> 2];
                                      if (b) {
                                        continue;
                                      }
                                      e = (c + 16) | 0;
                                      b = i[(c + 16) >> 2];
                                      if (b) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[g >> 2] = 0;
                                  }
                                  if (!h) {
                                    break b;
                                  }
                                  e = i[(d + 28) >> 2];
                                  b = ((e << 2) + 15536) | 0;
                                  e: {
                                    if (i[b >> 2] == (d | 0)) {
                                      i[b >> 2] = c;
                                      if (c) {
                                        break e;
                                      }
                                      i[3809] = i[3809] & ic(e);
                                      break b;
                                    }
                                    i[
                                      (h +
                                        (i[(h + 16) >> 2] == (d | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = c;
                                    if (!c) {
                                      break b;
                                    }
                                  }
                                  i[(c + 24) >> 2] = h;
                                  b = i[(d + 16) >> 2];
                                  if (b) {
                                    i[(c + 16) >> 2] = b;
                                    i[(b + 24) >> 2] = c;
                                  }
                                  b = i[(d + 20) >> 2];
                                  if (!b) {
                                    break b;
                                  }
                                  i[(c + 20) >> 2] = b;
                                  i[(b + 24) >> 2] = c;
                                  break b;
                                }
                                c = i[(f + 4) >> 2];
                                if ((c & 3) != 3) {
                                  break b;
                                }
                                i[3810] = a;
                                i[(f + 4) >> 2] = c & -2;
                                i[(d + 4) >> 2] = a | 1;
                                i[(a + d) >> 2] = a;
                                return;
                              }
                              if (f >>> 0 <= d >>> 0) {
                                break a;
                              }
                              c = i[(f + 4) >> 2];
                              if (!(c & 1)) {
                                break a;
                              }
                              f: {
                                if (!(c & 2)) {
                                  if (i[3814] == (f | 0)) {
                                    i[3814] = d;
                                    a = (i[3811] + a) | 0;
                                    i[3811] = a;
                                    i[(d + 4) >> 2] = a | 1;
                                    if (i[3813] != (d | 0)) {
                                      break a;
                                    }
                                    i[3810] = 0;
                                    i[3813] = 0;
                                    return;
                                  }
                                  if (i[3813] == (f | 0)) {
                                    i[3813] = d;
                                    a = (i[3810] + a) | 0;
                                    i[3810] = a;
                                    i[(d + 4) >> 2] = a | 1;
                                    i[(a + d) >> 2] = a;
                                    return;
                                  }
                                  a = ((c & -8) + a) | 0;
                                  g: {
                                    if (c >>> 0 <= 255) {
                                      b = i[(f + 8) >> 2];
                                      c = (c >>> 3) | 0;
                                      e = i[(f + 12) >> 2];
                                      if ((b | 0) == (e | 0)) {
                                        i[3808] = i[3808] & ic(c);
                                        break g;
                                      }
                                      i[(b + 12) >> 2] = e;
                                      i[(e + 8) >> 2] = b;
                                      break g;
                                    }
                                    h = i[(f + 24) >> 2];
                                    c = i[(f + 12) >> 2];
                                    h: {
                                      if ((f | 0) != (c | 0)) {
                                        b = i[(f + 8) >> 2];
                                        i[(b + 12) >> 2] = c;
                                        i[(c + 8) >> 2] = b;
                                        break h;
                                      }
                                      i: {
                                        e = (f + 20) | 0;
                                        b = i[e >> 2];
                                        if (b) {
                                          break i;
                                        }
                                        e = (f + 16) | 0;
                                        b = i[e >> 2];
                                        if (b) {
                                          break i;
                                        }
                                        c = 0;
                                        break h;
                                      }
                                      while (1) {
                                        g = e;
                                        c = b;
                                        e = (c + 20) | 0;
                                        b = i[e >> 2];
                                        if (b) {
                                          continue;
                                        }
                                        e = (c + 16) | 0;
                                        b = i[(c + 16) >> 2];
                                        if (b) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[g >> 2] = 0;
                                    }
                                    if (!h) {
                                      break g;
                                    }
                                    e = i[(f + 28) >> 2];
                                    b = ((e << 2) + 15536) | 0;
                                    j: {
                                      if (i[b >> 2] == (f | 0)) {
                                        i[b >> 2] = c;
                                        if (c) {
                                          break j;
                                        }
                                        i[3809] = i[3809] & ic(e);
                                        break g;
                                      }
                                      i[
                                        (h +
                                          (i[(h + 16) >> 2] == (f | 0)
                                            ? 16
                                            : 20)) >>
                                          2
                                      ] = c;
                                      if (!c) {
                                        break g;
                                      }
                                    }
                                    i[(c + 24) >> 2] = h;
                                    b = i[(f + 16) >> 2];
                                    if (b) {
                                      i[(c + 16) >> 2] = b;
                                      i[(b + 24) >> 2] = c;
                                    }
                                    b = i[(f + 20) >> 2];
                                    if (!b) {
                                      break g;
                                    }
                                    i[(c + 20) >> 2] = b;
                                    i[(b + 24) >> 2] = c;
                                  }
                                  i[(d + 4) >> 2] = a | 1;
                                  i[(a + d) >> 2] = a;
                                  if (i[3813] != (d | 0)) {
                                    break f;
                                  }
                                  i[3810] = a;
                                  return;
                                }
                                i[(f + 4) >> 2] = c & -2;
                                i[(d + 4) >> 2] = a | 1;
                                i[(a + d) >> 2] = a;
                              }
                              if (a >>> 0 <= 255) {
                                a = (a >>> 3) | 0;
                                c = ((a << 3) + 15272) | 0;
                                b = i[3808];
                                a = 1 << a;
                                k: {
                                  if (!(b & a)) {
                                    i[3808] = a | b;
                                    a = c;
                                    break k;
                                  }
                                  a = i[(c + 8) >> 2];
                                }
                                i[(c + 8) >> 2] = d;
                                i[(a + 12) >> 2] = d;
                                i[(d + 12) >> 2] = c;
                                i[(d + 8) >> 2] = a;
                                return;
                              }
                              i[(d + 16) >> 2] = 0;
                              i[(d + 20) >> 2] = 0;
                              f = d;
                              e = (a >>> 8) | 0;
                              b = 0;
                              l: {
                                if (!e) {
                                  break l;
                                }
                                b = 31;
                                if (a >>> 0 > 16777215) {
                                  break l;
                                }
                                c = e;
                                e = ((e + 1048320) >>> 16) & 8;
                                b = c << e;
                                h = ((b + 520192) >>> 16) & 4;
                                b = b << h;
                                g = ((b + 245760) >>> 16) & 2;
                                b =
                                  ((((b << g) >>> 15) | 0) - (g | (e | h))) | 0;
                                b =
                                  (((b << 1) | ((a >>> (b + 21)) & 1)) + 28) |
                                  0;
                              }
                              i[(f + 28) >> 2] = b;
                              g = ((b << 2) + 15536) | 0;
                              m: {
                                n: {
                                  e = i[3809];
                                  c = 1 << b;
                                  o: {
                                    if (!(e & c)) {
                                      i[3809] = c | e;
                                      i[g >> 2] = d;
                                      i[(d + 24) >> 2] = g;
                                      break o;
                                    }
                                    e =
                                      a <<
                                      ((b | 0) == 31
                                        ? 0
                                        : (25 - ((b >>> 1) | 0)) | 0);
                                    c = i[g >> 2];
                                    while (1) {
                                      b = c;
                                      if ((i[(c + 4) >> 2] & -8) == (a | 0)) {
                                        break n;
                                      }
                                      c = (e >>> 29) | 0;
                                      e = e << 1;
                                      g = (b + (c & 4)) | 0;
                                      c = i[(g + 16) >> 2];
                                      if (c) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[(g + 16) >> 2] = d;
                                    i[(d + 24) >> 2] = b;
                                  }
                                  i[(d + 12) >> 2] = d;
                                  i[(d + 8) >> 2] = d;
                                  break m;
                                }
                                a = i[(b + 8) >> 2];
                                i[(a + 12) >> 2] = d;
                                i[(b + 8) >> 2] = d;
                                i[(d + 24) >> 2] = 0;
                                i[(d + 12) >> 2] = b;
                                i[(d + 8) >> 2] = a;
                              }
                              a = (i[3816] + -1) | 0;
                              i[3816] = a;
                              if (a) {
                                break a;
                              }
                              d = 15688;
                              while (1) {
                                a = i[d >> 2];
                                d = (a + 8) | 0;
                                if (a) {
                                  continue;
                                }
                                break;
                              }
                              i[3816] = -1;
                            }
                          }
                          function Na(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            f = (a + b) | 0;
                            a: {
                              b: {
                                c = i[(a + 4) >> 2];
                                if (c & 1) {
                                  break b;
                                }
                                if (!(c & 3)) {
                                  break a;
                                }
                                c = i[a >> 2];
                                b = (c + b) | 0;
                                a = (a - c) | 0;
                                if ((a | 0) != i[3813]) {
                                  if (c >>> 0 <= 255) {
                                    e = (c >>> 3) | 0;
                                    c = i[(a + 8) >> 2];
                                    d = i[(a + 12) >> 2];
                                    if ((d | 0) == (c | 0)) {
                                      i[3808] = i[3808] & ic(e);
                                      break b;
                                    }
                                    i[(c + 12) >> 2] = d;
                                    i[(d + 8) >> 2] = c;
                                    break b;
                                  }
                                  h = i[(a + 24) >> 2];
                                  c = i[(a + 12) >> 2];
                                  c: {
                                    if ((c | 0) != (a | 0)) {
                                      d = i[(a + 8) >> 2];
                                      i[(d + 12) >> 2] = c;
                                      i[(c + 8) >> 2] = d;
                                      break c;
                                    }
                                    d: {
                                      d = (a + 20) | 0;
                                      e = i[d >> 2];
                                      if (e) {
                                        break d;
                                      }
                                      d = (a + 16) | 0;
                                      e = i[d >> 2];
                                      if (e) {
                                        break d;
                                      }
                                      c = 0;
                                      break c;
                                    }
                                    while (1) {
                                      g = d;
                                      c = e;
                                      d = (c + 20) | 0;
                                      e = i[d >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      d = (c + 16) | 0;
                                      e = i[(c + 16) >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[g >> 2] = 0;
                                  }
                                  if (!h) {
                                    break b;
                                  }
                                  d = i[(a + 28) >> 2];
                                  e = ((d << 2) + 15536) | 0;
                                  e: {
                                    if (i[e >> 2] == (a | 0)) {
                                      i[e >> 2] = c;
                                      if (c) {
                                        break e;
                                      }
                                      i[3809] = i[3809] & ic(d);
                                      break b;
                                    }
                                    i[
                                      (h +
                                        (i[(h + 16) >> 2] == (a | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = c;
                                    if (!c) {
                                      break b;
                                    }
                                  }
                                  i[(c + 24) >> 2] = h;
                                  d = i[(a + 16) >> 2];
                                  if (d) {
                                    i[(c + 16) >> 2] = d;
                                    i[(d + 24) >> 2] = c;
                                  }
                                  d = i[(a + 20) >> 2];
                                  if (!d) {
                                    break b;
                                  }
                                  i[(c + 20) >> 2] = d;
                                  i[(d + 24) >> 2] = c;
                                  break b;
                                }
                                c = i[(f + 4) >> 2];
                                if ((c & 3) != 3) {
                                  break b;
                                }
                                i[3810] = b;
                                i[(f + 4) >> 2] = c & -2;
                                i[(a + 4) >> 2] = b | 1;
                                i[f >> 2] = b;
                                return;
                              }
                              c = i[(f + 4) >> 2];
                              f: {
                                if (!(c & 2)) {
                                  if (i[3814] == (f | 0)) {
                                    i[3814] = a;
                                    b = (i[3811] + b) | 0;
                                    i[3811] = b;
                                    i[(a + 4) >> 2] = b | 1;
                                    if (i[3813] != (a | 0)) {
                                      break a;
                                    }
                                    i[3810] = 0;
                                    i[3813] = 0;
                                    return;
                                  }
                                  if (i[3813] == (f | 0)) {
                                    i[3813] = a;
                                    b = (i[3810] + b) | 0;
                                    i[3810] = b;
                                    i[(a + 4) >> 2] = b | 1;
                                    i[(a + b) >> 2] = b;
                                    return;
                                  }
                                  b = ((c & -8) + b) | 0;
                                  g: {
                                    if (c >>> 0 <= 255) {
                                      e = (c >>> 3) | 0;
                                      c = i[(f + 8) >> 2];
                                      d = i[(f + 12) >> 2];
                                      if ((d | 0) == (c | 0)) {
                                        i[3808] = i[3808] & ic(e);
                                        break g;
                                      }
                                      i[(c + 12) >> 2] = d;
                                      i[(d + 8) >> 2] = c;
                                      break g;
                                    }
                                    h = i[(f + 24) >> 2];
                                    c = i[(f + 12) >> 2];
                                    h: {
                                      if ((f | 0) != (c | 0)) {
                                        d = i[(f + 8) >> 2];
                                        i[(d + 12) >> 2] = c;
                                        i[(c + 8) >> 2] = d;
                                        break h;
                                      }
                                      i: {
                                        d = (f + 20) | 0;
                                        e = i[d >> 2];
                                        if (e) {
                                          break i;
                                        }
                                        d = (f + 16) | 0;
                                        e = i[d >> 2];
                                        if (e) {
                                          break i;
                                        }
                                        c = 0;
                                        break h;
                                      }
                                      while (1) {
                                        g = d;
                                        c = e;
                                        d = (c + 20) | 0;
                                        e = i[d >> 2];
                                        if (e) {
                                          continue;
                                        }
                                        d = (c + 16) | 0;
                                        e = i[(c + 16) >> 2];
                                        if (e) {
                                          continue;
                                        }
                                        break;
                                      }
                                      i[g >> 2] = 0;
                                    }
                                    if (!h) {
                                      break g;
                                    }
                                    d = i[(f + 28) >> 2];
                                    e = ((d << 2) + 15536) | 0;
                                    j: {
                                      if (i[e >> 2] == (f | 0)) {
                                        i[e >> 2] = c;
                                        if (c) {
                                          break j;
                                        }
                                        i[3809] = i[3809] & ic(d);
                                        break g;
                                      }
                                      i[
                                        (h +
                                          (i[(h + 16) >> 2] == (f | 0)
                                            ? 16
                                            : 20)) >>
                                          2
                                      ] = c;
                                      if (!c) {
                                        break g;
                                      }
                                    }
                                    i[(c + 24) >> 2] = h;
                                    d = i[(f + 16) >> 2];
                                    if (d) {
                                      i[(c + 16) >> 2] = d;
                                      i[(d + 24) >> 2] = c;
                                    }
                                    d = i[(f + 20) >> 2];
                                    if (!d) {
                                      break g;
                                    }
                                    i[(c + 20) >> 2] = d;
                                    i[(d + 24) >> 2] = c;
                                  }
                                  i[(a + 4) >> 2] = b | 1;
                                  i[(a + b) >> 2] = b;
                                  if (i[3813] != (a | 0)) {
                                    break f;
                                  }
                                  i[3810] = b;
                                  return;
                                }
                                i[(f + 4) >> 2] = c & -2;
                                i[(a + 4) >> 2] = b | 1;
                                i[(a + b) >> 2] = b;
                              }
                              if (b >>> 0 <= 255) {
                                c = (b >>> 3) | 0;
                                b = ((c << 3) + 15272) | 0;
                                d = i[3808];
                                c = 1 << c;
                                k: {
                                  if (!(d & c)) {
                                    i[3808] = c | d;
                                    c = b;
                                    break k;
                                  }
                                  c = i[(b + 8) >> 2];
                                }
                                i[(b + 8) >> 2] = a;
                                i[(c + 12) >> 2] = a;
                                i[(a + 12) >> 2] = b;
                                i[(a + 8) >> 2] = c;
                                return;
                              }
                              i[(a + 16) >> 2] = 0;
                              i[(a + 20) >> 2] = 0;
                              d = a;
                              e = (b >>> 8) | 0;
                              c = 0;
                              l: {
                                if (!e) {
                                  break l;
                                }
                                c = 31;
                                if (b >>> 0 > 16777215) {
                                  break l;
                                }
                                g = ((e + 1048320) >>> 16) & 8;
                                e = e << g;
                                c = ((e + 520192) >>> 16) & 4;
                                f = e << c;
                                e = ((f + 245760) >>> 16) & 2;
                                c =
                                  ((((f << e) >>> 15) | 0) - (e | (c | g))) | 0;
                                c =
                                  (((c << 1) | ((b >>> (c + 21)) & 1)) + 28) |
                                  0;
                              }
                              i[(d + 28) >> 2] = c;
                              e = ((c << 2) + 15536) | 0;
                              m: {
                                d = i[3809];
                                g = 1 << c;
                                n: {
                                  if (!(d & g)) {
                                    i[3809] = d | g;
                                    i[e >> 2] = a;
                                    break n;
                                  }
                                  d =
                                    b <<
                                    ((c | 0) == 31
                                      ? 0
                                      : (25 - ((c >>> 1) | 0)) | 0);
                                  c = i[e >> 2];
                                  while (1) {
                                    e = c;
                                    if ((i[(c + 4) >> 2] & -8) == (b | 0)) {
                                      break m;
                                    }
                                    c = (d >>> 29) | 0;
                                    d = d << 1;
                                    g = (e + (c & 4)) | 0;
                                    c = i[(g + 16) >> 2];
                                    if (c) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[(g + 16) >> 2] = a;
                                }
                                i[(a + 24) >> 2] = e;
                                i[(a + 12) >> 2] = a;
                                i[(a + 8) >> 2] = a;
                                return;
                              }
                              b = i[(e + 8) >> 2];
                              i[(b + 12) >> 2] = a;
                              i[(e + 8) >> 2] = a;
                              i[(a + 24) >> 2] = 0;
                              i[(a + 12) >> 2] = e;
                              i[(a + 8) >> 2] = b;
                            }
                          }
                          function hb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            d = (H - 16) | 0;
                            H = d;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f: {
                                        g: {
                                          h: {
                                            switch (b | 0) {
                                              case 101:
                                                b = i[(a + 20) >> 2];
                                                if ((b | 0) >= 1) {
                                                  break g;
                                                }
                                                break a;
                                              case 26:
                                                if (i[(a + 24) >> 2] >= 1) {
                                                  b = i[(a + 64) >> 2];
                                                  c = 0;
                                                  while (1) {
                                                    i[(b + (c << 2)) >> 2] = 0;
                                                    c = (c + 1) | 0;
                                                    if (
                                                      (c | 0) <
                                                      i[(a + 24) >> 2] << 1
                                                    ) {
                                                      continue;
                                                    }
                                                    break;
                                                  }
                                                }
                                                b = i[(a + 44) >> 2];
                                                e = i[(a + 48) >> 2];
                                                c = 0;
                                                while (1) {
                                                  f = c << 1;
                                                  h[(f + e) >> 1] = 0;
                                                  h[(b + f) >> 1] = 0;
                                                  c = (c + 1) | 0;
                                                  if ((c | 0) != 64) {
                                                    continue;
                                                  }
                                                  break;
                                                }
                                                e = 0;
                                                h[(a + 80) >> 1] = 0;
                                                break a;
                                              case 10:
                                                i[(a + 96) >> 2] = i[c >> 2];
                                                break a;
                                              case 8:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  8,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 9:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  9,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 3:
                                                i[c >> 2] = i[(a + 8) >> 2];
                                                break a;
                                              case 0:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 48) >> 2]](
                                                  b,
                                                  0,
                                                  c
                                                ) | 0;
                                                i[(a + 36) >> 2] = i[c >> 2];
                                                break a;
                                              case 1:
                                                i[c >> 2] = i[(a + 36) >> 2];
                                                break a;
                                              case 4:
                                              case 6:
                                                b = i[c >> 2];
                                                b = (b | 0) > 0 ? b : 0;
                                                b =
                                                  (i[i[a >> 2] >> 2] +
                                                    (((b | 0) < 10 ? b : 10) <<
                                                      2)) |
                                                  0;
                                                i[(a + 96) >> 2] =
                                                  i[(b + 104) >> 2];
                                                i[(d + 12) >> 2] =
                                                  i[(b + 60) >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  6,
                                                  (d + 12) | 0
                                                ) | 0;
                                                break a;
                                              case 19:
                                                b = i[(a + 4) >> 2];
                                                J[i[(i[b >> 2] + 48) >> 2]](
                                                  b,
                                                  19,
                                                  c
                                                ) | 0;
                                                b = i[(a + 32) >> 2];
                                                e =
                                                  i[
                                                    (i[(a + 92) >> 2] +
                                                      (i[(a + 96) >> 2] <<
                                                        2)) >>
                                                      2
                                                  ];
                                                if (e) {
                                                  i[c >> 2] =
                                                    i[c >> 2] +
                                                    (((o(b, i[(e + 52) >> 2]) |
                                                      0) /
                                                      i[(a + 8) >> 2]) |
                                                      0);
                                                  e = 0;
                                                  break a;
                                                }
                                                i[c >> 2] =
                                                  i[c >> 2] +
                                                  (((b << 2) /
                                                    i[(a + 8) >> 2]) |
                                                    0);
                                                e = 0;
                                                break a;
                                              case 24:
                                                b = i[c >> 2];
                                                i[(a + 32) >> 2] = b;
                                                i[(d + 12) >> 2] = b >> 1;
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  24,
                                                  (d + 12) | 0
                                                ) | 0;
                                                break a;
                                              case 25:
                                                i[c >> 2] = i[(a + 32) >> 2];
                                                break a;
                                              case 20:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  20,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 22:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  22,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 36:
                                                i[(a + 88) >> 2] = i[c >> 2];
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  36,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 37:
                                                i[c >> 2] = i[(a + 88) >> 2];
                                                break a;
                                              case 39:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  39,
                                                  c
                                                ) | 0;
                                                i[c >> 2] = i[c >> 2] << 1;
                                                break a;
                                              case 44:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  44,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 45:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  45,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 47:
                                                a = i[(a + 4) >> 2];
                                                J[i[(i[a >> 2] + 48) >> 2]](
                                                  a,
                                                  47,
                                                  c
                                                ) | 0;
                                                break a;
                                              case 106:
                                                break c;
                                              case 105:
                                                break d;
                                              case 104:
                                                break e;
                                              case 103:
                                                break f;
                                              case 100:
                                                break h;
                                              default:
                                                break b;
                                            }
                                          }
                                          if (i[(a + 20) >> 2] < 1) {
                                            break a;
                                          }
                                          f = i[(a + 68) >> 2];
                                          b = 0;
                                          while (1) {
                                            g = b << 2;
                                            i[(g + c) >> 2] = i[(f + g) >> 2];
                                            b = (b + 1) | 0;
                                            if ((b | 0) < i[(a + 20) >> 2]) {
                                              continue;
                                            }
                                            break;
                                          }
                                          break a;
                                        }
                                        f = i[(a + 72) >> 2];
                                        a = 0;
                                        while (1) {
                                          g = a << 1;
                                          h[(g + c) >> 1] = k[(f + g) >> 1];
                                          a = (a + 1) | 0;
                                          if ((b | 0) != (a | 0)) {
                                            continue;
                                          }
                                          break;
                                        }
                                        break a;
                                      }
                                      a = i[(a + 4) >> 2];
                                      J[i[(i[a >> 2] + 48) >> 2]](a, 103, c) |
                                        0;
                                      break a;
                                    }
                                    i[(a + 76) >> 2] = c;
                                    break a;
                                  }
                                  a = i[(a + 4) >> 2];
                                  J[i[(i[a >> 2] + 48) >> 2]](a, 105, c) | 0;
                                  break a;
                                }
                                i[c >> 2] = i[(a + 40) >> 2];
                                break a;
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 13123;
                              Y(i[3524], 13166, d);
                              e = -1;
                            }
                            H = (d + 16) | 0;
                            return e | 0;
                          }
                          function $a(a) {
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              i = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              o = 0,
                              p = 0;
                            c = 1;
                            a: {
                              b: {
                                nc(+a);
                                e = kc(1) | 0;
                                g = kc(0) | 0;
                                b = e;
                                c: {
                                  if ((b | 0) == 1072693248 ? !g : 0) {
                                    break c;
                                  }
                                  e = b & 2147483647;
                                  if (
                                    (e >>> 0 > 2146435072) |
                                    (((e | 0) == 2146435072) & ((g | 0) != 0))
                                  ) {
                                    return a + 0.3;
                                  }
                                  c = q(a);
                                  if (
                                    !(
                                      (e ? (b & 1073741823) != 1072693248 : 0) |
                                      g
                                    )
                                  ) {
                                    if ((b | 0) > -1) {
                                      break c;
                                    }
                                    if (!((e + -1072693248) | 0)) {
                                      a = c - c;
                                      return a / a;
                                    }
                                    return c;
                                  }
                                  if ((b | 0) <= -1) {
                                    a = a - a;
                                    return a / a;
                                  }
                                  d = c * 9007199254740992;
                                  h = e >>> 0 < 1048576;
                                  a = h ? d : c;
                                  nc(+d);
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  b = h ? b : e;
                                  g = b & 1048575;
                                  e = g | 1072693248;
                                  m = ((b >> 20) + (h ? -1076 : -1023)) | 0;
                                  d: {
                                    if (g >>> 0 < 235663) {
                                      break d;
                                    }
                                    if (g >>> 0 < 767610) {
                                      j = 1;
                                      break d;
                                    }
                                    e = (e + -1048576) | 0;
                                    m = (m + 1) | 0;
                                  }
                                  h = j << 3;
                                  p = n[(h + 14080) >> 3];
                                  nc(+a);
                                  kc(1) | 0;
                                  lc(0, kc(0) | 0);
                                  lc(1, e | 0);
                                  c = +mc();
                                  i = n[(h + 14048) >> 3];
                                  d = c - i;
                                  a = 1 / (i + c);
                                  l = d * a;
                                  nc(+l);
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  k = +mc();
                                  f = k * k;
                                  o = a;
                                  lc(0, 0);
                                  lc(
                                    1,
                                    (((((e >> 1) | 536870912) + (j << 18)) |
                                      0) +
                                      524288) |
                                      0
                                  );
                                  a = +mc();
                                  i = o * (d - k * a - k * (c - (a - i)));
                                  a = l * l;
                                  a =
                                    (l + k) * i +
                                    a *
                                      a *
                                      (a *
                                        (a *
                                          (a *
                                            (a *
                                              (a * 0.20697501780033842 +
                                                0.23066074577556175) +
                                              0.272728123808534) +
                                            0.33333332981837743) +
                                          0.4285714285785502) +
                                        0.5999999999999946);
                                  nc(+(f + 3 + a));
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  c = +mc();
                                  d = k * c;
                                  a = i * c + l * (a - (c + -3 - f));
                                  nc(+(d + a));
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  f = +mc();
                                  i = f * 0.9617967009544373;
                                  d =
                                    n[(h + 14064) >> 3] +
                                    ((a - (f - d)) * 0.9617966939259756 +
                                      f * -7.028461650952758e-9);
                                  a = +(m | 0);
                                  nc(+(p + (i + d) + a));
                                  b = kc(1) | 0;
                                  kc(0) | 0;
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  f = +mc();
                                  c = f * 0.2999999523162842;
                                  d =
                                    (d - (f - a - p - i)) * 0.3 +
                                    f * 4.768371580921027e-8;
                                  a = c + d;
                                  nc(+a);
                                  h = kc(1) | 0;
                                  g = kc(0) | 0;
                                  e: {
                                    b = h;
                                    h = b;
                                    if ((b | 0) >= 1083179008) {
                                      if (g | (h + -1083179008)) {
                                        break b;
                                      }
                                      if (
                                        (d + 8.008566259537294e-17 > a - c) ^
                                        1
                                      ) {
                                        break e;
                                      }
                                      break b;
                                    }
                                    if ((h & 2147482624) >>> 0 < 1083231232) {
                                      break e;
                                    }
                                    if (g | (h + 1064252416)) {
                                      break a;
                                    }
                                    if ((d <= a - c) ^ 1) {
                                      break e;
                                    }
                                    break a;
                                  }
                                  j = 0;
                                  e = h & 2147483647;
                                  if (e >>> 0 >= 1071644673) {
                                    g =
                                      (h +
                                        ((1048576 >>>
                                          (((e >>> 20) | 0) + -1022)) |
                                          0)) |
                                      0;
                                    e = (g >>> 20) & 2047;
                                    b =
                                      (((g & 1048575) | 1048576) >>>
                                        (1043 - e)) |
                                      0;
                                    j = (h | 0) < 0 ? (0 - b) | 0 : b;
                                    lc(0, 0);
                                    lc(1, g & (-1048576 >> (e + -1023)));
                                    c = c - +mc();
                                    nc(+(d + c));
                                    b = kc(1) | 0;
                                    kc(0) | 0;
                                  }
                                  lc(0, 0);
                                  lc(1, b | 0);
                                  a = +mc();
                                  i = a * 0.6931471824645996;
                                  d =
                                    (d - (a - c)) * 0.6931471805599453 +
                                    a * -1.904654299957768e-9;
                                  f = i + d;
                                  a = f * f;
                                  a =
                                    f -
                                    a *
                                      (a *
                                        (a *
                                          (a *
                                            (a * 4.1381367970572385e-8 +
                                              -16533902205465252e-22) +
                                            6613756321437934e-20) +
                                          -0.0027777777777015593) +
                                        0.16666666666666602);
                                  o = (f * a) / (a + -2);
                                  a = d - (f - i);
                                  a = f - (o - (a + f * a)) + 1;
                                  nc(+a);
                                  b = kc(1) | 0;
                                  g = kc(0) | 0;
                                  b = ((j << 20) + b) | 0;
                                  f: {
                                    if ((b | 0) <= 1048575) {
                                      a = cc(a, j);
                                      break f;
                                    }
                                    lc(0, g | 0);
                                    lc(1, b | 0);
                                    a = +mc();
                                  }
                                  c = a * 1;
                                }
                                return c;
                              }
                              return z;
                            }
                            return 0;
                          }
                          function ha(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0;
                            q = (((0 - d) & 3) + d) | 0;
                            n = c >> 1;
                            f = (n + 1) | 0;
                            j = f << 2;
                            d = (q + j) | 0;
                            d = (((0 - d) & 3) + d) | 0;
                            g = j;
                            k = (c + 3) | 0;
                            l = o(k, f) << 2;
                            f = (l + d) | 0;
                            j = (((0 - f) & 3) + f) | 0;
                            f = (g + j) | 0;
                            f = (((0 - f) & 3) + f) | 0;
                            l = (f + l) | 0;
                            if ((c | 0) >= 0) {
                              p = (n | 0) > 0 ? n : 0;
                              while (1) {
                                g = e << 2;
                                r = o(e, k) << 2;
                                i[(g + q) >> 2] = r + d;
                                i[(j + g) >> 2] = f + r;
                                g = (e | 0) != (p | 0);
                                e = (e + 1) | 0;
                                if (g) {
                                  continue;
                                }
                                break;
                              }
                            }
                            l = (l + (l & 1)) | 0;
                            e = 0;
                            if ((c | 0) > 0) {
                              while (1) {
                                f = e << 1;
                                d = h[(f + a) >> 1];
                                a: {
                                  if ((d | 0) <= 12867) {
                                    d = ((o(d, d) << 3) + 32768) >> 16;
                                    d =
                                      ((((o(
                                        ((((o(
                                          (((o(d, -10) + 4096) >> 13) + 340) |
                                            0,
                                          d
                                        ) <<
                                          3) +
                                          32768) &
                                          -65536) +
                                          -268435456) >>
                                          16,
                                        d
                                      ) +
                                        4096) >>>
                                        13) |
                                        0) -
                                        -8192) |
                                      0;
                                    break a;
                                  }
                                  d = ((25736 - d) << 16) >> 16;
                                  d = ((o(d, d) << 3) + 32768) >> 16;
                                  d =
                                    (-8192 -
                                      (((o(
                                        ((((o(
                                          (((o(d, -10) + 4096) >> 13) + 340) |
                                            0,
                                          d
                                        ) <<
                                          3) +
                                          32768) &
                                          -65536) +
                                          -268435456) >>
                                          16,
                                        d
                                      ) +
                                        4096) >>>
                                        13) |
                                        0)) |
                                    0;
                                }
                                h[(f + l) >> 1] = d << 2;
                                e = (e + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = 0;
                            if ((c | 0) >= 0) {
                              d = (n | 0) > 0 ? n : 0;
                              while (1) {
                                f = e << 2;
                                a = i[(f + q) >> 2];
                                i[(a + 4) >> 2] = 0;
                                i[(a + 8) >> 2] = 1048576;
                                k = ((e << 3) + 8) | 0;
                                i[(k + a) >> 2] = 1048576;
                                a = i[(f + j) >> 2];
                                i[(a + 4) >> 2] = 0;
                                i[(a + 8) >> 2] = 1048576;
                                i[(a + k) >> 2] = 1048576;
                                a = (d | 0) != (e | 0);
                                e = (e + 1) | 0;
                                if (a) {
                                  continue;
                                }
                                break;
                              }
                            }
                            d = i[(q + 4) >> 2];
                            e = h[l >> 1];
                            a = i[(i[q >> 2] + 8) >> 2];
                            i[(d + 12) >> 2] =
                              0 -
                              ((o(e, (a << 2) >> 16) +
                                (o(e, a & 16383) >> 14)) |
                                0);
                            e = h[(l + 2) >> 1];
                            a = i[(i[j >> 2] + 8) >> 2];
                            i[(i[(j + 4) >> 2] + 12) >> 2] =
                              0 -
                              ((o(e, (a << 2) >> 16) +
                                (o(e, a & 16383) >> 14)) |
                                0);
                            if ((c | 0) >= 4) {
                              x = (n | 0) > 2 ? n : 2;
                              e = 3;
                              k = 1;
                              while (1) {
                                f = 2;
                                a = k << 2;
                                p = h[(a + l) >> 1];
                                g = i[(d + 8) >> 2];
                                g =
                                  (o(p, (g << 2) >> 16) +
                                    (o(p, g & 16383) >> 14)) |
                                  0;
                                s = (a + j) | 0;
                                r = i[s >> 2];
                                k = (k + 1) | 0;
                                m = k << 2;
                                t = (m + j) | 0;
                                y = i[t >> 2];
                                u = (l + (a | 2)) | 0;
                                v = h[u >> 1];
                                w = (q + m) | 0;
                                z = i[w >> 2];
                                a = 1;
                                while (1) {
                                  m = a << 2;
                                  a = (m + 8) | 0;
                                  i[(a + z) >> 2] =
                                    i[(d + m) >> 2] +
                                    ((i[(a + d) >> 2] - g) | 0);
                                  g = (a + y) | 0;
                                  m = (i[(m + r) >> 2] + i[(a + r) >> 2]) | 0;
                                  a = f;
                                  f = i[(r + (a << 2)) >> 2];
                                  i[g >> 2] =
                                    ((m - (o(f & 16383, v) >> 14)) | 0) -
                                    o((f << 2) >> 16, v);
                                  f = (a + 1) | 0;
                                  m = f << 2;
                                  g = i[(m + d) >> 2];
                                  g =
                                    (o(p, (g << 2) >> 16) +
                                      (o(p, g & 16383) >> 14)) |
                                    0;
                                  if ((a | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                a = i[w >> 2];
                                f = (e + 2) | 0;
                                p = f << 2;
                                e = e << 2;
                                i[(a + p) >> 2] = i[(e + d) >> 2] - g;
                                g = i[s >> 2];
                                d = i[(g + m) >> 2];
                                g = i[(e + g) >> 2];
                                e = h[u >> 1];
                                i[(p + i[t >> 2]) >> 2] =
                                  ((g - (o(e, d & 16383) >> 14)) | 0) -
                                  o(e, (d << 2) >> 16);
                                d = a;
                                e = f;
                                if ((k | 0) != (x | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((c | 0) >= 1) {
                              a = n << 2;
                              f = i[(a + j) >> 2];
                              n = i[(a + q) >> 2];
                              d = 0;
                              e = 1;
                              a = 0;
                              while (1) {
                                j = (d - a) | 0;
                                a = ((e << 2) + 8) | 0;
                                d = i[(a + n) >> 2];
                                a = i[(a + f) >> 2];
                                j = (a + ((d + j) | 0)) | 0;
                                j =
                                  (j | 0) < -8388480 ? -32767 : (j + 128) >> 8;
                                h[((((e << 1) + b) | 0) + -2) >> 1] =
                                  (j | 0) < 32767 ? j : 32767;
                                j = (c | 0) != (e | 0);
                                e = (e + 1) | 0;
                                if (j) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Kb(a, b, c, d) {
                            var e = p(0),
                              f = p(0),
                              g = 0,
                              j = p(0),
                              k = p(0),
                              l = p(0),
                              n = 0,
                              o = p(0),
                              r = p(0),
                              u = p(0),
                              v = p(0),
                              w = 0,
                              x = p(0),
                              y = 0,
                              z = 0,
                              A = p(0),
                              B = p(0),
                              C = p(0),
                              D = p(0),
                              E = p(0),
                              F = 0,
                              G = 0,
                              H = 0,
                              I = 0;
                            g = c >> 1;
                            if ((c | 0) >= 2) {
                              I = (g | 0) > 1 ? g : 1;
                              while (1) {
                                e = f;
                                f = p(h[((w << 1) + b) >> 1]);
                                f = p(e + p(f * f));
                                w = (w + 1) | 0;
                                if ((I | 0) != (w | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((g | 0) < (c | 0)) {
                              while (1) {
                                j = p(h[((g << 1) + b) >> 1]);
                                x = p(x + p(j * j));
                                g = (g + 1) | 0;
                                if ((g | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            l = m[(a + 52) >> 2];
                            u = m[(a + 56) >> 2];
                            k = p(l / u);
                            m[(a + 48) >> 2] = k;
                            j = p(f + x);
                            e = m[a >> 2];
                            A = p(p(j * e) + p(p(p(1) - e) * m[(a + 4) >> 2]));
                            m[(a + 4) >> 2] = A;
                            B = m[(a + 16) >> 2];
                            r = p(ba(+p(j + p(6e3))));
                            C = m[(a + 12) >> 2];
                            e = p(r - C);
                            o = p(p(e * e) + p(0));
                            e = p(r - B);
                            o = p(o + p(e * e));
                            D = m[(a + 20) >> 2];
                            e = p(r - D);
                            o = p(o + p(e * e));
                            E = m[(a + 24) >> 2];
                            e = p(r - E);
                            o = p(o + p(e * e));
                            e = p(r - m[(a + 28) >> 2]);
                            o = p(s(p(p(o + p(e * e)) / p(150)), p(1)));
                            F = +d;
                            y = F + -0.4;
                            v = p(y * 3 * q(y));
                            G = +j;
                            e = p($a(G));
                            H = +u;
                            if (!(((j > p(6e3)) ^ 1) | ((H < 0.06) ^ 1))) {
                              l = p(+e * 0.05);
                              m[(a + 52) >> 2] = l;
                            }
                            a: {
                              b: {
                                z = +v;
                                n = +o;
                                c: {
                                  if (
                                    (+k * 1.2 > +e
                                      ? !(((z < 0.3) ^ 1) | ((n < 0.2) ^ 1))
                                      : 0) |
                                    (+k * 1.5 > +e
                                      ? !(((z < 0.3) ^ 1) | ((n < 0.05) ^ 1))
                                      : 0)
                                  ) {
                                    break c;
                                  }
                                  if (
                                    +k * 1.2 > +e
                                      ? !(((z < 0.4) ^ 1) | ((n < 0.05) ^ 1))
                                      : 0
                                  ) {
                                    break c;
                                  }
                                  if (((v < p(0)) ^ 1) | ((n < 0.05) ^ 1)) {
                                    break b;
                                  }
                                }
                                b = i[(a + 60) >> 2];
                                g = (b + 1) | 0;
                                i[(a + 60) >> 2] = g;
                                if ((b | 0) < 3) {
                                  break a;
                                }
                                u = p(H * 0.95 + 0.05);
                                m[(a + 56) >> 2] = u;
                                v = p(k * p(3));
                                l = p(+(v < e ? v : e) * 0.05 + +l * 0.95);
                                m[(a + 52) >> 2] = l;
                                break a;
                              }
                              g = 0;
                              i[(a + 60) >> 2] = 0;
                            }
                            if (!(((j > p(6e3)) ^ 1) | ((k > e) ^ 1))) {
                              m[(a + 56) >> 2] = +u * 0.95 + 0.05;
                              m[(a + 52) >> 2] = +e * 0.05 + +l * 0.95;
                            }
                            d: {
                              if (!((j < p(3e4)) ^ 1)) {
                                e =
                                  j < p(1e4)
                                    ? p(5.600000381469727)
                                    : p(6.300000190734863);
                                f = e;
                                if ((j < p(3e3)) ^ 1) {
                                  break d;
                                }
                                f = p(+e + -0.7);
                                break d;
                              }
                              l = p(j + p(1));
                              e = p(
                                s(p(t(p(ba(+p(l / p(A + p(1))))), p(-5))), p(2))
                              );
                              n = +e;
                              k = e > p(0) ? p(n * 0.6 + 7) : p(7);
                              e = e < p(0) ? p(n * 0.5 + +k) : k;
                              k = p(ba(+p(l / p(m[(a + 8) >> 2] + p(1)))));
                              if (!((k > p(0)) ^ 1)) {
                                e = p(+p(s(k, p(5))) * 0.5 + +e);
                              }
                              f = +f * 1.6 < +x ? p(e + p(0.5)) : e;
                            }
                            m[(a + 8) >> 2] = j;
                            e = p(F * 0.4 + +m[(a + 40) >> 2] * 0.6);
                            m[(a + 40) >> 2] = e;
                            k = m[(a + 44) >> 2];
                            f = p((y + (+e + -0.4)) * 2.2 + +f);
                            if (!((k > f) ^ 1)) {
                              f = p(+k * 0.5 + +f * 0.5);
                            }
                            f = (g | 0) > 2 ? p(4) : p(s(p(t(f, p(4))), p(10)));
                            if (g) {
                              f = p(
                                +f - (ba(+(g | 0) + 3) + -1.0986122886681098)
                              );
                            }
                            f = p(t(f, p(0)));
                            if (!((j < p(6e4)) ^ 1)) {
                              e: {
                                if ((g | 0) < 3) {
                                  break e;
                                }
                                n =
                                  (ba(+(g | 0) + 3) + -1.0986122886681098) *
                                  0.5;
                                f = p(+f - n);
                                if ((j < p(1e4)) ^ 1) {
                                  break e;
                                }
                                f = p(+f - n);
                              }
                              f = p(ba(G / 6e4 + 1e-4) * 0.3 + +p(t(f, p(0))));
                            }
                            m[(a + 36) >> 2] = d;
                            m[(a + 28) >> 2] = E;
                            m[(a + 24) >> 2] = D;
                            m[(a + 20) >> 2] = B;
                            m[(a + 16) >> 2] = C;
                            m[(a + 12) >> 2] = r;
                            d = p(t(f, p(-1)));
                            m[(a + 44) >> 2] = d;
                            return d;
                          }
                          function qb(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0;
                            p = (H - 32) | 0;
                            H = p;
                            a: {
                              b: {
                                c: {
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  while (1) {
                                    f = e << 1;
                                    h[(f + b) >> 1] = k[(a + f) >> 1];
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  f = h[b >> 1];
                                  j = p;
                                  i = (c + -1) | 0;
                                  e = 25736;
                                  d: {
                                    if (!i) {
                                      break d;
                                    }
                                    e = k[(b + 2) >> 1];
                                  }
                                  e = (e - f) | 0;
                                  h[j >> 1] =
                                    81920 /
                                    (((((e << 16) >> 16 < (f | 0) ? e : f) <<
                                      16) +
                                      19660800) >>
                                      16);
                                  e = 1;
                                  if ((c | 0) != 1) {
                                    while (1) {
                                      m = e << 1;
                                      f = (m + b) | 0;
                                      l = k[f >> 1];
                                      j = ((l - k[(f + -2) >> 1]) << 16) >> 16;
                                      f = (e + 1) | 0;
                                      e =
                                        (((e | 0) != (i | 0)
                                          ? k[((f << 1) + b) >> 1]
                                          : 25736) -
                                          l) |
                                        0;
                                      h[(m + p) >> 1] =
                                        81920 /
                                        (((((e << 16) >> 16 < (j | 0)
                                          ? e
                                          : j) <<
                                          16) +
                                          19660800) >>
                                          16);
                                      e = f;
                                      if ((e | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  e = 0;
                                  while (1) {
                                    f = ((e << 1) + b) | 0;
                                    h[f >> 1] =
                                      k[f >> 1] -
                                      (((o(e, 167772160) + 402653184) >>> 16) |
                                        0);
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) < 1) {
                                    break c;
                                  }
                                  m = 2147483647;
                                  l = 0;
                                  f = 4016;
                                  j = 0;
                                  while (1) {
                                    i = 0;
                                    e = f;
                                    n = 0;
                                    while (1) {
                                      r = i;
                                      i =
                                        ((k[((n << 1) + b) >> 1] -
                                          (g[e | 0] << 5)) <<
                                          16) >>
                                        16;
                                      i = (r + o(i, i)) | 0;
                                      e = (e + 1) | 0;
                                      n = (n + 1) | 0;
                                      if ((n | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    e = (i | 0) < (m | 0);
                                    l = e ? j : l;
                                    m = e ? i : m;
                                    f = (c + f) | 0;
                                    j = (j + 1) | 0;
                                    if ((j | 0) != 64) {
                                      continue;
                                    }
                                    break;
                                  }
                                  f = o(c, l);
                                  e = 0;
                                  while (1) {
                                    j = ((e << 1) + b) | 0;
                                    h[j >> 1] =
                                      k[j >> 1] -
                                      (g[(((e + f) | 0) + 4016) | 0] << 5);
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  W(d, l, 6);
                                  if ((c | 0) < 1) {
                                    break b;
                                  }
                                  e = 0;
                                  while (1) {
                                    f = ((e << 1) + b) | 0;
                                    h[f >> 1] = k[f >> 1] << 1;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) < 1) {
                                    break b;
                                  }
                                  f = 2147483647;
                                  m = 0;
                                  j = 4528;
                                  l = 0;
                                  while (1) {
                                    i = 0;
                                    e = j;
                                    n = 0;
                                    while (1) {
                                      r = i;
                                      i = n << 1;
                                      q =
                                        ((k[(i + b) >> 1] - (g[e | 0] << 5)) <<
                                          16) >>
                                        16;
                                      q = o(q, q);
                                      i = h[(i + p) >> 1];
                                      i =
                                        (((r + (o(q & 32767, i) >> 15)) | 0) +
                                          o(i, (q << 1) >> 16)) |
                                        0;
                                      e = (e + 1) | 0;
                                      n = (n + 1) | 0;
                                      if ((n | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                    e = (i | 0) < (f | 0);
                                    m = e ? l : m;
                                    f = e ? i : f;
                                    j = (c + j) | 0;
                                    l = (l + 1) | 0;
                                    if ((l | 0) != 64) {
                                      continue;
                                    }
                                    break;
                                  }
                                  f = o(c, m);
                                  e = 0;
                                  while (1) {
                                    j = ((e << 1) + b) | 0;
                                    h[j >> 1] =
                                      k[j >> 1] -
                                      (g[(((e + f) | 0) + 4528) | 0] << 5);
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  W(d, m, 6);
                                  e = 0;
                                  if ((c | 0) <= 0) {
                                    break a;
                                  }
                                  while (1) {
                                    d = ((e << 1) + b) | 0;
                                    h[d >> 1] = (h[d >> 1] + 1) >>> 1;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  e = 0;
                                  if ((c | 0) <= 0) {
                                    break a;
                                  }
                                  while (1) {
                                    d = e << 1;
                                    f = (d + b) | 0;
                                    h[f >> 1] = k[(a + d) >> 1] - k[f >> 1];
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                W(d, 0, 6);
                              }
                              W(d, 0, 6);
                            }
                            H = (p + 32) | 0;
                          }
                          function wb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = p(0),
                              j = 0;
                            f = (H - 16) | 0;
                            H = f;
                            a: {
                              b: {
                                switch (b | 0) {
                                  case 101:
                                    if (i[(a + 20) >> 2] < 1) {
                                      break a;
                                    }
                                    b = 0;
                                    while (1) {
                                      d = i[(a + 16) >> 2];
                                      h[((b << 1) + c) >> 1] = Z(
                                        (i[(a + 52) >> 2] + (o(d, b) << 1)) | 0,
                                        d
                                      );
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 20) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 26:
                                    if (i[(a + 24) >> 2] >= 1) {
                                      b = i[(a + 64) >> 2];
                                      c = 0;
                                      while (1) {
                                        i[(b + (c << 2)) >> 2] = 0;
                                        c = (c + 1) | 0;
                                        if ((c | 0) < i[(a + 24) >> 2]) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    b =
                                      (i[(a + 32) >> 2] + i[(a + 12) >> 2]) | 0;
                                    if ((b | 0) < 0) {
                                      break a;
                                    }
                                    U(i[(a + 48) >> 2], 0, ((b << 1) + 2) | 0);
                                    break a;
                                  case 6:
                                  case 8:
                                    i[(a + 120) >> 2] = i[c >> 2];
                                    break a;
                                  case 7:
                                  case 9:
                                    i[c >> 2] = i[(a + 120) >> 2];
                                    break a;
                                  case 0:
                                    i[(a + 124) >> 2] = i[c >> 2];
                                    break a;
                                  case 1:
                                    i[c >> 2] = i[(a + 124) >> 2];
                                    break a;
                                  case 3:
                                    i[c >> 2] = i[(a + 12) >> 2];
                                    break a;
                                  case 19:
                                    b = i[(a + 36) >> 2];
                                    e =
                                      i[
                                        (i[(a + 116) >> 2] +
                                          (i[(a + 120) >> 2] << 2)) >>
                                          2
                                      ];
                                    if (e) {
                                      i[c >> 2] =
                                        (o(b, i[(e + 52) >> 2]) | 0) /
                                        i[(a + 12) >> 2];
                                      e = 0;
                                      break a;
                                    }
                                    i[c >> 2] =
                                      (o(b, 5) | 0) / i[(a + 12) >> 2];
                                    e = 0;
                                    break a;
                                  case 24:
                                    i[(a + 36) >> 2] = i[c >> 2];
                                    break a;
                                  case 25:
                                    i[c >> 2] = i[(a + 36) >> 2];
                                    break a;
                                  case 20:
                                    b = i[c >> 2];
                                    a = (o(b, 20) + a) | 0;
                                    i[(a + 132) >> 2] = i[(c + 4) >> 2];
                                    c = i[(c + 8) >> 2];
                                    i[(a + 128) >> 2] = b;
                                    i[(a + 136) >> 2] = c;
                                    break a;
                                  case 22:
                                    i[(a + 452) >> 2] = i[(c + 4) >> 2];
                                    i[(a + 456) >> 2] = i[(c + 8) >> 2];
                                    i[(a + 448) >> 2] = i[c >> 2];
                                    break a;
                                  case 36:
                                    i[(a + 112) >> 2] = i[c >> 2];
                                    break a;
                                  case 37:
                                    i[c >> 2] = i[(a + 112) >> 2];
                                    break a;
                                  case 39:
                                    i[c >> 2] = i[(a + 16) >> 2];
                                    break a;
                                  case 44:
                                    i[(a + 492) >> 2] = i[c >> 2];
                                    break a;
                                  case 45:
                                    i[c >> 2] = i[(a + 492) >> 2];
                                    break a;
                                  case 47:
                                    b = h[(a + 86) >> 1];
                                    d = h[(a + 84) >> 1];
                                    a = h[(a + 88) >> 1];
                                    g = p(
                                      s(
                                        p(
                                          ba(+(((d | 0) / (a | 0)) | 0)) /
                                            ba(+(((b | 0) / (a | 0)) | 0))
                                        ),
                                        p(1)
                                      )
                                    );
                                    g = p((g > p(0) ? g : p(0)) * p(100));
                                    c: {
                                      if (p(q(g)) < p(2147483648)) {
                                        a = ~~g;
                                        break c;
                                      }
                                      a = -2147483648;
                                    }
                                    i[c >> 2] = a;
                                    break a;
                                  case 100:
                                    if (i[(a + 20) >> 2] < 1) {
                                      break a;
                                    }
                                    d = i[(a + 76) >> 2];
                                    b = 0;
                                    while (1) {
                                      j = b << 2;
                                      i[(j + c) >> 2] = i[(d + j) >> 2];
                                      b = (b + 1) | 0;
                                      if ((b | 0) < i[(a + 20) >> 2]) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break a;
                                  case 103:
                                    i[c >> 2] = i[(a + 484) >> 2];
                                    break a;
                                  case 104:
                                    i[(a + 80) >> 2] = c;
                                    break a;
                                  case 105:
                                    i[(a + 488) >> 2] = i[c >> 2];
                                    break a;
                                  case 106:
                                    i[c >> 2] = i[(a + 44) >> 2];
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(f + 4) >> 2] = b;
                              i[f >> 2] = 12742;
                              Y(i[3524], 12828, f);
                              e = -1;
                            }
                            H = (f + 16) | 0;
                            return e | 0;
                          }
                          function dc(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              j = 0,
                              k = 0,
                              l = 0;
                            g = i[(a + 4) >> 2];
                            c = g & 3;
                            d = g & -8;
                            f = (d + a) | 0;
                            a: {
                              if (!c) {
                                c = 0;
                                if (b >>> 0 < 256) {
                                  break a;
                                }
                                if (d >>> 0 >= (b + 4) >>> 0) {
                                  c = a;
                                  if ((d - b) >>> 0 <= (i[3928] << 1) >>> 0) {
                                    break a;
                                  }
                                }
                                return 0;
                              }
                              b: {
                                if (d >>> 0 >= b >>> 0) {
                                  c = (d - b) | 0;
                                  if (c >>> 0 < 16) {
                                    break b;
                                  }
                                  i[(a + 4) >> 2] = (g & 1) | b | 2;
                                  b = (a + b) | 0;
                                  i[(b + 4) >> 2] = c | 3;
                                  i[(f + 4) >> 2] = i[(f + 4) >> 2] | 1;
                                  Na(b, c);
                                  break b;
                                }
                                c = 0;
                                if (i[3814] == (f | 0)) {
                                  d = (d + i[3811]) | 0;
                                  if (d >>> 0 <= b >>> 0) {
                                    break a;
                                  }
                                  i[(a + 4) >> 2] = (g & 1) | b | 2;
                                  c = (a + b) | 0;
                                  b = (d - b) | 0;
                                  i[(c + 4) >> 2] = b | 1;
                                  i[3811] = b;
                                  i[3814] = c;
                                  break b;
                                }
                                if (i[3813] == (f | 0)) {
                                  d = (d + i[3810]) | 0;
                                  if (d >>> 0 < b >>> 0) {
                                    break a;
                                  }
                                  c = (d - b) | 0;
                                  c: {
                                    if (c >>> 0 >= 16) {
                                      i[(a + 4) >> 2] = (g & 1) | b | 2;
                                      b = (a + b) | 0;
                                      i[(b + 4) >> 2] = c | 1;
                                      d = (a + d) | 0;
                                      i[d >> 2] = c;
                                      i[(d + 4) >> 2] = i[(d + 4) >> 2] & -2;
                                      break c;
                                    }
                                    i[(a + 4) >> 2] = d | (g & 1) | 2;
                                    b = (a + d) | 0;
                                    i[(b + 4) >> 2] = i[(b + 4) >> 2] | 1;
                                    c = 0;
                                    b = 0;
                                  }
                                  i[3813] = b;
                                  i[3810] = c;
                                  break b;
                                }
                                e = i[(f + 4) >> 2];
                                if (e & 2) {
                                  break a;
                                }
                                h = (d + (e & -8)) | 0;
                                if (h >>> 0 < b >>> 0) {
                                  break a;
                                }
                                k = (h - b) | 0;
                                d: {
                                  if (e >>> 0 <= 255) {
                                    c = i[(f + 8) >> 2];
                                    e = (e >>> 3) | 0;
                                    d = i[(f + 12) >> 2];
                                    if ((d | 0) == (c | 0)) {
                                      i[3808] = i[3808] & ic(e);
                                      break d;
                                    }
                                    i[(c + 12) >> 2] = d;
                                    i[(d + 8) >> 2] = c;
                                    break d;
                                  }
                                  j = i[(f + 24) >> 2];
                                  d = i[(f + 12) >> 2];
                                  e: {
                                    if ((f | 0) != (d | 0)) {
                                      c = i[(f + 8) >> 2];
                                      i[(c + 12) >> 2] = d;
                                      i[(d + 8) >> 2] = c;
                                      break e;
                                    }
                                    f: {
                                      c = (f + 20) | 0;
                                      e = i[c >> 2];
                                      if (e) {
                                        break f;
                                      }
                                      c = (f + 16) | 0;
                                      e = i[c >> 2];
                                      if (e) {
                                        break f;
                                      }
                                      d = 0;
                                      break e;
                                    }
                                    while (1) {
                                      l = c;
                                      d = e;
                                      c = (d + 20) | 0;
                                      e = i[c >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      c = (d + 16) | 0;
                                      e = i[(d + 16) >> 2];
                                      if (e) {
                                        continue;
                                      }
                                      break;
                                    }
                                    i[l >> 2] = 0;
                                  }
                                  if (!j) {
                                    break d;
                                  }
                                  c = i[(f + 28) >> 2];
                                  e = ((c << 2) + 15536) | 0;
                                  g: {
                                    if (i[e >> 2] == (f | 0)) {
                                      i[e >> 2] = d;
                                      if (d) {
                                        break g;
                                      }
                                      i[3809] = i[3809] & ic(c);
                                      break d;
                                    }
                                    i[
                                      (j +
                                        (i[(j + 16) >> 2] == (f | 0)
                                          ? 16
                                          : 20)) >>
                                        2
                                    ] = d;
                                    if (!d) {
                                      break d;
                                    }
                                  }
                                  i[(d + 24) >> 2] = j;
                                  c = i[(f + 16) >> 2];
                                  if (c) {
                                    i[(d + 16) >> 2] = c;
                                    i[(c + 24) >> 2] = d;
                                  }
                                  c = i[(f + 20) >> 2];
                                  if (!c) {
                                    break d;
                                  }
                                  i[(d + 20) >> 2] = c;
                                  i[(c + 24) >> 2] = d;
                                }
                                if (k >>> 0 <= 15) {
                                  i[(a + 4) >> 2] = (g & 1) | h | 2;
                                  b = (a + h) | 0;
                                  i[(b + 4) >> 2] = i[(b + 4) >> 2] | 1;
                                  break b;
                                }
                                i[(a + 4) >> 2] = (g & 1) | b | 2;
                                b = (a + b) | 0;
                                i[(b + 4) >> 2] = k | 3;
                                c = (a + h) | 0;
                                i[(c + 4) >> 2] = i[(c + 4) >> 2] | 1;
                                Na(b, k);
                              }
                              c = a;
                            }
                            return c;
                          }
                          function Qb(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            j,
                            k,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r,
                            s
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            s = s | 0;
                            var t = 0;
                            d = i[(f + 4) >> 2];
                            e = i[f >> 2];
                            n = V(m, i[(f + 8) >> 2]);
                            e = (e + o(4 << d, s)) | 0;
                            f = V(m, i[(f + 4) >> 2]) << 2;
                            s = g[(e + f) | 0];
                            d = (s + 32) | 0;
                            t = g[(e + (f | 2)) | 0];
                            m = (t + 32) | 0;
                            e = (g[(e + (f | 1)) | 0] + 32) | 0;
                            c = (c + n) | 0;
                            a: {
                              if (!p | ((c | 0) <= (q | 0))) {
                                break a;
                              }
                              f = e >> 31;
                              f =
                                ((((((f + e) ^ f) +
                                  ((s | 0) > -32
                                    ? d
                                    : (0 - ((d >>> 1) | 0)) | 0)) |
                                  0) +
                                  ((t | 0) > -32
                                    ? m
                                    : (0 - ((m >>> 1) | 0)) | 0)) <<
                                  16) >>
                                16;
                              n = r >> ((p | 0) > 3);
                              n = (n | 0) < 62 ? n : 62;
                              if ((f | 0) <= (n | 0)) {
                                break a;
                              }
                              f = (((n << 14) / (f | 0)) << 16) >> 16;
                              m = (o(f, m) >>> 14) | 0;
                              e = (o(e, f) >>> 14) | 0;
                              d = (o(d, f) >>> 14) | 0;
                            }
                            i[k >> 2] = c;
                            h[(l + 4) >> 1] = m;
                            h[(l + 2) >> 1] = e;
                            h[l >> 1] = d;
                            l = 0;
                            b = U(b, 0, j << 2);
                            k = m << 7;
                            f = (c + 1) | 0;
                            m = (f | 0) < (j | 0) ? f : j;
                            if ((m | 0) >= 1) {
                              n = (f | 0) > (j | 0) ? j : f;
                              p = (k << 16) >> 16;
                              while (1) {
                                q = (b + (l << 2)) | 0;
                                i[q >> 2] =
                                  i[q >> 2] +
                                  o(p, h[(((l - f) << 1) + a) >> 1]);
                                l = (l + 1) | 0;
                                if ((n | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = (c + f) | 0;
                            l = (f | 0) < (j | 0) ? f : j;
                            if ((m | 0) < (l | 0)) {
                              k = (k << 16) >> 16;
                              while (1) {
                                n = (b + (m << 2)) | 0;
                                i[n >> 2] =
                                  i[n >> 2] +
                                  o(k, h[(((m - f) << 1) + a) >> 1]);
                                m = (m + 1) | 0;
                                if ((m | 0) < (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = e << 7;
                            m = (c | 0) < (j | 0) ? c : j;
                            if ((m | 0) >= 1) {
                              f = (c | 0) > (j | 0) ? j : c;
                              k = (e << 16) >> 16;
                              l = 0;
                              while (1) {
                                n = (b + (l << 2)) | 0;
                                i[n >> 2] =
                                  i[n >> 2] +
                                  o(k, h[(((l - c) << 1) + a) >> 1]);
                                l = (l + 1) | 0;
                                if ((f | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = c << 1;
                            k = (f | 0) < (j | 0) ? f : j;
                            if ((m | 0) < (k | 0)) {
                              e = (e << 16) >> 16;
                              while (1) {
                                l = (b + (m << 2)) | 0;
                                i[l >> 2] =
                                  i[l >> 2] +
                                  o(e, h[(((m - f) << 1) + a) >> 1]);
                                m = (m + 1) | 0;
                                if ((m | 0) < (k | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            e = d << 7;
                            d = (c + -1) | 0;
                            m = (d | 0) < (j | 0) ? d : j;
                            if ((m | 0) >= 1) {
                              f = (d | 0) > (j | 0) ? j : d;
                              k = (e << 16) >> 16;
                              l = 0;
                              while (1) {
                                n = (b + (l << 2)) | 0;
                                i[n >> 2] =
                                  i[n >> 2] +
                                  o(k, h[(((l - d) << 1) + a) >> 1]);
                                l = (l + 1) | 0;
                                if ((f | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            c = (c + d) | 0;
                            d = (c | 0) < (j | 0) ? c : j;
                            if ((m | 0) < (d | 0)) {
                              e = (e << 16) >> 16;
                              while (1) {
                                f = (b + (m << 2)) | 0;
                                i[f >> 2] =
                                  i[f >> 2] +
                                  o(e, h[(((m - c) << 1) + a) >> 1]);
                                m = (m + 1) | 0;
                                if ((m | 0) < (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function ua(a, b, c, d, e, f, g) {
                            var i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0,
                              w = 0,
                              x = 0,
                              y = 0,
                              z = 0,
                              A = 0,
                              B = 0,
                              C = 0;
                            n = ((g & 1) + g) | 0;
                            i = d >> 1;
                            j = (n + ((i + 32) << 1)) | 0;
                            if ((d | 0) >= 2) {
                              l = (i | 0) > 1 ? i : 1;
                              g = 0;
                              while (1) {
                                h[((g << 1) + n) >> 1] =
                                  k[((((g ^ -1) + i) << 1) + a) >> 1];
                                g = (g + 1) | 0;
                                if ((l | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            g = 0;
                            while (1) {
                              h[(((g + i) << 1) + n) >> 1] =
                                k[(((g << 2) | 2) + e) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                            j = (j + (j & 1)) | 0;
                            if ((d | 0) >= 2) {
                              a = (i | 0) > 1 ? i : 1;
                              g = 0;
                              while (1) {
                                h[(j + (g << 1)) >> 1] =
                                  k[((((g ^ -1) + i) << 1) + b) >> 1];
                                g = (g + 1) | 0;
                                if ((a | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            g = 0;
                            while (1) {
                              h[(j + ((g + i) << 1)) >> 1] =
                                k[(((g << 2) | 2) + f) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                            if ((d | 0) >= 2) {
                              C = (i + -2) | 0;
                              while (1) {
                                d = 0;
                                l = 0;
                                q = 0;
                                b = (v + C) << 1;
                                a = k[(b + n) >> 1];
                                b = k[(b + j) >> 1];
                                g = 0;
                                r = 0;
                                while (1) {
                                  m = g << 2;
                                  w = h[((m | 2) + 12848) >> 1];
                                  x = (b << 16) >> 16;
                                  a = (a << 16) >> 16;
                                  p = (o(w, (x + a) | 0) + l) | 0;
                                  b = (((g + i) | 0) + v) << 1;
                                  l = (b + -2) | 0;
                                  t = h[(l + j) >> 1];
                                  u = h[(l + n) >> 1];
                                  y = (t + u) | 0;
                                  z = h[((m | 6) + 12848) >> 1];
                                  l = (p + o(y, z)) | 0;
                                  p = h[(m + 12848) >> 1];
                                  A = ((0 - p) << 16) >> 16;
                                  m = h[((m | 4) + 12848) >> 1];
                                  B = ((0 - m) << 16) >> 16;
                                  q =
                                    (((((((o(a, p) + q) | 0) + o(A, x)) | 0) +
                                      o(m, u)) |
                                      0) +
                                      o(t, B)) |
                                    0;
                                  a = h[(b + n) >> 1];
                                  b = h[(b + j) >> 1];
                                  d =
                                    (((o(w, y) + d) | 0) + o((a + b) | 0, z)) |
                                    0;
                                  r =
                                    (((((((o(u, p) + r) | 0) + o(t, A)) | 0) +
                                      o(a, m)) |
                                      0) +
                                      o(b, B)) |
                                    0;
                                  g = (g + 2) | 0;
                                  if ((g | 0) < 32) {
                                    continue;
                                  }
                                  break;
                                }
                                a = s << 2;
                                b = (r + 16384) >> 15;
                                h[(a + c) >> 1] =
                                  (r | 0) > 1073725439
                                    ? 32767
                                    : (b | 0) > -32767
                                    ? b
                                    : -32767;
                                b = (d + 16384) >> 15;
                                h[((a | 2) + c) >> 1] =
                                  (d | 0) > 1073725439
                                    ? 32767
                                    : (b | 0) > -32767
                                    ? b
                                    : -32767;
                                b = (q + 16384) >> 15;
                                h[((a | 4) + c) >> 1] =
                                  (q | 0) > 1073725439
                                    ? 32767
                                    : (b | 0) > -32767
                                    ? b
                                    : -32767;
                                b = ((a | 6) + c) | 0;
                                a = (l + 16384) >> 15;
                                h[b >> 1] =
                                  (l | 0) > 1073725439
                                    ? 32767
                                    : (a | 0) > -32767
                                    ? a
                                    : -32767;
                                v = (-2 - s) | 0;
                                s = (s + 2) | 0;
                                if ((s | 0) < (i | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            g = 0;
                            while (1) {
                              h[(((g << 2) | 2) + e) >> 1] =
                                k[((g << 1) + n) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                            g = 0;
                            while (1) {
                              h[(((g << 2) | 2) + f) >> 1] =
                                k[(j + (g << 1)) >> 1];
                              g = (g + 1) | 0;
                              if ((g | 0) != 32) {
                                continue;
                              }
                              break;
                            }
                          }
                          function Z(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              i = 0;
                            c = 10;
                            a: {
                              b: {
                                c: {
                                  if ((b | 0) < 1) {
                                    break c;
                                  }
                                  while (1) {
                                    f = h[((e << 1) + a) >> 1];
                                    d = f >> 31;
                                    d = d ^ (d + f);
                                    c =
                                      (((d | 0) > (c << 16) >> 16 ? d : c) <<
                                        16) >>
                                      16;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  if ((c | 0) >= 16384) {
                                    c = 0;
                                    if ((b | 0) >= 1) {
                                      e = 0;
                                      while (1) {
                                        g = c;
                                        c = e << 1;
                                        d = h[((c | 2) + a) >> 1] >> 1;
                                        f = o(d, d);
                                        d = h[(a + c) >> 1] >> 1;
                                        f = (f + o(d, d)) | 0;
                                        d = h[((c | 4) + a) >> 1] >> 1;
                                        c = h[((c | 6) + a) >> 1] >> 1;
                                        c =
                                          (g +
                                            (((((f + o(d, d)) | 0) +
                                              o(c, c)) >>>
                                              6) |
                                              0)) |
                                          0;
                                        e = (e + 4) | 0;
                                        if ((e | 0) < (b | 0)) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    a = ((c | 0) / (b | 0)) | 0;
                                    b = a >>> 0 > 65535;
                                    c = b << 3;
                                    g = c | 4;
                                    d = c;
                                    b = b ? (a >>> 16) | 0 : a;
                                    c = b >>> 0 > 255;
                                    e = c ? g : d;
                                    b = c ? (b >>> 8) | 0 : b;
                                    c = b >>> 0 > 15;
                                    b =
                                      (c ? e | 2 : e) |
                                      ((c ? (b >>> 4) | 0 : b) >>> 0 > 3);
                                    c = b << 1;
                                    d = a >> (c + -12);
                                    a = a << (12 - c);
                                    c = (b << 16) >> 16;
                                    a = (((c | 0) > 6 ? d : a) << 16) >> 16;
                                    a =
                                      (((o(
                                        (((o(
                                          (o(a, 16816) + -827523072) >> 16,
                                          a
                                        ) <<
                                          2) &
                                          -65536) +
                                          1387593728) >>
                                          16,
                                        a
                                      ) <<
                                        2) &
                                        -65536) +
                                        238157824) >>
                                      16;
                                    b = (13 - b) | 0;
                                    a =
                                      (((c | 0) < 13 ? a >> b : a << (0 - b)) <<
                                        16) >>
                                      12;
                                    break a;
                                  }
                                  if ((c | 0) <= 4095) {
                                    break c;
                                  }
                                  d = (c | 0) < 8192;
                                  break b;
                                }
                                d = 2;
                              }
                              e = (c | 0) < 2048 ? 3 : d;
                              d = 0;
                              if ((b | 0) >= 1) {
                                c = 0;
                                while (1) {
                                  g = d;
                                  d = c << 1;
                                  f =
                                    ((h[((d | 2) + a) >> 1] << e) << 16) >> 16;
                                  i = o(f, f);
                                  f = ((h[(a + d) >> 1] << e) << 16) >> 16;
                                  i = (i + o(f, f)) | 0;
                                  f =
                                    ((h[((d | 4) + a) >> 1] << e) << 16) >> 16;
                                  d =
                                    ((h[((d | 6) + a) >> 1] << e) << 16) >> 16;
                                  d =
                                    (g +
                                      (((((i + o(f, f)) | 0) + o(d, d)) >>> 6) |
                                        0)) |
                                    0;
                                  c = (c + 4) | 0;
                                  if ((c | 0) < (b | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              a = ((d | 0) / (b | 0)) | 0;
                              b = a >>> 0 > 65535;
                              c = b << 3;
                              g = c | 4;
                              d = c;
                              b = b ? (a >>> 16) | 0 : a;
                              c = b >>> 0 > 255;
                              d = c ? g : d;
                              b = c ? (b >>> 8) | 0 : b;
                              c = b >>> 0 > 15;
                              b =
                                (c ? d | 2 : d) |
                                ((c ? (b >>> 4) | 0 : b) >>> 0 > 3);
                              c = b << 1;
                              d = a >> (c + -12);
                              a = a << (12 - c);
                              c = (b << 16) >> 16;
                              a = (((c | 0) > 6 ? d : a) << 16) >> 16;
                              a =
                                (((o(
                                  (((o((o(a, 16816) + -827523072) >> 16, a) <<
                                    2) &
                                    -65536) +
                                    1387593728) >>
                                    16,
                                  a
                                ) <<
                                  2) &
                                  -65536) +
                                  238157824) >>
                                16;
                              b = (13 - b) | 0;
                              a =
                                ((((c | 0) < 13 ? a >> b : a << (0 - b)) <<
                                  16) >>
                                  16) <<
                                (e ^ 3);
                            }
                            return (a << 16) >> 16;
                          }
                          function tb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0;
                            if ((b | 0) >= 1) {
                              while (1) {
                                e = ((d << 1) + a) | 0;
                                d = (d + 1) | 0;
                                h[e >> 1] = d << 11;
                                if ((b | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            b = o(V(c, 6), 10);
                            h[a >> 1] = (g[(b + 8848) | 0] << 5) + k[a >> 1];
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 8850) | 0] << 5);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 8851) | 0] << 5);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 8852) | 0] << 5);
                            h[(a + 10) >> 1] =
                              k[(a + 10) >> 1] + (g[(b + 8853) | 0] << 5);
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 8854) | 0] << 5);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 8855) | 0] << 5);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 8856) | 0] << 5);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 8857) | 0] << 5);
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[((b | 1) + 8848) | 0] << 5);
                            b = o(V(c, 6), 5);
                            h[a >> 1] = (g[(b + 9488) | 0] << 4) + k[a >> 1];
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[(b + 9489) | 0] << 4);
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 9490) | 0] << 4);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 9491) | 0] << 4);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 9492) | 0] << 4);
                            b = o(V(c, 6), 5);
                            h[a >> 1] = (g[(b + 9808) | 0] << 3) + k[a >> 1];
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[(b + 9809) | 0] << 3);
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 9810) | 0] << 3);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 9811) | 0] << 3);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 9812) | 0] << 3);
                            b = o(V(c, 6), 5);
                            h[(a + 10) >> 1] =
                              (g[(b + 10128) | 0] << 4) + k[(a + 10) >> 1];
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 10129) | 0] << 4);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 10130) | 0] << 4);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 10131) | 0] << 4);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 10132) | 0] << 4);
                            b = o(V(c, 6), 5);
                            h[(a + 10) >> 1] =
                              (g[(b + 10448) | 0] << 3) + k[(a + 10) >> 1];
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 10449) | 0] << 3);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 10450) | 0] << 3);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 10451) | 0] << 3);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 10452) | 0] << 3);
                          }
                          function ob(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            d = (H - 16) | 0;
                            H = d;
                            b = T(168);
                            if (b) {
                              i[b >> 2] = a;
                              a = i[a >> 2];
                              c = i[a >> 2];
                              c = J[i[(c + 20) >> 2]](c) | 0;
                              i[(b + 4) >> 2] = c;
                              J[i[(i[c >> 2] + 44) >> 2]](
                                c,
                                106,
                                (b + 44) | 0
                              ) | 0;
                              c = i[(a + 4) >> 2];
                              i[(b + 12) >> 2] = c;
                              i[(b + 8) >> 2] = c << 1;
                              e = i[(a + 8) >> 2];
                              i[(b + 16) >> 2] = e;
                              i[(b + 24) >> 2] = c + e;
                              i[(b + 20) >> 2] = (c | 0) / (e | 0);
                              c = i[(a + 12) >> 2];
                              i[(b + 148) >> 2] = a + 24;
                              i[(b + 144) >> 2] = 1;
                              i[(b + 28) >> 2] = c;
                              c = i[(a + 56) >> 2];
                              i[(b + 156) >> 2] = c;
                              i[(b + 152) >> 2] = c;
                              i[(d + 12) >> 2] = 9;
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 44) >> 2]](c, 4, (d + 12) | 0) |
                                0;
                              i[(d + 12) >> 2] = 1;
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 44) >> 2]](
                                c,
                                105,
                                (d + 12) | 0
                              ) | 0;
                              h[(b + 36) >> 1] = k[(a + 20) >> 1];
                              h[(b + 38) >> 1] = k[(a + 16) >> 1];
                              a = k[(a + 18) >> 1];
                              i[(b + 32) >> 2] = 1;
                              h[(b + 40) >> 1] = a;
                              i[(b + 48) >> 2] = T(
                                (i[(b + 24) >> 2] - i[(b + 12) >> 2]) << 1
                              );
                              i[(b + 52) >> 2] = T(128);
                              a = T(128);
                              i[(b + 64) >> 2] = 13328;
                              i[(b + 60) >> 2] = 13360;
                              i[(b + 56) >> 2] = a;
                              c = i[(b + 28) >> 2];
                              a = c << 1;
                              e = T(a);
                              i[(b + 68) >> 2] = e;
                              i[(b + 72) >> 2] = T(a);
                              i[(b + 76) >> 2] = T(a);
                              a = i[(b + 20) >> 2];
                              i[(b + 92) >> 2] = T(a << 2);
                              a = T(a << 1);
                              i[(b + 100) >> 2] = 0;
                              i[(b + 96) >> 2] = a;
                              a = c << 2;
                              i[(b + 80) >> 2] = T(a);
                              i[(b + 84) >> 2] = T(a);
                              i[(b + 88) >> 2] = T(a);
                              if ((c | 0) >= 1) {
                                f = (c + 1) | 0;
                                a = 0;
                                while (1) {
                                  g = (e + (a << 1)) | 0;
                                  a = (a + 1) | 0;
                                  h[g >> 1] =
                                    (o((a << 16) >> 16, 25736) | 0) / (f | 0);
                                  if ((a | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              i[(b + 112) >> 2] = 0;
                              i[(b + 116) >> 2] = 2e4;
                              i[(b + 104) >> 2] = 1090519040;
                              i[(b + 108) >> 2] = 0;
                              i[(b + 160) >> 2] = 2;
                              i[(b + 136) >> 2] = 0;
                              i[(b + 140) >> 2] = 0;
                              i[(b + 120) >> 2] = 0;
                              a = i[(b + 4) >> 2];
                              J[i[(i[a >> 2] + 44) >> 2]](
                                a,
                                25,
                                (b + 164) | 0
                              ) | 0;
                              i[(b + 164) >> 2] = i[(b + 164) >> 2] << 1;
                            }
                            H = (d + 16) | 0;
                            return b | 0;
                          }
                          function Db(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            c = i[a >> 2];
                            b = T(224);
                            if (b) {
                              d = T(32e3);
                              i[b >> 2] = a;
                              i[(b + 64) >> 2] = d;
                              a = i[c >> 2];
                              i[(b + 8) >> 2] = a;
                              d = i[(c + 4) >> 2];
                              i[(b + 12) >> 2] = d;
                              i[(b + 20) >> 2] = a + d;
                              f = ((a | 0) / (d | 0)) | 0;
                              i[(b + 16) >> 2] = f;
                              a = i[(c + 8) >> 2];
                              i[(b + 24) >> 2] = a;
                              h[(b + 56) >> 1] = k[(c + 20) >> 1];
                              h[(b + 58) >> 1] = k[(c + 22) >> 1];
                              i[(b + 28) >> 2] = i[(c + 12) >> 2];
                              i[(b + 32) >> 2] = i[(c + 16) >> 2];
                              e = k[(c + 24) >> 1];
                              i[(b + 204) >> 2] = c + 28;
                              h[(b + 60) >> 1] = e;
                              e = i[(c + 92) >> 2];
                              i[(b + 208) >> 2] = e;
                              i[(b + 212) >> 2] = e;
                              i[(b + 200) >> 2] = 1;
                              i[(b + 36) >> 2] = 1024;
                              i[(b + 40) >> 2] = 1;
                              i[(b + 68) >> 2] = T(d << 1);
                              d = T(
                                (((i[(c + 16) >> 2] + i[c >> 2]) << 1) + 4) | 0
                              );
                              i[(b + 72) >> 2] = d;
                              e = i[(c + 16) >> 2];
                              i[(b + 76) >> 2] = ((d + (e << 1)) | 0) + 4;
                              d = T((((e + i[c >> 2]) << 1) + 4) | 0);
                              i[(b + 80) >> 2] = d;
                              c = i[(c + 16) >> 2];
                              i[(b + 92) >> 2] = 13328;
                              i[(b + 88) >> 2] = 13360;
                              i[(b + 84) >> 2] = ((d + (c << 1)) | 0) + 4;
                              c = a << 1;
                              d = T(c);
                              i[(b + 96) >> 2] = d;
                              c = T(c);
                              i[(b + 4) >> 2] = 1;
                              i[(b + 100) >> 2] = c;
                              if ((a | 0) >= 1) {
                                e = (a + 1) | 0;
                                c = 0;
                                while (1) {
                                  g = (d + (c << 1)) | 0;
                                  c = (c + 1) | 0;
                                  h[g >> 1] =
                                    (o((c << 16) >> 16, 25736) | 0) / (e | 0);
                                  if ((a | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              a = a << 2;
                              i[(b + 104) >> 2] = T(a);
                              i[(b + 108) >> 2] = T(a);
                              i[(b + 112) >> 2] = T(a);
                              i[(b + 116) >> 2] = T(a);
                              i[(b + 120) >> 2] = T(a);
                              a = f << 2;
                              i[(b + 132) >> 2] = T(a);
                              i[(b + 52) >> 2] = T(a);
                              a = T(64);
                              i[(b + 140) >> 2] = a;
                              Lb(a);
                              i[(b + 152) >> 2] = 0;
                              i[(b + 156) >> 2] = 0;
                              i[(b + 144) >> 2] = 1090519040;
                              i[(b + 160) >> 2] = 0;
                              i[(b + 164) >> 2] = 0;
                              i[(b + 168) >> 2] = 0;
                              i[(b + 172) >> 2] = 0;
                              i[(b + 176) >> 2] = 0;
                              i[(b + 180) >> 2] = 0;
                              i[(b + 196) >> 2] = 2;
                              i[(b + 216) >> 2] = 0;
                              i[(b + 220) >> 2] = 1;
                              i[(b + 188) >> 2] = 2;
                              i[(b + 192) >> 2] = 8e3;
                            }
                            return b | 0;
                          }
                          function ab(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            h = (H - 128) | 0;
                            g = h;
                            H = g;
                            i[d >> 2] = 0;
                            a: {
                              if (b >>> 0 <= 79) {
                                ma(13984);
                                break a;
                              }
                              X((g + 8) | 0, a, 80);
                              if (
                                (i[(g + 8) >> 2] != 1701146707) |
                                (i[(g + 12) >> 2] != 538976376)
                              ) {
                                ma(13945);
                                break a;
                              }
                              e = eb((g + 8) | 0);
                              X((g + 8) | 0, e, 80);
                              S(e);
                              n = 160;
                              e = 10920;
                              b: {
                                c: {
                                  d: {
                                    e: {
                                      f = i[(g + 48) >> 2];
                                      switch (f | 0) {
                                        case 0:
                                          break b;
                                        case 1:
                                          break d;
                                        default:
                                          break e;
                                      }
                                    }
                                    if ((f | 0) != 16777216) {
                                      break c;
                                    }
                                  }
                                  n = 320;
                                  p = 1;
                                  e = 11588;
                                  break b;
                                }
                                ma(13760);
                              }
                              k = J[i[(e + 32) >> 2]](e) | 0;
                              q = n << 1;
                              r = (h - ((q + 15) & -16)) | 0;
                              h = r;
                              H = h;
                              i[(g + 4) >> 2] = 1;
                              J[i[(i[k >> 2] + 48) >> 2]](k, 0, (g + 4) | 0) |
                                0;
                              Fa((g + 88) | 0);
                              e = i[3654];
                              s = (h - ((e + 15) & -16)) | 0;
                              H = s;
                              h = o(b, 10);
                              i[c >> 2] = Pa(h);
                              f: {
                                g: {
                                  if ((b | 0) == 80) {
                                    break g;
                                  }
                                  l = e;
                                  e = j[(a + 80) | 0] | (j[(a + 81) | 0] << 8);
                                  f = (((e << 24) | (e << 8)) >>> 16) | 0;
                                  if ((l | 0) >= (f | 0)) {
                                    a = (a + 82) | 0;
                                    e = (b + -82) | 0;
                                    b = h;
                                    while (1) {
                                      if (e >>> 0 < f >>> 0) {
                                        ma(13855);
                                        p = 0;
                                        break f;
                                      }
                                      bb(k, (g + 88) | 0, X(s, a, f), r, n, f);
                                      t = (e - f) | 0;
                                      u = (m + n) | 0;
                                      h: {
                                        if (u >>> 0 <= b >>> 0) {
                                          e = i[c >> 2];
                                          break h;
                                        }
                                        while (1) {
                                          b = (b + h) | 0;
                                          e = Pa(b);
                                          l = i[c >> 2];
                                          v = X(e, l, m);
                                          if (l) {
                                            S(l);
                                          }
                                          i[c >> 2] = v;
                                          if (u >>> 0 > b >>> 0) {
                                            continue;
                                          }
                                          break;
                                        }
                                      }
                                      X((e + m) | 0, r, q);
                                      m = (m + q) | 0;
                                      if (!t) {
                                        break g;
                                      }
                                      e = (t + -2) | 0;
                                      f = (a + f) | 0;
                                      a = (f + 2) | 0;
                                      f = j[f | 0] | (j[(f + 1) | 0] << 8);
                                      f = (((f << 24) | (f << 8)) >>> 16) | 0;
                                      if (i[3654] >= (f | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  ma(13885);
                                  p = 0;
                                  break f;
                                }
                                i[d >> 2] = m;
                              }
                              if (i[(g + 104) >> 2]) {
                                S(i[(g + 88) >> 2]);
                              }
                              J[i[(i[k >> 2] + 36) >> 2]](k);
                            }
                            H = (g + 128) | 0;
                            return p | 0;
                          }
                          function X(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            if (c >>> 0 >= 512) {
                              C(a | 0, b | 0, c | 0) | 0;
                              return a;
                            }
                            e = (a + c) | 0;
                            a: {
                              if (!((a ^ b) & 3)) {
                                b: {
                                  if ((c | 0) < 1) {
                                    c = a;
                                    break b;
                                  }
                                  if (!(a & 3)) {
                                    c = a;
                                    break b;
                                  }
                                  c = a;
                                  while (1) {
                                    g[c | 0] = j[b | 0];
                                    b = (b + 1) | 0;
                                    c = (c + 1) | 0;
                                    if (c >>> 0 >= e >>> 0) {
                                      break b;
                                    }
                                    if (c & 3) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                d = e & -4;
                                c: {
                                  if (d >>> 0 < 64) {
                                    break c;
                                  }
                                  f = (d + -64) | 0;
                                  if (c >>> 0 > f >>> 0) {
                                    break c;
                                  }
                                  while (1) {
                                    i[c >> 2] = i[b >> 2];
                                    i[(c + 4) >> 2] = i[(b + 4) >> 2];
                                    i[(c + 8) >> 2] = i[(b + 8) >> 2];
                                    i[(c + 12) >> 2] = i[(b + 12) >> 2];
                                    i[(c + 16) >> 2] = i[(b + 16) >> 2];
                                    i[(c + 20) >> 2] = i[(b + 20) >> 2];
                                    i[(c + 24) >> 2] = i[(b + 24) >> 2];
                                    i[(c + 28) >> 2] = i[(b + 28) >> 2];
                                    i[(c + 32) >> 2] = i[(b + 32) >> 2];
                                    i[(c + 36) >> 2] = i[(b + 36) >> 2];
                                    i[(c + 40) >> 2] = i[(b + 40) >> 2];
                                    i[(c + 44) >> 2] = i[(b + 44) >> 2];
                                    i[(c + 48) >> 2] = i[(b + 48) >> 2];
                                    i[(c + 52) >> 2] = i[(b + 52) >> 2];
                                    i[(c + 56) >> 2] = i[(b + 56) >> 2];
                                    i[(c + 60) >> 2] = i[(b + 60) >> 2];
                                    b = (b - -64) | 0;
                                    c = (c - -64) | 0;
                                    if (c >>> 0 <= f >>> 0) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if (c >>> 0 >= d >>> 0) {
                                  break a;
                                }
                                while (1) {
                                  i[c >> 2] = i[b >> 2];
                                  b = (b + 4) | 0;
                                  c = (c + 4) | 0;
                                  if (c >>> 0 < d >>> 0) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if (e >>> 0 < 4) {
                                c = a;
                                break a;
                              }
                              d = (e + -4) | 0;
                              if (d >>> 0 < a >>> 0) {
                                c = a;
                                break a;
                              }
                              c = a;
                              while (1) {
                                g[c | 0] = j[b | 0];
                                g[(c + 1) | 0] = j[(b + 1) | 0];
                                g[(c + 2) | 0] = j[(b + 2) | 0];
                                g[(c + 3) | 0] = j[(b + 3) | 0];
                                b = (b + 4) | 0;
                                c = (c + 4) | 0;
                                if (c >>> 0 <= d >>> 0) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if (c >>> 0 < e >>> 0) {
                              while (1) {
                                g[c | 0] = j[b | 0];
                                b = (b + 1) | 0;
                                c = (c + 1) | 0;
                                if ((e | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return a;
                          }
                          function La(a, b, c, d, e, f, g) {
                            var j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            h[d >> 1] = 8192;
                            m = (((0 - g) & 3) + g) | 0;
                            l = (m + (f << 2)) | 0;
                            n = (0 - l) | 0;
                            if ((f | 0) > 0) {
                              while (1) {
                                g = (j + 1) | 0;
                                h[((g << 1) + d) >> 1] = k[((j << 1) + b) >> 1];
                                j = g;
                                if ((j | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                              j = f;
                            }
                            b = (j + 1) | 0;
                            if ((b | 0) < (e | 0)) {
                              U(((b << 1) + d) | 0, 0, ((j ^ -1) + e) << 1);
                            }
                            g = (l + (n & 3)) | 0;
                            j = 0;
                            if ((f | 0) > 0) {
                              while (1) {
                                b = j << 2;
                                i[(b + g) >> 2] = 0;
                                i[(b + m) >> 2] = 0;
                                j = (j + 1) | 0;
                                if ((j | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            a: {
                              if ((e | 0) < 1) {
                                break a;
                              }
                              n = (f + -1) | 0;
                              b = n << 2;
                              q = (b + g) | 0;
                              j = n << 1;
                              r = (j + a) | 0;
                              s = (b + m) | 0;
                              t = (c + j) | 0;
                              l = 0;
                              if ((f | 0) >= 2) {
                                while (1) {
                                  f = ((l << 1) + d) | 0;
                                  p =
                                    (k[f >> 1] +
                                      ((((i[m >> 2] << 3) + 32768) >>> 16) |
                                        0)) |
                                    0;
                                  b =
                                    ((((i[g >> 2] + (((p << 16) >> 16) << 14)) |
                                      0) +
                                      4096) >>>
                                      13) |
                                    0;
                                  h[f >> 1] = b;
                                  j = 0;
                                  f = ((0 - p) << 16) >> 16;
                                  p = (0 - (b << 16)) >> 16;
                                  while (1) {
                                    u = j << 2;
                                    b = (j + 1) | 0;
                                    v = b << 2;
                                    j = j << 1;
                                    i[(u + m) >> 2] =
                                      i[(v + m) >> 2] + o(f, h[(j + c) >> 1]);
                                    i[(g + u) >> 2] =
                                      i[(g + v) >> 2] + o(p, h[(a + j) >> 1]);
                                    j = b;
                                    if ((n | 0) != (j | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[s >> 2] = o(f, h[t >> 1]);
                                  i[q >> 2] = o(p, h[r >> 1]);
                                  l = (l + 1) | 0;
                                  if ((l | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = ((l << 1) + d) | 0;
                                c =
                                  (k[b >> 1] +
                                    ((((i[m >> 2] << 3) + 32768) >>> 16) | 0)) |
                                  0;
                                a =
                                  ((((i[g >> 2] + (((c << 16) >> 16) << 14)) |
                                    0) +
                                    4096) >>>
                                    13) |
                                  0;
                                h[b >> 1] = a;
                                i[s >> 2] = o(h[t >> 1], ((0 - c) << 16) >> 16);
                                i[q >> 2] = o(h[r >> 1], (0 - (a << 16)) >> 16);
                                l = (l + 1) | 0;
                                if ((l | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ga(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0,
                              v = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              r = (f + -1) | 0;
                              s = ((r << 2) + j) | 0;
                              if ((c | 0) >= 1) {
                                while (1) {
                                  m = 0;
                                  l = 0;
                                  k = b;
                                  while (1) {
                                    m =
                                      (o(h[k >> 1], h[((l << 1) + a) >> 1]) +
                                        m) |
                                      0;
                                    k = (k + 2) | 0;
                                    l = (l + 1) | 0;
                                    if ((l | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  v = c << 1;
                                  t = (m | 0) > 0;
                                  n =
                                    ((i[((p << 2) + e) >> 2] >> 1) +
                                      (t ? (0 - m) | 0 : m)) |
                                    0;
                                  b: {
                                    if (
                                      (n | 0) >= i[s >> 2]
                                        ? (p | 0) >= (f | 0)
                                        : 0
                                    ) {
                                      break b;
                                    }
                                    m = r;
                                    l = m;
                                    k = f;
                                    c: {
                                      if ((k | 0) < 2) {
                                        break c;
                                      }
                                      while (1) {
                                        l = m;
                                        k = (k + -2) << 2;
                                        m = i[(k + j) >> 2];
                                        if (
                                          (n | 0) >= (m | 0)
                                            ? (l | 0) <= (q | 0)
                                            : 0
                                        ) {
                                          break c;
                                        }
                                        u = l << 2;
                                        i[(u + j) >> 2] = m;
                                        i[(g + u) >> 2] = i[(g + k) >> 2];
                                        m = (l + -1) | 0;
                                        k = l;
                                        if ((k | 0) > 1) {
                                          continue;
                                        }
                                        break;
                                      }
                                      l = 0;
                                    }
                                    k = l << 2;
                                    i[(k + j) >> 2] = n;
                                    k = (g + k) | 0;
                                    i[k >> 2] = p;
                                    q = (q + 1) | 0;
                                    if (t) {
                                      break b;
                                    }
                                    i[k >> 2] = d + p;
                                  }
                                  b = (b + v) | 0;
                                  p = (p + 1) | 0;
                                  if ((p | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              while (1) {
                                a = i[((n << 2) + e) >> 2] >> 1;
                                if (
                                  !((a | 0) >= i[s >> 2]
                                    ? (n | 0) >= (f | 0)
                                    : 0)
                                ) {
                                  m = r;
                                  l = m;
                                  k = f;
                                  d: {
                                    if ((k | 0) < 2) {
                                      break d;
                                    }
                                    while (1) {
                                      l = m;
                                      b = (k + -2) << 2;
                                      c = i[(b + j) >> 2];
                                      if (
                                        (a | 0) >= (c | 0)
                                          ? (l | 0) <= (q | 0)
                                          : 0
                                      ) {
                                        break d;
                                      }
                                      k = l << 2;
                                      i[(k + j) >> 2] = c;
                                      i[(g + k) >> 2] = i[(b + g) >> 2];
                                      m = (l + -1) | 0;
                                      k = l;
                                      if ((k | 0) > 1) {
                                        continue;
                                      }
                                      break;
                                    }
                                    l = 0;
                                  }
                                  b = l << 2;
                                  i[(b + j) >> 2] = a;
                                  i[(b + g) >> 2] = d + n;
                                  q = (q + 1) | 0;
                                }
                                n = (n + 1) | 0;
                                if ((n | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ub(a, b, c, d, e, f) {
                            var g = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0;
                            j = ((f & 1) + f) | 0;
                            f = (j + 128) | 0;
                            i = ((f & 1) + f) | 0;
                            f = 0;
                            while (1) {
                              h[((((f ^ -1) - -64) << 1) + j) >> 1] =
                                k[((f << 1) + 12848) >> 1];
                              f = (f + 1) | 0;
                              if ((f | 0) != 64) {
                                continue;
                              }
                              break;
                            }
                            f = 0;
                            while (1) {
                              h[((f << 1) + i) >> 1] =
                                k[(((62 - f) << 1) + e) >> 1];
                              f = (f + 1) | 0;
                              if ((f | 0) != 63) {
                                continue;
                              }
                              break;
                            }
                            if ((d | 0) >= 1) {
                              f = 0;
                              while (1) {
                                h[(((f + 63) << 1) + i) >> 1] =
                                  h[((f << 1) + a) >> 1] >>> 1;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = 0;
                            while (1) {
                              h[((f << 1) + e) >> 1] =
                                h[((((f ^ -1) + d) << 1) + a) >> 1] >>> 1;
                              f = (f + 1) | 0;
                              if ((f | 0) != 63) {
                                continue;
                              }
                              break;
                            }
                            if ((d | 0) > 0) {
                              m = (i + 126) | 0;
                              t = ((d + -1) >>> 1) | 0;
                              e = 0;
                              while (1) {
                                d = 0;
                                a = 0;
                                f = 0;
                                while (1) {
                                  g = f | 1;
                                  n = k[(((g + e) << 1) + i) >> 1];
                                  p = h[((f << 1) + j) >> 1];
                                  q = k[(((e + f) << 1) + i) >> 1];
                                  r = k[(((e - f) << 1) + m) >> 1];
                                  s = h[((g << 1) + j) >> 1];
                                  g = k[(((e - g) << 1) + m) >> 1];
                                  d =
                                    (((d - o(p, ((q - r) << 16) >> 16)) | 0) +
                                      o(s, ((n - g) << 16) >> 16)) |
                                    0;
                                  a =
                                    (((o(p, ((q + r) << 16) >> 16) + a) | 0) +
                                      o(((g + n) << 16) >> 16, s)) |
                                    0;
                                  f = (f + 2) | 0;
                                  if ((f | 0) < 32) {
                                    continue;
                                  }
                                  break;
                                }
                                f = l << 1;
                                g = (a + 16384) >> 15;
                                h[(f + b) >> 1] =
                                  (a | 0) > 1073725439
                                    ? 32767
                                    : (g | 0) > -32767
                                    ? g
                                    : -32767;
                                a = (d + 16384) >> 15;
                                h[(c + f) >> 1] =
                                  (d | 0) > 1073725439
                                    ? 32767
                                    : (a | 0) > -32767
                                    ? a
                                    : -32767;
                                e = (e + 2) | 0;
                                a = (l | 0) == (t | 0);
                                l = (l + 1) | 0;
                                if (!a) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ba(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            f = (H - 16) | 0;
                            H = f;
                            g[a | 0] = 1701146707;
                            g[(a + 1) | 0] = 6645104;
                            g[(a + 2) | 0] = 25957;
                            g[(a + 3) | 0] = 101;
                            g[(a + 4) | 0] = 538976376;
                            g[(a + 5) | 0] = 2105376;
                            g[(a + 6) | 0] = 8224;
                            g[(a + 7) | 0] = 32;
                            d =
                              j[13186] |
                              (j[13187] << 8) |
                              ((j[13188] << 16) | (j[13189] << 24));
                            e =
                              j[13182] |
                              (j[13183] << 8) |
                              ((j[13184] << 16) | (j[13185] << 24));
                            g[(a + 8) | 0] = e;
                            g[(a + 9) | 0] = e >>> 8;
                            g[(a + 10) | 0] = e >>> 16;
                            g[(a + 11) | 0] = e >>> 24;
                            g[(a + 12) | 0] = d;
                            g[(a + 13) | 0] = d >>> 8;
                            g[(a + 14) | 0] = d >>> 16;
                            g[(a + 15) | 0] = d >>> 24;
                            d =
                              j[13192] |
                              (j[13193] << 8) |
                              ((j[13194] << 16) | (j[13195] << 24));
                            e =
                              j[13188] |
                              (j[13189] << 8) |
                              ((j[13190] << 16) | (j[13191] << 24));
                            g[(a + 14) | 0] = e;
                            g[(a + 15) | 0] = e >>> 8;
                            g[(a + 16) | 0] = e >>> 16;
                            g[(a + 17) | 0] = e >>> 24;
                            g[(a + 18) | 0] = d;
                            g[(a + 19) | 0] = d >>> 8;
                            g[(a + 20) | 0] = d >>> 16;
                            g[(a + 21) | 0] = d >>> 24;
                            g[(a + 22) | 0] = 0;
                            g[(a + 23) | 0] = 0;
                            g[(a + 24) | 0] = 0;
                            g[(a + 25) | 0] = 0;
                            g[(a + 26) | 0] = 0;
                            g[(a + 27) | 0] = 0;
                            i[(a + 36) >> 2] = b;
                            i[(a + 28) >> 2] = 1;
                            i[(a + 32) >> 2] = 80;
                            b = i[(c + 12) >> 2];
                            i[(a + 40) >> 2] = b;
                            i[(a + 44) >> 2] = i[(c + 16) >> 2];
                            if ((b | 0) <= -1) {
                              i[f >> 2] = 13197;
                              Y(i[3524], 13292, f);
                            }
                            i[(a + 52) >> 2] = -1;
                            i[(a + 48) >> 2] = 1;
                            J[i[(c + 4) >> 2]](i[c >> 2], 0, (a + 56) | 0) | 0;
                            i[(a + 76) >> 2] = 0;
                            i[(a + 68) >> 2] = 0;
                            i[(a + 72) >> 2] = 0;
                            i[(a + 60) >> 2] = 0;
                            i[(a + 64) >> 2] = 0;
                            H = (f + 16) | 0;
                          }
                          function Ha(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              r = (f + -1) | 0;
                              s = ((r << 2) + j) | 0;
                              if ((c | 0) >= 1) {
                                while (1) {
                                  m = 0;
                                  l = 0;
                                  k = b;
                                  while (1) {
                                    m =
                                      (o(h[k >> 1], h[((l << 1) + a) >> 1]) +
                                        m) |
                                      0;
                                    k = (k + 2) | 0;
                                    l = (l + 1) | 0;
                                    if ((l | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  u = c << 1;
                                  n = ((i[((p << 2) + e) >> 2] >> 1) - m) | 0;
                                  if (
                                    !((n | 0) >= i[s >> 2]
                                      ? (p | 0) >= (f | 0)
                                      : 0)
                                  ) {
                                    m = r;
                                    l = m;
                                    k = f;
                                    b: {
                                      if ((k | 0) < 2) {
                                        break b;
                                      }
                                      while (1) {
                                        l = m;
                                        k = (k + -2) << 2;
                                        m = i[(k + j) >> 2];
                                        if (
                                          (n | 0) >= (m | 0)
                                            ? (l | 0) <= (q | 0)
                                            : 0
                                        ) {
                                          break b;
                                        }
                                        t = l << 2;
                                        i[(t + j) >> 2] = m;
                                        i[(g + t) >> 2] = i[(g + k) >> 2];
                                        m = (l + -1) | 0;
                                        k = l;
                                        if ((k | 0) > 1) {
                                          continue;
                                        }
                                        break;
                                      }
                                      l = 0;
                                    }
                                    k = l << 2;
                                    i[(k + j) >> 2] = n;
                                    i[(g + k) >> 2] = p;
                                    q = (q + 1) | 0;
                                  }
                                  b = (b + u) | 0;
                                  p = (p + 1) | 0;
                                  if ((p | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              while (1) {
                                a = i[((n << 2) + e) >> 2] >> 1;
                                if (
                                  !((a | 0) >= i[s >> 2]
                                    ? (n | 0) >= (f | 0)
                                    : 0)
                                ) {
                                  m = r;
                                  l = m;
                                  k = f;
                                  c: {
                                    if ((k | 0) < 2) {
                                      break c;
                                    }
                                    while (1) {
                                      l = m;
                                      b = (k + -2) << 2;
                                      c = i[(b + j) >> 2];
                                      if (
                                        (a | 0) >= (c | 0)
                                          ? (l | 0) <= (q | 0)
                                          : 0
                                      ) {
                                        break c;
                                      }
                                      k = l << 2;
                                      i[(k + j) >> 2] = c;
                                      i[(g + k) >> 2] = i[(b + g) >> 2];
                                      m = (l + -1) | 0;
                                      k = l;
                                      if ((k | 0) > 1) {
                                        continue;
                                      }
                                      break;
                                    }
                                    l = 0;
                                  }
                                  b = l << 2;
                                  i[(b + j) >> 2] = a;
                                  i[(b + g) >> 2] = n;
                                  q = (q + 1) | 0;
                                }
                                n = (n + 1) | 0;
                                if ((n | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function rb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0;
                            if ((b | 0) >= 1) {
                              while (1) {
                                e = ((d << 1) + a) | 0;
                                d = (d + 1) | 0;
                                h[e >> 1] = d << 11;
                                if ((b | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            b = o(V(c, 6), 10);
                            h[a >> 1] = (g[(b + 8848) | 0] << 5) + k[a >> 1];
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 8850) | 0] << 5);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 8851) | 0] << 5);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 8852) | 0] << 5);
                            h[(a + 10) >> 1] =
                              k[(a + 10) >> 1] + (g[(b + 8853) | 0] << 5);
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 8854) | 0] << 5);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 8855) | 0] << 5);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 8856) | 0] << 5);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 8857) | 0] << 5);
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[((b | 1) + 8848) | 0] << 5);
                            b = o(V(c, 6), 5);
                            h[a >> 1] = (g[(b + 9488) | 0] << 4) + k[a >> 1];
                            h[(a + 2) >> 1] =
                              k[(a + 2) >> 1] + (g[(b + 9489) | 0] << 4);
                            h[(a + 4) >> 1] =
                              k[(a + 4) >> 1] + (g[(b + 9490) | 0] << 4);
                            h[(a + 6) >> 1] =
                              k[(a + 6) >> 1] + (g[(b + 9491) | 0] << 4);
                            h[(a + 8) >> 1] =
                              k[(a + 8) >> 1] + (g[(b + 9492) | 0] << 4);
                            b = o(V(c, 6), 5);
                            h[(a + 10) >> 1] =
                              (g[(b + 10128) | 0] << 4) + k[(a + 10) >> 1];
                            h[(a + 12) >> 1] =
                              k[(a + 12) >> 1] + (g[(b + 10129) | 0] << 4);
                            h[(a + 14) >> 1] =
                              k[(a + 14) >> 1] + (g[(b + 10130) | 0] << 4);
                            h[(a + 16) >> 1] =
                              k[(a + 16) >> 1] + (g[(b + 10131) | 0] << 4);
                            h[(a + 18) >> 1] =
                              k[(a + 18) >> 1] + (g[(b + 10132) | 0] << 4);
                          }
                          function Ra(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            a: {
                              if ((b | 0) <= 0) {
                                break a;
                              }
                              c = 1;
                              while (1) {
                                d = i[((f << 2) + a) >> 2];
                                e = d >> 31;
                                d = e ^ (d + e);
                                c = (d | 0) > (c | 0) ? d : c;
                                f = (f + 1) | 0;
                                if ((f | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                              d = 0;
                              f = 0;
                              if ((c | 0) > 16383) {
                                while (1) {
                                  f = (f + 1) | 0;
                                  e = c >>> 0 > 32767;
                                  c = (c >>> 1) | 0;
                                  if (e) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if ((b | 0) <= 0) {
                                break a;
                              }
                              c = 0;
                              while (1) {
                                h = c;
                                e = d << 2;
                                c = ((i[((e | 4) + a) >> 2] >> f) << 16) >> 16;
                                g = o(c, c);
                                c = ((i[(a + e) >> 2] >> f) << 16) >> 16;
                                g = (g + o(c, c)) | 0;
                                c = ((i[((e | 8) + a) >> 2] >> f) << 16) >> 16;
                                g = (g + o(c, c)) | 0;
                                c = ((i[((e | 12) + a) >> 2] >> f) << 16) >> 16;
                                c = (h + (((g + o(c, c)) >>> 6) | 0)) | 0;
                                d = (d + 4) | 0;
                                if ((d | 0) < (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                              d = c;
                            }
                            e = ((d | 0) / (b | 0)) | 0;
                            b = e >>> 0 > 65535;
                            a = b << 3;
                            d = b ? (e >>> 16) | 0 : e;
                            b = d >>> 0 > 255;
                            a = b ? a | 4 : a;
                            h = a | 2;
                            c = a;
                            b = b ? (d >>> 8) | 0 : d;
                            a = b >>> 0 > 15;
                            c =
                              (a ? h : c) | ((a ? (b >>> 4) | 0 : b) >>> 0 > 3);
                            a = c << 1;
                            d = (c << 16) >> 16;
                            a =
                              (((d | 0) > 6 ? e >> (a + -12) : e << (12 - a)) <<
                                16) >>
                              16;
                            b =
                              (((o(
                                (((o((o(a, 16816) + -827523072) >> 16, a) <<
                                  2) &
                                  -65536) +
                                  1387593728) >>
                                  16,
                                a
                              ) <<
                                2) &
                                -65536) +
                                238157824) >>
                              16;
                            a = (13 - c) | 0;
                            return (
                              (((((((d | 0) < 13 ? b >> a : b << (0 - a)) <<
                                16) >>
                                16) <<
                                (f + 3)) <<
                                2) +
                                32768) >>
                              16
                            );
                          }
                          function Pb(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            j,
                            k,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            g = g | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            s = s | 0;
                            t = t | 0;
                            u = u | 0;
                            v = v | 0;
                            w = w | 0;
                            g = (l | 0) < 63 ? l : 63;
                            l = 0;
                            if (!(((n | 0) < 1) | ((j | 0) < 1))) {
                              l = (n + -1) >>> 0 < (j + -1) >>> 0 ? n : j;
                              k = (g << 23) >> 16;
                              b = 0;
                              while (1) {
                                i[((b << 2) + f) >> 2] = o(
                                  h[(((b - j) << 1) + r) >> 1],
                                  k
                                );
                                b = (b + 1) | 0;
                                if ((l | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((l | 0) < (n | 0)) {
                              b = (g << 25) >> 16;
                              while (1) {
                                g = i[(((l - j) << 2) + f) >> 2];
                                i[((l << 2) + f) >> 2] =
                                  o(b, (g << 1) >> 16) +
                                  (o(b, g & 32767) >> 15);
                                l = (l + 1) | 0;
                                if ((n | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            b = ((q & 1) + q) | 0;
                            g = (b + (n << 1)) | 0;
                            l = 0;
                            if ((n | 0) > 0) {
                              while (1) {
                                h[(b + (l << 1)) >> 1] =
                                  (i[((l << 2) + f) >> 2] + 4096) >>> 13;
                                l = (l + 1) | 0;
                                if ((n | 0) != (l | 0)) {
                                  continue;
                                }
                                break;
                              }
                              ka(b, c, d, e, b, n, m, g);
                              if ((n | 0) >= 1) {
                                l = 0;
                                while (1) {
                                  c = l << 1;
                                  d = (c + a) | 0;
                                  c = (h[d >> 1] - h[(b + c) >> 1]) | 0;
                                  c = (c | 0) > -32700 ? c : -32700;
                                  h[d >> 1] = (c | 0) < 32700 ? c : 32700;
                                  l = (l + 1) | 0;
                                  if ((n | 0) != (l | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              return j | 0;
                            }
                            ka(b, c, d, e, b, n, m, g);
                            return j | 0;
                          }
                          function Ya(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              j = 0,
                              k = 0;
                            e = (H - 32) | 0;
                            H = e;
                            g = i[(a + 28) >> 2];
                            i[(e + 16) >> 2] = g;
                            d = i[(a + 20) >> 2];
                            i[(e + 28) >> 2] = c;
                            i[(e + 24) >> 2] = b;
                            b = (d - g) | 0;
                            i[(e + 20) >> 2] = b;
                            g = (b + c) | 0;
                            k = 2;
                            b = (e + 16) | 0;
                            a: {
                              b: {
                                f =
                                  A(
                                    i[(a + 60) >> 2],
                                    (e + 16) | 0,
                                    2,
                                    (e + 12) | 0
                                  ) | 0;
                                d = 0;
                                c: {
                                  if (!f) {
                                    break c;
                                  }
                                  i[3790] = f;
                                  d = -1;
                                }
                                d: {
                                  if (!d) {
                                    while (1) {
                                      d = i[(e + 12) >> 2];
                                      if ((d | 0) == (g | 0)) {
                                        break d;
                                      }
                                      if ((d | 0) <= -1) {
                                        break b;
                                      }
                                      h = i[(b + 4) >> 2];
                                      f = d >>> 0 > h >>> 0;
                                      j = ((f << 3) + b) | 0;
                                      h = (d - (f ? h : 0)) | 0;
                                      i[j >> 2] = h + i[j >> 2];
                                      j = ((f ? 12 : 4) + b) | 0;
                                      i[j >> 2] = i[j >> 2] - h;
                                      g = (g - d) | 0;
                                      b = f ? (b + 8) | 0 : b;
                                      k = (k - f) | 0;
                                      f =
                                        A(
                                          i[(a + 60) >> 2],
                                          b | 0,
                                          k | 0,
                                          (e + 12) | 0
                                        ) | 0;
                                      d = 0;
                                      e: {
                                        if (!f) {
                                          break e;
                                        }
                                        i[3790] = f;
                                        d = -1;
                                      }
                                      if (!d) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  i[(e + 12) >> 2] = -1;
                                  if ((g | 0) != -1) {
                                    break b;
                                  }
                                }
                                b = i[(a + 44) >> 2];
                                i[(a + 28) >> 2] = b;
                                i[(a + 20) >> 2] = b;
                                i[(a + 16) >> 2] = b + i[(a + 48) >> 2];
                                a = c;
                                break a;
                              }
                              i[(a + 28) >> 2] = 0;
                              i[(a + 16) >> 2] = 0;
                              i[(a + 20) >> 2] = 0;
                              i[a >> 2] = i[a >> 2] | 32;
                              a = 0;
                              if ((k | 0) == 2) {
                                break a;
                              }
                              a = (c - i[(b + 4) >> 2]) | 0;
                            }
                            H = (e + 32) | 0;
                            return a | 0;
                          }
                          function ba(a) {
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              i = 0,
                              j = 0,
                              k = 0;
                            a: {
                              b: {
                                c: {
                                  d: {
                                    nc(+a);
                                    b = kc(1) | 0;
                                    d = kc(0) | 0;
                                    if (
                                      (b | 0) > 0
                                        ? 1
                                        : (b | 0) >= 0
                                        ? d >>> 0 >= 0
                                        : 0
                                    ) {
                                      f = b;
                                      if (b >>> 0 > 1048575) {
                                        break d;
                                      }
                                    }
                                    if (!((b & 2147483647) | d)) {
                                      return -1 / (a * a);
                                    }
                                    if ((b | 0) > -1) {
                                      break c;
                                    }
                                    return (a - a) / 0;
                                  }
                                  if (f >>> 0 > 2146435071) {
                                    break a;
                                  }
                                  b = 1072693248;
                                  g = -1023;
                                  if ((f | 0) != 1072693248) {
                                    b = f;
                                    break b;
                                  }
                                  if (d) {
                                    break b;
                                  }
                                  return 0;
                                }
                                nc(+(a * 0x40000000000000));
                                b = kc(1) | 0;
                                d = kc(0) | 0;
                                g = -1077;
                              }
                              b = (b + 614242) | 0;
                              e = +((((b >>> 20) | 0) + g) | 0);
                              lc(0, d | 0);
                              lc(1, ((b & 1048575) + 1072079006) | 0);
                              a = +mc() + -1;
                              c = a / (a + 2);
                              h = e * 0.6931471803691238;
                              i = a;
                              j = e * 1.9082149292705877e-10;
                              k = c;
                              e = a * (a * 0.5);
                              c = c * c;
                              a = c * c;
                              a =
                                h +
                                (i +
                                  (j +
                                    k *
                                      (e +
                                        (a *
                                          (a *
                                            (a * 0.15313837699209373 +
                                              0.22222198432149784) +
                                            0.3999999999940942) +
                                          c *
                                            (a *
                                              (a *
                                                (a * 0.14798198605116586 +
                                                  0.1818357216161805) +
                                                0.2857142874366239) +
                                              0.6666666666666735))) -
                                    e));
                            }
                            return a;
                          }
                          function Tb(a, b, c, d, e, f) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            var h = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0;
                            a: {
                              f = i[(b + 4) >> 2];
                              if ((f | 0) < 1) {
                                break a;
                              }
                              c = 0;
                              j = (((0 - e) & 3) + e) | 0;
                              e = (j + (f << 2)) | 0;
                              k = (((0 - e) & 3) + e) | 0;
                              l = i[(b + 8) >> 2];
                              e = i[b >> 2];
                              b: {
                                if (!i[(b + 16) >> 2]) {
                                  while (1) {
                                    h = c << 2;
                                    i[(h + k) >> 2] = 0;
                                    i[(h + j) >> 2] = V(d, i[(b + 12) >> 2]);
                                    c = (c + 1) | 0;
                                    if ((f | 0) != (c | 0)) {
                                      continue;
                                    }
                                    break b;
                                  }
                                }
                                while (1) {
                                  h = c << 2;
                                  i[(h + k) >> 2] = V(d, 1);
                                  i[(h + j) >> 2] = V(d, i[(b + 12) >> 2]);
                                  c = (c + 1) | 0;
                                  if ((f | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if (((f | 0) < 1) | ((e | 0) < 1)) {
                                break a;
                              }
                              b = 0;
                              while (1) {
                                h = o(b, e);
                                m = b << 2;
                                n = (m + j) | 0;
                                c = 0;
                                d = 0;
                                c: {
                                  if (i[(k + m) >> 2]) {
                                    while (1) {
                                      i[(((c + h) << 2) + a) >> 2] =
                                        0 -
                                        (g[
                                          (((o(e, i[n >> 2]) + c) | 0) + l) | 0
                                        ] <<
                                          9);
                                      c = (c + 1) | 0;
                                      if ((e | 0) != (c | 0)) {
                                        continue;
                                      }
                                      break c;
                                    }
                                  }
                                  while (1) {
                                    i[(((d + h) << 2) + a) >> 2] =
                                      g[
                                        (((o(e, i[n >> 2]) + d) | 0) + l) | 0
                                      ] << 9;
                                    d = (d + 1) | 0;
                                    if ((e | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                b = (b + 1) | 0;
                                if ((f | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function lb(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0;
                            d = (H - 16) | 0;
                            H = d;
                            b = T(100);
                            if (b) {
                              i[b >> 2] = a;
                              a = i[a >> 2];
                              i[(b + 88) >> 2] = 1;
                              c = i[a >> 2];
                              c = J[i[(c + 32) >> 2]](c) | 0;
                              i[(b + 4) >> 2] = c;
                              J[i[(i[c >> 2] + 48) >> 2]](
                                c,
                                106,
                                (b + 40) | 0
                              ) | 0;
                              c = i[(a + 4) >> 2];
                              i[(b + 12) >> 2] = c;
                              i[(b + 8) >> 2] = c << 1;
                              e = i[(a + 8) >> 2];
                              i[(b + 16) >> 2] = e;
                              i[(b + 20) >> 2] = (c | 0) / (e | 0);
                              i[(b + 24) >> 2] = i[(a + 12) >> 2];
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 48) >> 2]](c, 25, (b + 32) | 0) |
                                0;
                              i[(b + 32) >> 2] = i[(b + 32) >> 2] << 1;
                              i[(d + 12) >> 2] = 1;
                              c = i[(b + 4) >> 2];
                              J[i[(i[c >> 2] + 48) >> 2]](
                                c,
                                105,
                                (d + 12) | 0
                              ) | 0;
                              i[(b + 92) >> 2] = a + 24;
                              a = i[(a + 56) >> 2];
                              i[(b + 28) >> 2] = 1;
                              i[(b + 96) >> 2] = a;
                              i[(b + 44) >> 2] = T(128);
                              i[(b + 48) >> 2] = T(128);
                              i[(b + 52) >> 2] = T(i[(b + 16) >> 2] << 1);
                              a = i[(b + 24) >> 2];
                              c = a << 1;
                              i[(b + 56) >> 2] = T(c);
                              i[(b + 60) >> 2] = T(c);
                              c = i[(b + 20) >> 2];
                              i[(b + 68) >> 2] = T(c << 2);
                              i[(b + 72) >> 2] = T(c << 1);
                              a = T(a << 3);
                              i[(b + 76) >> 2] = 0;
                              i[(b + 64) >> 2] = a;
                              i[(b + 84) >> 2] = 1e3;
                              i[(b + 36) >> 2] = 0;
                            }
                            H = (d + 16) | 0;
                            return b | 0;
                          }
                          function qa(a, b, c) {
                            var d = 0;
                            a: {
                              if ((a | 0) == (b | 0)) {
                                break a;
                              }
                              if (
                                (((b - a) | 0) - c) >>> 0 <=
                                (0 - (c << 1)) >>> 0
                              ) {
                                X(a, b, c);
                                return;
                              }
                              d = (a ^ b) & 3;
                              b: {
                                c: {
                                  if (a >>> 0 < b >>> 0) {
                                    if (d) {
                                      break b;
                                    }
                                    if (!(a & 3)) {
                                      break c;
                                    }
                                    while (1) {
                                      if (!c) {
                                        break a;
                                      }
                                      g[a | 0] = j[b | 0];
                                      b = (b + 1) | 0;
                                      c = (c + -1) | 0;
                                      a = (a + 1) | 0;
                                      if (a & 3) {
                                        continue;
                                      }
                                      break;
                                    }
                                    break c;
                                  }
                                  d: {
                                    if (d) {
                                      break d;
                                    }
                                    if ((a + c) & 3) {
                                      while (1) {
                                        if (!c) {
                                          break a;
                                        }
                                        c = (c + -1) | 0;
                                        d = (c + a) | 0;
                                        g[d | 0] = j[(b + c) | 0];
                                        if (d & 3) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }
                                    if (c >>> 0 <= 3) {
                                      break d;
                                    }
                                    while (1) {
                                      c = (c + -4) | 0;
                                      i[(c + a) >> 2] = i[(b + c) >> 2];
                                      if (c >>> 0 > 3) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  if (!c) {
                                    break a;
                                  }
                                  while (1) {
                                    c = (c + -1) | 0;
                                    g[(c + a) | 0] = j[(b + c) | 0];
                                    if (c) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                if (c >>> 0 <= 3) {
                                  break b;
                                }
                                while (1) {
                                  i[a >> 2] = i[b >> 2];
                                  b = (b + 4) | 0;
                                  a = (a + 4) | 0;
                                  c = (c + -4) | 0;
                                  if (c >>> 0 > 3) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if (!c) {
                                break a;
                              }
                              while (1) {
                                g[a | 0] = j[b | 0];
                                a = (a + 1) | 0;
                                b = (b + 1) | 0;
                                c = (c + -1) | 0;
                                if (c) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ea(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              i = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0;
                            i = k[b >> 1];
                            if (i) {
                              if ((c | 0) > 0) {
                                while (1) {
                                  d = 0;
                                  m = (e + 1) | 0;
                                  f = (0 - (h[((m << 1) + b) >> 1] << 13)) | 0;
                                  if (e) {
                                    while (1) {
                                      f =
                                        (f -
                                          o(
                                            h[(((e - d) << 1) + b) >> 1],
                                            h[((d << 1) + a) >> 1]
                                          )) |
                                        0;
                                      d = (d + 1) | 0;
                                      if ((e | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  d = i << 16;
                                  n = d >> 16;
                                  f =
                                    (((((n + 1) >> 1) + f) | 0) /
                                      ((d + 524288) >> 16)) |
                                    0;
                                  h[((e << 1) + a) >> 1] = f;
                                  j = (e >>> 1) | 0;
                                  if (j) {
                                    p = (f << 16) >> 16;
                                    d = 0;
                                    while (1) {
                                      g = ((d << 1) + a) | 0;
                                      q = h[g >> 1];
                                      l = g;
                                      g = ((((d ^ -1) + e) << 1) + a) | 0;
                                      h[l >> 1] =
                                        (((o(h[g >> 1], p) + 4096) >>> 13) |
                                          0) +
                                        q;
                                      h[g >> 1] =
                                        k[g >> 1] +
                                        (((o(p, q) + 4096) >>> 13) | 0);
                                      d = (d + 1) | 0;
                                      if ((j | 0) != (d | 0)) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                  a: {
                                    if (!(e & 1)) {
                                      d = (f << 16) >> 16;
                                      break a;
                                    }
                                    d = ((j << 1) + a) | 0;
                                    e = h[d >> 1];
                                    l = d;
                                    d = (f << 16) >> 16;
                                    h[l >> 1] =
                                      e + (((o(e, d) + 4096) >>> 13) | 0);
                                  }
                                  i =
                                    (i -
                                      ((o((o(d, n) << 3) >> 16, d) >>> 13) |
                                        0)) |
                                    0;
                                  e = m;
                                  if ((e | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              return;
                            }
                            if ((c | 0) < 1) {
                              return;
                            }
                            U(a, 0, c << 1);
                          }
                          function U(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              h = 0;
                            a: {
                              if (!c) {
                                break a;
                              }
                              d = (a + c) | 0;
                              g[(d + -1) | 0] = b;
                              g[a | 0] = b;
                              if (c >>> 0 < 3) {
                                break a;
                              }
                              g[(d + -2) | 0] = b;
                              g[(a + 1) | 0] = b;
                              g[(d + -3) | 0] = b;
                              g[(a + 2) | 0] = b;
                              if (c >>> 0 < 7) {
                                break a;
                              }
                              g[(d + -4) | 0] = b;
                              g[(a + 3) | 0] = b;
                              if (c >>> 0 < 9) {
                                break a;
                              }
                              d = (0 - a) & 3;
                              e = (d + a) | 0;
                              b = o(b & 255, 16843009);
                              i[e >> 2] = b;
                              c = (c - d) & -4;
                              d = (c + e) | 0;
                              i[(d + -4) >> 2] = b;
                              if (c >>> 0 < 9) {
                                break a;
                              }
                              i[(e + 8) >> 2] = b;
                              i[(e + 4) >> 2] = b;
                              i[(d + -8) >> 2] = b;
                              i[(d + -12) >> 2] = b;
                              if (c >>> 0 < 25) {
                                break a;
                              }
                              i[(e + 24) >> 2] = b;
                              i[(e + 20) >> 2] = b;
                              i[(e + 16) >> 2] = b;
                              i[(e + 12) >> 2] = b;
                              i[(d + -16) >> 2] = b;
                              i[(d + -20) >> 2] = b;
                              i[(d + -24) >> 2] = b;
                              i[(d + -28) >> 2] = b;
                              h = (e & 4) | 24;
                              c = (c - h) | 0;
                              if (c >>> 0 < 32) {
                                break a;
                              }
                              d = b;
                              f = b;
                              b = (e + h) | 0;
                              while (1) {
                                i[(b + 24) >> 2] = f;
                                i[(b + 28) >> 2] = d;
                                i[(b + 16) >> 2] = f;
                                i[(b + 20) >> 2] = d;
                                i[(b + 8) >> 2] = f;
                                i[(b + 12) >> 2] = d;
                                i[b >> 2] = f;
                                i[(b + 4) >> 2] = d;
                                b = (b + 32) | 0;
                                c = (c + -32) | 0;
                                if (c >>> 0 > 31) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return a;
                          }
                          function ka(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0;
                            p = g << 2;
                            k = (((0 - j) & 3) + j) | 0;
                            if ((g | 0) >= 1) {
                              U(k, 0, p);
                            }
                            a: {
                              if ((f | 0) < 1) {
                                break a;
                              }
                              n = (g + -1) | 0;
                              q = ((n << 2) + k) | 0;
                              r = ((n << 1) + b) | 0;
                              if ((g | 0) >= 2) {
                                while (1) {
                                  j = 0;
                                  s = m << 1;
                                  l =
                                    (h[(s + a) >> 1] +
                                      ((i[k >> 2] + 4096) >> 13)) |
                                    0;
                                  l = (l | 0) > -32767 ? l : -32767;
                                  t = (l | 0) < 32767 ? l : 32767;
                                  u = (0 - (t << 16)) >> 16;
                                  while (1) {
                                    l = (j + 1) | 0;
                                    i[((j << 2) + k) >> 2] =
                                      i[((l << 2) + k) >> 2] +
                                      o(h[((j << 1) + b) >> 1], u);
                                    j = l;
                                    if ((n | 0) != (j | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[q >> 2] = o(h[r >> 1], u);
                                  h[(e + s) >> 1] = t;
                                  m = (m + 1) | 0;
                                  if ((m | 0) != (f | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = m << 1;
                                j =
                                  (h[(b + a) >> 1] +
                                    ((i[k >> 2] + 4096) >> 13)) |
                                  0;
                                j = (j | 0) > -32767 ? j : -32767;
                                j = (j | 0) < 32767 ? j : 32767;
                                i[q >> 2] = o(h[r >> 1], (0 - (j << 16)) >> 16);
                                h[(b + e) >> 1] = j;
                                m = (m + 1) | 0;
                                if ((m | 0) != (f | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((g | 0) >= 1) {
                              U(k, 0, p);
                            }
                            aa(e, c, d, e, f, g, k);
                          }
                          function aa(a, b, c, d, e, f, g) {
                            var j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0,
                              t = 0,
                              u = 0;
                            a: {
                              if ((e | 0) < 1) {
                                break a;
                              }
                              l = (f + -1) | 0;
                              n = ((l << 2) + g) | 0;
                              j = l << 1;
                              p = (j + c) | 0;
                              q = (b + j) | 0;
                              if ((f | 0) >= 2) {
                                while (1) {
                                  f = 0;
                                  r = k << 1;
                                  m = h[(r + a) >> 1];
                                  j = (m + ((i[g >> 2] + 4096) >> 13)) | 0;
                                  j = (j | 0) > -32767 ? j : -32767;
                                  s = (j | 0) < 32767 ? j : 32767;
                                  t = (0 - (s << 16)) >> 16;
                                  while (1) {
                                    u = ((f << 2) + g) | 0;
                                    j = (f + 1) | 0;
                                    f = f << 1;
                                    i[u >> 2] =
                                      ((i[((j << 2) + g) >> 2] +
                                        o(h[(f + b) >> 1], m)) |
                                        0) +
                                      o(h[(c + f) >> 1], t);
                                    f = j;
                                    if ((l | 0) != (f | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[n >> 2] = o(h[p >> 1], t) + o(h[q >> 1], m);
                                  h[(d + r) >> 1] = s;
                                  k = (k + 1) | 0;
                                  if ((k | 0) != (e | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = k << 1;
                                c = h[(b + a) >> 1];
                                f = (c + ((i[g >> 2] + 4096) >> 13)) | 0;
                                f = (f | 0) > -32767 ? f : -32767;
                                f = (f | 0) < 32767 ? f : 32767;
                                i[n >> 2] =
                                  o(h[p >> 1], (0 - (f << 16)) >> 16) +
                                  o(c, h[q >> 1]);
                                h[(b + d) >> 1] = f;
                                k = (k + 1) | 0;
                                if ((k | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Vb(a, b, c, d, e, f, g, j) {
                            var k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0;
                            j = (((0 - j) & 3) + j) | 0;
                            a: {
                              if ((g | 0) <= 0) {
                                aa(a, b, c, e, f, g, j);
                                break a;
                              }
                              k = a;
                              l = b;
                              a = g << 2;
                              b = U(j, 0, a);
                              aa(k, l, c, e, f, g, b);
                              U(b, 0, a);
                            }
                            b: {
                              if ((f | 0) < 1) {
                                break b;
                              }
                              b = (g + -1) | 0;
                              l = (j + (b << 2)) | 0;
                              m = ((b << 1) + d) | 0;
                              c = 0;
                              if ((g | 0) >= 2) {
                                while (1) {
                                  n = ((c << 1) + e) | 0;
                                  k = h[n >> 1];
                                  a = (k + ((i[j >> 2] + 4096) >> 13)) | 0;
                                  p = (a | 0) > -32767 ? a : -32767;
                                  g = 0;
                                  while (1) {
                                    a = (g + 1) | 0;
                                    i[(j + (g << 2)) >> 2] =
                                      i[(j + (a << 2)) >> 2] +
                                      o(h[((g << 1) + d) >> 1], k);
                                    g = a;
                                    if ((a | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[l >> 2] = o(h[m >> 1], k);
                                  h[n >> 1] = (p | 0) < 32767 ? p : 32767;
                                  c = (c + 1) | 0;
                                  if ((f | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break b;
                                }
                              }
                              while (1) {
                                a = i[j >> 2];
                                b = ((c << 1) + e) | 0;
                                d = h[b >> 1];
                                i[l >> 2] = o(d, h[m >> 1]);
                                a = (d + ((a + 4096) >> 13)) | 0;
                                a = (a | 0) > -32767 ? a : -32767;
                                h[b >> 1] = (a | 0) < 32767 ? a : 32767;
                                c = (c + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ab(a) {
                            a = a | 0;
                            var b = 0,
                              c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0;
                            c = i[a >> 2];
                            b = T(496);
                            if (b) {
                              d = T(16e3);
                              i[(b + 112) >> 2] = 1;
                              i[b >> 2] = a;
                              i[(b + 44) >> 2] = d;
                              i[(b + 4) >> 2] = 1;
                              d = i[c >> 2];
                              i[(b + 12) >> 2] = d;
                              e = i[(c + 4) >> 2];
                              i[(b + 16) >> 2] = e;
                              g = ((d | 0) / (e | 0)) | 0;
                              i[(b + 20) >> 2] = g;
                              f = i[(c + 8) >> 2];
                              i[(b + 24) >> 2] = f;
                              i[(b + 28) >> 2] = i[(c + 12) >> 2];
                              a = i[(c + 16) >> 2];
                              i[(b + 116) >> 2] = c + 28;
                              i[(b + 32) >> 2] = a;
                              c = i[(c + 92) >> 2];
                              i[(b + 124) >> 2] = 1;
                              i[(b + 120) >> 2] = c;
                              c = T(
                                (((((d + e) | 0) + (a << 1)) << 1) + 24) | 0
                              );
                              i[(b + 48) >> 2] = c;
                              i[(b + 52) >> 2] =
                                ((((c + (a << 2)) | 0) + (e << 1)) | 0) + 12;
                              U(c, 0, (a + d) << 1);
                              a = f << 1;
                              i[(b + 60) >> 2] = T(a);
                              i[(b + 56) >> 2] = T(a);
                              i[(b + 64) >> 2] = T(f << 2);
                              a = T(g << 2);
                              h[(b + 98) >> 1] = 0;
                              h[(b + 100) >> 1] = 0;
                              h[(b + 102) >> 1] = 0;
                              h[(b + 104) >> 1] = 0;
                              i[(b + 92) >> 2] = 40;
                              i[(b + 76) >> 2] = a;
                              h[(b + 106) >> 1] = 0;
                              i[(b + 108) >> 2] = 1e3;
                              i[(b + 492) >> 2] = 1;
                              i[(b + 452) >> 2] = 33;
                              i[(b + 36) >> 2] = 8e3;
                            }
                            return b | 0;
                          }
                          function ya(a, b, c) {
                            a: {
                              b: {
                                if (b >>> 0 > 20) {
                                  break b;
                                }
                                c: {
                                  switch ((b + -9) | 0) {
                                    case 0:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = i[b >> 2];
                                      return;
                                    case 1:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      b = i[b >> 2];
                                      i[a >> 2] = b;
                                      i[(a + 4) >> 2] = b >> 31;
                                      return;
                                    case 2:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = i[b >> 2];
                                      i[(a + 4) >> 2] = 0;
                                      return;
                                    case 4:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      b = h[b >> 1];
                                      i[a >> 2] = b;
                                      i[(a + 4) >> 2] = b >> 31;
                                      return;
                                    case 5:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = k[b >> 1];
                                      i[(a + 4) >> 2] = 0;
                                      return;
                                    case 6:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      b = g[b | 0];
                                      i[a >> 2] = b;
                                      i[(a + 4) >> 2] = b >> 31;
                                      return;
                                    case 7:
                                      b = i[c >> 2];
                                      i[c >> 2] = b + 4;
                                      i[a >> 2] = j[b | 0];
                                      i[(a + 4) >> 2] = 0;
                                      return;
                                    case 3:
                                    case 8:
                                      break a;
                                    case 9:
                                      break c;
                                    default:
                                      break b;
                                  }
                                }
                                J[0](a, c);
                              }
                              return;
                            }
                            b = (i[c >> 2] + 7) & -8;
                            i[c >> 2] = b + 8;
                            c = i[(b + 4) >> 2];
                            i[a >> 2] = i[b >> 2];
                            i[(a + 4) >> 2] = c;
                          }
                          function _(a, b, c, d, e, f) {
                            var g = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              k = (e + -1) | 0;
                              l = ((k << 2) + f) | 0;
                              m = ((k << 1) + b) | 0;
                              if ((e | 0) >= 2) {
                                while (1) {
                                  e = 0;
                                  n = j << 1;
                                  g =
                                    (h[(n + a) >> 1] +
                                      ((i[f >> 2] + 4096) >> 13)) |
                                    0;
                                  g = (g | 0) > -32767 ? g : -32767;
                                  p = (g | 0) < 32767 ? g : 32767;
                                  q = (0 - (p << 16)) >> 16;
                                  while (1) {
                                    g = (e + 1) | 0;
                                    i[((e << 2) + f) >> 2] =
                                      i[((g << 2) + f) >> 2] +
                                      o(h[((e << 1) + b) >> 1], q);
                                    e = g;
                                    if ((k | 0) != (e | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[l >> 2] = o(h[m >> 1], q);
                                  h[(c + n) >> 1] = p;
                                  j = (j + 1) | 0;
                                  if ((j | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = j << 1;
                                e =
                                  (h[(b + a) >> 1] +
                                    ((i[f >> 2] + 4096) >> 13)) |
                                  0;
                                e = (e | 0) > -32767 ? e : -32767;
                                e = (e | 0) < 32767 ? e : 32767;
                                i[l >> 2] = o(h[m >> 1], (0 - (e << 16)) >> 16);
                                h[(b + c) >> 1] = e;
                                j = (j + 1) | 0;
                                if ((j | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Da(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              i = 0,
                              j = 0;
                            g = 1;
                            if ((d | 0) >= 1) {
                              while (1) {
                                f = h[((e << 1) + a) >> 1];
                                g = (((o(f, f) >>> 8) | 0) + g) | 0;
                                e = (e + 1) | 0;
                                if ((e | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i = 18;
                            j = 8;
                            e = (d + g) | 0;
                            a: {
                              if ((e | 0) >= 1073741824) {
                                break a;
                              }
                              while (1) {
                                b: {
                                  j = (j + -1) | 0;
                                  e = e << 1;
                                  if ((e | 0) > 1073741823) {
                                    break b;
                                  }
                                  if (j) {
                                    continue;
                                  }
                                }
                                break;
                              }
                              if ((e | 0) >= 1073741824) {
                                break a;
                              }
                              while (1) {
                                i = (i + -1) | 0;
                                e = e << 1;
                                if ((e | 0) > 1073741823) {
                                  break a;
                                }
                                if (i) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = 0;
                            if ((c | 0) > 0) {
                              while (1) {
                                g = 0;
                                e = f;
                                if ((e | 0) < (d | 0)) {
                                  while (1) {
                                    g =
                                      ((o(
                                        h[(((e - f) << 1) + a) >> 1],
                                        h[((e << 1) + a) >> 1]
                                      ) >>
                                        j) +
                                        g) |
                                      0;
                                    e = (e + 1) | 0;
                                    if ((e | 0) != (d | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                h[((f << 1) + b) >> 1] = g >> i;
                                f = (f + 1) | 0;
                                if ((f | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function va(a, b, c, d, e, f) {
                            var g = 0,
                              j = 0,
                              k = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0;
                            a: {
                              if ((d | 0) < 1) {
                                break a;
                              }
                              k = (e + -1) | 0;
                              m = ((k << 2) + f) | 0;
                              n = ((k << 1) + b) | 0;
                              if ((e | 0) >= 2) {
                                while (1) {
                                  p = g << 1;
                                  l = h[(p + a) >> 1];
                                  e = (l + ((i[f >> 2] + 4096) >> 13)) | 0;
                                  e = (e | 0) > -32767 ? e : -32767;
                                  q = (e | 0) < 32767 ? e : 32767;
                                  e = 0;
                                  while (1) {
                                    j = (e + 1) | 0;
                                    i[((e << 2) + f) >> 2] =
                                      i[((j << 2) + f) >> 2] +
                                      o(h[((e << 1) + b) >> 1], l);
                                    e = j;
                                    if ((k | 0) != (e | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  i[m >> 2] = o(h[n >> 1], l);
                                  h[(c + p) >> 1] = q;
                                  g = (g + 1) | 0;
                                  if ((g | 0) != (d | 0)) {
                                    continue;
                                  }
                                  break a;
                                }
                              }
                              while (1) {
                                b = i[f >> 2];
                                e = g << 1;
                                j = h[(e + a) >> 1];
                                i[m >> 2] = o(j, h[n >> 1]);
                                b = (j + ((b + 4096) >> 13)) | 0;
                                b = (b | 0) > -32767 ? b : -32767;
                                h[(c + e) >> 1] = (b | 0) < 32767 ? b : 32767;
                                g = (g + 1) | 0;
                                if ((g | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function W(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              h = 0;
                            e = (H - 48) | 0;
                            H = e;
                            a: {
                              b: {
                                c: {
                                  if (
                                    ((i[(a + 8) >> 2] +
                                      ((i[(a + 12) >> 2] + c) >> 3)) |
                                      0) >=
                                    i[(a + 24) >> 2]
                                  ) {
                                    i[(e + 32) >> 2] = 5846;
                                    d = i[3524];
                                    Y(d, 5956, (e + 32) | 0);
                                    if (!i[(a + 16) >> 2]) {
                                      break b;
                                    }
                                    f = (o(i[(a + 24) >> 2], 3) + 15) >> 1;
                                    h = Oa(i[a >> 2], f);
                                    if (!h) {
                                      break c;
                                    }
                                    i[a >> 2] = h;
                                    i[(a + 24) >> 2] = f;
                                  }
                                  if (!c) {
                                    break a;
                                  }
                                  while (1) {
                                    d = (i[a >> 2] + i[(a + 8) >> 2]) | 0;
                                    c = (c + -1) | 0;
                                    g[d | 0] =
                                      j[d | 0] |
                                      (((b >>> c) & 1) <<
                                        (7 - i[(a + 12) >> 2]));
                                    d = (i[(a + 12) >> 2] + 1) | 0;
                                    i[(a + 12) >> 2] = d;
                                    if ((d | 0) == 8) {
                                      i[(a + 12) >> 2] = 0;
                                      d = (i[(a + 8) >> 2] + 1) | 0;
                                      i[(a + 8) >> 2] = d;
                                      g[(d + i[a >> 2]) | 0] = 0;
                                    }
                                    i[(a + 4) >> 2] = i[(a + 4) >> 2] + 1;
                                    if (c) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                i[(e + 16) >> 2] = 5876;
                                Y(d, 5974, (e + 16) | 0);
                                break a;
                              }
                              i[e >> 2] = 5919;
                              Y(d, 5974, e);
                            }
                            H = (e + 48) | 0;
                          }
                          function Aa(a, b, c, d) {
                            var e = 0,
                              f = 0;
                            a: {
                              if ((c | 0) >= 4194305) {
                                if ((d | 0) < 1) {
                                  break a;
                                }
                                c = ((c << 2) + 32768) | 0;
                                f =
                                  (((((c >> 17) + 2097152) | 0) / (c >> 16)) <<
                                    16) >>
                                  16;
                                c = 0;
                                while (1) {
                                  e = c << 1;
                                  h[(e + b) >> 1] =
                                    (o(f, h[(a + e) >> 1]) + 16384) >>> 15;
                                  c = (c + 1) | 0;
                                  if ((d | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if ((c | 0) >= 4097) {
                                if ((d | 0) < 1) {
                                  break a;
                                }
                                f = (131072 / (((c + 256) >>> 9) >>> 0)) | 0;
                                c = 0;
                                while (1) {
                                  e = c << 1;
                                  h[(e + b) >> 1] =
                                    (o(f, (k[(a + e) >> 1] << 18) >> 16) +
                                      128) >>>
                                    8;
                                  c = (c + 1) | 0;
                                  if ((d | 0) != (c | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              if ((d | 0) < 1) {
                                break a;
                              }
                              c = (c - -64) >> 7;
                              f = (131072 / (((c | 0) > 5 ? c : 5) >>> 0)) | 0;
                              c = 0;
                              while (1) {
                                e = c << 1;
                                h[(e + b) >> 1] =
                                  (o(f, (k[(a + e) >> 1] << 18) >> 16) + 32) >>>
                                  6;
                                c = (c + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Xa(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            d = (H - 208) | 0;
                            H = d;
                            i[(d + 204) >> 2] = c;
                            c = 0;
                            U((d + 160) | 0, 0, 40);
                            i[(d + 200) >> 2] = i[(d + 204) >> 2];
                            a: {
                              if (
                                (ra(
                                  0,
                                  b,
                                  (d + 200) | 0,
                                  (d + 80) | 0,
                                  (d + 160) | 0
                                ) |
                                  0) <
                                0
                              ) {
                                break a;
                              }
                              c = i[(a + 76) >> 2] >= 0 ? 1 : c;
                              e = i[a >> 2];
                              if (g[(a + 74) | 0] <= 0) {
                                i[a >> 2] = e & -33;
                              }
                              f = e & 32;
                              b: {
                                if (i[(a + 48) >> 2]) {
                                  ra(
                                    a,
                                    b,
                                    (d + 200) | 0,
                                    (d + 80) | 0,
                                    (d + 160) | 0
                                  );
                                  break b;
                                }
                                i[(a + 48) >> 2] = 80;
                                i[(a + 16) >> 2] = d + 80;
                                i[(a + 28) >> 2] = d;
                                i[(a + 20) >> 2] = d;
                                e = i[(a + 44) >> 2];
                                i[(a + 44) >> 2] = d;
                                ra(
                                  a,
                                  b,
                                  (d + 200) | 0,
                                  (d + 80) | 0,
                                  (d + 160) | 0
                                );
                                if (!e) {
                                  break b;
                                }
                                J[i[(a + 36) >> 2]](a, 0, 0) | 0;
                                i[(a + 48) >> 2] = 0;
                                i[(a + 44) >> 2] = e;
                                i[(a + 28) >> 2] = 0;
                                i[(a + 16) >> 2] = 0;
                                i[(a + 20) >> 2] = 0;
                              }
                              i[a >> 2] = i[a >> 2] | f;
                              if (!c) {
                                break a;
                              }
                            }
                            H = (d + 208) | 0;
                          }
                          function Ca(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              j = 0,
                              k = 0;
                            a: {
                              if (c) {
                                k = i[(a + 96) >> 2];
                                i[(a + 96) >> 2] = 1;
                                break a;
                              }
                              e = i[(a + 60) >> 2];
                              ca(32440, e, e, i[(a + 24) >> 2]);
                              h[(a + 80) >> 1] =
                                o(h[(a + 80) >> 1], 29491) >>> 15;
                            }
                            i[(a + 28) >> 2] = 1;
                            e = i[(a + 12) >> 2];
                            if ((e | 0) >= 1) {
                              f = i[(a + 84) >> 2];
                              while (1) {
                                f = (o(f, 1664525) + 1013904223) | 0;
                                j = o(h[(a + 80) >> 1], f >> 16);
                                h[(((e + g) << 1) + b) >> 1] =
                                  (((j - (j >> 3)) | 0) - -8192) >>> 14;
                                g = (g + 1) | 0;
                                if ((e | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                              i[(a + 84) >> 2] = f;
                            }
                            f = ((e << 1) + b) | 0;
                            _(
                              f,
                              i[(a + 60) >> 2],
                              f,
                              e,
                              i[(a + 24) >> 2],
                              i[(a + 64) >> 2]
                            );
                            ua(
                              b,
                              ((i[(a + 12) >> 2] << 1) + b) | 0,
                              b,
                              i[(a + 8) >> 2],
                              i[(a + 44) >> 2],
                              i[(a + 48) >> 2],
                              d
                            );
                            if (c) {
                              i[(a + 96) >> 2] = k;
                            }
                          }
                          function sa(a, b, c, d, e) {
                            var f = 0,
                              g = 0,
                              j = 0,
                              l = 0,
                              m = 0,
                              n = 0,
                              p = 0,
                              q = 0,
                              r = 0,
                              s = 0;
                            if ((c | 0) >= 1) {
                              d = o((d | 0) < 4 ? d : 4, 6);
                              n = ((0 - k[(d + 2372) >> 1]) << 16) >> 16;
                              p = ((0 - k[(d + 2370) >> 1]) << 16) >> 16;
                              q = h[(d + 2404) >> 1];
                              r = h[(d + 2402) >> 1];
                              s = h[(d + 2400) >> 1];
                              g = i[(e + 4) >> 2];
                              d = i[e >> 2];
                              while (1) {
                                l = m << 1;
                                f = h[(l + a) >> 1];
                                d = (o(f, s) + d) | 0;
                                j = (d - -8192) >> 14;
                                h[(b + l) >> 1] =
                                  (d | 0) > 536862719
                                    ? 32767
                                    : (j | 0) > -32767
                                    ? j
                                    : -32767;
                                l = (o(f, r) + g) | 0;
                                g = (d << 1) >> 16;
                                j = d & 32767;
                                d =
                                  (l + ((o(g, p) + (o(j, p) >> 15)) << 1)) | 0;
                                f =
                                  (o(f, q) +
                                    ((o(g, n) + (o(j, n) >> 15)) << 1)) |
                                  0;
                                g = f;
                                m = (m + 1) | 0;
                                if ((m | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                              i[(e + 4) >> 2] = f;
                              i[e >> 2] = d;
                            }
                          }
                          function hc(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              h = 0,
                              i = 0,
                              j = 0;
                            c = b;
                            if (!c) {
                              a = ((a >>> 0) / 10) | 0;
                              I = 0;
                              return a;
                            }
                            g = (61 - r(c)) | 0;
                            d = (0 - g) | 0;
                            f = g & 63;
                            e = f & 31;
                            if (32 <= f >>> 0) {
                              f = 0;
                              e = (c >>> e) | 0;
                            } else {
                              f = (c >>> e) | 0;
                              e =
                                ((((1 << e) - 1) & c) << (32 - e)) | (a >>> e);
                            }
                            d = d & 63;
                            c = d & 31;
                            if (32 <= d >>> 0) {
                              b = a << c;
                              a = 0;
                            } else {
                              b =
                                (((1 << c) - 1) & (a >>> (32 - c))) | (b << c);
                              a = a << c;
                            }
                            if (g) {
                              c = 0;
                              while (1) {
                                d = (e << 1) | (b >>> 31);
                                h = d;
                                f = (f << 1) | (e >>> 31);
                                d = (c - ((f + (9 < d >>> 0)) | 0)) >> 31;
                                i = d & 10;
                                e = (h - i) | 0;
                                f = (f - (h >>> 0 < i >>> 0)) | 0;
                                b = (b << 1) | (a >>> 31);
                                a = j | (a << 1);
                                h = d & 1;
                                j = h;
                                g = (g + -1) | 0;
                                if (g) {
                                  continue;
                                }
                                break;
                              }
                            }
                            I = (b << 1) | (a >>> 31);
                            return h | (a << 1);
                          }
                          function pb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0,
                              e = 0,
                              f = 0;
                            a: {
                              b: {
                                if ((b | 0) > 0) {
                                  while (1) {
                                    h[((d << 1) + a) >> 1] =
                                      ((o(d, 167772160) >>> 16) | 0) + 6144;
                                    d = (d + 1) | 0;
                                    if ((d | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  d = V(c, 6);
                                  if ((b | 0) < 1) {
                                    break b;
                                  }
                                  e = o(b, d);
                                  d = 0;
                                  while (1) {
                                    f = ((d << 1) + a) | 0;
                                    h[f >> 1] =
                                      k[f >> 1] +
                                      (g[(((d + e) | 0) + 4016) | 0] << 5);
                                    d = (d + 1) | 0;
                                    if ((d | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  c = V(c, 6);
                                  if ((b | 0) < 1) {
                                    break a;
                                  }
                                  c = o(b, c);
                                  d = 0;
                                  while (1) {
                                    e = ((d << 1) + a) | 0;
                                    h[e >> 1] =
                                      k[e >> 1] +
                                      (g[(((c + d) | 0) + 4528) | 0] << 4);
                                    d = (d + 1) | 0;
                                    if ((d | 0) != (b | 0)) {
                                      continue;
                                    }
                                    break;
                                  }
                                  break a;
                                }
                                V(c, 6);
                              }
                              V(c, 6);
                            }
                          }
                          function ec(a, b) {
                            a: {
                              if (a) {
                                if (b >>> 0 <= 127) {
                                  break a;
                                }
                                b: {
                                  if (!i[i[3736] >> 2]) {
                                    if ((b & -128) == 57216) {
                                      break a;
                                    }
                                    break b;
                                  }
                                  if (b >>> 0 <= 2047) {
                                    g[(a + 1) | 0] = (b & 63) | 128;
                                    g[a | 0] = (b >>> 6) | 192;
                                    return 2;
                                  }
                                  if (
                                    !((b & -8192) != 57344
                                      ? b >>> 0 >= 55296
                                      : 0)
                                  ) {
                                    g[(a + 2) | 0] = (b & 63) | 128;
                                    g[a | 0] = (b >>> 12) | 224;
                                    g[(a + 1) | 0] = ((b >>> 6) & 63) | 128;
                                    return 3;
                                  }
                                  if ((b + -65536) >>> 0 <= 1048575) {
                                    g[(a + 3) | 0] = (b & 63) | 128;
                                    g[a | 0] = (b >>> 18) | 240;
                                    g[(a + 2) | 0] = ((b >>> 6) & 63) | 128;
                                    g[(a + 1) | 0] = ((b >>> 12) & 63) | 128;
                                    return 4;
                                  }
                                }
                                i[3790] = 25;
                                a = -1;
                              } else {
                                a = 1;
                              }
                              return a;
                            }
                            g[a | 0] = b;
                            return 1;
                          }
                          function Hb(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            e = (H - 48) | 0;
                            H = e;
                            a: {
                              if (i[(a + 24) >> 2] >= (c | 0)) {
                                break a;
                              }
                              i[(e + 32) >> 2] = 5708;
                              d = i[3524];
                              Y(d, 5956, (e + 32) | 0);
                              if (i[(a + 16) >> 2]) {
                                f = Oa(i[a >> 2], c);
                                if (f) {
                                  i[a >> 2] = f;
                                  i[(a + 24) >> 2] = c;
                                  break a;
                                }
                                c = i[(a + 24) >> 2];
                                i[(e + 16) >> 2] = 5747;
                                Y(d, 5974, (e + 16) | 0);
                                break a;
                              }
                              i[e >> 2] = 5795;
                              Y(d, 5974, e);
                              c = i[(a + 24) >> 2];
                            }
                            if ((c | 0) >= 1) {
                              d = 0;
                              while (1) {
                                g[(i[a >> 2] + d) | 0] = j[(b + d) | 0];
                                d = (d + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i[(a + 20) >> 2] = 0;
                            i[(a + 8) >> 2] = 0;
                            i[(a + 12) >> 2] = 0;
                            i[(a + 4) >> 2] = c << 3;
                            H = (e + 48) | 0;
                          }
                          function Ta(a, b) {
                            var c = 0;
                            c = (b | 0) != 0;
                            a: {
                              b: {
                                c: {
                                  if (!b | !(a & 3)) {
                                    break c;
                                  }
                                  while (1) {
                                    if (!j[a | 0]) {
                                      break b;
                                    }
                                    a = (a + 1) | 0;
                                    b = (b + -1) | 0;
                                    c = (b | 0) != 0;
                                    if (!b) {
                                      break c;
                                    }
                                    if (a & 3) {
                                      continue;
                                    }
                                    break;
                                  }
                                }
                                if (!c) {
                                  break a;
                                }
                              }
                              d: {
                                if (!j[a | 0] | (b >>> 0 < 4)) {
                                  break d;
                                }
                                while (1) {
                                  c = i[a >> 2];
                                  if (
                                    (c ^ -1) &
                                    (c + -16843009) &
                                    -2139062144
                                  ) {
                                    break d;
                                  }
                                  a = (a + 4) | 0;
                                  b = (b + -4) | 0;
                                  if (b >>> 0 > 3) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              if (!b) {
                                break a;
                              }
                              while (1) {
                                if (!j[a | 0]) {
                                  return a;
                                }
                                a = (a + 1) | 0;
                                b = (b + -1) | 0;
                                if (b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return 0;
                          }
                          function ga(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              g = 0,
                              i = 0,
                              j = 0;
                            if (h[a >> 1] < (c | 0)) {
                              h[a >> 1] = c;
                            }
                            g = (b + -1) | 0;
                            e = ((g << 1) + a) | 0;
                            d = ((25736 - c) << 16) >> 16;
                            if (h[e >> 1] > (d | 0)) {
                              h[e >> 1] = d;
                            }
                            if ((b | 0) >= 3) {
                              d = k[a >> 1];
                              e = k[(a + 2) >> 1];
                              b = 1;
                              while (1) {
                                i = ((b << 1) + a) | 0;
                                f = (((d << 16) >> 16) + c) | 0;
                                d = (e << 16) >> 16;
                                if ((f | 0) > (d | 0)) {
                                  h[i >> 1] = f;
                                  d = (f << 16) >> 16;
                                  e = f;
                                }
                                b = (b + 1) | 0;
                                f = h[((b << 1) + a) >> 1];
                                j = (f - c) | 0;
                                if ((j | 0) < (d | 0)) {
                                  e = ((d >> 1) + ((j >>> 1) | 0)) | 0;
                                  h[i >> 1] = e;
                                }
                                d = e;
                                e = f;
                                if ((b | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function xa(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0,
                              h = 0;
                            d = i[(c + 16) >> 2];
                            a: {
                              if (!d) {
                                if (Ma(c)) {
                                  break a;
                                }
                                d = i[(c + 16) >> 2];
                              }
                              f = i[(c + 20) >> 2];
                              if ((d - f) >>> 0 < b >>> 0) {
                                return J[i[(c + 36) >> 2]](c, a, b) | 0;
                              }
                              b: {
                                if (g[(c + 75) | 0] < 0) {
                                  break b;
                                }
                                e = b;
                                while (1) {
                                  d = e;
                                  if (!d) {
                                    break b;
                                  }
                                  e = (d + -1) | 0;
                                  if (j[(e + a) | 0] != 10) {
                                    continue;
                                  }
                                  break;
                                }
                                e = J[i[(c + 36) >> 2]](c, a, d) | 0;
                                if (e >>> 0 < d >>> 0) {
                                  break a;
                                }
                                b = (b - d) | 0;
                                a = (a + d) | 0;
                                f = i[(c + 20) >> 2];
                                h = d;
                              }
                              X(f, a, b);
                              i[(c + 20) >> 2] = i[(c + 20) >> 2] + b;
                              e = (b + h) | 0;
                            }
                            return e;
                          }
                          function cc(a, b) {
                            a: {
                              if ((b | 0) >= 1024) {
                                a = a * 8.98846567431158e307;
                                if ((b | 0) < 2047) {
                                  b = (b + -1023) | 0;
                                  break a;
                                }
                                a = a * 8.98846567431158e307;
                                b = (((b | 0) < 3069 ? b : 3069) + -2046) | 0;
                                break a;
                              }
                              if ((b | 0) > -1023) {
                                break a;
                              }
                              a = a * 2.2250738585072014e-308;
                              if ((b | 0) > -2045) {
                                b = (b + 1022) | 0;
                                break a;
                              }
                              a = a * 2.2250738585072014e-308;
                              b = (((b | 0) > -3066 ? b : -3066) + 2044) | 0;
                            }
                            lc(0, 0);
                            lc(1, (b + 1023) << 20);
                            return a * +mc();
                          }
                          function db(a, b, c, d, e) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            var f = 0;
                            f = (H - 96) | 0;
                            H = f;
                            i[(f + 92) >> 2] = a;
                            a: {
                              if (d) {
                                i[(e + 36) >> 2] = J[i[2735]](10920);
                                Ba((f + 8) | 0, 8e3, 10920);
                                break a;
                              }
                              i[(e + 36) >> 2] = J[i[2902]](11588);
                              Ba((f + 8) | 0, 16e3, 11588);
                            }
                            a = i[(e + 36) >> 2];
                            J[i[(i[a >> 2] + 44) >> 2]](a, 4, (f + 92) | 0) | 0;
                            Fa(e);
                            a = X(T(80), (f + 8) | 0, 80);
                            i[(f + 4) >> 2] = 80;
                            d = a;
                            a = i[(f + 4) >> 2];
                            X(b, d, (a | 0) > (c | 0) ? c : a);
                            H = (f + 96) | 0;
                            return a | 0;
                          }
                          function wa(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              j = 0;
                            g = 1;
                            if ((d | 0) > 0) {
                              while (1) {
                                j = i[((f << 2) + a) >> 2];
                                e = j >> 31;
                                e = e ^ (e + j);
                                g = (e | 0) < (g | 0) ? g : e;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            f = 0;
                            e = 0;
                            if ((g | 0) > (c | 0)) {
                              while (1) {
                                e = (e + 1) | 0;
                                g = g >> 1;
                                if ((g | 0) > (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if ((d | 0) > 0) {
                              while (1) {
                                h[((f << 1) + b) >> 1] =
                                  i[((f << 2) + a) >> 2] >> e;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return e;
                          }
                          function Ob(
                            a,
                            b,
                            c,
                            d,
                            e,
                            f,
                            g,
                            j,
                            k,
                            l,
                            m,
                            n,
                            p,
                            q,
                            r
                          ) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            g = g | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            p = p | 0;
                            q = q | 0;
                            r = r | 0;
                            d = (e | 0) < 63 ? e : 63;
                            if ((g | 0) >= 1) {
                              f = (d << 23) >> 16;
                              e = 0;
                              while (1) {
                                l = o(h[(((e - c) << 1) + a) >> 1], f);
                                i[((e << 2) + b) >> 2] = l;
                                h[((e << 1) + a) >> 1] = (l + 4096) >>> 13;
                                e = (e + 1) | 0;
                                if ((g | 0) != (e | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i[j >> 2] = c;
                            h[(k + 2) >> 1] = d;
                            h[k >> 1] = 0;
                            h[(k + 4) >> 1] = 0;
                          }
                          function Gb(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0;
                            c = i[(a + 4) >> 2];
                            d = i[(a + 8) >> 2];
                            e = i[(a + 12) >> 2];
                            a: {
                              if (!e) {
                                break a;
                              }
                              W(a, 0, 1);
                              if (!i[(a + 12) >> 2]) {
                                break a;
                              }
                              while (1) {
                                W(a, 1, 1);
                                if (i[(a + 12) >> 2]) {
                                  continue;
                                }
                                break;
                              }
                            }
                            i[(a + 8) >> 2] = d;
                            i[(a + 12) >> 2] = e;
                            i[(a + 4) >> 2] = c;
                            c = (c + 7) >> 3;
                            d = (c | 0) < 200 ? c : 200;
                            if ((d | 0) >= 1) {
                              c = 0;
                              while (1) {
                                g[(b + c) | 0] = j[(i[a >> 2] + c) | 0];
                                c = (c + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return d;
                          }
                          function Eb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0;
                            d = (H - 16) | 0;
                            H = d;
                            a: {
                              b: {
                                switch (b | 0) {
                                  case 0:
                                    i[c >> 2] = i[(a + 4) >> 2] << 1;
                                    a = 0;
                                    break a;
                                  case 1:
                                    b = i[c >> 2];
                                    if (!b) {
                                      i[c >> 2] = 4;
                                      a = 0;
                                      break a;
                                    }
                                    a = i[((((b << 2) + a) | 0) + 24) >> 2];
                                    if (!a) {
                                      i[c >> 2] = -1;
                                      a = 0;
                                      break a;
                                    }
                                    i[c >> 2] = i[(a + 52) >> 2];
                                    a = 0;
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 11821;
                              Y(i[3524], 12120, d);
                              a = -1;
                            }
                            H = (d + 16) | 0;
                            return a | 0;
                          }
                          function Zb(a) {
                            var b = 0,
                              c = 0,
                              d = 0;
                            a: {
                              b: {
                                b = a;
                                if (!(b & 3)) {
                                  break b;
                                }
                                if (!j[a | 0]) {
                                  return 0;
                                }
                                while (1) {
                                  b = (b + 1) | 0;
                                  if (!(b & 3)) {
                                    break b;
                                  }
                                  if (j[b | 0]) {
                                    continue;
                                  }
                                  break;
                                }
                                break a;
                              }
                              while (1) {
                                c = b;
                                b = (b + 4) | 0;
                                d = i[c >> 2];
                                if (
                                  !((d ^ -1) & (d + -16843009) & -2139062144)
                                ) {
                                  continue;
                                }
                                break;
                              }
                              if (!(d & 255)) {
                                return (c - a) | 0;
                              }
                              while (1) {
                                d = j[(c + 1) | 0];
                                b = (c + 1) | 0;
                                c = b;
                                if (d) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return (b - a) | 0;
                          }
                          function Mb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0;
                            d = (H - 16) | 0;
                            H = d;
                            a: {
                              b: {
                                switch (b | 0) {
                                  case 0:
                                    i[c >> 2] = i[a >> 2];
                                    a = 0;
                                    break a;
                                  case 1:
                                    b = i[c >> 2];
                                    if (!b) {
                                      i[c >> 2] = 5;
                                      a = 0;
                                      break a;
                                    }
                                    a = i[((((b << 2) + a) | 0) + 28) >> 2];
                                    if (!a) {
                                      i[c >> 2] = -1;
                                      a = 0;
                                      break a;
                                    }
                                    i[c >> 2] = i[(a + 52) >> 2];
                                    a = 0;
                                    break a;
                                  default:
                                    break b;
                                }
                              }
                              i[(d + 4) >> 2] = b;
                              i[d >> 2] = 5040;
                              Y(i[3524], 5072, d);
                              a = -1;
                            }
                            H = (d + 16) | 0;
                            return a | 0;
                          }
                          function V(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0,
                              h = 0,
                              j = 0;
                            c = i[(a + 12) >> 2];
                            d = i[(a + 8) >> 2];
                            if (
                              ((((c + b) | 0) + (d << 3)) | 0) >
                              i[(a + 4) >> 2]
                            ) {
                              i[(a + 20) >> 2] = 1;
                              return 0;
                            }
                            if (!(i[(a + 20) >> 2] | !b)) {
                              j = i[a >> 2];
                              while (1) {
                                f = g[(d + j) | 0];
                                h = (c + 1) | 0;
                                i[(a + 12) >> 2] = h;
                                f = (f >>> (7 - c)) & 1;
                                e = e << 1;
                                if ((h | 0) != 8) {
                                  c = h;
                                } else {
                                  i[(a + 12) >> 2] = 0;
                                  d = (d + 1) | 0;
                                  i[(a + 8) >> 2] = d;
                                  c = 0;
                                }
                                e = e | f;
                                b = (b + -1) | 0;
                                if (b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return e;
                          }
                          function Lb(a) {
                            i[(a + 8) >> 2] = 1065353216;
                            i[a >> 2] = 1036831949;
                            i[(a + 4) >> 2] = 0;
                            i[(a + 52) >> 2] = 1059982050;
                            i[(a + 56) >> 2] = 1028443341;
                            i[(a + 36) >> 2] = 0;
                            i[(a + 40) >> 2] = 0;
                            i[(a + 60) >> 2] = 0;
                            i[(a + 44) >> 2] = 0;
                            i[(a + 48) >> 2] = 1096387994;
                            i[(a + 12) >> 2] = 1091252534;
                            i[(a + 16) >> 2] = 1091252534;
                            i[(a + 28) >> 2] = 1091252534;
                            i[(a + 32) >> 2] = 0;
                            i[(a + 20) >> 2] = 1091252534;
                            i[(a + 24) >> 2] = 1091252534;
                          }
                          function Rb(a, b, c, d, e, f, g, j, k, l, m, n, o) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            g = g | 0;
                            j = j | 0;
                            k = k | 0;
                            l = l | 0;
                            m = m | 0;
                            n = n | 0;
                            o = o | 0;
                            e = b;
                            k = c;
                            b = ((m & 1) + m) | 0;
                            c = g << 1;
                            Vb(a, e, k, d, b, g, f, (c + b) | 0);
                            if ((g | 0) >= 1) {
                              m = 0;
                              while (1) {
                                d = ((m << 2) + j) | 0;
                                i[d >> 2] =
                                  i[d >> 2] + (h[(b + (m << 1)) >> 1] << 8);
                                m = (m + 1) | 0;
                                if ((m | 0) != (g | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            U(a, 0, c);
                          }
                          function Ua(a, b, c) {
                            var d = 0,
                              e = 0,
                              f = 0;
                            a: {
                              if (
                                (((b | 0) == 1) & (a >>> 0 < 0)) |
                                (b >>> 0 < 1)
                              ) {
                                d = a;
                                break a;
                              }
                              while (1) {
                                d = hc(a, b);
                                e = I;
                                f = e;
                                c = (c + -1) | 0;
                                g[c | 0] = (a - gc(d, e)) | 48;
                                e = b >>> 0 > 9;
                                a = d;
                                b = f;
                                if (e) {
                                  continue;
                                }
                                break;
                              }
                            }
                            if (d) {
                              while (1) {
                                c = (c + -1) | 0;
                                a = ((d >>> 0) / 10) | 0;
                                g[c | 0] = (d - o(a, 10)) | 48;
                                b = d >>> 0 > 9;
                                d = a;
                                if (b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function bb(a, b, c, d, e, f) {
                            var g = 0,
                              i = p(0),
                              j = 0;
                            g = H;
                            j = g;
                            g = (g - (((e << 2) + 15) & -16)) | 0;
                            H = g;
                            Hb(b, c, f);
                            if ((Nb(a, b, g) | 0) >= 0) {
                              if ((e | 0) >= 1) {
                                b = 0;
                                while (1) {
                                  a = ((b << 1) + d) | 0;
                                  i = m[(g + (b << 2)) >> 2];
                                  a: {
                                    if (p(q(i)) < p(2147483648)) {
                                      c = ~~i;
                                      break a;
                                    }
                                    c = -2147483648;
                                  }
                                  h[a >> 1] = c;
                                  b = (b + 1) | 0;
                                  if ((e | 0) != (b | 0)) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                            }
                            H = j;
                          }
                          function eb(a) {
                            var b = 0,
                              c = 0;
                            b = (H - 32) | 0;
                            H = b;
                            a: {
                              b: {
                                if (
                                  (j[a | 0] != 83) |
                                  (j[(a + 1) | 0] != 112) |
                                  ((j[(a + 2) | 0] != 101) |
                                    (j[(a + 3) | 0] != 101))
                                ) {
                                  break b;
                                }
                                if (
                                  (j[(a + 4) | 0] != 120) |
                                  (j[(a + 5) | 0] != 32) |
                                  ((j[(a + 6) | 0] != 32) |
                                    (j[(a + 7) | 0] != 32))
                                ) {
                                  break b;
                                }
                                c = T(80);
                                X(c, a, 80);
                                break a;
                              }
                              i[(b + 16) >> 2] = 13233;
                              Y(i[3524], 13305, (b + 16) | 0);
                            }
                            H = (b + 32) | 0;
                            return c;
                          }
                          function fa(a, b, c, d, e, f) {
                            var g = 0,
                              i = 0;
                            e =
                              ((((e << 14) + 16384) | 0) / ((f << 16) >> 16)) |
                              0;
                            if ((d | 0) >= 1) {
                              e = e << 16;
                              g = e >> 16;
                              i = (1073741824 - e) >> 16;
                              e = 0;
                              while (1) {
                                f = e << 1;
                                h[(f + c) >> 1] =
                                  ((o(h[(b + f) >> 1], g) - -8192) >>> 14) +
                                  ((o(h[(a + f) >> 1], i) - -8192) >>> 14);
                                e = (e + 1) | 0;
                                if ((e | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function bc(a) {
                            var b = 0,
                              c = 0,
                              d = 0;
                            b = (H - 16) | 0;
                            H = b;
                            g[(b + 15) | 0] = 10;
                            c = i[(a + 16) >> 2];
                            a: {
                              if (!c) {
                                if (Ma(a)) {
                                  break a;
                                }
                                c = i[(a + 16) >> 2];
                              }
                              d = i[(a + 20) >> 2];
                              if (
                                !(
                                  (g[(a + 75) | 0] == 10) |
                                  (d >>> 0 >= c >>> 0)
                                )
                              ) {
                                i[(a + 20) >> 2] = d + 1;
                                g[d | 0] = 10;
                                break a;
                              }
                              if (
                                (J[i[(a + 36) >> 2]](a, (b + 15) | 0, 1) | 0) !=
                                1
                              ) {
                                break a;
                              }
                            }
                            H = (b + 16) | 0;
                          }
                          function _a(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            var e = 0;
                            e = (H - 16) | 0;
                            H = e;
                            a =
                              B(
                                i[(a + 60) >> 2],
                                b | 0,
                                c | 0,
                                d & 255,
                                (e + 8) | 0
                              ) | 0;
                            b = 0;
                            a: {
                              if (!a) {
                                break a;
                              }
                              i[3790] = a;
                              b = -1;
                            }
                            b: {
                              if (!b) {
                                b = i[(e + 12) >> 2];
                                a = i[(e + 8) >> 2];
                                break b;
                              }
                              i[(e + 8) >> 2] = -1;
                              i[(e + 12) >> 2] = -1;
                              b = -1;
                              a = -1;
                            }
                            H = (e + 16) | 0;
                            I = b;
                            return a | 0;
                          }
                          function Nb(a, b, c) {
                            var d = 0,
                              e = 0;
                            d = (H - 1296) | 0;
                            H = d;
                            J[i[(i[a >> 2] + 48) >> 2]](a, 3, (d + 1292) | 0) |
                              0;
                            b = J[i[(i[a >> 2] + 40) >> 2]](a, b, d) | 0;
                            e = i[(d + 1292) >> 2];
                            if ((e | 0) >= 1) {
                              a = 0;
                              while (1) {
                                m[((a << 2) + c) >> 2] = h[((a << 1) + d) >> 1];
                                a = (a + 1) | 0;
                                if ((e | 0) != (a | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                            H = (d + 1296) | 0;
                            return b;
                          }
                          function gb(a, b, c) {
                            var d = 0,
                              e = 0;
                            d = b;
                            b = V(a, 4);
                            d = (d + o(b, 20)) | 0;
                            e = i[(d + 4) >> 2];
                            if (e) {
                              return J[e | 0](a, c, i[(d + 8) >> 2]) | 0;
                            }
                            c = 1;
                            a: {
                              if ((b | 0) < 2) {
                                break a;
                              }
                              c = 4;
                              if ((b | 0) < 8) {
                                break a;
                              }
                              c = 8;
                              if ((b | 0) < 10) {
                                break a;
                              }
                              c = 16;
                              if ((b | 0) < 12) {
                                break a;
                              }
                              c = (b | 0) < 14 ? 32 : 64;
                            }
                            oa(a, c);
                            return 0;
                          }
                          function Oa(a, b) {
                            var c = 0,
                              d = 0;
                            if (!a) {
                              return na(b);
                            }
                            if (b >>> 0 >= 4294967232) {
                              i[3790] = 48;
                              return 0;
                            }
                            c = dc(
                              (a + -8) | 0,
                              b >>> 0 < 11 ? 16 : (b + 11) & -8
                            );
                            if (c) {
                              return (c + 8) | 0;
                            }
                            c = na(b);
                            if (!c) {
                              return 0;
                            }
                            d = i[(a + -4) >> 2];
                            d = ((d & 3 ? -4 : -8) + (d & -8)) | 0;
                            X(c, a, d >>> 0 < b >>> 0 ? d : b);
                            S(a);
                            return c;
                          }
                          function Cb(a) {
                            a = a | 0;
                            S(i[(a + 64) >> 2]);
                            S(i[(a + 68) >> 2]);
                            S(i[(a + 72) >> 2]);
                            S(i[(a + 100) >> 2]);
                            S(i[(a + 80) >> 2]);
                            S(i[(a + 96) >> 2]);
                            S(i[(a + 104) >> 2]);
                            S(i[(a + 108) >> 2]);
                            S(i[(a + 112) >> 2]);
                            S(i[(a + 116) >> 2]);
                            S(i[(a + 120) >> 2]);
                            S(i[(a + 132) >> 2]);
                            S(i[(a + 52) >> 2]);
                            S(i[(a + 140) >> 2]);
                            S(a);
                          }
                          function nb(a) {
                            a = a | 0;
                            var b = 0;
                            b = i[(a + 4) >> 2];
                            J[i[(i[b >> 2] + 24) >> 2]](b);
                            S(i[(a + 48) >> 2]);
                            S(i[(a + 52) >> 2]);
                            S(i[(a + 56) >> 2]);
                            S(i[(a + 68) >> 2]);
                            S(i[(a + 72) >> 2]);
                            S(i[(a + 76) >> 2]);
                            S(i[(a + 92) >> 2]);
                            S(i[(a + 96) >> 2]);
                            S(i[(a + 80) >> 2]);
                            S(i[(a + 84) >> 2]);
                            S(i[(a + 88) >> 2]);
                            S(a);
                          }
                          function Ib(a, b, c, d, e, f) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            e = e | 0;
                            f = f | 0;
                            if ((c | 0) >= 1) {
                              b = 0;
                              while (1) {
                                d = (o(i[f >> 2], 1664525) + 1013904223) | 0;
                                i[f >> 2] = d;
                                i[((b << 2) + a) >> 2] =
                                  ((((d >> 16) - (d >> 19)) | 0) - -8192) &
                                  -16384;
                                b = (b + 1) | 0;
                                if ((c | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function vb(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0,
                              f = 0;
                            if ((b | 0) >= 1) {
                              while (1) {
                                e = ((c << 2) + a) | 0;
                                d = i[e >> 2];
                                f = (d | 0) < -262144e3;
                                if (!((d | 0) <= 262144e3 ? !f : 0)) {
                                  i[e >> 2] = f
                                    ? -262144e3
                                    : (d | 0) > 262144e3
                                    ? 262144e3
                                    : 0;
                                }
                                c = (c + 1) | 0;
                                if ((c | 0) != (b | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function cb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            var d = 0;
                            g[i[c >> 2]] = 0;
                            i[(c + 20) >> 2] = 0;
                            i[(c + 12) >> 2] = 0;
                            i[(c + 4) >> 2] = 0;
                            i[(c + 8) >> 2] = 0;
                            d = i[(c + 36) >> 2];
                            J[i[(i[d >> 2] + 28) >> 2]](d, a, c) | 0;
                            d = b;
                            a = Gb(c, (b + 2) | 0);
                            b = a & 65535;
                            h[d >> 1] = ((b << 24) | (b << 8)) >>> 16;
                            return a | 0;
                          }
                          function ma(a) {
                            var b = 0,
                              c = 0;
                            b = i[3652];
                            b;
                            c = a;
                            a = Zb(a);
                            a: {
                              if (
                                (((ac(c, a, b) | 0) != (a | 0) ? -1 : 0) | 0) <
                                0
                              ) {
                                break a;
                              }
                              b: {
                                if (j[(b + 75) | 0] == 10) {
                                  break b;
                                }
                                a = i[(b + 20) >> 2];
                                if (a >>> 0 >= l[(b + 16) >> 2]) {
                                  break b;
                                }
                                i[(b + 20) >> 2] = a + 1;
                                g[a | 0] = 10;
                                break a;
                              }
                              bc(b);
                            }
                          }
                          function $(a, b, c) {
                            var d = 0;
                            c = c >> 2;
                            if (c) {
                              while (1) {
                                d =
                                  (((((((o(h[(b + 2) >> 1], h[(a + 2) >> 1]) +
                                    o(h[b >> 1], h[a >> 1])) |
                                    0) +
                                    o(h[(b + 4) >> 1], h[(a + 4) >> 1])) |
                                    0) +
                                    o(h[(b + 6) >> 1], h[(a + 6) >> 1])) >>
                                    6) +
                                    d) |
                                  0;
                                b = (b + 8) | 0;
                                a = (a + 8) | 0;
                                c = (c + -1) | 0;
                                if (c) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return d;
                          }
                          function ea(a, b, c, d, e) {
                            var f = 0;
                            f = (H - 256) | 0;
                            H = f;
                            if (!((e & 73728) | ((c | 0) <= (d | 0)))) {
                              c = (c - d) | 0;
                              d = c >>> 0 < 256;
                              U(f, b & 255, d ? c : 256);
                              if (!d) {
                                while (1) {
                                  ja(a, f, 256);
                                  c = (c + -256) | 0;
                                  if (c >>> 0 > 255) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              ja(a, f, c);
                            }
                            H = (f + 256) | 0;
                          }
                          function da(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0,
                              h = 0;
                            if ((d | 0) >= 1) {
                              g = c & 16383;
                              h = (c << 2) >> 16;
                              c = 0;
                              while (1) {
                                e = c << 2;
                                f = (i[(e + a) >> 2] << 9) >> 16;
                                i[(b + e) >> 2] =
                                  (o(f, h) + (o(f, g) >> 14)) << 7;
                                c = (c + 1) | 0;
                                if ((d | 0) != (c | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function Ma(a) {
                            var b = 0;
                            b = j[(a + 74) | 0];
                            g[(a + 74) | 0] = (b + -1) | b;
                            b = i[a >> 2];
                            if (b & 8) {
                              i[a >> 2] = b | 32;
                              return -1;
                            }
                            i[(a + 4) >> 2] = 0;
                            i[(a + 8) >> 2] = 0;
                            b = i[(a + 44) >> 2];
                            i[(a + 28) >> 2] = b;
                            i[(a + 20) >> 2] = b;
                            i[(a + 16) >> 2] = b + i[(a + 48) >> 2];
                            return 0;
                          }
                          function ca(a, b, c, d) {
                            var e = 0,
                              f = 0,
                              g = 0;
                            if ((d | 0) >= 1) {
                              e = a;
                              while (1) {
                                g = f << 1;
                                e = (e << 16) >> 16;
                                h[(g + c) >> 1] =
                                  (o(e, h[(b + g) >> 1]) + 16384) >>> 15;
                                e = ((o(a, e) + 16384) >>> 15) | 0;
                                f = (f + 1) | 0;
                                if ((f | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                            }
                          }
                          function kb(a) {
                            a = a | 0;
                            var b = 0;
                            b = i[(a + 4) >> 2];
                            J[i[(i[b >> 2] + 36) >> 2]](b);
                            S(i[(a + 44) >> 2]);
                            S(i[(a + 48) >> 2]);
                            S(i[(a + 52) >> 2]);
                            S(i[(a + 56) >> 2]);
                            S(i[(a + 60) >> 2]);
                            S(i[(a + 68) >> 2]);
                            S(i[(a + 72) >> 2]);
                            S(i[(a + 64) >> 2]);
                            S(a);
                          }
                          function ia(a) {
                            var b = 0,
                              c = 0;
                            b = i[3750];
                            c = (a + 3) & -4;
                            a = (b + c) | 0;
                            a: {
                              if (a >>> 0 <= b >>> 0 ? (c | 0) >= 1 : 0) {
                                break a;
                              }
                              if (a >>> 0 > (pc() << 16) >>> 0) {
                                if (!(D(a | 0) | 0)) {
                                  break a;
                                }
                              }
                              i[3750] = a;
                              return b;
                            }
                            i[3790] = 48;
                            return -1;
                          }
                          function za(a) {
                            var b = 0,
                              c = 0,
                              d = 0;
                            if ((g[i[a >> 2]] + -48) >>> 0 < 10) {
                              while (1) {
                                b = i[a >> 2];
                                d = g[b | 0];
                                i[a >> 2] = b + 1;
                                c = (((o(c, 10) + d) | 0) + -48) | 0;
                                if ((g[(b + 1) | 0] + -48) >>> 0 < 10) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function gc(a, b) {
                            var c = 0,
                              d = 0,
                              e = 0;
                            c = (a >>> 16) | 0;
                            e = o(c, 0);
                            d = o(c, 10);
                            c = o(a & 65535, 10);
                            d = (d + ((c >>> 16) | 0)) | 0;
                            a = d & 65535;
                            I = (e + o(b, 10) + (d >>> 16) + (a >>> 16)) | 0;
                            return (c & 65535) | (a << 16);
                          }
                          function pa(a, b, c) {
                            var d = 0;
                            a: {
                              if ((c | 0) < 2) {
                                break a;
                              }
                              c = (c + -1) | 0;
                              while (1) {
                                if (h[b >> 1] >= (a | 0)) {
                                  break a;
                                }
                                b = (b + 2) | 0;
                                d = (d + 1) | 0;
                                if ((c | 0) != (d | 0)) {
                                  continue;
                                }
                                break;
                              }
                              d = c;
                            }
                            return d;
                          }
                          function oa(a, b) {
                            var c = 0;
                            b = (i[(a + 12) >> 2] + b) | 0;
                            c = i[(a + 8) >> 2];
                            if (
                              !(i[(a + 20) >> 2]
                                ? 0
                                : ((b + (c << 3)) | 0) <= i[(a + 4) >> 2])
                            ) {
                              i[(a + 20) >> 2] = 1;
                              return;
                            }
                            i[(a + 12) >> 2] = b & 7;
                            i[(a + 8) >> 2] = (b >> 3) + c;
                          }
                          function Fb(a) {
                            var b = 0,
                              c = 0;
                            b = i[(a + 12) >> 2];
                            c = i[(a + 8) >> 2];
                            if (((b + (c << 3)) | 0) >= i[(a + 4) >> 2]) {
                              i[(a + 20) >> 2] = 1;
                              return 0;
                            }
                            return i[(a + 20) >> 2]
                              ? 0
                              : (g[(i[a >> 2] + c) | 0] >>> (7 - b)) & 1;
                          }
                          function T(a) {
                            var b = 0,
                              c = 0;
                            b = 0;
                            a: {
                              if (!a) {
                                break a;
                              }
                              c = a;
                              b = a;
                              if ((a | 1) >>> 0 < 65536) {
                                break a;
                              }
                              b = c;
                            }
                            c = b;
                            a = na(b);
                            if (!(!a | !(j[(a + -4) | 0] & 3))) {
                              U(a, 0, c);
                            }
                            return a;
                          }
                          function Wa(a, b, c, d) {
                            if (a | b) {
                              while (1) {
                                c = (c + -1) | 0;
                                g[c | 0] = j[((a & 15) + 14592) | 0] | d;
                                a = ((b & 15) << 28) | (a >>> 4);
                                b = (b >>> 4) | 0;
                                if (a | b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function Jb(a) {
                            var b = 0,
                              c = 0;
                            c = 12144;
                            a: {
                              while (1) {
                                if (i[c >> 2] >= (a | 0)) {
                                  break a;
                                }
                                c = (c + 4) | 0;
                                b = (b + 1) | 0;
                                if ((b | 0) != 31) {
                                  continue;
                                }
                                break;
                              }
                              b = 31;
                            }
                            return b;
                          }
                          function Fa(a) {
                            var b = 0;
                            b = T(2e3);
                            i[a >> 2] = b;
                            if (b) {
                              i[(a + 20) >> 2] = 0;
                              i[(a + 24) >> 2] = 2e3;
                              i[(a + 12) >> 2] = 0;
                              i[(a + 16) >> 2] = 1;
                              i[(a + 4) >> 2] = 0;
                              i[(a + 8) >> 2] = 0;
                            }
                          }
                          function Pa(a) {
                            var b = 0;
                            a = a ? a : 1;
                            a: {
                              while (1) {
                                b = na(a);
                                if (b) {
                                  break a;
                                }
                                b = i[3807];
                                if (b) {
                                  J[b | 0]();
                                  continue;
                                }
                                break;
                              }
                              E();
                              x();
                            }
                            return b;
                          }
                          function Va(a, b, c) {
                            if (a | b) {
                              while (1) {
                                c = (c + -1) | 0;
                                g[c | 0] = (a & 7) | 48;
                                a = ((b & 7) << 29) | (a >>> 3);
                                b = (b >>> 3) | 0;
                                if (a | b) {
                                  continue;
                                }
                                break;
                              }
                            }
                            return c;
                          }
                          function zb(a) {
                            a = a | 0;
                            S(i[(a + 44) >> 2]);
                            S(i[(a + 48) >> 2]);
                            S(i[(a + 60) >> 2]);
                            S(i[(a + 56) >> 2]);
                            S(i[(a + 64) >> 2]);
                            S(i[(a + 76) >> 2]);
                            S(a);
                          }
                          function ac(a, b, c) {
                            a: {
                              if (i[(c + 76) >> 2] <= -1) {
                                a = xa(a, b, c);
                                break a;
                              }
                              a = xa(a, b, c);
                            }
                            if ((a | 0) == (b | 0)) {
                              return b;
                            }
                            return a;
                          }
                          function la(a, b) {
                            var c = 0;
                            c = (H - 16) | 0;
                            H = c;
                            i[(c + 8) >> 2] = a;
                            i[(c + 4) >> 2] = b;
                            i[c >> 2] = 12377;
                            Y(i[3524], 12767, c);
                            G(1);
                            x();
                          }
                          function ic(a) {
                            var b = 0;
                            b = a & 31;
                            a = (0 - a) & 31;
                            return (
                              (((-1 >>> b) & -2) << b) |
                              (((-1 << a) & -2) >>> a)
                            );
                          }

                          function Y(a, b, c) {
                            var d = 0;
                            d = (H - 16) | 0;
                            H = d;
                            i[(d + 12) >> 2] = c;
                            Xa(a, b, c);
                            H = (d + 16) | 0;
                          }
                          function fb(a, b, c) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            oa(a, (V(a, 4) << 3) | 5);
                            return 0;
                          }
                          function _b(a, b, c, d) {
                            a = a | 0;
                            b = b | 0;
                            c = c | 0;
                            d = d | 0;
                            I = 0;
                            return 0;
                          }
                          function Qa(a, b) {
                            if (!a) {
                              return 0;
                            }
                            return ec(a, b);
                          }
                          function ja(a, b, c) {
                            if (!(j[a | 0] & 32)) {
                              xa(b, c, a);
                            }
                          }
                          function Wb(a) {
                            a = a | 0;
                            a = (H - a) & -16;
                            H = a;
                            return a | 0;
                          }
                          function Za(a) {
                            a = a | 0;
                            return F(i[(a + 60) >> 2]) | 0;
                          }
                          function $b(a) {
                            a = a | 0;
                            return 0;
                          }
                          function Yb() {
                            return H | 0;
                          }
                          function Xb(a) {
                            a = a | 0;
                            H = a;
                          }
                          function Sa() {}
                          // EMSCRIPTEN_END_FUNCS
                          var J = jc([
                            null,
                            Mb,
                            Db,
                            Cb,
                            Bb,
                            Ab,
                            zb,
                            yb,
                            xb,
                            wb,
                            sb,
                            rb,
                            Pb,
                            Ob,
                            Rb,
                            Ib,
                            Sb,
                            Qb,
                            fc,
                            Tb,
                            ub,
                            tb,
                            Eb,
                            ob,
                            nb,
                            mb,
                            lb,
                            kb,
                            jb,
                            ib,
                            hb,
                            qb,
                            pb,
                            fb,
                            Za,
                            Ya,
                            _a,
                            $b,
                            _b,
                          ]);
                          function pc() {
                            return (f.byteLength / 65536) | 0;
                          }
                          return {
                            i: J,
                            j: Sa,
                            k: db,
                            l: cb,
                            m: ab,
                            n: Yb,
                            o: Xb,
                            p: Wb,
                            q: na,
                          };
                        }
                        var K = new Uint8Array(sc.buffer);
                        for (var L = new Uint8Array(123), M = 25; M >= 0; --M) {
                          L[48 + M] = 52 + M;
                          L[65 + M] = M;
                          L[97 + M] = 26 + M;
                        }
                        L[43] = 62;
                        L[47] = 63;
                        function qc(zc, Ac, Bc) {
                          var N,
                            O,
                            M = 0,
                            P = Ac,
                            Q = Bc.length,
                            R =
                              Ac +
                              ((Q * 3) >> 2) -
                              (Bc[Q - 2] == '=') -
                              (Bc[Q - 1] == '=');
                          for (; M < Q; M += 4) {
                            N = L[Bc.charCodeAt(M + 1)];
                            O = L[Bc.charCodeAt(M + 2)];
                            zc[P++] = (L[Bc.charCodeAt(M)] << 2) | (N >> 4);
                            if (P < R) zc[P++] = (N << 4) | (O >> 2);
                            if (P < R)
                              zc[P++] = (O << 6) | L[Bc.charCodeAt(M + 3)];
                          }
                        }
                        qc(
                          K,
                          1024,
                          'BxERGxkWDAT9ABzcJ+jxA/cP+wof5Asf6wn19f755w7qHwTyE/QO+wT5BPsJAP4q0fABCAAJF8cAHPUG4TfTA/sEAv4E+f0G/gf9DAUINvYI+fjo5+Xy+wgFLBcF9/X18/f0+OP46gbxA/T/+/0i/x3wEfwMAgEE/vwC/wv9zBwe9+AZLOzoBAb/'
                        );
                        qc(
                          K,
                          1174,
                          '5/YWHQ3z6vP8APzwCg/c6BwZ//1C3/XxBgADBP4FGOzRHRP+/P8A//4DAQj1BQXHHBwA8AT8DPr/Auw99xjq1h0GEQgEAr8PCAoFBgUDAv79BfcE+xcNF/3BA/v8+gD9F9zSCQUFCAQJ+wH9CgH6CvUY0R8W9A72Bgv5+QfhM/T6BwbvCfXsNO0D+vr4+xfXJQHrCvIIBwXx8Rcn5t8HAuDi6/gEDBEPDgvyCQ3gAvYf9vj4Bvz/CsAXBhQNBgjqECIHKs/kBRoE8SkiKSAhGBcOCCgiBOjX7fEN8yHKGBvUIRvx8RjtDtwO9xj0/CX7EN4FCiHxyvAMGQwBAgAD//z8CwLINhvsDfrS19/1+wcMDvL7CBQGAwT4+9YLCPIZ/gINC+on9wkF0/cH9wz5Iu+aBwLWEiP33gv7/gMWLszn96IIC/v7+wT53fk2BeADGPfqCEEl//Tp+vfkN98O/QISxCnvCPAR9QD1HeQlCcsh8vcH5/n1GuD4GOsW7RP2HfIAAAAAAAAAAPvMCikG4vwQIBbl6iD95P0D3QYRFxUIAgTT7w4X/OH1/Q4BE/UCPfgJ9Af2DP3oY9AXMtv76QAI8iPA+y7nDf/P7fEJIjIZC/r38Ozg3+DlCvgM8Tjy4CED9wFB9/f2/vrpCRED5A3gBP72BPBMDMwGDSH6BPL3/QHx8BwB8QsQCQTr29j6Fgzx6fLv8Pf29w3ZKQX3ENoZLtEEMfIR/gYSBfrf6iwy/gED+gcH/esm7iLy1zzzBhDoIxPz3BgD7/L2JCzU4/0DyvgMNxoE/vsC9RbpAhYB59lCzxX4/gryxBkGChvnEAX+9xrz7Dr+BzT3AgX88Rf/2hcIG/oA5fkn9vIaC9P0CfsiBN0KK+r1OPkUAQoB5gleC+Xy8wH1AA77+vb88fjXFfsB5PgW9yHp/Pz0JwT5A8RQCO8C+gz7AQkPGx8eGxc9LxoK+/j08wXuGfH88fUM/v7w/voYDAv8CQH3DtM5DBTdGgvAIPb2Kvz38CAYBwo09ccdAAgA+hHvyNgHFBIM+hAFB/8JAQodDBAN/hcHCf38+xLADTfnCfcYDucP9djiJQHtFvvhDf4AB/wQvQxC3Bj4EvHpEwDT+QQD8w0jBQ0hChsXAPn1K7Yk9AIF+AbfC/Dy+/n9Ed4b8Av3DyHhCPAH+vk/ye8L/xTSIuIGCRMc9wXo+On+H+3w+/HuABoSJfvx/hEF5RXfLAzl9xELGevh+Q0h+Of5B/YE+vcwrun4BgvpA/0x4xkfBA4QCfzuCuYDBdT3CdHJDwkcAQT9Lgb62uPh8foDAA76CMrOIfsB8iHQGvz7/fv9++TqTTf/AgoK9/K+zwvc+uwK9hAMBP/wLdTOH/4ZKhfg6gALFNjd2Nzg5uvzNOoG6OwR+/gk5/UV5gYi+AcU/QXn+BL79/wB9xQUJzDoCQW/Fh0EA9X1IPoJE+X20fIYCvnc+f/8+/sQNRnm4/z0LcbeIfsC/xvQH/EW+wQHB+f9C+oQ9Aj9B/UtDrftONIY7Bz0/v/c/d8T+gcC8QXh0wgjDRQA9zDz1f3zAvtIvOUCAf75BSQh2PT8+xcTAECvhY86AECvhJE7AEBDhOA7AEDHgUs+AEBSqIkZAAA4PZCFOD26PY+Euj3nPTKE5z0iP76BIj9SOFyPUjgAAHr+BAZ/7JtOm05/7AQG2PsBC9rlZXu1GiL8L/8v/yL8tRple9rlAQvY+wAAAAAAAODg4ADkvfsh1vrgEsf2yiPwG9cqE+3YJNMY6yj48u4cAQ7GNe6o2SfaFe4l7RTVJgoR0DbMxvMh1P/1IPT13hYOANIu293eBecs4isG/MEx4SvXK+ke1SnVGvIs3wHzG/MS2yXSt9Mi3BjnItz17BPnDO4h3LvFItMGCC7q8ugS/w3ULNnQ5g/gH9si3w/SH+ge3CXXH+kpzhb8MuoC6xzvHt4o+cTkHdoq5CrU9RUr8AjUItnJ1RX13Rop9wDeHfh5r3EH8Ooh2yHhJOX53BHeRsdB2/XQFdgR/yzfBvoh9wDsIutF3znjIeEjyQz/Md8b6iPO39ERzjYzXv/71CP8Ftgt2b7nGN8B5hTo6ecM9RXTLOfT7RHVafBSBesBKfAL3x7znfw52yHxLOclwTbcGOEfy8jaGtf8BCXfDeIYMTSicvvi8RcBJtg46QzcHe8o0TPb19kLzyIAOu75/CLwEeUjHgXCQQQwvEzVC/Um7hPxKenC2RfWCv4p6/PzGfcN0SrpwugY1DzrOu79zCDqFtwitTkQWu0DCi3jF9og+8LNJs0o7jXWDegg3g7sHsi15iXmIA875hHjHfkczDX04gUe+9D7IwIC1SgVEBBL59PgCtUS9ioJAP80/wfiJBPQ/DDkGeMg6gDhFuAR9iTA18IkzA8QOuLq4Ab5Cdok6BXsBfv5DvYC5RDsAOAaEwj11x8c5eAiKiLvFvYN4xL05ugLFgX7+za81TnnGAQEGvj07zYe0wEK8RLXC0S9JfDo8CbqBuMeQuUFB/ANAvT5/ewkBOQJAyAwGicDAAfr8wWu+UnsIvf7Af8K+/b/CQH3CgDyC//+/wsUYK/q9PfGCRjiGt0b9A3uOMUP+Rfx/wbnDursL/UQAibp7eL3KPUFBPoIGuv1fwQBBvcC+f79B/sK7QeWW/0J/BX4GrAIAf727+/lIEcG4wvpNtod6idX4fTsA/7+AhQA/90bCfr0A/T6DQEO6sXx7+cN+QcDAAH5Bv092+np4ybhGwH4AuUX5iTeBRjo+gcDxU7CLPABBgARCC0AkgYO/iCzyD79A/ME8Gbx3P8JjwYXAAkJBfj/8gX0ecvl+PcW8wMC/QH+uV8m7Q/w+0cKAuDz+w///vKrHh0GAwIAAAAAAAAAAAK/yPcSEhfy/gAM4xr0AQL0wFr6BAEF+5L94RbjCQAI2PsV+/sNCu4oASPsHuQL+hMHDhLACfoQM0QIEAz4APcU6hkH/PMp3V3uygv/AfcEvkLhFOoZ6QsKCRMPC/vh9unk+vr9/AUD5Bb11hnn8CkiL/oCKu3qBdkgBt0WEeII5vX1A/QhIdsV/wb8AwD7BQz0ORvD/RTvAgAEAP7fxlHpJ/b7Agb5BQT9/vPpuGsP+wD5/foF/A8vDOEZ8AgW58LI7g4cDAL1Sr4p7PkQ7BD4APAE7VwMxfLZMefwF+UT/d8TVeMG+fYQ+fQB+gIE/kAK5yn+4Q8AbjJFIxwT9gLVz8jx8AoDDP/4ARr0/wf15SkZAfXuFvn/0fgX/e/5EoM7+wMSAQIDG91ByzLSJevkBw7b+/sMBfhO7RX68Aj5BQIHAgr6DMQsC9zgHwAC/gIB/Qf2EesKBv4T/jvaqiYI1+LT3wcPHB35GNgHBwX+CRjp7gbjHgIcMfXSCivz9//9+fnv+mHf6wMFAQzV+BwH1fkR7BP/AvMJNiIJ5PX3727FLOYAA/TRSd7VJt8Q+9L8+v7nE+Mc8wUOG9jVBCDz/t38cNYJ9CXkEQ7tI9kXA/L/x/te9wPZBR724Crz8p/BHvcB+QwFFBH33OIZL/fxDOpi+M4P5RXw9QIM9gr9ISSgAO8f9wkD7A31CPwK9gkBcLrlBesCx/3jChPrFfa+/VvdHvQA+TvkGgIO7gEBCxEUysUbBB0gBRMM/AEH9gX+CgAX+xyYLgsQAx0B+PIBB85YwhoI7/IyACD0/eUS+PsIA+z1JfQJIS6b//wBBv8c1vEQBf/+yVUm9/wL/vf6A+z2s1kY/ZjH5uHs+vcOFOku8eEcAfH+Bv4fLbQX5ycM8uzjw7204Lm9RE0uIgXz0NK4r6zExtjkUl1ELR0D7dHk1d3i+PPZpaWFoAoK+u7JxKXI3OXw0LUoHPbkIwklEwHs4dfu5928sC0b/y8NAOPdx86xt9rtBSMO9ukQ+AXo2MLp5erw7tK4sysVIQGwurrAyMzZ3+Ha7e3xICH+B/Hx6Onf18joxwVZQCkbBffRxJ+fhOz31LcfHfxAMAfdxwD95tH9+ti0sdAMUTcKCejVt8e7EAXkyxIdFAD89QbzFwfv3dvb4rzBBhj38gMV8+XHz7Do1/vw+wEtGQz5A/H68PH4BvPWr7CpDgH2/dW70ujk4yQG1cj0DDZPKwk2FgII9NXSzNq7p/tLJiEF88vCqaePncne2z43IRAV/u/S49ra0NnW3LW4qNDiFQLxx8CerLQZAdKw9BL5AyIGJh8XBP8UDvHVsqXoDv02EADl5NTIraSn/SI4KSQWFPj53dbCzwMM9s6poL5cRiYJurnC1tnV9fnOscbO4SAf+vznB+/ausbl1a3kOyQUHwLlubCTnrXf4OH+IQ/6KyH7AOr25d7P9ezXpZyH2TkpCu3O2sXEuu7s+OH48QHy5uchFSARAe3t5sav3eotHgv1A+bQqb2txgP/5uwsChknBffd5doHCgT31quagTQsHArRw9jZ7//239a20BX8RjQK3MIG9/byyBcB5hfQ7wwI+Rcd3OT64+/7KBcKCtLzJAYE4uM+IOD/FvIB/OrTAjYE4sfF9Bv94Qj3BQryIEITCQLn2xfxEtrhBffrDwAWPh4P9PLSTRUhAyId7TICCwna9Ns+AfE2IAYC6BQj6wITGPM3BAkn7R7/60k2IQgSAw8G7dEG/dDOARoUCOnOQfLJ7+Hb5DX/78sBOQv45+LbQAXM0w8XHw8O5xgh/tTI7gbr1QT0EdsU9iIPAg83FfXh+i4ZEPfn+MIcERTg4xoeGe0C8O8azQIyKhO+Fx3+AxPt2yAPBh7eDQv7KB8K1gT3Gve6Ef7pFOrJM+jhFuoP8wP25PA4BMEL7vHu2t0Q+SL/68/RCdsHCEU3FAbf0/b3BvcMRw/91vnoIN3+1u/7AP7fyg303i8XEzcH+EofDhDp5hMM7s/k4ewC8uzRTigN6fUV+hIBLwUmIyAuFggNEPISMxMoJwvm/+8vAsvxH+omFfHwBd81D9pWC/3oMQ389e4cFPTl5iPn3f3swx4KyfTqzMryE+D0LQ/40PcL4Ajw3vMzEib+4O8W/u7kujsb5O327Pf3+OsV+CP+Lf33DAAeB9krG9qlHhoTyfw/Du8NCQ0CBwQGPUj/7x3/6u8I5Ns/LCkDAg4J+kv4+fTx9A0J/B7qvw8A0wT8AQUWCxdVbmtub3duIG5iX21vZGVfcXVlcnkgcmVxdWVzdDogAHdhcm5pbmc6ICVzICVkCgAAAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgEAAACBAAAAAQJqZmT8AAAA/AAAAAAAAAL8zMzO/zcxMv2ZmZr8AAIC/AAAgQQAA0EBmZqZAAACQQJqZeUAAAGBAAABAQAAAIEAzMxNAZmbmPwAAgD8AADBBzcwMQQAA8EAAANBAAACgQJqZeUCamXlAmpl5QAAAYEAAAEBAAACAPwAAMEEAADBBZmYeQQAACEEAAOBAAADAQAAAkEAAAIBAAACAQAAAgEAAAABAAAAwQQAAMEEAADBBAAAwQQAAGEEAAAhBAAAAQQAA4EAAAMBAAACgQAAAQEAAADBBAAAwQQAAMEEAADBBAAAwQQAAMEEAABhBAAAIQQAA4EAAAMBAAACgQAAAMEEAADBBAAAwQQAAMEEAADBBAAAwQQAAMEEAADBBzcwcQQAAGEEAAPBAAADgQAAAkEDNzGxAAABAQAAAIEAAAABAZmbmPwAAwD8AAIA/'
                        );
                        qc(
                          K,
                          5490,
                          'gL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AADBBAAAwQQAAGEEAAAhBAADwQAAAwEAAAKBAmpl5QAAAQEAAAABAAACAPwAAMEEAADBBAAAwQQAAMEEAADBBAAAYQTMzC0GamflAAADgQAAA0EAAAIBAAAAwQQAAMEEAADBBAAAwQQAAMEEAADBBAAAwQQAAMEHNzBxBAADwQAAAsEBQYWNrZXQgaXMgbGFyZ2VyIHRoYW4gYWxsb2NhdGVkIGJ1ZmZlcgBDb3VsZCBub3QgcmVzaXplIGlucHV0IGJ1ZmZlcjogdHJ1bmNhdGluZyBpbnB1dABEbyBub3Qgb3duIGlucHV0IGJ1ZmZlcjogdHJ1bmNhdGluZyBvdmVyc2l6ZSBpbnB1dABCdWZmZXIgdG9vIHNtYWxsIHRvIHBhY2sgYml0cwBDb3VsZCBub3QgcmVzaXplIGlucHV0IGJ1ZmZlcjogbm90IHBhY2tpbmcARG8gbm90IG93biBpbnB1dCBidWZmZXI6IG5vdCBwYWNraW5nAG5vdGlmaWNhdGlvbjogJXMKAHdhcm5pbmc6ICVzCg=='
                        );
                        qc(
                          K,
                          6e3,
                          'FicOLAsj/hf8Bi7kDeXpDAQU+wkl7ukXAAn67AT/7/v8EQABCf4BAgL0COcnDwkQyfUJCwUK/sQIDfoL8BvR9AsBEPkJ/eMJ8hntIiQMKPb96PLb693+3AP6QxwG7/308PHv+cXc8wEHAQIKAgsNCgj+BwMFBAIC/fgE+wYH1g8j/tImHOz3AQf9AP4='
                        );
                        qc(
                          K,
                          6150,
                          '8eQ0IAX77+z2/wwgGS4kIQkO/QYB+AD2+/n5+fv7H+UY4PwK9RX9Exf3Fhj2//bz+fUq3x8T+AD28AHr7wr4DggEC/4F/t8L8CEL/An8CwIG+wj7C/z6GtzwAAT++AwG/yLS6gkJFQkFvvsaAgoNAhMJDK8DDQ0A8hbdBvn8BvoK+uEm3wD29QX0DO8FAPoN9woIGSEC9Aj6Cv4VBxErBQv59+zc7On8/P0b9/fP2dr19wYFFxkFAwMEAQL9/1cnEev37ffx8/Lv9fb1+Pr//f3/yt7l+PX8+wAABAgGCQcJBwYFBQUwChP2DP8J/QIF/QL+/gD+5gYJ+fD3AgcH+9ULFvX3IiXx8/oB/wEBwDg09eUFBAMBAgED//z89vn8/AL/+fn09vH3+/v18PMGEATz8Pb8AtHzGS8T8uz47wD98wEG7/IPAQoG6AD2E7v4DjER+yHjA/wAAvgF+gJ4yPTRF/cG+wEC+wH2BP//BP8A/R7MvR4WC//8AwAHAgAB9vz48wUBAf8FDff99sIWMPz6AgMFAQEEAQ0D7Ar3Df78Cews/xTgvRMAHAsIAvUP7csfAiIKBvzGCAoNDgEMAgAAgCX4LPca/RICBgv/CQEFAwABAQIMA/79BxkJEvrbA/jwA/b5Ed7UCxHx/fD/8wvSv/4IDQIEBAUPBQkG'
                        );
                        qc(
                          K,
                          6680,
                          '9xP0DOQmHf8MAgUX9gME8RX8AwMGEff8+OwaBfYGAe0S8fQv+v759//v/v7yHvIC+fz/9AvnEP30C/kH7wET5B/59gf2AwwF8AYYKePKAAEH/wX6DQr8+Aj35cva/woTERAMDAAD+fwNDOHyBvsDBRErMhkKAfr++NsF1QVJPScM/cPgAioe/RHlCSIU//sCF/nSGjXRFP7fp83AGwsP3vvIGff/4wEoQ+nwECETBw5VFvb29Pn/NFkdC+zb0vER6OQYAgEAF5sXDv/p7gkF8yYB5OQEGzPmItgjLzYmyub6KucN4twSKfzfF+D5/DP9Ecw40ST+6yQKCN8fEwn72Ar36xMSsu77AObc0c3UEigb/h0x5gIgyh63NgP7JBY1Cv+sy+P7A9Q1zQQWR93/Ifvl+SQR6dkQ98nx7CfdBtnyEjDA7/EJJ1ElvCUv6/qYDQYJ/iMI6RIqLRUh+88J+tXIJwLw51cB/fcR5/X3/woC8vIE//Yc6SjgGvcaBOXpAyrEATH9GwrM2P4SLekR1AP9EdI02NEZSx/PNR7i4Nwm+vHwNuXQAybj4Ory/OnzINkJCNPzIvAxKCAfHBcXIC87vAg+LBny6L/wJEPn2usE3/4qBcEoCxrW6cNP4RfsCuA159wK5vsDALkF9tsB6BXK7wHj5/HlIEQt8Nvu+wEAs0f6A+xHvR3dCuITBBARBQDyEwIcGjsDAhgnN87T7u8h3Q7/AQhX3eMA5Q35F/Ml2DLdDhP58jE2+xb+4/jlJg0bMAzX6/EcB/Do7ewL7AkCDRfsCxvlR7sIAvoWDBAQCfD47wEZASjb30JeNQTq59fWGSPw8Tkf4+AVEMQtD/8HOebR4wsIDxOX+DYbCu8G9P/2BAAX9h8NCwoMwBf9+O0QNBjYEAooBQkA8/nr+Pr56zsQyxLEC9EO7hnz6ATZEOQ2Gr0eG+zMFPQ3DBLwJ/L65jioyQwZGtsGSwDerzbiAfkx6fIVCsLGx9HeD/wish8Z9Qcy9irBDtz8OTc5NSrW/w8oJQ8Z9QYBH/76//nAIhwe/wMVAKj0yBnkKAjk8gkMAvrvFjH65g4c7AT0MiMoDdrG4xEeFjwaytn0OuTBCuv49BrCBvb16vr5BAESAroLDgQNE+jeGEMRM+sNFzbiMAHzUBrw/g38BuId6EnGHuUU/uspLR7l/fvu7M/93Qoq7b3L9QkN8d/N4g8HGeIEHOreNuMn0hQQIvwvSwHUyegH/wnWMvjcKUQA/Pbp8c5AJPflDBna0dsgzzPcAvxF5hMHLUMuDcEuD9EE1w36BeslGsn5If/kCu/A8gDc7139974s6wP0Jvrz9BMNK9X29Ab7Cc8g+wIEBQ/wCusIwvhACE//vs/uBSj74tMB+hXgXe7i6yAV7hYIBdfKUBb2+fjpwEI48uLX0vLj2xvyKv734yIOIfIWBAoaGhwgF7jgAwDyI9ay4AYd7tP7B9/T/ereCPgEzef3O7IV++fQQvHv6M/zGenA+ijo7fU53/gBCszKHCcxIvXD19UKD/EzHg/NIN7+3g4SEAEB/f0BAe4GEDAM+9YHJDAH7PYHDAI2J9olNgT1+NL2BfbeLvQd2yck9Rg4EQ4UGQDn5Df5+xsDCeb4Buj24uHeEgQWFSj/49v461zjC/0LSRcWBwTU9/UV8wsJsv8vcvTb7fv16hMM4gcmLev49zfTOOsHES7HqfobHx8HyPQuFfv0JAMD6ysTDPkJ8gD336UHGgP1QFPh0hkCCQUCAv8U7wr75fgUCO0Q6/PhBQUqGAki7BzDFgvZQOz/4vfsGOfo4xbEBvsp96kOIg/HNEUP/Zo6EAMGPLXgGgfH5eDo6+PwPtIfHuXxBw8BBfExvtD8MtQHJRDuGebm8RMT5dEcOQXv4NdEFf5AOAjw8+b38AsG2RntFuEU0zfVCvAv2CjszQPv8vHoNezSLhu8IAPu+wnhEPf2/+kwXy8Z1+D9D+fJJCnlFAUNDuoFAukSLvER7t77+BvJSRAC/+8osiEAAhMENfDx8OT98zEI+eMb8yAUIMMQDiksKBgUBwQwxLMR+tBB8SDiufb9+gr++ePIQ+IH+1b69gAF4Twi2v0YCv4eFxjXDEbVD+8GDRDzCB7x+AUX3p788w3Q4UYMHxkY6Br5IfAIBfXy+L8NCv73AP28BSMHAOH/7/f3ENvu/0XQ5Bbr9QUxNxeq3BACDT/NHvUNGO76Du0BKQn7G9zU3tvr5h/ZDysF+B0U+OzM5P8NGt729xv4CBu+BAzqMQqzIO4D2gz9/wICAODg4ADhxvAW1+jVDsjqyR3zIdcv/Nn3HdcP9Cb48fQfAQLUKOq+1hvaHOkm6w7bHwAVzjTLueUh2//tGe375BYGQdRK39DfCdg58jrvBNMg4SbfJOkc2CfVHfQu3g3pHPAP5SLyrvEr4RngHesF+ybRwc0h0gwDL+Tv4wv2Dtgm/f7/APwFI9j3DdQF5f/5BvUH+AcT8g/8CfYK+Ar3/wEAAAIF7hbLMgHpMtwPA/MO9gYBBf0E/gXgGQX+//wBC+Ma+vEe7gAP7yjXAwn+/gP9//sCFfrw6xcCPA8Q8PcOCf8H9wABAQD/+hHkNtP/Af/6+gILGuP+LusiDOkg6RD2A0IT7BgHC/0A/f/O0gLu/QT//gP97SncCQvoFfAJ/ef9ChL3/vv/+wb8/QLmFe0j8QfzEe0n1TDhEPcH/vsD/AntG8k/3Qoa1P4JBAH6CPcF+P/98C3WBQ/wCg=='
                        );
                        qc(
                          K,
                          8758,
                          '8BjJL9ob7Qf9ARAbFO0SBfkB+wL6COoA/f0I/wf4Af0FABHQOswd+f4D9gbmOuEB+gNd4ycDEQUG////Gw0KE/neDAr8CbQJCOT+9QL/AwGtJtkE8Pr++wX+HhMmIiggLis6KwXu59jfycwUIhzswZ+kPTUvMTVL8suzsQD9+xMWGvfLyUJaSFVESjT818bh7uEbIB4SGAMIBfT9GhxKP/7ZvbOWtjs7SUEsKEdIUlNiWFk8+uHR0PPZ9wcCT//ZxO9XUUEyLRPrvaWp184HEidKCuHkJxgNFwU4LR0K+/P13e749vjnubPrAhAyP1dXBeDYzbwADAY2IgX0IDREQEU7QS0O8OHYv70pMS8l9cy1rPw5MCoqIfXNvPoNAAj4GiDpywAkOExhaW9h/+TZ2NXK1NjuIxDs7eTWHS8mSi0D49DCsJjfODs7ChEuSFRldXt7avnfz826veXhRkPwwqvsUkdWUFVK7ca10+Pf7uctOfTW+wwcJDRAUVIN9+XkFgMCFhoG+tTNAg8KMCsxIu3CrKea6AgRPUQnGBcTEPsMDxsP+NTPxO7g5DQ2PvjQs7pCZVM/PSX0zrXAIRENGQ9NAdbjSEAuMR89LPjRytLiExT/8AAQ9O735uX26jUt9tG1rpeTCBkxTTJBcnV8dnNgWj3308HEtccICxQdAN3P1SgvIyg3Jui0mZDlAxciNEsI49UMPyYjHRgIGQsB8e7V+SUoFezI7e38/gsdMz/+1MK1px45M0ozMi5EQEE0PzdBKxL35t3JuwMGCBHxw6qfAVZdSk5D/9q+0DAnHRkR/w0NHScyM0VSYWL+3NLl8OLz/Pn8Gfv1+ufrIQwfHfjazMG8p9//Ckr+8TtbaWllV1Q++d/O3crRGRFSUfPIrRU6HyoZSEHovqXICf4VCkVLAugLFhkcJiIwIQfj5hEP/w4A/gD6170G/vcTAlVK6r2suc4DC/cCPt7M8S0CFxU0GN/3/wnU1/PvLBbv+vz/FiYaEAIyG93e99cGAPDeMwjy4c8P3y0xIfXbwsotC/u4C//09Rgb9dUuKyH09/8B/OnHuQsIEBH47OHXNTDwA0Ho+Ong2+DP9u8GJgX379IINAMGLSgn+freth8IAfArRPXt4QQGAPrv8Nrw4gIJ2fD/K/YwAwPw4f0+RCsNA/YIFMgMDP7uFvHY3AEHKQABLvrC/PT+9a3z/lsh9gAE9fBPICUOCTPr5MjeABUJ5gsc1srp/vEfHgjZvtncH+TY0iMoFhghMBfeDiggERv9GRrzw+8LBB88+ubXwA0Q5jYf9en39d65697dNzId6uXO2jkhKjkwGgsAz+Ea/PIFTiURAM/06RoOAgLV7/QK+PwIEgz6FPT68+ciDygxBwgNFBTt6v74AjPN+jXr6AQaEfzbGRHc8x8D+hsP9h8cGvb22BD5Dw0p9wD8Mvr5DiYWANACAfPtIP3EC+//6N7/I/vlHCwNGQ8q9Q8zI9wUCPz04xPRMfH8EOPZDuIEGff7zfL92OAmBff4/P/qR/0OGu7qGNfn6AYXE/Yn5uVBLQL55vgW9BAPEN37Iev4ABchIgYVJAb56gjb8h8mC/z92eD4IOn69BAU5PwXDcz/Fgbf2PoEwg0F5iMnCwI59Qns5N80+/r+FvLw0CMBxhQNIf+2OO7q4QwG8gT+99EK/R3v+z0OL/QCSNnvXEDLzfHi2tfj5BsJJAnd1lHrFBnw++/dFQ/kMAL+Ce0d2B7u7hLwxw/s9PHb8SHZFerzIwsN2sEdF+UgEgPmKiHAvu8QOAIkAx8V19kIxw4l/hPc7enj8AH9+PYfQL/m+B0VBBPZIfncODYwKB386Na+1cQT/iUp9tvEwBLqTUkoGQQT7b7+CwUVDhrnqvwSARrbCiX/GPTF9RT6IvDwKhPkzTUgBAo+FfTeGwTQ0M7PH/nr1uf81eo7AhsM9/rw+ODG8OP7KRfi39Lz9to0NAHv9woa5/oh7DU3GeD71hcVQgXkFAlLHfnW2Q8D6RUGCwHjDj8KNhrozc8H6c0PvgE8GQoA4vzxERM7KAT7IQbqxrr7F/o8LOPw0eM07TIcECMfJADrBhUbFioHvtj4BxMuAPw8JC354/rg2QIG9yEUzd4S+hMGCwXt4/4q9dPryTklAvK98OXaRTATAu8U7PDe7+fDCkktENjA7+PqOBHZCPUI5+7z7Qg2OSTv5vwG6ygq/BQfNQreyx/vIwAP+uzBtxYZHREI49m7Eg/x+wsvEPfS4BrAIvsm+S8UAred/dMURswP+vmuHxUvMyf9CQDX+fHKAgAb4QnT6tro6AjfFwUy3O/uzf4NEysM8fQ9JiYHDQAG/wM+CRsW3ybd9x7V9+D/BPwB+/X4Jh8L9tbr2wErD/Pd7e4PF+Y7Aes1CNfO8uQEFRnk2AXY1wQz3/j4ARHEDBnXESIrEy0H2xjxOP4j9jAE0f4F+8oF/d/2Hv7U6NoJ9yoEBsgs8AnY5hLsChzX6/wN7iDi/SUPFhwy2APjwAcz7fUR5djAGPT55QMlMP8C99reLgEb+hPzGgoiFBkoMvr5HgnoAOlHwxY63vwCz98ZHvj68E0CJvjd+uI4Th8h7A3ZFBYEFfgE+gqt1wnn1Q/59N7Z298THhDfKucZvCzx9fwXMg4E2dUU4jwJ7AcQE98lHRDdBybloAAAACgAAAAKAAAAEQAAAJAAAAAzc81MBwAAAAAAAADcKgAAFCsAAEwrAACEKwAAvCsAAPQrAAAsLAAAZCw='
                        );
                        qc(
                          K,
                          10860,
                          'BQAAAAEAAAAIAAAAAgAAAAMAAAADAAAABAAAAAQAAAAFAAAABQAAAAYAAAAHAAAAbmFycm93YmFuZAAAECoAAAEAAACcKgAAAAAAAAQAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAAAAAAB'
                        );
                        qc(
                          K,
                          10988,
                          'CgAAAAsAAAAMAAAADQAAAAAAAAAOAAAADwAAAAAAAAD//wAAKw=='
                        );
                        qc(
                          K,
                          11044,
                          'CgAAAAsAAAAQAAAAEQAAAJwsAAASAAAAEwAAAKgsAADNTAAAdwAAAP////8AAAAAAQAAAAAAAAAKAAAACwAAABAAAAARAAAAvCwAABIAAAATAAAAyCwAAGZGAACgAAAA/////wAAAAABAAAAAAAAAAoAAAALAAAAEAAAABEAAADcLAAAEgAAABMAAADoLAAAmjkAANwAAAD/////AAAAAAMAAAAAAAAAFAAAABUAAAAQAAAAEQAAAPwsAAASAAAAEwAAAAgtAABmJgAALAEAAP////8AAAAAAwAAAAAAAAAUAAAAFQAAABAAAAARAAAA/CwAABIAAAATAAAAHC0AAJoZAABsAQAA/////wAAAAADAAAAAQAAABQAAAAVAAAAEAAAABEAAAD8LAAAEgAAABMAAAAILQAAzQwAAOwBAAAAAAAAAQ=='
                        );
                        qc(
                          K,
                          11380,
                          'CgAAAAsAAAAMAAAADQAAAAAAAAASAAAAEwAAADAtAAAAQAAATwAAANAgAAAFAAAAAAAAAAoAAAAEAAAAcBcAAAQAAAAAAAAA0CAAAAUAAAAHAAAACgAAAAQAAAAABAAABQAAAAAAAADQIAAABQAAAAcAAAAIAAAABQAAAEAFAAAHAAAAAAAAALAJAAAHAAAABwAAAAUAAAAIAAAAkB8AAAYAAAAAAAAABQAAAAgAAACQGgAACAAAAAAAAAAUAAAAAgAAABAYAAAFAAAAAAAAAHgtAAAWAAAAFC4AAAEAAAAEAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAACoKgAAoAAAACgAAAAIAAAAM3PNTAcAM3MAAAAAUC4AAIguAADALgAA+C4='
                        );
                        qc(
                          K,
                          11696,
                          'AwAAAAEAAAAIAAAAAgAAAAMAAAAEAAAABQAAAAUAAAAGAAAABgAAAAcAAAAHAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAIAAAADAAAAAwAAAAQAAABwFQAABQAAAHdpZGViYW5kIChzdWItYmFuZCBDRUxQKQBVbmtub3duIHdiX21vZGVfcXVlcnkgcmVxdWVzdDog'
                        );
                        qc(K, 11864, 'AQAAAAAAAAAfAAAAIA==');
                        qc(K, 11904, '//8AACQ=');
                        qc(K, 11920, 'AQAAAAAAAAAfAAAAIA==');
                        qc(K, 11948, 'EgAAABMAAAAwLwAA//8AAHA=');
                        qc(K, 11976, 'AQAAAAAAAAAfAAAAIA==');
                        qc(K, 12004, 'EgAAABMAAABELwAA//8AAMA=');
                        qc(K, 12032, 'AQAAAAEAAAAfAAAAIA==');
                        qc(
                          K,
                          12060,
                          'EgAAABMAAABELwAA//8AAGABAAAKAAAABAAAAFAhAAAFAAAAAAAAAAgAAAAFAAAAsAsAAAcAAAABAAAAd2FybmluZzogJXMgJWQK'
                        );
                        qc(
                          K,
                          12144,
                          '1EkAAD5iAAC8ggAA+K0AAIHnAAARNAEA8pkBAIUhAgDu1QIAAcYDAHkFBQCZrgYAUOQIAB7VCwDivg8A8fMUAN3hGwBxGiUAsV8xAMuzQQBOblcAaFh0AHnSmgATBs4AhigSAWbTbAFmeuUBGgiGAqSuWwNV/XcEJlLyBV/F6QcxBysPoxd+H8woDDWASAAA6gN4Ct4TaBuUIwUuFDzsVDE4Gi1IQ2Fzc2VydGlvbiBmYWlsZWQ6IHN0LT53aW5kb3dTaXplLXN0LT5mcmFtZVNpemUgPT0gc3QtPnN1YmZyYW1lU2l6ZQBzcmMvbmJfY2VscC5jAGFzc2VydGlvbiBmYWlsZWQ6IFNVQk1PREUobHRwX3F1YW50KQBhc3NlcnRpb24gZmFpbGVkOiBTVUJNT0RFKGlubm92YXRpb25fcXVhbnQp'
                        );
                        qc(K, 12480, '/3/7ehNtTVl+QxcvVB4IEuUJAwU=');
                        qc(K, 12516, 'JAAAAHAAAADAAAAAYAE=');
                        qc(
                          K,
                          12544,
                          'SW52YWxpZCBtb2RlIGVuY291bnRlcmVkLiBUaGUgc3RyZWFtIGlzIGNvcnJ1cHRlZC4ATW9yZSB0aGFuIHR3byB3aWRlYmFuZCBsYXllcnMgZm91bmQuIFRoZSBzdHJlYW0gaXMgY29ycnVwdGVkLgBhc3NlcnRpb24gZmFpbGVkOiBTVUJNT0RFKGx0cF91bnF1YW50KQBhc3NlcnRpb24gZmFpbGVkOiBTVUJNT0RFKGlubm92YXRpb25fdW5xdWFudCkAVW5rbm93biBuYl9jdGwgcmVxdWVzdDogAEZhdGFsIChpbnRlcm5hbCkgZXJyb3IgaW4gJXMsIGxpbmUgJWQ6ICVzCgBub3RpZmljYXRpb246ICVzCgB3YXJuaW5nOiAlcyAlZAoAAAAAAAIA+f/5/xIADwDZ/+f/SwAjAH7/1//UACYAuf7v/+MB4P9P/XwAvAPl/uX6HwL0BjP8XfbFBjEO9fL35mMjyXXJdWMj9+b18jEOxQZd9jP89AYfAuX65f68A3wAT/3g/+MB7/+5/iYA1ADX/37/IwBLAOf/2f8PABIA+f/5/wIAJwAsADIAOQBAAEkAUwBeAGoAeACIAJoArwDGAOEA/wAgAUcBcgGkAdwBGwJjArQCEAN5A+8DdQQNBbkFfAZZB30ApADXABoBcgHkAXsCQANCBJQFTweUCY0MchCMFTwcSW52YWxpZCBtb2RlIGVuY291bnRlcmVkLiBUaGUgc3RyZWFtIGlzIGNvcnJ1cHRlZC4AVW5rbm93biBuYl9jdGwgcmVxdWVzdDogAG5vdGlmaWNhdGlvbjogJXMKAHdhcm5pbmc6ICVzICVkCgBzcGVleC0xLjJiZXRhMwBUaGlzIG1vZGUgaXMgbWVhbnQgdG8gYmUgdXNlZCBhbG9uZQBUaGlzIGRvZXNuJ3QgbG9vayBsaWtlIGEgU3BlZXggZmlsZQBTcGVleCBoZWFkZXIgdG9vIHNtYWxsAHdhcm5pbmc6ICVzCgBub3RpZmljYXRpb246ICVzCgAAAAAAAABA0T9HP2I+KD2cO8Y5rjdbNdcyKjA='
                        );
                        qc(
                          K,
                          13360,
                          'HgUhBSkFNQVIBV8FewWcBcMF7gUfBlUGjwbPBhMHXAeqB/wHVAiwCBAJdQneCUwKvgo0C64LLAyuDDQNvg1LDtwOcA8IEKMQQRHiEYYSLRPXE4MUMRXiFZUWSxcCGLsYdhkyGvAarxtwHDEd9B23HnsfQCAEIcohjyJUIxkk3iSjJWcmKifsJ64obiktKusqqCtjLBwt0y2ILjsv7C+bMEcx8TGYMjwz3TN7NBY1rjVCNtM2YDfqN3A48jhwOeo5YDrSOkA7qTsOPG48yjwhPXQ9wj0LPk8+jz7JPv8+Lz9bP4E/oz+/P9Y/6D/1P/0/AEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABA6T+mPzc/nD7WPeQ8yDuDOhU5fzfDNeIz3jG3L28tCCuFKOYlLyNhIH8djRqMF4MUdhFvDn8LyAigBlNQRUVYX0RFQ09ERV9FUlJPUjogb25seSBzdXBwb3J0IHNwZWV4IG5hcnJvd2JhbmQgYW5kIHdpZGViYW5kLiBUcnlpbmcgdG8gZGVjb2RlIGFzIG5hcnJvd2JhbmQARVJST1I6IFBhY2tldCB3YXMgaW5jb21wbGV0ZS4ARVJST1I6IHN0cmVhbSBjb3JydXB0ZWQ/ICBlbmNvZGVkX2ZyYW1lX3NpemUgKHBhY2tldCBzaXplKS4AU1BFRVhfREVDT0RFX0VSUk9SOiBpbnB1dCBub3QgYSBzcGVleC4AU1BFRVhfREVDT0RFX0VSUk9SOiBpbnB1dCB0b28gc2hvcnQgdG8gZGV0ZXJtaW5lIGNvbXByZXNzaW9uLg=='
                        );
                        qc(K, 14054, '8D8AAAAAAAD4PwAAAAAAAAAABtDPQ+v9TD4=');
                        qc(K, 14091, 'QAO44j8gOQAALSsgICAwWDB4AChudWxsKQ==');
                        qc(
                          K,
                          14128,
                          'EQAKABEREQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAARAA8KERERAwoHAAEACQsLAAAJBgsAAAsABhEAAAARERE='
                        );
                        qc(
                          K,
                          14209,
                          'CwAAAAAAAAAAEQAKChEREQAKAAACAAkLAAAACQALAAAL'
                        );
                        qc(K, 14267, 'DA==');
                        qc(K, 14279, 'DAAAAAAMAAAAAAkMAAAAAAAMAAAM');
                        qc(K, 14325, 'Dg==');
                        qc(K, 14337, 'DQAAAAQNAAAAAAkOAAAAAAAOAAAO');
                        qc(K, 14383, 'EA==');
                        qc(
                          K,
                          14395,
                          'DwAAAAAPAAAAAAkQAAAAAAAQAAAQAAASAAAAEhIS'
                        );
                        qc(K, 14450, 'EgAAABISEgAAAAAAAAk=');
                        qc(K, 14499, 'Cw==');
                        qc(K, 14511, 'CgAAAAAKAAAAAAkLAAAAAAALAAAL');
                        qc(K, 14557, 'DA==');
                        qc(
                          K,
                          14569,
                          'DAAAAAAMAAAAAAkMAAAAAAAMAAAMAAAwMTIzNDU2Nzg5QUJDREVGoDo='
                        );
                        qc(K, 14616, 'yAAAAAAAAAAF');
                        qc(K, 14636, 'Ig==');
                        qc(K, 14660, 'IwAAACQAAAA4Ow==');
                        qc(K, 14684, 'Ag==');
                        qc(K, 14699, '//////8=');
                        qc(K, 14944, 'ZDs=');
                        qc(K, 15e3, 'gEFQAAAAAAAF');
                        qc(K, 15020, 'JQ==');
                        qc(K, 15044, 'IwAAACYAAAB4PQAAAAQ=');
                        qc(K, 15068, 'AQ==');
                        qc(K, 15083, 'Cv////8=');
                        return oc(
                          {
                            Int8Array: Int8Array,
                            Int16Array: Int16Array,
                            Int32Array: Int32Array,
                            Uint8Array: Uint8Array,
                            Uint16Array: Uint16Array,
                            Uint32Array: Uint32Array,
                            Float32Array: Float32Array,
                            Float64Array: Float64Array,
                            NaN: NaN,
                            Infinity: Infinity,
                            Math: Math,
                          },
                          rc,
                          sc.buffer
                        );
                      })(
                        // EMSCRIPTEN_END_ASM

                        asmLibraryArg,
                        wasmMemory
                      );
                  },
                  instantiate: function instantiate(binary, info) {
                    return {
                      then: function then(ok) {
                        var module = new WebAssembly.Module(binary);
                        ok({ instance: new WebAssembly.Instance(module) });
                      },
                    };
                  },
                  RuntimeError: Error,
                };
                wasmBinary = [];
                if (
                  (typeof WebAssembly === 'undefined'
                    ? 'undefined'
                    : _typeof(WebAssembly)) !== 'object'
                ) {
                  abort('no native wasm support detected');
                }
                var wasmMemory;
                var wasmTable;
                var ABORT = false;
                var EXITSTATUS = 0;
                function assert(condition, text) {
                  if (!condition) {
                    abort('Assertion failed: ' + text);
                  }
                }
                function getCFunc(ident) {
                  var func = Module['_' + ident];
                  assert(
                    func,
                    'Cannot call unknown function ' +
                      ident +
                      ', make sure it is exported'
                  );
                  return func;
                }
                function ccall(ident, returnType, argTypes, args, opts) {
                  var toC = {
                    string: function string(str) {
                      var ret = 0;
                      if (str !== null && str !== undefined && str !== 0) {
                        var len = (str.length << 2) + 1;
                        ret = stackAlloc(len);
                        stringToUTF8(str, ret, len);
                      }
                      return ret;
                    },
                    array: function array(arr) {
                      var ret = stackAlloc(arr.length);
                      writeArrayToMemory(arr, ret);
                      return ret;
                    },
                  };
                  function convertReturnValue(ret) {
                    if (returnType === 'string') return UTF8ToString(ret);
                    if (returnType === 'boolean') return Boolean(ret);
                    return ret;
                  }
                  var func = getCFunc(ident);
                  var cArgs = [];
                  var stack = 0;
                  if (args) {
                    for (var i = 0; i < args.length; i++) {
                      var converter = toC[argTypes[i]];
                      if (converter) {
                        if (stack === 0) stack = stackSave();
                        cArgs[i] = converter(args[i]);
                      } else {
                        cArgs[i] = args[i];
                      }
                    }
                  }
                  var ret = func.apply(null, cArgs);
                  ret = convertReturnValue(ret);
                  if (stack !== 0) stackRestore(stack);
                  return ret;
                }
                function cwrap(ident, returnType, argTypes, opts) {
                  argTypes = argTypes || [];
                  var numericArgs = argTypes.every(function (type) {
                    return type === 'number';
                  });
                  var numericRet = returnType !== 'string';
                  if (numericRet && numericArgs && !opts) {
                    return getCFunc(ident);
                  }
                  return function () {
                    return ccall(ident, returnType, argTypes, arguments, opts);
                  };
                }
                var UTF8Decoder =
                  typeof TextDecoder !== 'undefined'
                    ? new TextDecoder('utf8')
                    : undefined;
                function UTF8ArrayToString(heap, idx, maxBytesToRead) {
                  var endIdx = idx + maxBytesToRead;
                  var endPtr = idx;
                  while (heap[endPtr] && !(endPtr >= endIdx)) {
                    ++endPtr;
                  }
                  if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {
                    return UTF8Decoder.decode(heap.subarray(idx, endPtr));
                  } else {
                    var str = '';
                    while (idx < endPtr) {
                      var u0 = heap[idx++];
                      if (!(u0 & 128)) {
                        str += String.fromCharCode(u0);
                        continue;
                      }
                      var u1 = heap[idx++] & 63;
                      if ((u0 & 224) == 192) {
                        str += String.fromCharCode(((u0 & 31) << 6) | u1);
                        continue;
                      }
                      var u2 = heap[idx++] & 63;
                      if ((u0 & 240) == 224) {
                        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
                      } else {
                        u0 =
                          ((u0 & 7) << 18) |
                          (u1 << 12) |
                          (u2 << 6) |
                          (heap[idx++] & 63);
                      }
                      if (u0 < 65536) {
                        str += String.fromCharCode(u0);
                      } else {
                        var ch = u0 - 65536;
                        str += String.fromCharCode(
                          55296 | (ch >> 10),
                          56320 | (ch & 1023)
                        );
                      }
                    }
                  }
                  return str;
                }
                function UTF8ToString(ptr, maxBytesToRead) {
                  return ptr
                    ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead)
                    : '';
                }
                function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
                  if (!(maxBytesToWrite > 0)) return 0;
                  var startIdx = outIdx;
                  var endIdx = outIdx + maxBytesToWrite - 1;
                  for (var i = 0; i < str.length; ++i) {
                    var u = str.charCodeAt(i);
                    if (u >= 55296 && u <= 57343) {
                      var u1 = str.charCodeAt(++i);
                      u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);
                    }
                    if (u <= 127) {
                      if (outIdx >= endIdx) break;
                      heap[outIdx++] = u;
                    } else if (u <= 2047) {
                      if (outIdx + 1 >= endIdx) break;
                      heap[outIdx++] = 192 | (u >> 6);
                      heap[outIdx++] = 128 | (u & 63);
                    } else if (u <= 65535) {
                      if (outIdx + 2 >= endIdx) break;
                      heap[outIdx++] = 224 | (u >> 12);
                      heap[outIdx++] = 128 | ((u >> 6) & 63);
                      heap[outIdx++] = 128 | (u & 63);
                    } else {
                      if (outIdx + 3 >= endIdx) break;
                      heap[outIdx++] = 240 | (u >> 18);
                      heap[outIdx++] = 128 | ((u >> 12) & 63);
                      heap[outIdx++] = 128 | ((u >> 6) & 63);
                      heap[outIdx++] = 128 | (u & 63);
                    }
                  }
                  heap[outIdx] = 0;
                  return outIdx - startIdx;
                }
                function stringToUTF8(str, outPtr, maxBytesToWrite) {
                  return stringToUTF8Array(
                    str,
                    HEAPU8,
                    outPtr,
                    maxBytesToWrite
                  );
                }
                function writeArrayToMemory(array, buffer) {
                  HEAP8.set(array, buffer);
                }
                var WASM_PAGE_SIZE = 65536;
                var buffer,
                  HEAP8,
                  HEAPU8,
                  HEAP16,
                  HEAPU16,
                  HEAP32,
                  HEAPU32,
                  HEAPF32,
                  HEAPF64;
                function updateGlobalBufferAndViews(buf) {
                  buffer = buf;
                  Module['HEAP8'] = HEAP8 = new Int8Array(buf);
                  Module['HEAP16'] = HEAP16 = new Int16Array(buf);
                  Module['HEAP32'] = HEAP32 = new Int32Array(buf);
                  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);
                  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);
                  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);
                  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);
                  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);
                }
                var INITIAL_INITIAL_MEMORY =
                  Module['INITIAL_MEMORY'] || 16777216;
                if (Module['wasmMemory']) {
                  wasmMemory = Module['wasmMemory'];
                } else {
                  wasmMemory = new WebAssembly.Memory({
                    initial: INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,
                    maximum: INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,
                  });
                }
                if (wasmMemory) {
                  buffer = wasmMemory.buffer;
                }
                INITIAL_INITIAL_MEMORY = buffer.byteLength;
                updateGlobalBufferAndViews(buffer);
                var __ATPRERUN__ = [];
                var __ATINIT__ = [];
                var __ATMAIN__ = [];
                var __ATPOSTRUN__ = [];
                var runtimeInitialized = false;
                var runtimeExited = false;
                function preRun() {
                  if (Module['preRun']) {
                    if (typeof Module['preRun'] == 'function')
                      Module['preRun'] = [Module['preRun']];
                    while (Module['preRun'].length) {
                      addOnPreRun(Module['preRun'].shift());
                    }
                  }
                  callRuntimeCallbacks(__ATPRERUN__);
                }
                function initRuntime() {
                  runtimeInitialized = true;
                  callRuntimeCallbacks(__ATINIT__);
                }
                function preMain() {
                  callRuntimeCallbacks(__ATMAIN__);
                }
                function exitRuntime() {
                  runtimeExited = true;
                }
                function postRun() {
                  if (Module['postRun']) {
                    if (typeof Module['postRun'] == 'function')
                      Module['postRun'] = [Module['postRun']];
                    while (Module['postRun'].length) {
                      addOnPostRun(Module['postRun'].shift());
                    }
                  }
                  callRuntimeCallbacks(__ATPOSTRUN__);
                }
                function addOnPreRun(cb) {
                  __ATPRERUN__.unshift(cb);
                }
                function addOnPostRun(cb) {
                  __ATPOSTRUN__.unshift(cb);
                }
                var runDependencies = 0;
                var runDependencyWatcher = null;
                var dependenciesFulfilled = null;
                function addRunDependency(id) {
                  runDependencies++;
                  if (Module['monitorRunDependencies']) {
                    Module['monitorRunDependencies'](runDependencies);
                  }
                }
                function removeRunDependency(id) {
                  runDependencies--;
                  if (Module['monitorRunDependencies']) {
                    Module['monitorRunDependencies'](runDependencies);
                  }
                  if (runDependencies == 0) {
                    if (runDependencyWatcher !== null) {
                      clearInterval(runDependencyWatcher);
                      runDependencyWatcher = null;
                    }
                    if (dependenciesFulfilled) {
                      var callback = dependenciesFulfilled;
                      dependenciesFulfilled = null;
                      callback();
                    }
                  }
                }
                Module['preloadedImages'] = {};
                Module['preloadedAudios'] = {};
                function abort(what) {
                  if (Module['onAbort']) {
                    Module['onAbort'](what);
                  }
                  what += '';
                  err(what);
                  ABORT = true;
                  EXITSTATUS = 1;
                  what =
                    'abort(' +
                    what +
                    '). Build with -s ASSERTIONS=1 for more info.';
                  var e = new WebAssembly.RuntimeError(what);
                  readyPromiseReject(e);
                  throw e;
                }
                function hasPrefix(str, prefix) {
                  return String.prototype.startsWith
                    ? str.startsWith(prefix)
                    : str.indexOf(prefix) === 0;
                }
                var dataURIPrefix = 'data:application/octet-stream;base64,';
                function isDataURI(filename) {
                  return hasPrefix(filename, dataURIPrefix);
                }
                var fileURIPrefix = 'file://';
                function isFileURI(filename) {
                  return hasPrefix(filename, fileURIPrefix);
                }
                var wasmBinaryFile = 'soundhound-speex.wasm';
                if (!isDataURI(wasmBinaryFile)) {
                  wasmBinaryFile = locateFile(wasmBinaryFile);
                }
                function getBinary() {
                  try {
                    if (wasmBinary) {
                      return new Uint8Array(wasmBinary);
                    }
                    var binary = tryParseAsDataURI(wasmBinaryFile);
                    if (binary) {
                      return binary;
                    }
                    if (readBinary) {
                      return readBinary(wasmBinaryFile);
                    } else {
                      throw 'both async and sync fetching of the wasm failed';
                    }
                  } catch (err) {
                    abort(err);
                  }
                }
                function getBinaryPromise() {
                  if (
                    !wasmBinary &&
                    (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) &&
                    typeof fetch === 'function' &&
                    !isFileURI(wasmBinaryFile)
                  ) {
                    return fetch(wasmBinaryFile, { credentials: 'same-origin' })
                      .then(function (response) {
                        if (!response['ok']) {
                          throw (
                            "failed to load wasm binary file at '" +
                            wasmBinaryFile +
                            "'"
                          );
                        }
                        return response['arrayBuffer']();
                      })
                      .catch(function () {
                        return getBinary();
                      });
                  }
                  return Promise.resolve().then(getBinary);
                }
                function createWasm() {
                  var info = { a: asmLibraryArg };
                  function receiveInstance(instance, module) {
                    var exports = instance.exports;
                    Module['asm'] = exports;
                    wasmTable = Module['asm']['i'];
                    removeRunDependency('wasm-instantiate');
                  }
                  addRunDependency('wasm-instantiate');
                  function receiveInstantiatedSource(output) {
                    receiveInstance(output['instance']);
                  }
                  function instantiateArrayBuffer(receiver) {
                    return getBinaryPromise()
                      .then(function (binary) {
                        return WebAssembly.instantiate(binary, info);
                      })
                      .then(receiver, function (reason) {
                        err('failed to asynchronously prepare wasm: ' + reason);
                        abort(reason);
                      });
                  }
                  function instantiateAsync() {
                    if (
                      !wasmBinary &&
                      typeof WebAssembly.instantiateStreaming === 'function' &&
                      !isDataURI(wasmBinaryFile) &&
                      !isFileURI(wasmBinaryFile) &&
                      typeof fetch === 'function'
                    ) {
                      fetch(wasmBinaryFile, {
                        credentials: 'same-origin',
                      }).then(function (response) {
                        var result = WebAssembly.instantiateStreaming(
                          response,
                          info
                        );
                        return result.then(
                          receiveInstantiatedSource,
                          function (reason) {
                            err('wasm streaming compile failed: ' + reason);
                            err('falling back to ArrayBuffer instantiation');
                            return instantiateArrayBuffer(
                              receiveInstantiatedSource
                            );
                          }
                        );
                      });
                    } else {
                      return instantiateArrayBuffer(receiveInstantiatedSource);
                    }
                  }
                  if (Module['instantiateWasm']) {
                    try {
                      var exports = Module['instantiateWasm'](
                        info,
                        receiveInstance
                      );
                      return exports;
                    } catch (e) {
                      err(
                        'Module.instantiateWasm callback failed with error: ' +
                          e
                      );
                      return false;
                    }
                  }
                  instantiateAsync();
                  return {};
                }
                function callRuntimeCallbacks(callbacks) {
                  while (callbacks.length > 0) {
                    var callback = callbacks.shift();
                    if (typeof callback == 'function') {
                      callback(Module);
                      continue;
                    }
                    var func = callback.func;
                    if (typeof func === 'number') {
                      if (callback.arg === undefined) {
                        wasmTable.get(func)();
                      } else {
                        wasmTable.get(func)(callback.arg);
                      }
                    } else {
                      func(callback.arg === undefined ? null : callback.arg);
                    }
                  }
                }
                function _abort() {
                  abort();
                }
                function _emscripten_memcpy_big(dest, src, num) {
                  HEAPU8.copyWithin(dest, src, src + num);
                }
                function abortOnCannotGrowMemory(requestedSize) {
                  abort('OOM');
                }
                function _emscripten_resize_heap(requestedSize) {
                  requestedSize = requestedSize >>> 0;
                  abortOnCannotGrowMemory(requestedSize);
                }
                function _exit(status) {
                  exit(status);
                }
                var SYSCALLS = {
                  mappings: {},
                  buffers: [null, [], []],
                  printChar: function printChar(stream, curr) {
                    var buffer = SYSCALLS.buffers[stream];
                    if (curr === 0 || curr === 10) {
                      (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));
                      buffer.length = 0;
                    } else {
                      buffer.push(curr);
                    }
                  },
                  varargs: undefined,
                  get: function get() {
                    SYSCALLS.varargs += 4;
                    var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];
                    return ret;
                  },
                  getStr: function getStr(ptr) {
                    var ret = UTF8ToString(ptr);
                    return ret;
                  },
                  get64: function get64(low, high) {
                    return low;
                  },
                };
                function _fd_close(fd) {
                  return 0;
                }
                function _fd_seek(
                  fd,
                  offset_low,
                  offset_high,
                  whence,
                  newOffset
                ) {}
                function _fd_write(fd, iov, iovcnt, pnum) {
                  var num = 0;
                  for (var i = 0; i < iovcnt; i++) {
                    var ptr = HEAP32[(iov + i * 8) >> 2];
                    var len = HEAP32[(iov + (i * 8 + 4)) >> 2];
                    for (var j = 0; j < len; j++) {
                      SYSCALLS.printChar(fd, HEAPU8[ptr + j]);
                    }
                    num += len;
                  }
                  HEAP32[pnum >> 2] = num;
                  return 0;
                }
                var ASSERTIONS = false;
                function intArrayToString(array) {
                  var ret = [];
                  for (var i = 0; i < array.length; i++) {
                    var chr = array[i];
                    if (chr > 255) {
                      if (ASSERTIONS) {
                        assert(
                          false,
                          'Character code ' +
                            chr +
                            ' (' +
                            String.fromCharCode(chr) +
                            ')  at offset ' +
                            i +
                            ' not in 0x00-0xFF.'
                        );
                      }
                      chr &= 255;
                    }
                    ret.push(String.fromCharCode(chr));
                  }
                  return ret.join('');
                }
                var decodeBase64 =
                  typeof atob === 'function'
                    ? atob
                    : function (input) {
                        var keyStr =
                          'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
                        var output = '';
                        var chr1, chr2, chr3;
                        var enc1, enc2, enc3, enc4;
                        var i = 0;
                        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
                        do {
                          enc1 = keyStr.indexOf(input.charAt(i++));
                          enc2 = keyStr.indexOf(input.charAt(i++));
                          enc3 = keyStr.indexOf(input.charAt(i++));
                          enc4 = keyStr.indexOf(input.charAt(i++));
                          chr1 = (enc1 << 2) | (enc2 >> 4);
                          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                          chr3 = ((enc3 & 3) << 6) | enc4;
                          output = output + String.fromCharCode(chr1);
                          if (enc3 !== 64) {
                            output = output + String.fromCharCode(chr2);
                          }
                          if (enc4 !== 64) {
                            output = output + String.fromCharCode(chr3);
                          }
                        } while (i < input.length);
                        return output;
                      };
                function intArrayFromBase64(s) {
                  if (
                    typeof ENVIRONMENT_IS_NODE === 'boolean' &&
                    ENVIRONMENT_IS_NODE
                  ) {
                    var buf;
                    try {
                      buf = Buffer.from(s, 'base64');
                    } catch (_) {
                      buf = new Buffer(s, 'base64');
                    }
                    return new Uint8Array(
                      buf['buffer'],
                      buf['byteOffset'],
                      buf['byteLength']
                    );
                  }
                  try {
                    var decoded = decodeBase64(s);
                    var bytes = new Uint8Array(decoded.length);
                    for (var i = 0; i < decoded.length; ++i) {
                      bytes[i] = decoded.charCodeAt(i);
                    }
                    return bytes;
                  } catch (_) {
                    throw new Error(
                      'Converting base64 string to bytes failed.'
                    );
                  }
                }
                function tryParseAsDataURI(filename) {
                  if (!isDataURI(filename)) {
                    return;
                  }
                  return intArrayFromBase64(
                    filename.slice(dataURIPrefix.length)
                  );
                }
                __ATINIT__.push({
                  func: function func() {
                    ___wasm_call_ctors();
                  },
                });
                var asmLibraryArg = {
                  f: _abort,
                  d: _emscripten_memcpy_big,
                  e: _emscripten_resize_heap,
                  h: _exit,
                  g: _fd_close,
                  c: _fd_seek,
                  b: _fd_write,
                  a: wasmMemory,
                };
                var asm = createWasm();
                var ___wasm_call_ctors = (Module['___wasm_call_ctors'] =
                  function () {
                    return (___wasm_call_ctors = Module['___wasm_call_ctors'] =
                      Module['asm']['j']).apply(null, arguments);
                  });
                var _SH_speex_init = (Module['_SH_speex_init'] = function () {
                  return (_SH_speex_init = Module['_SH_speex_init'] =
                    Module['asm']['k']).apply(null, arguments);
                });
                var _SH_speex_encode_frame = (Module['_SH_speex_encode_frame'] =
                  function () {
                    return (_SH_speex_encode_frame = Module[
                      '_SH_speex_encode_frame'
                    ] =
                      Module['asm']['l']).apply(null, arguments);
                  });
                var _SH_speex_speex_to_raw = (Module['_SH_speex_speex_to_raw'] =
                  function () {
                    return (_SH_speex_speex_to_raw = Module[
                      '_SH_speex_speex_to_raw'
                    ] =
                      Module['asm']['m']).apply(null, arguments);
                  });
                var stackSave = (Module['stackSave'] = function () {
                  return (stackSave = Module['stackSave'] =
                    Module['asm']['n']).apply(null, arguments);
                });
                var stackRestore = (Module['stackRestore'] = function () {
                  return (stackRestore = Module['stackRestore'] =
                    Module['asm']['o']).apply(null, arguments);
                });
                var stackAlloc = (Module['stackAlloc'] = function () {
                  return (stackAlloc = Module['stackAlloc'] =
                    Module['asm']['p']).apply(null, arguments);
                });
                var _malloc = (Module['_malloc'] = function () {
                  return (_malloc = Module['_malloc'] =
                    Module['asm']['q']).apply(null, arguments);
                });
                Module['cwrap'] = cwrap;
                var calledRun;
                function ExitStatus(status) {
                  this.name = 'ExitStatus';
                  this.message = 'Program terminated with exit(' + status + ')';
                  this.status = status;
                }
                dependenciesFulfilled = function runCaller() {
                  if (!calledRun) run();
                  if (!calledRun) dependenciesFulfilled = runCaller;
                };
                function run(args) {
                  args = args || arguments_;
                  if (runDependencies > 0) {
                    return;
                  }
                  preRun();
                  if (runDependencies > 0) return;
                  function doRun() {
                    if (calledRun) return;
                    calledRun = true;
                    Module['calledRun'] = true;
                    if (ABORT) return;
                    initRuntime();
                    preMain();
                    readyPromiseResolve(Module);
                    if (Module['onRuntimeInitialized'])
                      Module['onRuntimeInitialized']();
                    postRun();
                  }
                  if (Module['setStatus']) {
                    Module['setStatus']('Running...');
                    setTimeout(function () {
                      setTimeout(function () {
                        Module['setStatus']('');
                      }, 1);
                      doRun();
                    }, 1);
                  } else {
                    doRun();
                  }
                }
                Module['run'] = run;
                function exit(status, implicit) {
                  if (implicit && noExitRuntime && status === 0) {
                    return;
                  }
                  if (noExitRuntime) {
                  } else {
                    EXITSTATUS = status;
                    exitRuntime();
                    if (Module['onExit']) Module['onExit'](status);
                    ABORT = true;
                  }
                  quit_(status, new ExitStatus(status));
                }
                if (Module['preInit']) {
                  if (typeof Module['preInit'] == 'function')
                    Module['preInit'] = [Module['preInit']];
                  while (Module['preInit'].length > 0) {
                    Module['preInit'].pop()();
                  }
                }
                noExitRuntime = true;
                run();

                return Module.ready;
              };
            })();
            if (
              (false ? 'undefined' : _typeof(exports)) === 'object' &&
              (false ? 'undefined' : _typeof(module)) === 'object'
            )
              module.exports = Module;
            else if (true)
              !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
              (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                return Module;
              }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            else if (
              (typeof exports === 'undefined'
                ? 'undefined'
                : _typeof(exports)) === 'object'
            )
              exports['Module'] = Module;
            /* WEBPACK VAR INJECTION */
          }).call(
            exports,
            '/index.js',
            __webpack_require__(3),
            '/',
            __webpack_require__(4).Buffer,
            __webpack_require__(20)(module)
          );

          /***/
        },
        /* 82 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          var pako = __webpack_require__(40);
          var JSONbig = __webpack_require__(13);

          var config = __webpack_require__(6);
          var utils = __webpack_require__(5);
          var speex = __webpack_require__(39);
          var HoundWebsocket = __webpack_require__(91);
          var Processor = __webpack_require__(115);
          var Response = __webpack_require__(29);

          var state = {
            READY: 'ready',
            STREAMING: 'streaming',
            DONE: 'done',
            ERROR: 'error',
          };

          var VoiceRequest = (function () {
            function VoiceRequest(opts) {
              var _this = this;

              _classCallCheck(this, VoiceRequest);

              this.state = state.READY;

              if (opts['clientId']) {
                this.clientId = opts['clientId'];
              } else {
                throw new Error(
                  "VoiceRequest requires Houndify Client ID 'clientId'."
                );
              }

              if (opts['clientKey']) {
                this.clientKey = opts['clientKey'];
              } else if (opts['authURL']) {
                this.authURL = opts['authURL'];
              } else {
                throw new Error(
                  "VoiceRequest requires either 'clientKey' or 'authURL' for authentication."
                );
              }

              this.onResponse = utils.wrapListener(
                opts['onResponse'],
                'onResponse'
              );
              this.onError = utils.wrapListener(opts['onError'], 'onError');
              this.onTranscriptionUpdate = utils.wrapListener(
                opts['onTranscriptionUpdate'],
                'onTranscriptionUpdate'
              );
              this.onAbort = utils.wrapListener(opts['onAbort'], 'onAbort');

              this.requestInfo = utils.cloneObject(opts['requestInfo']);
              this.conversationState = opts['conversationState'];

              this.convertAudioToSpeex =
                opts['convertAudioToSpeex'] ||
                opts['convertAudioToSpeex'] === undefined
                  ? true
                  : false;
              this.sampleRate = opts['sampleRate'] || 16000;
              this.enableVAD =
                opts['enableVAD'] || opts['enableVAD'] === undefined
                  ? true
                  : false;

              this.endpoint = opts['endpoint'] || config.VOICE_ENDPOINT_WS;
              this.proxy = utils.cloneObject(opts['proxy'] || {});

              // Set up houndify connection
              this.connection = new HoundWebsocket(this);
              this.connection
                .on('message', function (messageBody) {
                  //new message from houndify (partial transcript (with VAD flag) or final result)
                  try {
                    var message = new Response(messageBody);
                  } catch (e) {
                    utils.log(
                      'voice_request: unable to parse messageBody',
                      messageBody
                    );
                    _onError.call(_this, {
                      type: 'UNEXPECTED_MESSAGE',
                      exception: messageBody,
                    });
                  }
                  // Typo in spelling of the word partial in backend! PartialTranscript = ParialTranscript, Do not change this.
                  if (
                    'Format' in message &&
                    (message.Format ==
                      'SoundHoundVoiceSearchParialTranscript' ||
                      message.Format == 'HoundVoiceQueryPartialTranscript')
                  ) {
                    _onTranscript.call(_this, message);
                  } else if (
                    'Format' in message &&
                    (message.Format == 'SoundHoundVoiceSearchResult' ||
                      message.Format == 'HoundQueryResult')
                  ) {
                    _onResponse.call(_this, message, messageBody);
                  } else {
                    utils.log('voice_request: unexpected message', message);
                    _onError.call(_this, {
                      type: 'UNEXPECTED_MESSAGE',
                      exception: message,
                    });

                    _this.connection.done();
                    _this.end();
                  }
                })
                .on('error', function (err) {
                  _onError.call(_this, err);
                });

              _startStreaming.apply(this);
            }

            _createClass(VoiceRequest, [
              {
                key: 'write',
                value: function write(audioData) {
                  if (this.state !== state.STREAMING) return;

                  if (this.convertAudioToSpeex) {
                    if (this.processor) {
                      this.processor.process(audioData);
                    } else {
                      this.processorBuffer.push(audioData);
                    }
                  } else {
                    this.connection.send(audioData);
                  }
                },
              },
              {
                key: 'end',
                value: function end() {
                  if (this.state !== state.STREAMING) return;

                  this.state = state.DONE;
                  this.searchInfo['recordingEndTime'] = new Date();

                  if (this.convertAudioToSpeex && !this.processor) {
                    this.processorBuffer.push('endOfAudio');
                  } else {
                    this.connection.endOfAudio();
                  }
                },
              },
              {
                key: 'abort',
                value: function abort() {
                  if (!this.connection.isActive()) return;
                  this.state = state.DONE;

                  this.searchInfo['endTime'] = new Date();

                  this.connection.close();

                  this.onAbort(this.searchInfo);
                },
              },
              {
                key: 'isStreaming',
                value: function isStreaming() {
                  return this.state === state.STREAMING;
                },
              },
            ]);

            return VoiceRequest;
          })();

          function _startStreaming() {
            var _this2 = this;

            if (this.state !== state.READY) return;
            this.state = state.STREAMING;

            utils.log('voice_request: initialized');

            this.requestInfo['ClientID'] = this.clientId;
            this.requestInfo['ObjectByteCountPrefix'] = true; //always true for websocket voice search
            this.requestInfo['PartialTranscriptsDesired'] = true; //always true for websocket voice search
            this.requestInfo['SDK'] = 'web';
            this.requestInfo['SDKVersion'] = config.version;

            if (this.conversationState && this.conversationState) {
              this.requestInfo['ConversationState'] = this.conversationState;
              this.requestInfo['ConversationStateTime'] =
                this.conversationState.ConversationStateTime;
            }

            //Set up search info json
            this.searchInfo = {
              type: 'voice',
              startTime: new Date(),
              endTime: -1,
              vadEnabled: this.enableVAD,
              requestInfo: this.requestInfo,
              partialTranscriptLatencies: [],
              getTotalDuration: function getTotalDuration() {
                return this['endTime'] - this['startTime'];
              },
            };

            this.connection.connect(this.requestInfo);

            //Sending request info
            var compressedRequestInfo = pako.gzip(
              JSONbig.stringify(this.requestInfo)
            );
            this.connection.send(compressedRequestInfo);

            if (this.convertAudioToSpeex) {
              this.processorBuffer = [];
              speex
                .onReady()
                .then(function (speexInstance) {
                  _this2.processor = new Processor(
                    _this2.sampleRate,
                    speexInstance
                  );
                  _this2.processor
                    .on('frame', function (frame) {
                      _this2.connection.send(frame);
                    })
                    .on('error', function (err) {
                      _onError.call(_this2, err);
                    });
                  _this2.connection.send(
                    _this2.sampleRate < 16000
                      ? speexInstance.headerNB
                      : speexInstance.headerWB
                  );
                  while (_this2.processorBuffer.length > 0) {
                    var bufferItem = _this2.processorBuffer.shift();
                    if (bufferItem === 'endOfAudio') {
                      _this2.connection.endOfAudio();
                    } else {
                      _this2.processor.process(bufferItem);
                    }
                  }
                })
                .catch(function (err) {
                  _onError.call(_this2, err);
                });
            }
          }

          function _onError(error) {
            this.state = state.ERROR;

            this.searchInfo['error'] = error;
            this.searchInfo['endTime'] = new Date();

            try {
              this.connection && this.connection.close();
            } catch (err) {
              this.onError(err, this.searchInfo);
            }

            this.onError(error, this.searchInfo);
          }

          function _onTranscript(message) {
            utils.log('voice_request: partial transcript', message);
            this.onTranscriptionUpdate(message);

            //calculate transcript latency
            this.searchInfo['partialTranscriptLatencies'].push(
              new Date() - this.searchInfo['startTime'] - message['DurationMS']
            );

            //Server-side VAD
            if (message.SafeToStopAudio && this.enableVAD) {
              utils.log('voice_request: safe to stop audio');
              this.end();
            }

            if (message.Done) {
              utils.log(
                'voice_request: done with transcripts. waiting for final response...'
              );
              this.connection.done();
            }
          }

          function _onResponse(message, messageBody) {
            utils.log('voice_request: final result', message);

            this.connection.done();
            this.end();

            if (message.Status == 'Error') {
              return _onError.call(this, {
                type: 'SERVER',
                exception: message,
              });
            }

            this.searchInfo['contentBody'] = messageBody;
            this.searchInfo['endTime'] = new Date();

            this.onResponse(message, this.searchInfo);
          }

          module.exports = VoiceRequest;

          /***/
        },
        /* 83 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var zlib_deflate = __webpack_require__(84);
          var utils = __webpack_require__(7);
          var strings = __webpack_require__(43);
          var msg = __webpack_require__(21);
          var ZStream = __webpack_require__(44);

          var toString = Object.prototype.toString;

          /* Public constants ==========================================================*/
          /* ===========================================================================*/

          var Z_NO_FLUSH = 0;
          var Z_FINISH = 4;

          var Z_OK = 0;
          var Z_STREAM_END = 1;
          var Z_SYNC_FLUSH = 2;

          var Z_DEFAULT_COMPRESSION = -1;

          var Z_DEFAULT_STRATEGY = 0;

          var Z_DEFLATED = 8;

          /* ===========================================================================*/

          /**
           * class Deflate
           *
           * Generic JS-style wrapper for zlib calls. If you don't need
           * streaming behaviour - use more simple functions: [[deflate]],
           * [[deflateRaw]] and [[gzip]].
           **/

          /* internal
           * Deflate.chunks -> Array
           *
           * Chunks of output data, if [[Deflate#onData]] not overridden.
           **/

          /**
           * Deflate.result -> Uint8Array|Array
           *
           * Compressed result, generated by default [[Deflate#onData]]
           * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
           * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you
           * push a chunk with explicit flush (call [[Deflate#push]] with
           * `Z_SYNC_FLUSH` param).
           **/

          /**
           * Deflate.err -> Number
           *
           * Error code after deflate finished. 0 (Z_OK) on success.
           * You will not need it in real life, because deflate errors
           * are possible only on wrong options or bad `onData` / `onEnd`
           * custom handlers.
           **/

          /**
           * Deflate.msg -> String
           *
           * Error message, if [[Deflate.err]] != 0
           **/

          /**
           * new Deflate(options)
           * - options (Object): zlib deflate options.
           *
           * Creates new deflator instance with specified params. Throws exception
           * on bad params. Supported options:
           *
           * - `level`
           * - `windowBits`
           * - `memLevel`
           * - `strategy`
           * - `dictionary`
           *
           * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
           * for more information on these.
           *
           * Additional options, for internal needs:
           *
           * - `chunkSize` - size of generated data chunks (16K by default)
           * - `raw` (Boolean) - do raw deflate
           * - `gzip` (Boolean) - create gzip wrapper
           * - `to` (String) - if equal to 'string', then result will be "binary string"
           *    (each char code [0..255])
           * - `header` (Object) - custom header for gzip
           *   - `text` (Boolean) - true if compressed data believed to be text
           *   - `time` (Number) - modification time, unix timestamp
           *   - `os` (Number) - operation system code
           *   - `extra` (Array) - array of bytes with extra data (max 65536)
           *   - `name` (String) - file name (binary string)
           *   - `comment` (String) - comment (binary string)
           *   - `hcrc` (Boolean) - true if header crc should be added
           *
           * ##### Example:
           *
           * ```javascript
           * var pako = require('pako')
           *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
           *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
           *
           * var deflate = new pako.Deflate({ level: 3});
           *
           * deflate.push(chunk1, false);
           * deflate.push(chunk2, true);  // true -> last chunk
           *
           * if (deflate.err) { throw new Error(deflate.err); }
           *
           * console.log(deflate.result);
           * ```
           **/
          function Deflate(options) {
            if (!(this instanceof Deflate)) return new Deflate(options);

            this.options = utils.assign(
              {
                level: Z_DEFAULT_COMPRESSION,
                method: Z_DEFLATED,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: Z_DEFAULT_STRATEGY,
                to: '',
              },
              options || {}
            );

            var opt = this.options;

            if (opt.raw && opt.windowBits > 0) {
              opt.windowBits = -opt.windowBits;
            } else if (opt.gzip && opt.windowBits > 0 && opt.windowBits < 16) {
              opt.windowBits += 16;
            }

            this.err = 0; // error code, if happens (0 = Z_OK)
            this.msg = ''; // error message
            this.ended = false; // used to avoid multiple onEnd() calls
            this.chunks = []; // chunks of compressed data

            this.strm = new ZStream();
            this.strm.avail_out = 0;

            var status = zlib_deflate.deflateInit2(
              this.strm,
              opt.level,
              opt.method,
              opt.windowBits,
              opt.memLevel,
              opt.strategy
            );

            if (status !== Z_OK) {
              throw new Error(msg[status]);
            }

            if (opt.header) {
              zlib_deflate.deflateSetHeader(this.strm, opt.header);
            }

            if (opt.dictionary) {
              var dict;
              // Convert data if needed
              if (typeof opt.dictionary === 'string') {
                // If we need to compress text, change encoding to utf8.
                dict = strings.string2buf(opt.dictionary);
              } else if (
                toString.call(opt.dictionary) === '[object ArrayBuffer]'
              ) {
                dict = new Uint8Array(opt.dictionary);
              } else {
                dict = opt.dictionary;
              }

              status = zlib_deflate.deflateSetDictionary(this.strm, dict);

              if (status !== Z_OK) {
                throw new Error(msg[status]);
              }

              this._dict_set = true;
            }
          }

          /**
           * Deflate#push(data[, mode]) -> Boolean
           * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be
           *   converted to utf8 byte sequence.
           * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
           *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
           *
           * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
           * new compressed chunks. Returns `true` on success. The last data block must have
           * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
           * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you
           * can use mode Z_SYNC_FLUSH, keeping the compression context.
           *
           * On fail call [[Deflate#onEnd]] with error code and return false.
           *
           * We strongly recommend to use `Uint8Array` on input for best speed (output
           * array format is detected automatically). Also, don't skip last param and always
           * use the same type in your code (boolean or number). That will improve JS speed.
           *
           * For regular `Array`-s make sure all elements are [0..255].
           *
           * ##### Example
           *
           * ```javascript
           * push(chunk, false); // push one of data chunks
           * ...
           * push(chunk, true);  // push last chunk
           * ```
           **/
          Deflate.prototype.push = function (data, mode) {
            var strm = this.strm;
            var chunkSize = this.options.chunkSize;
            var status, _mode;

            if (this.ended) {
              return false;
            }

            _mode =
              mode === ~~mode ? mode : mode === true ? Z_FINISH : Z_NO_FLUSH;

            // Convert data if needed
            if (typeof data === 'string') {
              // If we need to compress text, change encoding to utf8.
              strm.input = strings.string2buf(data);
            } else if (toString.call(data) === '[object ArrayBuffer]') {
              strm.input = new Uint8Array(data);
            } else {
              strm.input = data;
            }

            strm.next_in = 0;
            strm.avail_in = strm.input.length;

            do {
              if (strm.avail_out === 0) {
                strm.output = new utils.Buf8(chunkSize);
                strm.next_out = 0;
                strm.avail_out = chunkSize;
              }
              status = zlib_deflate.deflate(
                strm,
                _mode
              ); /* no bad return value */

              if (status !== Z_STREAM_END && status !== Z_OK) {
                this.onEnd(status);
                this.ended = true;
                return false;
              }
              if (
                strm.avail_out === 0 ||
                (strm.avail_in === 0 &&
                  (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))
              ) {
                if (this.options.to === 'string') {
                  this.onData(
                    strings.buf2binstring(
                      utils.shrinkBuf(strm.output, strm.next_out)
                    )
                  );
                } else {
                  this.onData(utils.shrinkBuf(strm.output, strm.next_out));
                }
              }
            } while (
              (strm.avail_in > 0 || strm.avail_out === 0) &&
              status !== Z_STREAM_END
            );

            // Finalize on the last chunk.
            if (_mode === Z_FINISH) {
              status = zlib_deflate.deflateEnd(this.strm);
              this.onEnd(status);
              this.ended = true;
              return status === Z_OK;
            }

            // callback interim results if Z_SYNC_FLUSH.
            if (_mode === Z_SYNC_FLUSH) {
              this.onEnd(Z_OK);
              strm.avail_out = 0;
              return true;
            }

            return true;
          };

          /**
           * Deflate#onData(chunk) -> Void
           * - chunk (Uint8Array|Array|String): output data. Type of array depends
           *   on js engine support. When string output requested, each chunk
           *   will be string.
           *
           * By default, stores data blocks in `chunks[]` property and glue
           * those in `onEnd`. Override this handler, if you need another behaviour.
           **/
          Deflate.prototype.onData = function (chunk) {
            this.chunks.push(chunk);
          };

          /**
           * Deflate#onEnd(status) -> Void
           * - status (Number): deflate status. 0 (Z_OK) on success,
           *   other if not.
           *
           * Called once after you tell deflate that the input stream is
           * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
           * or if an error happened. By default - join collected chunks,
           * free memory and fill `results` / `err` properties.
           **/
          Deflate.prototype.onEnd = function (status) {
            // On success - join
            if (status === Z_OK) {
              if (this.options.to === 'string') {
                this.result = this.chunks.join('');
              } else {
                this.result = utils.flattenChunks(this.chunks);
              }
            }
            this.chunks = [];
            this.err = status;
            this.msg = this.strm.msg;
          };

          /**
           * deflate(data[, options]) -> Uint8Array|Array|String
           * - data (Uint8Array|Array|String): input data to compress.
           * - options (Object): zlib deflate options.
           *
           * Compress `data` with deflate algorithm and `options`.
           *
           * Supported options are:
           *
           * - level
           * - windowBits
           * - memLevel
           * - strategy
           * - dictionary
           *
           * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
           * for more information on these.
           *
           * Sugar (options):
           *
           * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
           *   negative windowBits implicitly.
           * - `to` (String) - if equal to 'string', then result will be "binary string"
           *    (each char code [0..255])
           *
           * ##### Example:
           *
           * ```javascript
           * var pako = require('pako')
           *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);
           *
           * console.log(pako.deflate(data));
           * ```
           **/
          function deflate(input, options) {
            var deflator = new Deflate(options);

            deflator.push(input, true);

            // That will never happens, if you don't cheat with options :)
            if (deflator.err) {
              throw deflator.msg || msg[deflator.err];
            }

            return deflator.result;
          }

          /**
           * deflateRaw(data[, options]) -> Uint8Array|Array|String
           * - data (Uint8Array|Array|String): input data to compress.
           * - options (Object): zlib deflate options.
           *
           * The same as [[deflate]], but creates raw data, without wrapper
           * (header and adler32 crc).
           **/
          function deflateRaw(input, options) {
            options = options || {};
            options.raw = true;
            return deflate(input, options);
          }

          /**
           * gzip(data[, options]) -> Uint8Array|Array|String
           * - data (Uint8Array|Array|String): input data to compress.
           * - options (Object): zlib deflate options.
           *
           * The same as [[deflate]], but create gzip wrapper instead of
           * deflate one.
           **/
          function gzip(input, options) {
            options = options || {};
            options.gzip = true;
            return deflate(input, options);
          }

          exports.Deflate = Deflate;
          exports.deflate = deflate;
          exports.deflateRaw = deflateRaw;
          exports.gzip = gzip;

          /***/
        },
        /* 84 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          var utils = __webpack_require__(7);
          var trees = __webpack_require__(85);
          var adler32 = __webpack_require__(41);
          var crc32 = __webpack_require__(42);
          var msg = __webpack_require__(21);

          /* Public constants ==========================================================*/
          /* ===========================================================================*/

          /* Allowed flush values; see deflate() and inflate() below for details */
          var Z_NO_FLUSH = 0;
          var Z_PARTIAL_FLUSH = 1;
          //var Z_SYNC_FLUSH    = 2;
          var Z_FULL_FLUSH = 3;
          var Z_FINISH = 4;
          var Z_BLOCK = 5;
          //var Z_TREES         = 6;

          /* Return codes for the compression/decompression functions. Negative values
           * are errors, positive values are used for special but normal events.
           */
          var Z_OK = 0;
          var Z_STREAM_END = 1;
          //var Z_NEED_DICT     = 2;
          //var Z_ERRNO         = -1;
          var Z_STREAM_ERROR = -2;
          var Z_DATA_ERROR = -3;
          //var Z_MEM_ERROR     = -4;
          var Z_BUF_ERROR = -5;
          //var Z_VERSION_ERROR = -6;

          /* compression levels */
          //var Z_NO_COMPRESSION      = 0;
          //var Z_BEST_SPEED          = 1;
          //var Z_BEST_COMPRESSION    = 9;
          var Z_DEFAULT_COMPRESSION = -1;

          var Z_FILTERED = 1;
          var Z_HUFFMAN_ONLY = 2;
          var Z_RLE = 3;
          var Z_FIXED = 4;
          var Z_DEFAULT_STRATEGY = 0;

          /* Possible values of the data_type field (though see inflate()) */
          //var Z_BINARY              = 0;
          //var Z_TEXT                = 1;
          //var Z_ASCII               = 1; // = Z_TEXT
          var Z_UNKNOWN = 2;

          /* The deflate compression method */
          var Z_DEFLATED = 8;

          /*============================================================================*/

          var MAX_MEM_LEVEL = 9;
          /* Maximum value for memLevel in deflateInit2 */
          var MAX_WBITS = 15;
          /* 32K LZ77 window */
          var DEF_MEM_LEVEL = 8;

          var LENGTH_CODES = 29;
          /* number of length codes, not counting the special END_BLOCK code */
          var LITERALS = 256;
          /* number of literal bytes 0..255 */
          var L_CODES = LITERALS + 1 + LENGTH_CODES;
          /* number of Literal or Length codes, including the END_BLOCK code */
          var D_CODES = 30;
          /* number of distance codes */
          var BL_CODES = 19;
          /* number of codes used to transfer the bit lengths */
          var HEAP_SIZE = 2 * L_CODES + 1;
          /* maximum heap size */
          var MAX_BITS = 15;
          /* All codes must not exceed MAX_BITS bits */

          var MIN_MATCH = 3;
          var MAX_MATCH = 258;
          var MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1;

          var PRESET_DICT = 0x20;

          var INIT_STATE = 42;
          var EXTRA_STATE = 69;
          var NAME_STATE = 73;
          var COMMENT_STATE = 91;
          var HCRC_STATE = 103;
          var BUSY_STATE = 113;
          var FINISH_STATE = 666;

          var BS_NEED_MORE = 1; /* block not completed, need more input or more output */
          var BS_BLOCK_DONE = 2; /* block flush performed */
          var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
          var BS_FINISH_DONE = 4; /* finish done, accept no more input or output */

          var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

          function err(strm, errorCode) {
            strm.msg = msg[errorCode];
            return errorCode;
          }

          function rank(f) {
            return (f << 1) - (f > 4 ? 9 : 0);
          }

          function zero(buf) {
            var len = buf.length;
            while (--len >= 0) {
              buf[len] = 0;
            }
          }

          /* =========================================================================
           * Flush as much pending output as possible. All deflate() output goes
           * through this function so some applications may wish to modify it
           * to avoid allocating a large strm->output buffer and copying into it.
           * (See also read_buf()).
           */
          function flush_pending(strm) {
            var s = strm.state;

            //_tr_flush_bits(s);
            var len = s.pending;
            if (len > strm.avail_out) {
              len = strm.avail_out;
            }
            if (len === 0) {
              return;
            }

            utils.arraySet(
              strm.output,
              s.pending_buf,
              s.pending_out,
              len,
              strm.next_out
            );
            strm.next_out += len;
            s.pending_out += len;
            strm.total_out += len;
            strm.avail_out -= len;
            s.pending -= len;
            if (s.pending === 0) {
              s.pending_out = 0;
            }
          }

          function flush_block_only(s, last) {
            trees._tr_flush_block(
              s,
              s.block_start >= 0 ? s.block_start : -1,
              s.strstart - s.block_start,
              last
            );
            s.block_start = s.strstart;
            flush_pending(s.strm);
          }

          function put_byte(s, b) {
            s.pending_buf[s.pending++] = b;
          }

          /* =========================================================================
           * Put a short in the pending buffer. The 16-bit value is put in MSB order.
           * IN assertion: the stream state is correct and there is enough room in
           * pending_buf.
           */
          function putShortMSB(s, b) {
            //  put_byte(s, (Byte)(b >> 8));
            //  put_byte(s, (Byte)(b & 0xff));
            s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
            s.pending_buf[s.pending++] = b & 0xff;
          }

          /* ===========================================================================
           * Read a new buffer from the current input stream, update the adler32
           * and total number of bytes read.  All deflate() input goes through
           * this function so some applications may wish to modify it to avoid
           * allocating a large strm->input buffer and copying from it.
           * (See also flush_pending()).
           */
          function read_buf(strm, buf, start, size) {
            var len = strm.avail_in;

            if (len > size) {
              len = size;
            }
            if (len === 0) {
              return 0;
            }

            strm.avail_in -= len;

            // zmemcpy(buf, strm->next_in, len);
            utils.arraySet(buf, strm.input, strm.next_in, len, start);
            if (strm.state.wrap === 1) {
              strm.adler = adler32(strm.adler, buf, len, start);
            } else if (strm.state.wrap === 2) {
              strm.adler = crc32(strm.adler, buf, len, start);
            }

            strm.next_in += len;
            strm.total_in += len;

            return len;
          }

          /* ===========================================================================
           * Set match_start to the longest match starting at the given string and
           * return its length. Matches shorter or equal to prev_length are discarded,
           * in which case the result is equal to prev_length and match_start is
           * garbage.
           * IN assertions: cur_match is the head of the hash chain for the current
           *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
           * OUT assertion: the match length is not greater than s->lookahead.
           */
          function longest_match(s, cur_match) {
            var chain_length = s.max_chain_length; /* max hash chain length */
            var scan = s.strstart; /* current string */
            var match; /* matched string */
            var len; /* length of current match */
            var best_len = s.prev_length; /* best match length so far */
            var nice_match = s.nice_match; /* stop if match long enough */
            var limit =
              s.strstart > s.w_size - MIN_LOOKAHEAD
                ? s.strstart - (s.w_size - MIN_LOOKAHEAD)
                : 0; /*NIL*/

            var _win = s.window; // shortcut

            var wmask = s.w_mask;
            var prev = s.prev;

            /* Stop when cur_match becomes <= limit. To simplify the code,
             * we prevent matches with the string of window index 0.
             */

            var strend = s.strstart + MAX_MATCH;
            var scan_end1 = _win[scan + best_len - 1];
            var scan_end = _win[scan + best_len];

            /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
             * It is easy to get rid of this optimization if necessary.
             */
            // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

            /* Do not waste too much time if we already have a good match: */
            if (s.prev_length >= s.good_match) {
              chain_length >>= 2;
            }
            /* Do not look for matches beyond the end of the input. This is necessary
             * to make deflate deterministic.
             */
            if (nice_match > s.lookahead) {
              nice_match = s.lookahead;
            }

            // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

            do {
              // Assert(cur_match < s->strstart, "no future");
              match = cur_match;

              /* Skip to next match if the match length cannot increase
               * or if the match length is less than 2.  Note that the checks below
               * for insufficient lookahead only occur occasionally for performance
               * reasons.  Therefore uninitialized memory will be accessed, and
               * conditional jumps will be made that depend on those values.
               * However the length of the match is limited to the lookahead, so
               * the output of deflate is not affected by the uninitialized values.
               */

              if (
                _win[match + best_len] !== scan_end ||
                _win[match + best_len - 1] !== scan_end1 ||
                _win[match] !== _win[scan] ||
                _win[++match] !== _win[scan + 1]
              ) {
                continue;
              }

              /* The check at best_len-1 can be removed because it will be made
               * again later. (This heuristic is not always a win.)
               * It is not necessary to compare scan[2] and match[2] since they
               * are always equal when the other bytes match, given that
               * the hash keys are equal and that HASH_BITS >= 8.
               */
              scan += 2;
              match++;
              // Assert(*scan == *match, "match[2]?");

              /* We check for insufficient lookahead only every 8th comparison;
               * the 256th check will be made at strstart+258.
               */
              do {
                /*jshint noempty:false*/
              } while (
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                _win[++scan] === _win[++match] &&
                scan < strend
              );

              // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

              len = MAX_MATCH - (strend - scan);
              scan = strend - MAX_MATCH;

              if (len > best_len) {
                s.match_start = cur_match;
                best_len = len;
                if (len >= nice_match) {
                  break;
                }
                scan_end1 = _win[scan + best_len - 1];
                scan_end = _win[scan + best_len];
              }
            } while (
              (cur_match = prev[cur_match & wmask]) > limit &&
              --chain_length !== 0
            );

            if (best_len <= s.lookahead) {
              return best_len;
            }
            return s.lookahead;
          }

          /* ===========================================================================
           * Fill the window when the lookahead becomes insufficient.
           * Updates strstart and lookahead.
           *
           * IN assertion: lookahead < MIN_LOOKAHEAD
           * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
           *    At least one byte has been read, or avail_in == 0; reads are
           *    performed for at least two bytes (required for the zip translate_eol
           *    option -- not supported here).
           */
          function fill_window(s) {
            var _w_size = s.w_size;
            var p, n, m, more, str;

            //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

            do {
              more = s.window_size - s.lookahead - s.strstart;

              // JS ints have 32 bit, block below not needed
              /* Deal with !@#$% 64K limit: */
              //if (sizeof(int) <= 2) {
              //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
              //        more = wsize;
              //
              //  } else if (more == (unsigned)(-1)) {
              //        /* Very unlikely, but possible on 16 bit machine if
              //         * strstart == 0 && lookahead == 1 (input done a byte at time)
              //         */
              //        more--;
              //    }
              //}

              /* If the window is almost full and there is insufficient lookahead,
               * move the upper half to the lower one to make room in the upper half.
               */
              if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {
                utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
                s.match_start -= _w_size;
                s.strstart -= _w_size;
                /* we now have strstart >= MAX_DIST */
                s.block_start -= _w_size;

                /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

                n = s.hash_size;
                p = n;
                do {
                  m = s.head[--p];
                  s.head[p] = m >= _w_size ? m - _w_size : 0;
                } while (--n);

                n = _w_size;
                p = n;
                do {
                  m = s.prev[--p];
                  s.prev[p] = m >= _w_size ? m - _w_size : 0;
                  /* If n is not on any hash chain, prev[n] is garbage but
                   * its value will never be used.
                   */
                } while (--n);

                more += _w_size;
              }
              if (s.strm.avail_in === 0) {
                break;
              }

              /* If there was no sliding:
               *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
               *    more == window_size - lookahead - strstart
               * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
               * => more >= window_size - 2*WSIZE + 2
               * In the BIG_MEM or MMAP case (not yet supported),
               *   window_size == input_size + MIN_LOOKAHEAD  &&
               *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
               * Otherwise, window_size == 2*WSIZE so more >= 2.
               * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
               */
              //Assert(more >= 2, "more < 2");
              n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
              s.lookahead += n;

              /* Initialize the hash value now that we have some input: */
              if (s.lookahead + s.insert >= MIN_MATCH) {
                str = s.strstart - s.insert;
                s.ins_h = s.window[str];

                /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
                s.ins_h =
                  ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
                //#if MIN_MATCH != 3
                //        Call update_hash() MIN_MATCH-3 more times
                //#endif
                while (s.insert) {
                  /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
                  s.ins_h =
                    ((s.ins_h << s.hash_shift) ^
                      s.window[str + MIN_MATCH - 1]) &
                    s.hash_mask;

                  s.prev[str & s.w_mask] = s.head[s.ins_h];
                  s.head[s.ins_h] = str;
                  str++;
                  s.insert--;
                  if (s.lookahead + s.insert < MIN_MATCH) {
                    break;
                  }
                }
              }
              /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
               * but this is not important since only literal bytes will be emitted.
               */
            } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

            /* If the WIN_INIT bytes after the end of the current data have never been
             * written, then zero those bytes in order to avoid memory check reports of
             * the use of uninitialized (or uninitialised as Julian writes) bytes by
             * the longest match routines.  Update the high water mark for the next
             * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
             * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
             */
            //  if (s.high_water < s.window_size) {
            //    var curr = s.strstart + s.lookahead;
            //    var init = 0;
            //
            //    if (s.high_water < curr) {
            //      /* Previous high water mark below current data -- zero WIN_INIT
            //       * bytes or up to end of window, whichever is less.
            //       */
            //      init = s.window_size - curr;
            //      if (init > WIN_INIT)
            //        init = WIN_INIT;
            //      zmemzero(s->window + curr, (unsigned)init);
            //      s->high_water = curr + init;
            //    }
            //    else if (s->high_water < (ulg)curr + WIN_INIT) {
            //      /* High water mark at or above current data, but below current data
            //       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
            //       * to end of window, whichever is less.
            //       */
            //      init = (ulg)curr + WIN_INIT - s->high_water;
            //      if (init > s->window_size - s->high_water)
            //        init = s->window_size - s->high_water;
            //      zmemzero(s->window + s->high_water, (unsigned)init);
            //      s->high_water += init;
            //    }
            //  }
            //
            //  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
            //    "not enough room for search");
          }

          /* ===========================================================================
           * Copy without compression as much as possible from the input stream, return
           * the current block state.
           * This function does not insert new strings in the dictionary since
           * uncompressible data is probably not useful. This function is used
           * only for the level=0 compression option.
           * NOTE: this function should be optimized to avoid extra copying from
           * window to pending_buf.
           */
          function deflate_stored(s, flush) {
            /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
             * to pending_buf_size, and each stored block has a 5 byte header:
             */
            var max_block_size = 0xffff;

            if (max_block_size > s.pending_buf_size - 5) {
              max_block_size = s.pending_buf_size - 5;
            }

            /* Copy as much as possible from input to output: */
            for (;;) {
              /* Fill the window as much as possible: */
              if (s.lookahead <= 1) {
                //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
                //  s->block_start >= (long)s->w_size, "slide too late");
                //      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
                //        s.block_start >= s.w_size)) {
                //        throw  new Error("slide too late");
                //      }

                fill_window(s);
                if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
                  return BS_NEED_MORE;
                }

                if (s.lookahead === 0) {
                  break;
                }
                /* flush the current block */
              }
              //Assert(s->block_start >= 0L, "block gone");
              //    if (s.block_start < 0) throw new Error("block gone");

              s.strstart += s.lookahead;
              s.lookahead = 0;

              /* Emit a stored block if pending_buf will be full: */
              var max_start = s.block_start + max_block_size;

              if (s.strstart === 0 || s.strstart >= max_start) {
                /* strstart == 0 is possible when wraparound on 16-bit machine */
                s.lookahead = s.strstart - max_start;
                s.strstart = max_start;
                /*** FLUSH_BLOCK(s, 0); ***/
                flush_block_only(s, false);
                if (s.strm.avail_out === 0) {
                  return BS_NEED_MORE;
                }
                /***/
              }
              /* Flush if we may have to slide, otherwise block_start may become
               * negative and the data will be gone:
               */
              if (s.strstart - s.block_start >= s.w_size - MIN_LOOKAHEAD) {
                /*** FLUSH_BLOCK(s, 0); ***/
                flush_block_only(s, false);
                if (s.strm.avail_out === 0) {
                  return BS_NEED_MORE;
                }
                /***/
              }
            }

            s.insert = 0;

            if (flush === Z_FINISH) {
              /*** FLUSH_BLOCK(s, 1); ***/
              flush_block_only(s, true);
              if (s.strm.avail_out === 0) {
                return BS_FINISH_STARTED;
              }
              /***/
              return BS_FINISH_DONE;
            }

            if (s.strstart > s.block_start) {
              /*** FLUSH_BLOCK(s, 0); ***/
              flush_block_only(s, false);
              if (s.strm.avail_out === 0) {
                return BS_NEED_MORE;
              }
              /***/
            }

            return BS_NEED_MORE;
          }

          /* ===========================================================================
           * Compress as much as possible from the input stream, return the current
           * block state.
           * This function does not perform lazy evaluation of matches and inserts
           * new strings in the dictionary only for unmatched strings or for short
           * matches. It is used only for the fast compression options.
           */
          function deflate_fast(s, flush) {
            var hash_head; /* head of the hash chain */
            var bflush; /* set if current block must be flushed */

            for (;;) {
              /* Make sure that we always have enough lookahead, except
               * at the end of the input file. We need MAX_MATCH bytes
               * for the next match, plus MIN_MATCH bytes to insert the
               * string following the next match.
               */
              if (s.lookahead < MIN_LOOKAHEAD) {
                fill_window(s);
                if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
                  return BS_NEED_MORE;
                }
                if (s.lookahead === 0) {
                  break; /* flush the current block */
                }
              }

              /* Insert the string window[strstart .. strstart+2] in the
               * dictionary, and set hash_head to the head of the hash chain:
               */
              hash_head = 0 /*NIL*/;
              if (s.lookahead >= MIN_MATCH) {
                /*** INSERT_STRING(s, s.strstart, hash_head); ***/
                s.ins_h =
                  ((s.ins_h << s.hash_shift) ^
                    s.window[s.strstart + MIN_MATCH - 1]) &
                  s.hash_mask;
                hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
                s.head[s.ins_h] = s.strstart;
                /***/
              }

              /* Find the longest match, discarding those <= prev_length.
               * At this point we have always match_length < MIN_MATCH
               */
              if (
                hash_head !== 0 /*NIL*/ &&
                s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD
              ) {
                /* To simplify the code, we prevent matches with the string
                 * of window index 0 (in particular we have to avoid a match
                 * of the string with itself at the start of the input file).
                 */
                s.match_length = longest_match(s, hash_head);
                /* longest_match() sets match_start */
              }
              if (s.match_length >= MIN_MATCH) {
                // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

                /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
                bflush = trees._tr_tally(
                  s,
                  s.strstart - s.match_start,
                  s.match_length - MIN_MATCH
                );

                s.lookahead -= s.match_length;

                /* Insert new strings in the hash table only if the match length
                 * is not too large. This saves time but degrades compression.
                 */
                if (
                  s.match_length <= s.max_lazy_match /*max_insert_length*/ &&
                  s.lookahead >= MIN_MATCH
                ) {
                  s.match_length--; /* string at strstart already in table */
                  do {
                    s.strstart++;
                    /*** INSERT_STRING(s, s.strstart, hash_head); ***/
                    s.ins_h =
                      ((s.ins_h << s.hash_shift) ^
                        s.window[s.strstart + MIN_MATCH - 1]) &
                      s.hash_mask;
                    hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
                    s.head[s.ins_h] = s.strstart;
                    /***/
                    /* strstart never exceeds WSIZE-MAX_MATCH, so there are
                     * always MIN_MATCH bytes ahead.
                     */
                  } while (--s.match_length !== 0);
                  s.strstart++;
                } else {
                  s.strstart += s.match_length;
                  s.match_length = 0;
                  s.ins_h = s.window[s.strstart];
                  /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
                  s.ins_h =
                    ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) &
                    s.hash_mask;

                  //#if MIN_MATCH != 3
                  //                Call UPDATE_HASH() MIN_MATCH-3 more times
                  //#endif
                  /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
                   * matter since it will be recomputed at next deflate call.
                   */
                }
              } else {
                /* No match, output a literal byte */
                //Tracevv((stderr,"%c", s.window[s.strstart]));
                /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
                bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

                s.lookahead--;
                s.strstart++;
              }
              if (bflush) {
                /*** FLUSH_BLOCK(s, 0); ***/
                flush_block_only(s, false);
                if (s.strm.avail_out === 0) {
                  return BS_NEED_MORE;
                }
                /***/
              }
            }
            s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
            if (flush === Z_FINISH) {
              /*** FLUSH_BLOCK(s, 1); ***/
              flush_block_only(s, true);
              if (s.strm.avail_out === 0) {
                return BS_FINISH_STARTED;
              }
              /***/
              return BS_FINISH_DONE;
            }
            if (s.last_lit) {
              /*** FLUSH_BLOCK(s, 0); ***/
              flush_block_only(s, false);
              if (s.strm.avail_out === 0) {
                return BS_NEED_MORE;
              }
              /***/
            }
            return BS_BLOCK_DONE;
          }

          /* ===========================================================================
           * Same as above, but achieves better compression. We use a lazy
           * evaluation for matches: a match is finally adopted only if there is
           * no better match at the next window position.
           */
          function deflate_slow(s, flush) {
            var hash_head; /* head of hash chain */
            var bflush; /* set if current block must be flushed */

            var max_insert;

            /* Process the input block. */
            for (;;) {
              /* Make sure that we always have enough lookahead, except
               * at the end of the input file. We need MAX_MATCH bytes
               * for the next match, plus MIN_MATCH bytes to insert the
               * string following the next match.
               */
              if (s.lookahead < MIN_LOOKAHEAD) {
                fill_window(s);
                if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
                  return BS_NEED_MORE;
                }
                if (s.lookahead === 0) {
                  break;
                } /* flush the current block */
              }

              /* Insert the string window[strstart .. strstart+2] in the
               * dictionary, and set hash_head to the head of the hash chain:
               */
              hash_head = 0 /*NIL*/;
              if (s.lookahead >= MIN_MATCH) {
                /*** INSERT_STRING(s, s.strstart, hash_head); ***/
                s.ins_h =
                  ((s.ins_h << s.hash_shift) ^
                    s.window[s.strstart + MIN_MATCH - 1]) &
                  s.hash_mask;
                hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
                s.head[s.ins_h] = s.strstart;
                /***/
              }

              /* Find the longest match, discarding those <= prev_length.
               */
              s.prev_length = s.match_length;
              s.prev_match = s.match_start;
              s.match_length = MIN_MATCH - 1;

              if (
                hash_head !== 0 /*NIL*/ &&
                s.prev_length < s.max_lazy_match &&
                s.strstart - hash_head <=
                  s.w_size - MIN_LOOKAHEAD /*MAX_DIST(s)*/
              ) {
                /* To simplify the code, we prevent matches with the string
                 * of window index 0 (in particular we have to avoid a match
                 * of the string with itself at the start of the input file).
                 */
                s.match_length = longest_match(s, hash_head);
                /* longest_match() sets match_start */

                if (
                  s.match_length <= 5 &&
                  (s.strategy === Z_FILTERED ||
                    (s.match_length === MIN_MATCH &&
                      s.strstart - s.match_start > 4096)) /*TOO_FAR*/
                ) {
                  /* If prev_match is also MIN_MATCH, match_start is garbage
                   * but we will ignore the current match anyway.
                   */
                  s.match_length = MIN_MATCH - 1;
                }
              }
              /* If there was a match at the previous step and the current
               * match is not better, output the previous match:
               */
              if (
                s.prev_length >= MIN_MATCH &&
                s.match_length <= s.prev_length
              ) {
                max_insert = s.strstart + s.lookahead - MIN_MATCH;
                /* Do not insert strings in hash table beyond this. */

                //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

                /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
                bflush = trees._tr_tally(
                  s,
                  s.strstart - 1 - s.prev_match,
                  s.prev_length - MIN_MATCH
                );
                /* Insert in hash table all strings up to the end of the match.
                 * strstart-1 and strstart are already inserted. If there is not
                 * enough lookahead, the last two strings are not inserted in
                 * the hash table.
                 */
                s.lookahead -= s.prev_length - 1;
                s.prev_length -= 2;
                do {
                  if (++s.strstart <= max_insert) {
                    /*** INSERT_STRING(s, s.strstart, hash_head); ***/
                    s.ins_h =
                      ((s.ins_h << s.hash_shift) ^
                        s.window[s.strstart + MIN_MATCH - 1]) &
                      s.hash_mask;
                    hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
                    s.head[s.ins_h] = s.strstart;
                    /***/
                  }
                } while (--s.prev_length !== 0);
                s.match_available = 0;
                s.match_length = MIN_MATCH - 1;
                s.strstart++;

                if (bflush) {
                  /*** FLUSH_BLOCK(s, 0); ***/
                  flush_block_only(s, false);
                  if (s.strm.avail_out === 0) {
                    return BS_NEED_MORE;
                  }
                  /***/
                }
              } else if (s.match_available) {
                /* If there was no match at the previous position, output a
                 * single literal. If there was a match but the current match
                 * is longer, truncate the previous match to a single literal.
                 */
                //Tracevv((stderr,"%c", s->window[s->strstart-1]));
                /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
                bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

                if (bflush) {
                  /*** FLUSH_BLOCK_ONLY(s, 0) ***/
                  flush_block_only(s, false);
                  /***/
                }
                s.strstart++;
                s.lookahead--;
                if (s.strm.avail_out === 0) {
                  return BS_NEED_MORE;
                }
              } else {
                /* There is no previous match to compare with, wait for
                 * the next step to decide.
                 */
                s.match_available = 1;
                s.strstart++;
                s.lookahead--;
              }
            }
            //Assert (flush != Z_NO_FLUSH, "no flush?");
            if (s.match_available) {
              //Tracevv((stderr,"%c", s->window[s->strstart-1]));
              /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
              bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

              s.match_available = 0;
            }
            s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
            if (flush === Z_FINISH) {
              /*** FLUSH_BLOCK(s, 1); ***/
              flush_block_only(s, true);
              if (s.strm.avail_out === 0) {
                return BS_FINISH_STARTED;
              }
              /***/
              return BS_FINISH_DONE;
            }
            if (s.last_lit) {
              /*** FLUSH_BLOCK(s, 0); ***/
              flush_block_only(s, false);
              if (s.strm.avail_out === 0) {
                return BS_NEED_MORE;
              }
              /***/
            }

            return BS_BLOCK_DONE;
          }

          /* ===========================================================================
           * For Z_RLE, simply look for runs of bytes, generate matches only of distance
           * one.  Do not maintain a hash table.  (It will be regenerated if this run of
           * deflate switches away from Z_RLE.)
           */
          function deflate_rle(s, flush) {
            var bflush; /* set if current block must be flushed */
            var prev; /* byte at distance one to match */
            var scan, strend; /* scan goes up to strend for length of run */

            var _win = s.window;

            for (;;) {
              /* Make sure that we always have enough lookahead, except
               * at the end of the input file. We need MAX_MATCH bytes
               * for the longest run, plus one for the unrolled loop.
               */
              if (s.lookahead <= MAX_MATCH) {
                fill_window(s);
                if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
                  return BS_NEED_MORE;
                }
                if (s.lookahead === 0) {
                  break;
                } /* flush the current block */
              }

              /* See how many times the previous byte repeats */
              s.match_length = 0;
              if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
                scan = s.strstart - 1;
                prev = _win[scan];
                if (
                  prev === _win[++scan] &&
                  prev === _win[++scan] &&
                  prev === _win[++scan]
                ) {
                  strend = s.strstart + MAX_MATCH;
                  do {
                    /*jshint noempty:false*/
                  } while (
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    prev === _win[++scan] &&
                    scan < strend
                  );
                  s.match_length = MAX_MATCH - (strend - scan);
                  if (s.match_length > s.lookahead) {
                    s.match_length = s.lookahead;
                  }
                }
                //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
              }

              /* Emit match if have run of MIN_MATCH or longer, else emit literal */
              if (s.match_length >= MIN_MATCH) {
                //check_match(s, s.strstart, s.strstart - 1, s.match_length);

                /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
                bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

                s.lookahead -= s.match_length;
                s.strstart += s.match_length;
                s.match_length = 0;
              } else {
                /* No match, output a literal byte */
                //Tracevv((stderr,"%c", s->window[s->strstart]));
                /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
                bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

                s.lookahead--;
                s.strstart++;
              }
              if (bflush) {
                /*** FLUSH_BLOCK(s, 0); ***/
                flush_block_only(s, false);
                if (s.strm.avail_out === 0) {
                  return BS_NEED_MORE;
                }
                /***/
              }
            }
            s.insert = 0;
            if (flush === Z_FINISH) {
              /*** FLUSH_BLOCK(s, 1); ***/
              flush_block_only(s, true);
              if (s.strm.avail_out === 0) {
                return BS_FINISH_STARTED;
              }
              /***/
              return BS_FINISH_DONE;
            }
            if (s.last_lit) {
              /*** FLUSH_BLOCK(s, 0); ***/
              flush_block_only(s, false);
              if (s.strm.avail_out === 0) {
                return BS_NEED_MORE;
              }
              /***/
            }
            return BS_BLOCK_DONE;
          }

          /* ===========================================================================
           * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
           * (It will be regenerated if this run of deflate switches away from Huffman.)
           */
          function deflate_huff(s, flush) {
            var bflush; /* set if current block must be flushed */

            for (;;) {
              /* Make sure that we have a literal to write. */
              if (s.lookahead === 0) {
                fill_window(s);
                if (s.lookahead === 0) {
                  if (flush === Z_NO_FLUSH) {
                    return BS_NEED_MORE;
                  }
                  break; /* flush the current block */
                }
              }

              /* Output a literal byte */
              s.match_length = 0;
              //Tracevv((stderr,"%c", s->window[s->strstart]));
              /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
              bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
              s.lookahead--;
              s.strstart++;
              if (bflush) {
                /*** FLUSH_BLOCK(s, 0); ***/
                flush_block_only(s, false);
                if (s.strm.avail_out === 0) {
                  return BS_NEED_MORE;
                }
                /***/
              }
            }
            s.insert = 0;
            if (flush === Z_FINISH) {
              /*** FLUSH_BLOCK(s, 1); ***/
              flush_block_only(s, true);
              if (s.strm.avail_out === 0) {
                return BS_FINISH_STARTED;
              }
              /***/
              return BS_FINISH_DONE;
            }
            if (s.last_lit) {
              /*** FLUSH_BLOCK(s, 0); ***/
              flush_block_only(s, false);
              if (s.strm.avail_out === 0) {
                return BS_NEED_MORE;
              }
              /***/
            }
            return BS_BLOCK_DONE;
          }

          /* Values for max_lazy_match, good_match and max_chain_length, depending on
           * the desired pack level (0..9). The values given below have been tuned to
           * exclude worst case performance for pathological files. Better values may be
           * found for specific files.
           */
          function Config(good_length, max_lazy, nice_length, max_chain, func) {
            this.good_length = good_length;
            this.max_lazy = max_lazy;
            this.nice_length = nice_length;
            this.max_chain = max_chain;
            this.func = func;
          }

          var configuration_table;

          configuration_table = [
            /*      good lazy nice chain */
            new Config(0, 0, 0, 0, deflate_stored) /* 0 store only */,
            new Config(
              4,
              4,
              8,
              4,
              deflate_fast
            ) /* 1 max speed, no lazy matches */,
            new Config(4, 5, 16, 8, deflate_fast) /* 2 */,
            new Config(4, 6, 32, 32, deflate_fast) /* 3 */,

            new Config(4, 4, 16, 16, deflate_slow) /* 4 lazy matches */,
            new Config(8, 16, 32, 32, deflate_slow) /* 5 */,
            new Config(8, 16, 128, 128, deflate_slow) /* 6 */,
            new Config(8, 32, 128, 256, deflate_slow) /* 7 */,
            new Config(32, 128, 258, 1024, deflate_slow) /* 8 */,
            new Config(
              32,
              258,
              258,
              4096,
              deflate_slow
            ) /* 9 max compression */,
          ];

          /* ===========================================================================
           * Initialize the "longest match" routines for a new zlib stream
           */
          function lm_init(s) {
            s.window_size = 2 * s.w_size;

            /*** CLEAR_HASH(s); ***/
            zero(s.head); // Fill with NIL (= 0);

            /* Set the default configuration parameters:
             */
            s.max_lazy_match = configuration_table[s.level].max_lazy;
            s.good_match = configuration_table[s.level].good_length;
            s.nice_match = configuration_table[s.level].nice_length;
            s.max_chain_length = configuration_table[s.level].max_chain;

            s.strstart = 0;
            s.block_start = 0;
            s.lookahead = 0;
            s.insert = 0;
            s.match_length = s.prev_length = MIN_MATCH - 1;
            s.match_available = 0;
            s.ins_h = 0;
          }

          function DeflateState() {
            this.strm = null; /* pointer back to this zlib stream */
            this.status = 0; /* as the name implies */
            this.pending_buf = null; /* output still pending */
            this.pending_buf_size = 0; /* size of pending_buf */
            this.pending_out = 0; /* next pending byte to output to the stream */
            this.pending = 0; /* nb of bytes in the pending buffer */
            this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */
            this.gzhead = null; /* gzip header information to write */
            this.gzindex = 0; /* where in extra, name, or comment */
            this.method = Z_DEFLATED; /* can only be DEFLATED */
            this.last_flush =
              -1; /* value of flush param for previous deflate call */

            this.w_size = 0; /* LZ77 window size (32K by default) */
            this.w_bits = 0; /* log2(w_size)  (8..16) */
            this.w_mask = 0; /* w_size - 1 */

            this.window = null;
            /* Sliding window. Input bytes are read into the second half of the window,
             * and move to the first half later to keep a dictionary of at least wSize
             * bytes. With this organization, matches are limited to a distance of
             * wSize-MAX_MATCH bytes, but this ensures that IO is always
             * performed with a length multiple of the block size.
             */

            this.window_size = 0;
            /* Actual size of window: 2*wSize, except when the user input buffer
             * is directly used as sliding window.
             */

            this.prev = null;
            /* Link to older string with same hash index. To limit the size of this
             * array to 64K, this link is maintained only for the last 32K strings.
             * An index in this array is thus a window index modulo 32K.
             */

            this.head = null; /* Heads of the hash chains or NIL. */

            this.ins_h = 0; /* hash index of string to be inserted */
            this.hash_size = 0; /* number of elements in hash table */
            this.hash_bits = 0; /* log2(hash_size) */
            this.hash_mask = 0; /* hash_size-1 */

            this.hash_shift = 0;
            /* Number of bits by which ins_h must be shifted at each input
             * step. It must be such that after MIN_MATCH steps, the oldest
             * byte no longer takes part in the hash key, that is:
             *   hash_shift * MIN_MATCH >= hash_bits
             */

            this.block_start = 0;
            /* Window position at the beginning of the current output block. Gets
             * negative when the window is moved backwards.
             */

            this.match_length = 0; /* length of best match */
            this.prev_match = 0; /* previous match */
            this.match_available = 0; /* set if previous match exists */
            this.strstart = 0; /* start of string to insert */
            this.match_start = 0; /* start of matching string */
            this.lookahead = 0; /* number of valid bytes ahead in window */

            this.prev_length = 0;
            /* Length of the best match at previous step. Matches not greater than this
             * are discarded. This is used in the lazy match evaluation.
             */

            this.max_chain_length = 0;
            /* To speed up deflation, hash chains are never searched beyond this
             * length.  A higher limit improves compression ratio but degrades the
             * speed.
             */

            this.max_lazy_match = 0;
            /* Attempt to find a better match only when the current match is strictly
             * smaller than this value. This mechanism is used only for compression
             * levels >= 4.
             */
            // That's alias to max_lazy_match, don't use directly
            //this.max_insert_length = 0;
            /* Insert new strings in the hash table only if the match length is not
             * greater than this length. This saves time but degrades compression.
             * max_insert_length is used only for compression levels <= 3.
             */

            this.level = 0; /* compression level (1..9) */
            this.strategy = 0; /* favor or force Huffman coding*/

            this.good_match = 0;
            /* Use a faster search when the previous match is longer than this */

            this.nice_match = 0; /* Stop searching when current match exceeds this */

            /* used by trees.c: */

            /* Didn't use ct_data typedef below to suppress compiler warning */

            // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
            // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
            // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

            // Use flat array of DOUBLE size, with interleaved fata,
            // because JS does not support effective
            this.dyn_ltree = new utils.Buf16(HEAP_SIZE * 2);
            this.dyn_dtree = new utils.Buf16((2 * D_CODES + 1) * 2);
            this.bl_tree = new utils.Buf16((2 * BL_CODES + 1) * 2);
            zero(this.dyn_ltree);
            zero(this.dyn_dtree);
            zero(this.bl_tree);

            this.l_desc = null; /* desc. for literal tree */
            this.d_desc = null; /* desc. for distance tree */
            this.bl_desc = null; /* desc. for bit length tree */

            //ush bl_count[MAX_BITS+1];
            this.bl_count = new utils.Buf16(MAX_BITS + 1);
            /* number of codes at each bit length for an optimal tree */

            //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
            this.heap = new utils.Buf16(
              2 * L_CODES + 1
            ); /* heap used to build the Huffman trees */
            zero(this.heap);

            this.heap_len = 0; /* number of elements in the heap */
            this.heap_max = 0; /* element of largest frequency */
            /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
             * The same heap array is used to build all trees.
             */

            this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
            zero(this.depth);
            /* Depth of each subtree used as tie breaker for trees of equal frequency
             */

            this.l_buf = 0; /* buffer index for literals or lengths */

            this.lit_bufsize = 0;
            /* Size of match buffer for literals/lengths.  There are 4 reasons for
             * limiting lit_bufsize to 64K:
             *   - frequencies can be kept in 16 bit counters
             *   - if compression is not successful for the first block, all input
             *     data is still in the window so we can still emit a stored block even
             *     when input comes from standard input.  (This can also be done for
             *     all blocks if lit_bufsize is not greater than 32K.)
             *   - if compression is not successful for a file smaller than 64K, we can
             *     even emit a stored file instead of a stored block (saving 5 bytes).
             *     This is applicable only for zip (not gzip or zlib).
             *   - creating new Huffman trees less frequently may not provide fast
             *     adaptation to changes in the input data statistics. (Take for
             *     example a binary file with poorly compressible code followed by
             *     a highly compressible string table.) Smaller buffer sizes give
             *     fast adaptation but have of course the overhead of transmitting
             *     trees more frequently.
             *   - I can't count above 4
             */

            this.last_lit = 0; /* running index in l_buf */

            this.d_buf = 0;
            /* Buffer index for distances. To simplify the code, d_buf and l_buf have
             * the same number of elements. To use different lengths, an extra flag
             * array would be necessary.
             */

            this.opt_len = 0; /* bit length of current block with optimal trees */
            this.static_len = 0; /* bit length of current block with static trees */
            this.matches = 0; /* number of string matches in current block */
            this.insert = 0; /* bytes at end of window left to insert */

            this.bi_buf = 0;
            /* Output buffer. bits are inserted starting at the bottom (least
             * significant bits).
             */
            this.bi_valid = 0;
            /* Number of valid bits in bi_buf.  All bits above the last valid bit
             * are always zero.
             */

            // Used for window memory init. We safely ignore it for JS. That makes
            // sense only for pointers and memory check tools.
            //this.high_water = 0;
            /* High water mark offset in window for initialized bytes -- bytes above
             * this are set to zero in order to avoid memory check warnings when
             * longest match routines access bytes past the input.  This is then
             * updated to the new high water mark.
             */
          }

          function deflateResetKeep(strm) {
            var s;

            if (!strm || !strm.state) {
              return err(strm, Z_STREAM_ERROR);
            }

            strm.total_in = strm.total_out = 0;
            strm.data_type = Z_UNKNOWN;

            s = strm.state;
            s.pending = 0;
            s.pending_out = 0;

            if (s.wrap < 0) {
              s.wrap = -s.wrap;
              /* was made negative by deflate(..., Z_FINISH); */
            }
            s.status = s.wrap ? INIT_STATE : BUSY_STATE;
            strm.adler =
              s.wrap === 2
                ? 0 // crc32(0, Z_NULL, 0)
                : 1; // adler32(0, Z_NULL, 0)
            s.last_flush = Z_NO_FLUSH;
            trees._tr_init(s);
            return Z_OK;
          }

          function deflateReset(strm) {
            var ret = deflateResetKeep(strm);
            if (ret === Z_OK) {
              lm_init(strm.state);
            }
            return ret;
          }

          function deflateSetHeader(strm, head) {
            if (!strm || !strm.state) {
              return Z_STREAM_ERROR;
            }
            if (strm.state.wrap !== 2) {
              return Z_STREAM_ERROR;
            }
            strm.state.gzhead = head;
            return Z_OK;
          }

          function deflateInit2(
            strm,
            level,
            method,
            windowBits,
            memLevel,
            strategy
          ) {
            if (!strm) {
              // === Z_NULL
              return Z_STREAM_ERROR;
            }
            var wrap = 1;

            if (level === Z_DEFAULT_COMPRESSION) {
              level = 6;
            }

            if (windowBits < 0) {
              /* suppress zlib wrapper */
              wrap = 0;
              windowBits = -windowBits;
            } else if (windowBits > 15) {
              wrap = 2; /* write gzip wrapper instead */
              windowBits -= 16;
            }

            if (
              memLevel < 1 ||
              memLevel > MAX_MEM_LEVEL ||
              method !== Z_DEFLATED ||
              windowBits < 8 ||
              windowBits > 15 ||
              level < 0 ||
              level > 9 ||
              strategy < 0 ||
              strategy > Z_FIXED
            ) {
              return err(strm, Z_STREAM_ERROR);
            }

            if (windowBits === 8) {
              windowBits = 9;
            }
            /* until 256-byte window bug fixed */

            var s = new DeflateState();

            strm.state = s;
            s.strm = strm;

            s.wrap = wrap;
            s.gzhead = null;
            s.w_bits = windowBits;
            s.w_size = 1 << s.w_bits;
            s.w_mask = s.w_size - 1;

            s.hash_bits = memLevel + 7;
            s.hash_size = 1 << s.hash_bits;
            s.hash_mask = s.hash_size - 1;
            s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

            s.window = new utils.Buf8(s.w_size * 2);
            s.head = new utils.Buf16(s.hash_size);
            s.prev = new utils.Buf16(s.w_size);

            // Don't need mem init magic for JS.
            //s.high_water = 0;  /* nothing written to s->window yet */

            s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

            s.pending_buf_size = s.lit_bufsize * 4;

            //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
            //s->pending_buf = (uchf *) overlay;
            s.pending_buf = new utils.Buf8(s.pending_buf_size);

            // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
            //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
            s.d_buf = 1 * s.lit_bufsize;

            //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
            s.l_buf = (1 + 2) * s.lit_bufsize;

            s.level = level;
            s.strategy = strategy;
            s.method = method;

            return deflateReset(strm);
          }

          function deflateInit(strm, level) {
            return deflateInit2(
              strm,
              level,
              Z_DEFLATED,
              MAX_WBITS,
              DEF_MEM_LEVEL,
              Z_DEFAULT_STRATEGY
            );
          }

          function deflate(strm, flush) {
            var old_flush, s;
            var beg, val; // for gzip header write only

            if (!strm || !strm.state || flush > Z_BLOCK || flush < 0) {
              return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
            }

            s = strm.state;

            if (
              !strm.output ||
              (!strm.input && strm.avail_in !== 0) ||
              (s.status === FINISH_STATE && flush !== Z_FINISH)
            ) {
              return err(
                strm,
                strm.avail_out === 0 ? Z_BUF_ERROR : Z_STREAM_ERROR
              );
            }

            s.strm = strm; /* just in case */
            old_flush = s.last_flush;
            s.last_flush = flush;

            /* Write the header */
            if (s.status === INIT_STATE) {
              if (s.wrap === 2) {
                // GZIP header
                strm.adler = 0; //crc32(0L, Z_NULL, 0);
                put_byte(s, 31);
                put_byte(s, 139);
                put_byte(s, 8);
                if (!s.gzhead) {
                  // s->gzhead == Z_NULL
                  put_byte(s, 0);
                  put_byte(s, 0);
                  put_byte(s, 0);
                  put_byte(s, 0);
                  put_byte(s, 0);
                  put_byte(
                    s,
                    s.level === 9
                      ? 2
                      : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2
                      ? 4
                      : 0
                  );
                  put_byte(s, OS_CODE);
                  s.status = BUSY_STATE;
                } else {
                  put_byte(
                    s,
                    (s.gzhead.text ? 1 : 0) +
                      (s.gzhead.hcrc ? 2 : 0) +
                      (!s.gzhead.extra ? 0 : 4) +
                      (!s.gzhead.name ? 0 : 8) +
                      (!s.gzhead.comment ? 0 : 16)
                  );
                  put_byte(s, s.gzhead.time & 0xff);
                  put_byte(s, (s.gzhead.time >> 8) & 0xff);
                  put_byte(s, (s.gzhead.time >> 16) & 0xff);
                  put_byte(s, (s.gzhead.time >> 24) & 0xff);
                  put_byte(
                    s,
                    s.level === 9
                      ? 2
                      : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2
                      ? 4
                      : 0
                  );
                  put_byte(s, s.gzhead.os & 0xff);
                  if (s.gzhead.extra && s.gzhead.extra.length) {
                    put_byte(s, s.gzhead.extra.length & 0xff);
                    put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
                  }
                  if (s.gzhead.hcrc) {
                    strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
                  }
                  s.gzindex = 0;
                  s.status = EXTRA_STATE;
                }
              } // DEFLATE header
              else {
                var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
                var level_flags = -1;

                if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
                  level_flags = 0;
                } else if (s.level < 6) {
                  level_flags = 1;
                } else if (s.level === 6) {
                  level_flags = 2;
                } else {
                  level_flags = 3;
                }
                header |= level_flags << 6;
                if (s.strstart !== 0) {
                  header |= PRESET_DICT;
                }
                header += 31 - (header % 31);

                s.status = BUSY_STATE;
                putShortMSB(s, header);

                /* Save the adler32 of the preset dictionary: */
                if (s.strstart !== 0) {
                  putShortMSB(s, strm.adler >>> 16);
                  putShortMSB(s, strm.adler & 0xffff);
                }
                strm.adler = 1; // adler32(0L, Z_NULL, 0);
              }
            }

            //#ifdef GZIP
            if (s.status === EXTRA_STATE) {
              if (s.gzhead.extra /* != Z_NULL*/) {
                beg = s.pending; /* start of bytes to update crc */

                while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
                  if (s.pending === s.pending_buf_size) {
                    if (s.gzhead.hcrc && s.pending > beg) {
                      strm.adler = crc32(
                        strm.adler,
                        s.pending_buf,
                        s.pending - beg,
                        beg
                      );
                    }
                    flush_pending(strm);
                    beg = s.pending;
                    if (s.pending === s.pending_buf_size) {
                      break;
                    }
                  }
                  put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
                  s.gzindex++;
                }
                if (s.gzhead.hcrc && s.pending > beg) {
                  strm.adler = crc32(
                    strm.adler,
                    s.pending_buf,
                    s.pending - beg,
                    beg
                  );
                }
                if (s.gzindex === s.gzhead.extra.length) {
                  s.gzindex = 0;
                  s.status = NAME_STATE;
                }
              } else {
                s.status = NAME_STATE;
              }
            }
            if (s.status === NAME_STATE) {
              if (s.gzhead.name /* != Z_NULL*/) {
                beg = s.pending; /* start of bytes to update crc */
                //int val;

                do {
                  if (s.pending === s.pending_buf_size) {
                    if (s.gzhead.hcrc && s.pending > beg) {
                      strm.adler = crc32(
                        strm.adler,
                        s.pending_buf,
                        s.pending - beg,
                        beg
                      );
                    }
                    flush_pending(strm);
                    beg = s.pending;
                    if (s.pending === s.pending_buf_size) {
                      val = 1;
                      break;
                    }
                  }
                  // JS specific: little magic to add zero terminator to end of string
                  if (s.gzindex < s.gzhead.name.length) {
                    val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
                  } else {
                    val = 0;
                  }
                  put_byte(s, val);
                } while (val !== 0);

                if (s.gzhead.hcrc && s.pending > beg) {
                  strm.adler = crc32(
                    strm.adler,
                    s.pending_buf,
                    s.pending - beg,
                    beg
                  );
                }
                if (val === 0) {
                  s.gzindex = 0;
                  s.status = COMMENT_STATE;
                }
              } else {
                s.status = COMMENT_STATE;
              }
            }
            if (s.status === COMMENT_STATE) {
              if (s.gzhead.comment /* != Z_NULL*/) {
                beg = s.pending; /* start of bytes to update crc */
                //int val;

                do {
                  if (s.pending === s.pending_buf_size) {
                    if (s.gzhead.hcrc && s.pending > beg) {
                      strm.adler = crc32(
                        strm.adler,
                        s.pending_buf,
                        s.pending - beg,
                        beg
                      );
                    }
                    flush_pending(strm);
                    beg = s.pending;
                    if (s.pending === s.pending_buf_size) {
                      val = 1;
                      break;
                    }
                  }
                  // JS specific: little magic to add zero terminator to end of string
                  if (s.gzindex < s.gzhead.comment.length) {
                    val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
                  } else {
                    val = 0;
                  }
                  put_byte(s, val);
                } while (val !== 0);

                if (s.gzhead.hcrc && s.pending > beg) {
                  strm.adler = crc32(
                    strm.adler,
                    s.pending_buf,
                    s.pending - beg,
                    beg
                  );
                }
                if (val === 0) {
                  s.status = HCRC_STATE;
                }
              } else {
                s.status = HCRC_STATE;
              }
            }
            if (s.status === HCRC_STATE) {
              if (s.gzhead.hcrc) {
                if (s.pending + 2 > s.pending_buf_size) {
                  flush_pending(strm);
                }
                if (s.pending + 2 <= s.pending_buf_size) {
                  put_byte(s, strm.adler & 0xff);
                  put_byte(s, (strm.adler >> 8) & 0xff);
                  strm.adler = 0; //crc32(0L, Z_NULL, 0);
                  s.status = BUSY_STATE;
                }
              } else {
                s.status = BUSY_STATE;
              }
            }
            //#endif

            /* Flush as much pending output as possible */
            if (s.pending !== 0) {
              flush_pending(strm);
              if (strm.avail_out === 0) {
                /* Since avail_out is 0, deflate will be called again with
                 * more output space, but possibly with both pending and
                 * avail_in equal to zero. There won't be anything to do,
                 * but this is not an error situation so make sure we
                 * return OK instead of BUF_ERROR at next call of deflate:
                 */
                s.last_flush = -1;
                return Z_OK;
              }

              /* Make sure there is something to do and avoid duplicate consecutive
               * flushes. For repeated and useless calls with Z_FINISH, we keep
               * returning Z_STREAM_END instead of Z_BUF_ERROR.
               */
            } else if (
              strm.avail_in === 0 &&
              rank(flush) <= rank(old_flush) &&
              flush !== Z_FINISH
            ) {
              return err(strm, Z_BUF_ERROR);
            }

            /* User must not provide more input after the first FINISH: */
            if (s.status === FINISH_STATE && strm.avail_in !== 0) {
              return err(strm, Z_BUF_ERROR);
            }

            /* Start a new block or continue the current one.
             */
            if (
              strm.avail_in !== 0 ||
              s.lookahead !== 0 ||
              (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)
            ) {
              var bstate =
                s.strategy === Z_HUFFMAN_ONLY
                  ? deflate_huff(s, flush)
                  : s.strategy === Z_RLE
                  ? deflate_rle(s, flush)
                  : configuration_table[s.level].func(s, flush);

              if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
                s.status = FINISH_STATE;
              }
              if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
                if (strm.avail_out === 0) {
                  s.last_flush = -1;
                  /* avoid BUF_ERROR next call, see above */
                }
                return Z_OK;
                /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
                 * of deflate should use the same flush parameter to make sure
                 * that the flush is complete. So we don't have to output an
                 * empty block here, this will be done at next call. This also
                 * ensures that for a very small output buffer, we emit at most
                 * one empty block.
                 */
              }
              if (bstate === BS_BLOCK_DONE) {
                if (flush === Z_PARTIAL_FLUSH) {
                  trees._tr_align(s);
                } else if (flush !== Z_BLOCK) {
                  /* FULL_FLUSH or SYNC_FLUSH */

                  trees._tr_stored_block(s, 0, 0, false);
                  /* For a full flush, this empty block will be recognized
                   * as a special marker by inflate_sync().
                   */
                  if (flush === Z_FULL_FLUSH) {
                    /*** CLEAR_HASH(s); ***/ /* forget history */
                    zero(s.head); // Fill with NIL (= 0);

                    if (s.lookahead === 0) {
                      s.strstart = 0;
                      s.block_start = 0;
                      s.insert = 0;
                    }
                  }
                }
                flush_pending(strm);
                if (strm.avail_out === 0) {
                  s.last_flush =
                    -1; /* avoid BUF_ERROR at next call, see above */
                  return Z_OK;
                }
              }
            }
            //Assert(strm->avail_out > 0, "bug2");
            //if (strm.avail_out <= 0) { throw new Error("bug2");}

            if (flush !== Z_FINISH) {
              return Z_OK;
            }
            if (s.wrap <= 0) {
              return Z_STREAM_END;
            }

            /* Write the trailer */
            if (s.wrap === 2) {
              put_byte(s, strm.adler & 0xff);
              put_byte(s, (strm.adler >> 8) & 0xff);
              put_byte(s, (strm.adler >> 16) & 0xff);
              put_byte(s, (strm.adler >> 24) & 0xff);
              put_byte(s, strm.total_in & 0xff);
              put_byte(s, (strm.total_in >> 8) & 0xff);
              put_byte(s, (strm.total_in >> 16) & 0xff);
              put_byte(s, (strm.total_in >> 24) & 0xff);
            } else {
              putShortMSB(s, strm.adler >>> 16);
              putShortMSB(s, strm.adler & 0xffff);
            }

            flush_pending(strm);
            /* If avail_out is zero, the application will call deflate again
             * to flush the rest.
             */
            if (s.wrap > 0) {
              s.wrap = -s.wrap;
            }
            /* write the trailer only once! */
            return s.pending !== 0 ? Z_OK : Z_STREAM_END;
          }

          function deflateEnd(strm) {
            var status;

            if (!strm /*== Z_NULL*/ || !strm.state /*== Z_NULL*/) {
              return Z_STREAM_ERROR;
            }

            status = strm.state.status;
            if (
              status !== INIT_STATE &&
              status !== EXTRA_STATE &&
              status !== NAME_STATE &&
              status !== COMMENT_STATE &&
              status !== HCRC_STATE &&
              status !== BUSY_STATE &&
              status !== FINISH_STATE
            ) {
              return err(strm, Z_STREAM_ERROR);
            }

            strm.state = null;

            return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
          }

          /* =========================================================================
           * Initializes the compression dictionary from the given byte
           * sequence without producing any compressed output.
           */
          function deflateSetDictionary(strm, dictionary) {
            var dictLength = dictionary.length;

            var s;
            var str, n;
            var wrap;
            var avail;
            var next;
            var input;
            var tmpDict;

            if (!strm /*== Z_NULL*/ || !strm.state /*== Z_NULL*/) {
              return Z_STREAM_ERROR;
            }

            s = strm.state;
            wrap = s.wrap;

            if (
              wrap === 2 ||
              (wrap === 1 && s.status !== INIT_STATE) ||
              s.lookahead
            ) {
              return Z_STREAM_ERROR;
            }

            /* when using zlib wrappers, compute Adler-32 for provided dictionary */
            if (wrap === 1) {
              /* adler32(strm->adler, dictionary, dictLength); */
              strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
            }

            s.wrap = 0; /* avoid computing Adler-32 in read_buf */

            /* if dictionary would fill window, just replace the history */
            if (dictLength >= s.w_size) {
              if (wrap === 0) {
                /* already empty otherwise */
                /*** CLEAR_HASH(s); ***/
                zero(s.head); // Fill with NIL (= 0);
                s.strstart = 0;
                s.block_start = 0;
                s.insert = 0;
              }
              /* use the tail */
              // dictionary = dictionary.slice(dictLength - s.w_size);
              tmpDict = new utils.Buf8(s.w_size);
              utils.arraySet(
                tmpDict,
                dictionary,
                dictLength - s.w_size,
                s.w_size,
                0
              );
              dictionary = tmpDict;
              dictLength = s.w_size;
            }
            /* insert dictionary into window and hash */
            avail = strm.avail_in;
            next = strm.next_in;
            input = strm.input;
            strm.avail_in = dictLength;
            strm.next_in = 0;
            strm.input = dictionary;
            fill_window(s);
            while (s.lookahead >= MIN_MATCH) {
              str = s.strstart;
              n = s.lookahead - (MIN_MATCH - 1);
              do {
                /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
                s.ins_h =
                  ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) &
                  s.hash_mask;

                s.prev[str & s.w_mask] = s.head[s.ins_h];

                s.head[s.ins_h] = str;
                str++;
              } while (--n);
              s.strstart = str;
              s.lookahead = MIN_MATCH - 1;
              fill_window(s);
            }
            s.strstart += s.lookahead;
            s.block_start = s.strstart;
            s.insert = s.lookahead;
            s.lookahead = 0;
            s.match_length = s.prev_length = MIN_MATCH - 1;
            s.match_available = 0;
            strm.next_in = next;
            strm.input = input;
            strm.avail_in = avail;
            s.wrap = wrap;
            return Z_OK;
          }

          exports.deflateInit = deflateInit;
          exports.deflateInit2 = deflateInit2;
          exports.deflateReset = deflateReset;
          exports.deflateResetKeep = deflateResetKeep;
          exports.deflateSetHeader = deflateSetHeader;
          exports.deflate = deflate;
          exports.deflateEnd = deflateEnd;
          exports.deflateSetDictionary = deflateSetDictionary;
          exports.deflateInfo = 'pako deflate (from Nodeca project)';

          /* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/

          /***/
        },
        /* 85 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          var utils = __webpack_require__(7);

          /* Public constants ==========================================================*/
          /* ===========================================================================*/

          //var Z_FILTERED          = 1;
          //var Z_HUFFMAN_ONLY      = 2;
          //var Z_RLE               = 3;
          var Z_FIXED = 4;
          //var Z_DEFAULT_STRATEGY  = 0;

          /* Possible values of the data_type field (though see inflate()) */
          var Z_BINARY = 0;
          var Z_TEXT = 1;
          //var Z_ASCII             = 1; // = Z_TEXT
          var Z_UNKNOWN = 2;

          /*============================================================================*/

          function zero(buf) {
            var len = buf.length;
            while (--len >= 0) {
              buf[len] = 0;
            }
          }

          // From zutil.h

          var STORED_BLOCK = 0;
          var STATIC_TREES = 1;
          var DYN_TREES = 2;
          /* The three kinds of block type */

          var MIN_MATCH = 3;
          var MAX_MATCH = 258;
          /* The minimum and maximum match lengths */

          // From deflate.h
          /* ===========================================================================
           * Internal compression state.
           */

          var LENGTH_CODES = 29;
          /* number of length codes, not counting the special END_BLOCK code */

          var LITERALS = 256;
          /* number of literal bytes 0..255 */

          var L_CODES = LITERALS + 1 + LENGTH_CODES;
          /* number of Literal or Length codes, including the END_BLOCK code */

          var D_CODES = 30;
          /* number of distance codes */

          var BL_CODES = 19;
          /* number of codes used to transfer the bit lengths */

          var HEAP_SIZE = 2 * L_CODES + 1;
          /* maximum heap size */

          var MAX_BITS = 15;
          /* All codes must not exceed MAX_BITS bits */

          var Buf_size = 16;
          /* size of bit buffer in bi_buf */

          /* ===========================================================================
           * Constants
           */

          var MAX_BL_BITS = 7;
          /* Bit length codes must not exceed MAX_BL_BITS bits */

          var END_BLOCK = 256;
          /* end of block literal code */

          var REP_3_6 = 16;
          /* repeat previous bit length 3-6 times (2 bits of repeat count) */

          var REPZ_3_10 = 17;
          /* repeat a zero length 3-10 times  (3 bits of repeat count) */

          var REPZ_11_138 = 18;
          /* repeat a zero length 11-138 times  (7 bits of repeat count) */

          var extra_lbits =
            /* extra bits for each length code */
            [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ];

          var extra_dbits =
            /* extra bits for each distance code */
            [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ];

          var extra_blbits =
            /* extra bits for each bit length code */
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];

          var bl_order = [
            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
          ];

          /* The lengths of the bit length codes are sent in order of decreasing
           * probability, to avoid transmitting the lengths for unused bit length codes.
           */

          /* ===========================================================================
           * Local data. These are initialized only once.
           */

          // We pre-fill arrays with 0 to avoid uninitialized gaps

          var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

          // !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
          var static_ltree = new Array((L_CODES + 2) * 2);
          zero(static_ltree);
          /* The static literal tree. Since the bit lengths are imposed, there is no
           * need for the L_CODES extra codes used during heap construction. However
           * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
           * below).
           */

          var static_dtree = new Array(D_CODES * 2);
          zero(static_dtree);
          /* The static distance tree. (Actually a trivial tree since all codes use
           * 5 bits.)
           */

          var _dist_code = new Array(DIST_CODE_LEN);
          zero(_dist_code);
          /* Distance codes. The first 256 values correspond to the distances
           * 3 .. 258, the last 256 values correspond to the top 8 bits of
           * the 15 bit distances.
           */

          var _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);
          zero(_length_code);
          /* length code for each normalized match length (0 == MIN_MATCH) */

          var base_length = new Array(LENGTH_CODES);
          zero(base_length);
          /* First normalized length for each code (0 = MIN_MATCH) */

          var base_dist = new Array(D_CODES);
          zero(base_dist);
          /* First normalized distance for each code (0 = distance of 1) */

          function StaticTreeDesc(
            static_tree,
            extra_bits,
            extra_base,
            elems,
            max_length
          ) {
            this.static_tree = static_tree; /* static tree or NULL */
            this.extra_bits = extra_bits; /* extra bits for each code or NULL */
            this.extra_base = extra_base; /* base index for extra_bits */
            this.elems = elems; /* max number of elements in the tree */
            this.max_length = max_length; /* max bit length for the codes */

            // show if `static_tree` has data or dummy - needed for monomorphic objects
            this.has_stree = static_tree && static_tree.length;
          }

          var static_l_desc;
          var static_d_desc;
          var static_bl_desc;

          function TreeDesc(dyn_tree, stat_desc) {
            this.dyn_tree = dyn_tree; /* the dynamic tree */
            this.max_code = 0; /* largest code with non zero frequency */
            this.stat_desc = stat_desc; /* the corresponding static tree */
          }

          function d_code(dist) {
            return dist < 256
              ? _dist_code[dist]
              : _dist_code[256 + (dist >>> 7)];
          }

          /* ===========================================================================
           * Output a short LSB first on the stream.
           * IN assertion: there is enough room in pendingBuf.
           */
          function put_short(s, w) {
            //    put_byte(s, (uch)((w) & 0xff));
            //    put_byte(s, (uch)((ush)(w) >> 8));
            s.pending_buf[s.pending++] = w & 0xff;
            s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
          }

          /* ===========================================================================
           * Send a value on a given number of bits.
           * IN assertion: length <= 16 and value fits in length bits.
           */
          function send_bits(s, value, length) {
            if (s.bi_valid > Buf_size - length) {
              s.bi_buf |= (value << s.bi_valid) & 0xffff;
              put_short(s, s.bi_buf);
              s.bi_buf = value >> (Buf_size - s.bi_valid);
              s.bi_valid += length - Buf_size;
            } else {
              s.bi_buf |= (value << s.bi_valid) & 0xffff;
              s.bi_valid += length;
            }
          }

          function send_code(s, c, tree) {
            send_bits(s, tree[c * 2] /*.Code*/, tree[c * 2 + 1] /*.Len*/);
          }

          /* ===========================================================================
           * Reverse the first len bits of a code, using straightforward code (a faster
           * method would use a table)
           * IN assertion: 1 <= len <= 15
           */
          function bi_reverse(code, len) {
            var res = 0;
            do {
              res |= code & 1;
              code >>>= 1;
              res <<= 1;
            } while (--len > 0);
            return res >>> 1;
          }

          /* ===========================================================================
           * Flush the bit buffer, keeping at most 7 bits in it.
           */
          function bi_flush(s) {
            if (s.bi_valid === 16) {
              put_short(s, s.bi_buf);
              s.bi_buf = 0;
              s.bi_valid = 0;
            } else if (s.bi_valid >= 8) {
              s.pending_buf[s.pending++] = s.bi_buf & 0xff;
              s.bi_buf >>= 8;
              s.bi_valid -= 8;
            }
          }

          /* ===========================================================================
           * Compute the optimal bit lengths for a tree and update the total bit length
           * for the current block.
           * IN assertion: the fields freq and dad are set, heap[heap_max] and
           *    above are the tree nodes sorted by increasing frequency.
           * OUT assertions: the field len is set to the optimal bit length, the
           *     array bl_count contains the frequencies for each bit length.
           *     The length opt_len is updated; static_len is also updated if stree is
           *     not null.
           */
          function gen_bitlen(s, desc) {
            //    deflate_state *s;
            //    tree_desc *desc;    /* the tree descriptor */
            var tree = desc.dyn_tree;
            var max_code = desc.max_code;
            var stree = desc.stat_desc.static_tree;
            var has_stree = desc.stat_desc.has_stree;
            var extra = desc.stat_desc.extra_bits;
            var base = desc.stat_desc.extra_base;
            var max_length = desc.stat_desc.max_length;
            var h; /* heap index */
            var n, m; /* iterate over the tree elements */
            var bits; /* bit length */
            var xbits; /* extra bits */
            var f; /* frequency */
            var overflow = 0; /* number of elements with bit length too large */

            for (bits = 0; bits <= MAX_BITS; bits++) {
              s.bl_count[bits] = 0;
            }

            /* In a first pass, compute the optimal bit lengths (which may
             * overflow in the case of the bit length tree).
             */
            tree[
              s.heap[s.heap_max] * 2 + 1
            ] /*.Len*/ = 0; /* root of the heap */

            for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
              n = s.heap[h];
              bits = tree[tree[n * 2 + 1] /*.Dad*/ * 2 + 1] /*.Len*/ + 1;
              if (bits > max_length) {
                bits = max_length;
                overflow++;
              }
              tree[n * 2 + 1] /*.Len*/ = bits;
              /* We overwrite tree[n].Dad which is no longer needed */

              if (n > max_code) {
                continue;
              } /* not a leaf node */

              s.bl_count[bits]++;
              xbits = 0;
              if (n >= base) {
                xbits = extra[n - base];
              }
              f = tree[n * 2] /*.Freq*/;
              s.opt_len += f * (bits + xbits);
              if (has_stree) {
                s.static_len += f * (stree[n * 2 + 1] /*.Len*/ + xbits);
              }
            }
            if (overflow === 0) {
              return;
            }

            // Trace((stderr,"\nbit length overflow\n"));
            /* This happens for example on obj2 and pic of the Calgary corpus */

            /* Find the first bit length which could increase: */
            do {
              bits = max_length - 1;
              while (s.bl_count[bits] === 0) {
                bits--;
              }
              s.bl_count[bits]--; /* move one leaf down the tree */
              s.bl_count[
                bits + 1
              ] += 2; /* move one overflow item as its brother */
              s.bl_count[max_length]--;
              /* The brother of the overflow item also moves one step up,
               * but this does not affect bl_count[max_length]
               */
              overflow -= 2;
            } while (overflow > 0);

            /* Now recompute all bit lengths, scanning in increasing frequency.
             * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
             * lengths instead of fixing only the wrong ones. This idea is taken
             * from 'ar' written by Haruhiko Okumura.)
             */
            for (bits = max_length; bits !== 0; bits--) {
              n = s.bl_count[bits];
              while (n !== 0) {
                m = s.heap[--h];
                if (m > max_code) {
                  continue;
                }
                if (tree[m * 2 + 1] /*.Len*/ !== bits) {
                  // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
                  s.opt_len +=
                    (bits - tree[m * 2 + 1]) /*.Len*/ * tree[m * 2] /*.Freq*/;
                  tree[m * 2 + 1] /*.Len*/ = bits;
                }
                n--;
              }
            }
          }

          /* ===========================================================================
           * Generate the codes for a given tree and bit counts (which need not be
           * optimal).
           * IN assertion: the array bl_count contains the bit length statistics for
           * the given tree and the field len is set for all tree elements.
           * OUT assertion: the field code is set for all tree elements of non
           *     zero code length.
           */
          function gen_codes(tree, max_code, bl_count) {
            //    ct_data *tree;             /* the tree to decorate */
            //    int max_code;              /* largest code with non zero frequency */
            //    ushf *bl_count;            /* number of codes at each bit length */
            var next_code = new Array(
              MAX_BITS + 1
            ); /* next code value for each bit length */
            var code = 0; /* running code value */
            var bits; /* bit index */
            var n; /* code index */

            /* The distribution counts are first used to generate the code values
             * without bit reversal.
             */
            for (bits = 1; bits <= MAX_BITS; bits++) {
              next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
            }
            /* Check that the bit counts in bl_count are consistent. The last code
             * must be all ones.
             */
            //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
            //        "inconsistent bit counts");
            //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

            for (n = 0; n <= max_code; n++) {
              var len = tree[n * 2 + 1]; /*.Len*/
              if (len === 0) {
                continue;
              }
              /* Now reverse the bits */
              tree[n * 2] /*.Code*/ = bi_reverse(next_code[len]++, len);

              //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
              //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
            }
          }

          /* ===========================================================================
           * Initialize the various 'constant' tables.
           */
          function tr_static_init() {
            var n; /* iterates over tree elements */
            var bits; /* bit counter */
            var length; /* length value */
            var code; /* code value */
            var dist; /* distance index */
            var bl_count = new Array(MAX_BITS + 1);
            /* number of codes at each bit length for an optimal tree */

            // do check in _tr_init()
            //if (static_init_done) return;

            /* For some embedded targets, global variables are not initialized: */
            /*#ifdef NO_INIT_GLOBAL_POINTERS
    static_l_desc.static_tree = static_ltree;
    static_l_desc.extra_bits = extra_lbits;
    static_d_desc.static_tree = static_dtree;
    static_d_desc.extra_bits = extra_dbits;
    static_bl_desc.extra_bits = extra_blbits;
  #endif*/

            /* Initialize the mapping length (0..255) -> length code (0..28) */
            length = 0;
            for (code = 0; code < LENGTH_CODES - 1; code++) {
              base_length[code] = length;
              for (n = 0; n < 1 << extra_lbits[code]; n++) {
                _length_code[length++] = code;
              }
            }
            //Assert (length == 256, "tr_static_init: length != 256");
            /* Note that the length 255 (match length 258) can be represented
             * in two different ways: code 284 + 5 bits or code 285, so we
             * overwrite length_code[255] to use the best encoding:
             */
            _length_code[length - 1] = code;

            /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
            dist = 0;
            for (code = 0; code < 16; code++) {
              base_dist[code] = dist;
              for (n = 0; n < 1 << extra_dbits[code]; n++) {
                _dist_code[dist++] = code;
              }
            }
            //Assert (dist == 256, "tr_static_init: dist != 256");
            dist >>= 7; /* from now on, all distances are divided by 128 */
            for (; code < D_CODES; code++) {
              base_dist[code] = dist << 7;
              for (n = 0; n < 1 << (extra_dbits[code] - 7); n++) {
                _dist_code[256 + dist++] = code;
              }
            }
            //Assert (dist == 256, "tr_static_init: 256+dist != 512");

            /* Construct the codes of the static literal tree */
            for (bits = 0; bits <= MAX_BITS; bits++) {
              bl_count[bits] = 0;
            }

            n = 0;
            while (n <= 143) {
              static_ltree[n * 2 + 1] /*.Len*/ = 8;
              n++;
              bl_count[8]++;
            }
            while (n <= 255) {
              static_ltree[n * 2 + 1] /*.Len*/ = 9;
              n++;
              bl_count[9]++;
            }
            while (n <= 279) {
              static_ltree[n * 2 + 1] /*.Len*/ = 7;
              n++;
              bl_count[7]++;
            }
            while (n <= 287) {
              static_ltree[n * 2 + 1] /*.Len*/ = 8;
              n++;
              bl_count[8]++;
            }
            /* Codes 286 and 287 do not exist, but we must include them in the
             * tree construction to get a canonical Huffman tree (longest code
             * all ones)
             */
            gen_codes(static_ltree, L_CODES + 1, bl_count);

            /* The static distance tree is trivial: */
            for (n = 0; n < D_CODES; n++) {
              static_dtree[n * 2 + 1] /*.Len*/ = 5;
              static_dtree[n * 2] /*.Code*/ = bi_reverse(n, 5);
            }

            // Now data ready and we can init static trees
            static_l_desc = new StaticTreeDesc(
              static_ltree,
              extra_lbits,
              LITERALS + 1,
              L_CODES,
              MAX_BITS
            );
            static_d_desc = new StaticTreeDesc(
              static_dtree,
              extra_dbits,
              0,
              D_CODES,
              MAX_BITS
            );
            static_bl_desc = new StaticTreeDesc(
              new Array(0),
              extra_blbits,
              0,
              BL_CODES,
              MAX_BL_BITS
            );

            //static_init_done = true;
          }

          /* ===========================================================================
           * Initialize a new block.
           */
          function init_block(s) {
            var n; /* iterates over tree elements */

            /* Initialize the trees. */
            for (n = 0; n < L_CODES; n++) {
              s.dyn_ltree[n * 2] /*.Freq*/ = 0;
            }
            for (n = 0; n < D_CODES; n++) {
              s.dyn_dtree[n * 2] /*.Freq*/ = 0;
            }
            for (n = 0; n < BL_CODES; n++) {
              s.bl_tree[n * 2] /*.Freq*/ = 0;
            }

            s.dyn_ltree[END_BLOCK * 2] /*.Freq*/ = 1;
            s.opt_len = s.static_len = 0;
            s.last_lit = s.matches = 0;
          }

          /* ===========================================================================
           * Flush the bit buffer and align the output on a byte boundary
           */
          function bi_windup(s) {
            if (s.bi_valid > 8) {
              put_short(s, s.bi_buf);
            } else if (s.bi_valid > 0) {
              //put_byte(s, (Byte)s->bi_buf);
              s.pending_buf[s.pending++] = s.bi_buf;
            }
            s.bi_buf = 0;
            s.bi_valid = 0;
          }

          /* ===========================================================================
           * Copy a stored block, storing first the length and its
           * one's complement if requested.
           */
          function copy_block(s, buf, len, header) {
            //DeflateState *s;
            //charf    *buf;    /* the input data */
            //unsigned len;     /* its length */
            //int      header;  /* true if block header must be written */
            bi_windup(s); /* align on byte boundary */

            if (header) {
              put_short(s, len);
              put_short(s, ~len);
            }
            //  while (len--) {
            //    put_byte(s, *buf++);
            //  }
            utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
            s.pending += len;
          }

          /* ===========================================================================
           * Compares to subtrees, using the tree depth as tie breaker when
           * the subtrees have equal frequency. This minimizes the worst case length.
           */
          function smaller(tree, n, m, depth) {
            var _n2 = n * 2;
            var _m2 = m * 2;
            return (
              tree[_n2] /*.Freq*/ < tree[_m2] /*.Freq*/ ||
              (tree[_n2] /*.Freq*/ === tree[_m2] /*.Freq*/ &&
                depth[n] <= depth[m])
            );
          }

          /* ===========================================================================
           * Restore the heap property by moving down the tree starting at node k,
           * exchanging a node with the smallest of its two sons if necessary, stopping
           * when the heap property is re-established (each father smaller than its
           * two sons).
           */
          function pqdownheap(s, tree, k) {
            //    deflate_state *s;
            //    ct_data *tree;  /* the tree to restore */
            //    int k;               /* node to move down */
            var v = s.heap[k];
            var j = k << 1; /* left son of k */
            while (j <= s.heap_len) {
              /* Set j to the smallest of the two sons: */
              if (
                j < s.heap_len &&
                smaller(tree, s.heap[j + 1], s.heap[j], s.depth)
              ) {
                j++;
              }
              /* Exit if v is smaller than both sons */
              if (smaller(tree, v, s.heap[j], s.depth)) {
                break;
              }

              /* Exchange v with the smallest son */
              s.heap[k] = s.heap[j];
              k = j;

              /* And continue down the tree, setting j to the left son of k */
              j <<= 1;
            }
            s.heap[k] = v;
          }

          // inlined manually
          // var SMALLEST = 1;

          /* ===========================================================================
           * Send the block data compressed using the given Huffman trees
           */
          function compress_block(s, ltree, dtree) {
            //    deflate_state *s;
            //    const ct_data *ltree; /* literal tree */
            //    const ct_data *dtree; /* distance tree */
            var dist; /* distance of matched string */
            var lc; /* match length or unmatched char (if dist == 0) */
            var lx = 0; /* running index in l_buf */
            var code; /* the code to send */
            var extra; /* number of extra bits to send */

            if (s.last_lit !== 0) {
              do {
                dist =
                  (s.pending_buf[s.d_buf + lx * 2] << 8) |
                  s.pending_buf[s.d_buf + lx * 2 + 1];
                lc = s.pending_buf[s.l_buf + lx];
                lx++;

                if (dist === 0) {
                  send_code(s, lc, ltree); /* send a literal byte */
                  //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
                } else {
                  /* Here, lc is the match length - MIN_MATCH */
                  code = _length_code[lc];
                  send_code(
                    s,
                    code + LITERALS + 1,
                    ltree
                  ); /* send the length code */
                  extra = extra_lbits[code];
                  if (extra !== 0) {
                    lc -= base_length[code];
                    send_bits(s, lc, extra); /* send the extra length bits */
                  }
                  dist--; /* dist is now the match distance - 1 */
                  code = d_code(dist);
                  //Assert (code < D_CODES, "bad d_code");

                  send_code(s, code, dtree); /* send the distance code */
                  extra = extra_dbits[code];
                  if (extra !== 0) {
                    dist -= base_dist[code];
                    send_bits(
                      s,
                      dist,
                      extra
                    ); /* send the extra distance bits */
                  }
                } /* literal or match pair ? */

                /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
                //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
                //       "pendingBuf overflow");
              } while (lx < s.last_lit);
            }

            send_code(s, END_BLOCK, ltree);
          }

          /* ===========================================================================
           * Construct one Huffman tree and assigns the code bit strings and lengths.
           * Update the total bit length for the current block.
           * IN assertion: the field freq is set for all tree elements.
           * OUT assertions: the fields len and code are set to the optimal bit length
           *     and corresponding code. The length opt_len is updated; static_len is
           *     also updated if stree is not null. The field max_code is set.
           */
          function build_tree(s, desc) {
            //    deflate_state *s;
            //    tree_desc *desc; /* the tree descriptor */
            var tree = desc.dyn_tree;
            var stree = desc.stat_desc.static_tree;
            var has_stree = desc.stat_desc.has_stree;
            var elems = desc.stat_desc.elems;
            var n, m; /* iterate over heap elements */
            var max_code = -1; /* largest code with non zero frequency */
            var node; /* new node being created */

            /* Construct the initial heap, with least frequent element in
             * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
             * heap[0] is not used.
             */
            s.heap_len = 0;
            s.heap_max = HEAP_SIZE;

            for (n = 0; n < elems; n++) {
              if (tree[n * 2] /*.Freq*/ !== 0) {
                s.heap[++s.heap_len] = max_code = n;
                s.depth[n] = 0;
              } else {
                tree[n * 2 + 1] /*.Len*/ = 0;
              }
            }

            /* The pkzip format requires that at least one distance code exists,
             * and that at least one bit should be sent even if there is only one
             * possible code. So to avoid special checks later on we force at least
             * two codes of non zero frequency.
             */
            while (s.heap_len < 2) {
              node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;
              tree[node * 2] /*.Freq*/ = 1;
              s.depth[node] = 0;
              s.opt_len--;

              if (has_stree) {
                s.static_len -= stree[node * 2 + 1] /*.Len*/;
              }
              /* node is 0 or 1 so it does not have extra bits */
            }
            desc.max_code = max_code;

            /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
             * establish sub-heaps of increasing lengths:
             */
            for (n = s.heap_len >> 1 /*int /2*/; n >= 1; n--) {
              pqdownheap(s, tree, n);
            }

            /* Construct the Huffman tree by repeatedly combining the least two
             * frequent nodes.
             */
            node = elems; /* next internal node of the tree */
            do {
              //pqremove(s, tree, n);  /* n = node of least frequency */
              /*** pqremove ***/
              n = s.heap[1 /*SMALLEST*/];
              s.heap[1 /*SMALLEST*/] = s.heap[s.heap_len--];
              pqdownheap(s, tree, 1 /*SMALLEST*/);
              /***/

              m = s.heap[1 /*SMALLEST*/]; /* m = node of next least frequency */

              s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
              s.heap[--s.heap_max] = m;

              /* Create a new node father of n and m */
              tree[node * 2] /*.Freq*/ =
                tree[n * 2] /*.Freq*/ + tree[m * 2] /*.Freq*/;
              s.depth[node] =
                (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
              tree[n * 2 + 1] /*.Dad*/ = tree[m * 2 + 1] /*.Dad*/ = node;

              /* and insert the new node in the heap */
              s.heap[1 /*SMALLEST*/] = node++;
              pqdownheap(s, tree, 1 /*SMALLEST*/);
            } while (s.heap_len >= 2);

            s.heap[--s.heap_max] = s.heap[1 /*SMALLEST*/];

            /* At this point, the fields freq and dad are set. We can now
             * generate the bit lengths.
             */
            gen_bitlen(s, desc);

            /* The field len is now set, we can generate the bit codes */
            gen_codes(tree, max_code, s.bl_count);
          }

          /* ===========================================================================
           * Scan a literal or distance tree to determine the frequencies of the codes
           * in the bit length tree.
           */
          function scan_tree(s, tree, max_code) {
            //    deflate_state *s;
            //    ct_data *tree;   /* the tree to be scanned */
            //    int max_code;    /* and its largest code of non zero frequency */
            var n; /* iterates over all tree elements */
            var prevlen = -1; /* last emitted length */
            var curlen; /* length of current code */

            var nextlen = tree[0 * 2 + 1]; /*.Len*/ /* length of next code */

            var count = 0; /* repeat count of the current code */
            var max_count = 7; /* max repeat count */
            var min_count = 4; /* min repeat count */

            if (nextlen === 0) {
              max_count = 138;
              min_count = 3;
            }
            tree[(max_code + 1) * 2 + 1] /*.Len*/ = 0xffff; /* guard */

            for (n = 0; n <= max_code; n++) {
              curlen = nextlen;
              nextlen = tree[(n + 1) * 2 + 1] /*.Len*/;

              if (++count < max_count && curlen === nextlen) {
                continue;
              } else if (count < min_count) {
                s.bl_tree[curlen * 2] /*.Freq*/ += count;
              } else if (curlen !== 0) {
                if (curlen !== prevlen) {
                  s.bl_tree[curlen * 2] /*.Freq*/++;
                }
                s.bl_tree[REP_3_6 * 2] /*.Freq*/++;
              } else if (count <= 10) {
                s.bl_tree[REPZ_3_10 * 2] /*.Freq*/++;
              } else {
                s.bl_tree[REPZ_11_138 * 2] /*.Freq*/++;
              }

              count = 0;
              prevlen = curlen;

              if (nextlen === 0) {
                max_count = 138;
                min_count = 3;
              } else if (curlen === nextlen) {
                max_count = 6;
                min_count = 3;
              } else {
                max_count = 7;
                min_count = 4;
              }
            }
          }

          /* ===========================================================================
           * Send a literal or distance tree in compressed form, using the codes in
           * bl_tree.
           */
          function send_tree(s, tree, max_code) {
            //    deflate_state *s;
            //    ct_data *tree; /* the tree to be scanned */
            //    int max_code;       /* and its largest code of non zero frequency */
            var n; /* iterates over all tree elements */
            var prevlen = -1; /* last emitted length */
            var curlen; /* length of current code */

            var nextlen = tree[0 * 2 + 1]; /*.Len*/ /* length of next code */

            var count = 0; /* repeat count of the current code */
            var max_count = 7; /* max repeat count */
            var min_count = 4; /* min repeat count */

            /* tree[max_code+1].Len = -1; */ /* guard already set */
            if (nextlen === 0) {
              max_count = 138;
              min_count = 3;
            }

            for (n = 0; n <= max_code; n++) {
              curlen = nextlen;
              nextlen = tree[(n + 1) * 2 + 1] /*.Len*/;

              if (++count < max_count && curlen === nextlen) {
                continue;
              } else if (count < min_count) {
                do {
                  send_code(s, curlen, s.bl_tree);
                } while (--count !== 0);
              } else if (curlen !== 0) {
                if (curlen !== prevlen) {
                  send_code(s, curlen, s.bl_tree);
                  count--;
                }
                //Assert(count >= 3 && count <= 6, " 3_6?");
                send_code(s, REP_3_6, s.bl_tree);
                send_bits(s, count - 3, 2);
              } else if (count <= 10) {
                send_code(s, REPZ_3_10, s.bl_tree);
                send_bits(s, count - 3, 3);
              } else {
                send_code(s, REPZ_11_138, s.bl_tree);
                send_bits(s, count - 11, 7);
              }

              count = 0;
              prevlen = curlen;
              if (nextlen === 0) {
                max_count = 138;
                min_count = 3;
              } else if (curlen === nextlen) {
                max_count = 6;
                min_count = 3;
              } else {
                max_count = 7;
                min_count = 4;
              }
            }
          }

          /* ===========================================================================
           * Construct the Huffman tree for the bit lengths and return the index in
           * bl_order of the last bit length code to send.
           */
          function build_bl_tree(s) {
            var max_blindex; /* index of last bit length code of non zero freq */

            /* Determine the bit length frequencies for literal and distance trees */
            scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
            scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

            /* Build the bit length tree: */
            build_tree(s, s.bl_desc);
            /* opt_len now includes the length of the tree representations, except
             * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
             */

            /* Determine the number of bit length codes to send. The pkzip format
             * requires that at least 4 bit length codes be sent. (appnote.txt says
             * 3 but the actual value used is 4.)
             */
            for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
              if (s.bl_tree[bl_order[max_blindex] * 2 + 1] /*.Len*/ !== 0) {
                break;
              }
            }
            /* Update opt_len to include the bit length tree and counts */
            s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
            //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
            //        s->opt_len, s->static_len));

            return max_blindex;
          }

          /* ===========================================================================
           * Send the header for a block using dynamic Huffman trees: the counts, the
           * lengths of the bit length codes, the literal tree and the distance tree.
           * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
           */
          function send_all_trees(s, lcodes, dcodes, blcodes) {
            //    deflate_state *s;
            //    int lcodes, dcodes, blcodes; /* number of codes for each tree */
            var rank; /* index in bl_order */

            //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
            //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
            //        "too many codes");
            //Tracev((stderr, "\nbl counts: "));
            send_bits(
              s,
              lcodes - 257,
              5
            ); /* not +255 as stated in appnote.txt */
            send_bits(s, dcodes - 1, 5);
            send_bits(s, blcodes - 4, 4); /* not -3 as stated in appnote.txt */
            for (rank = 0; rank < blcodes; rank++) {
              //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
              send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1] /*.Len*/, 3);
            }
            //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

            send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
            //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

            send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
            //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
          }

          /* ===========================================================================
           * Check if the data type is TEXT or BINARY, using the following algorithm:
           * - TEXT if the two conditions below are satisfied:
           *    a) There are no non-portable control characters belonging to the
           *       "black list" (0..6, 14..25, 28..31).
           *    b) There is at least one printable character belonging to the
           *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
           * - BINARY otherwise.
           * - The following partially-portable control characters form a
           *   "gray list" that is ignored in this detection algorithm:
           *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
           * IN assertion: the fields Freq of dyn_ltree are set.
           */
          function detect_data_type(s) {
            /* black_mask is the bit mask of black-listed bytes
             * set bits 0..6, 14..25, and 28..31
             * 0xf3ffc07f = binary 11110011111111111100000001111111
             */
            var black_mask = 0xf3ffc07f;
            var n;

            /* Check for non-textual ("black-listed") bytes. */
            for (n = 0; n <= 31; n++, black_mask >>>= 1) {
              if (black_mask & 1 && s.dyn_ltree[n * 2] /*.Freq*/ !== 0) {
                return Z_BINARY;
              }
            }

            /* Check for textual ("white-listed") bytes. */
            if (
              s.dyn_ltree[9 * 2] /*.Freq*/ !== 0 ||
              s.dyn_ltree[10 * 2] /*.Freq*/ !== 0 ||
              s.dyn_ltree[13 * 2] /*.Freq*/ !== 0
            ) {
              return Z_TEXT;
            }
            for (n = 32; n < LITERALS; n++) {
              if (s.dyn_ltree[n * 2] /*.Freq*/ !== 0) {
                return Z_TEXT;
              }
            }

            /* There are no "black-listed" or "white-listed" bytes:
             * this stream either is empty or has tolerated ("gray-listed") bytes only.
             */
            return Z_BINARY;
          }

          var static_init_done = false;

          /* ===========================================================================
           * Initialize the tree data structures for a new zlib stream.
           */
          function _tr_init(s) {
            if (!static_init_done) {
              tr_static_init();
              static_init_done = true;
            }

            s.l_desc = new TreeDesc(s.dyn_ltree, static_l_desc);
            s.d_desc = new TreeDesc(s.dyn_dtree, static_d_desc);
            s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

            s.bi_buf = 0;
            s.bi_valid = 0;

            /* Initialize the first block of the first file: */
            init_block(s);
          }

          /* ===========================================================================
           * Send a stored block
           */
          function _tr_stored_block(s, buf, stored_len, last) {
            //DeflateState *s;
            //charf *buf;       /* input block */
            //ulg stored_len;   /* length of input block */
            //int last;         /* one if this is the last block for a file */
            send_bits(
              s,
              (STORED_BLOCK << 1) + (last ? 1 : 0),
              3
            ); /* send block type */
            copy_block(s, buf, stored_len, true); /* with header */
          }

          /* ===========================================================================
           * Send one empty static block to give enough lookahead for inflate.
           * This takes 10 bits, of which 7 may remain in the bit buffer.
           */
          function _tr_align(s) {
            send_bits(s, STATIC_TREES << 1, 3);
            send_code(s, END_BLOCK, static_ltree);
            bi_flush(s);
          }

          /* ===========================================================================
           * Determine the best encoding for the current block: dynamic trees, static
           * trees or store, and output the encoded block to the zip file.
           */
          function _tr_flush_block(s, buf, stored_len, last) {
            //DeflateState *s;
            //charf *buf;       /* input block, or NULL if too old */
            //ulg stored_len;   /* length of input block */
            //int last;         /* one if this is the last block for a file */
            var opt_lenb, static_lenb; /* opt_len and static_len in bytes */
            var max_blindex = 0; /* index of last bit length code of non zero freq */

            /* Build the Huffman trees unless a stored block is forced */
            if (s.level > 0) {
              /* Check if the file is binary or text */
              if (s.strm.data_type === Z_UNKNOWN) {
                s.strm.data_type = detect_data_type(s);
              }

              /* Construct the literal and distance trees */
              build_tree(s, s.l_desc);
              // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
              //        s->static_len));

              build_tree(s, s.d_desc);
              // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
              //        s->static_len));
              /* At this point, opt_len and static_len are the total bit lengths of
               * the compressed block data, excluding the tree representations.
               */

              /* Build the bit length tree for the above two trees, and get the index
               * in bl_order of the last bit length code to send.
               */
              max_blindex = build_bl_tree(s);

              /* Determine the best encoding. Compute the block lengths in bytes. */
              opt_lenb = (s.opt_len + 3 + 7) >>> 3;
              static_lenb = (s.static_len + 3 + 7) >>> 3;

              // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
              //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
              //        s->last_lit));

              if (static_lenb <= opt_lenb) {
                opt_lenb = static_lenb;
              }
            } else {
              // Assert(buf != (char*)0, "lost buf");
              opt_lenb = static_lenb =
                stored_len + 5; /* force a stored block */
            }

            if (stored_len + 4 <= opt_lenb && buf !== -1) {
              /* 4: two words for the lengths */

              /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
               * Otherwise we can't have processed more than WSIZE input bytes since
               * the last block flush, because compression would have been
               * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
               * transform a block into a stored block.
               */
              _tr_stored_block(s, buf, stored_len, last);
            } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {
              send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
              compress_block(s, static_ltree, static_dtree);
            } else {
              send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
              send_all_trees(
                s,
                s.l_desc.max_code + 1,
                s.d_desc.max_code + 1,
                max_blindex + 1
              );
              compress_block(s, s.dyn_ltree, s.dyn_dtree);
            }
            // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
            /* The above check is made mod 2^32, for files larger than 512 MB
             * and uLong implemented on 32 bits.
             */
            init_block(s);

            if (last) {
              bi_windup(s);
            }
            // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
            //       s->compressed_len-7*last));
          }

          /* ===========================================================================
           * Save the match info and tally the frequency counts. Return true if
           * the current block must be flushed.
           */
          function _tr_tally(s, dist, lc) {
            //    deflate_state *s;
            //    unsigned dist;  /* distance of matched string */
            //    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
            //var out_length, in_length, dcode;

            s.pending_buf[s.d_buf + s.last_lit * 2] = (dist >>> 8) & 0xff;
            s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

            s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
            s.last_lit++;

            if (dist === 0) {
              /* lc is the unmatched char */
              s.dyn_ltree[lc * 2] /*.Freq*/++;
            } else {
              s.matches++;
              /* Here, lc is the match length - MIN_MATCH */
              dist--; /* dist = match distance - 1 */
              //Assert((ush)dist < (ush)MAX_DIST(s) &&
              //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
              //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

              s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2] /*.Freq*/++;
              s.dyn_dtree[d_code(dist) * 2] /*.Freq*/++;
            }

            // (!) This block is disabled in zlib defaults,
            // don't enable it for binary compatibility

            //#ifdef TRUNCATE_BLOCK
            //  /* Try to guess if it is profitable to stop the current block here */
            //  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
            //    /* Compute an upper bound for the compressed length */
            //    out_length = s.last_lit*8;
            //    in_length = s.strstart - s.block_start;
            //
            //    for (dcode = 0; dcode < D_CODES; dcode++) {
            //      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
            //    }
            //    out_length >>>= 3;
            //    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
            //    //       s->last_lit, in_length, out_length,
            //    //       100L - out_length*100L/in_length));
            //    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
            //      return true;
            //    }
            //  }
            //#endif

            return s.last_lit === s.lit_bufsize - 1;
            /* We avoid equality with lit_bufsize because of wraparound at 64K
             * on 16 bit machines and because stored blocks are restricted to
             * 64K-1 bytes.
             */
          }

          exports._tr_init = _tr_init;
          exports._tr_stored_block = _tr_stored_block;
          exports._tr_flush_block = _tr_flush_block;
          exports._tr_tally = _tr_tally;
          exports._tr_align = _tr_align;

          /***/
        },
        /* 86 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var zlib_inflate = __webpack_require__(87);
          var utils = __webpack_require__(7);
          var strings = __webpack_require__(43);
          var c = __webpack_require__(45);
          var msg = __webpack_require__(21);
          var ZStream = __webpack_require__(44);
          var GZheader = __webpack_require__(90);

          var toString = Object.prototype.toString;

          /**
           * class Inflate
           *
           * Generic JS-style wrapper for zlib calls. If you don't need
           * streaming behaviour - use more simple functions: [[inflate]]
           * and [[inflateRaw]].
           **/

          /* internal
           * inflate.chunks -> Array
           *
           * Chunks of output data, if [[Inflate#onData]] not overridden.
           **/

          /**
           * Inflate.result -> Uint8Array|Array|String
           *
           * Uncompressed result, generated by default [[Inflate#onData]]
           * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
           * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you
           * push a chunk with explicit flush (call [[Inflate#push]] with
           * `Z_SYNC_FLUSH` param).
           **/

          /**
           * Inflate.err -> Number
           *
           * Error code after inflate finished. 0 (Z_OK) on success.
           * Should be checked if broken data possible.
           **/

          /**
           * Inflate.msg -> String
           *
           * Error message, if [[Inflate.err]] != 0
           **/

          /**
           * new Inflate(options)
           * - options (Object): zlib inflate options.
           *
           * Creates new inflator instance with specified params. Throws exception
           * on bad params. Supported options:
           *
           * - `windowBits`
           * - `dictionary`
           *
           * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
           * for more information on these.
           *
           * Additional options, for internal needs:
           *
           * - `chunkSize` - size of generated data chunks (16K by default)
           * - `raw` (Boolean) - do raw inflate
           * - `to` (String) - if equal to 'string', then result will be converted
           *   from utf8 to utf16 (javascript) string. When string output requested,
           *   chunk length can differ from `chunkSize`, depending on content.
           *
           * By default, when no options set, autodetect deflate/gzip data format via
           * wrapper header.
           *
           * ##### Example:
           *
           * ```javascript
           * var pako = require('pako')
           *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
           *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
           *
           * var inflate = new pako.Inflate({ level: 3});
           *
           * inflate.push(chunk1, false);
           * inflate.push(chunk2, true);  // true -> last chunk
           *
           * if (inflate.err) { throw new Error(inflate.err); }
           *
           * console.log(inflate.result);
           * ```
           **/
          function Inflate(options) {
            if (!(this instanceof Inflate)) return new Inflate(options);

            this.options = utils.assign(
              {
                chunkSize: 16384,
                windowBits: 0,
                to: '',
              },
              options || {}
            );

            var opt = this.options;

            // Force window size for `raw` data, if not set directly,
            // because we have no header for autodetect.
            if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {
              opt.windowBits = -opt.windowBits;
              if (opt.windowBits === 0) {
                opt.windowBits = -15;
              }
            }

            // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
            if (
              opt.windowBits >= 0 &&
              opt.windowBits < 16 &&
              !(options && options.windowBits)
            ) {
              opt.windowBits += 32;
            }

            // Gzip header has no info about windows size, we can do autodetect only
            // for deflate. So, if window size not set, force it to max when gzip possible
            if (opt.windowBits > 15 && opt.windowBits < 48) {
              // bit 3 (16) -> gzipped data
              // bit 4 (32) -> autodetect gzip/deflate
              if ((opt.windowBits & 15) === 0) {
                opt.windowBits |= 15;
              }
            }

            this.err = 0; // error code, if happens (0 = Z_OK)
            this.msg = ''; // error message
            this.ended = false; // used to avoid multiple onEnd() calls
            this.chunks = []; // chunks of compressed data

            this.strm = new ZStream();
            this.strm.avail_out = 0;

            var status = zlib_inflate.inflateInit2(this.strm, opt.windowBits);

            if (status !== c.Z_OK) {
              throw new Error(msg[status]);
            }

            this.header = new GZheader();

            zlib_inflate.inflateGetHeader(this.strm, this.header);

            // Setup dictionary
            if (opt.dictionary) {
              // Convert data if needed
              if (typeof opt.dictionary === 'string') {
                opt.dictionary = strings.string2buf(opt.dictionary);
              } else if (
                toString.call(opt.dictionary) === '[object ArrayBuffer]'
              ) {
                opt.dictionary = new Uint8Array(opt.dictionary);
              }
              if (opt.raw) {
                //In raw mode we need to set the dictionary early
                status = zlib_inflate.inflateSetDictionary(
                  this.strm,
                  opt.dictionary
                );
                if (status !== c.Z_OK) {
                  throw new Error(msg[status]);
                }
              }
            }
          }

          /**
           * Inflate#push(data[, mode]) -> Boolean
           * - data (Uint8Array|Array|ArrayBuffer|String): input data
           * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
           *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
           *
           * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
           * new output chunks. Returns `true` on success. The last data block must have
           * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
           * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you
           * can use mode Z_SYNC_FLUSH, keeping the decompression context.
           *
           * On fail call [[Inflate#onEnd]] with error code and return false.
           *
           * We strongly recommend to use `Uint8Array` on input for best speed (output
           * format is detected automatically). Also, don't skip last param and always
           * use the same type in your code (boolean or number). That will improve JS speed.
           *
           * For regular `Array`-s make sure all elements are [0..255].
           *
           * ##### Example
           *
           * ```javascript
           * push(chunk, false); // push one of data chunks
           * ...
           * push(chunk, true);  // push last chunk
           * ```
           **/
          Inflate.prototype.push = function (data, mode) {
            var strm = this.strm;
            var chunkSize = this.options.chunkSize;
            var dictionary = this.options.dictionary;
            var status, _mode;
            var next_out_utf8, tail, utf8str;

            // Flag to properly process Z_BUF_ERROR on testing inflate call
            // when we check that all output data was flushed.
            var allowBufError = false;

            if (this.ended) {
              return false;
            }
            _mode =
              mode === ~~mode
                ? mode
                : mode === true
                ? c.Z_FINISH
                : c.Z_NO_FLUSH;

            // Convert data if needed
            if (typeof data === 'string') {
              // Only binary strings can be decompressed on practice
              strm.input = strings.binstring2buf(data);
            } else if (toString.call(data) === '[object ArrayBuffer]') {
              strm.input = new Uint8Array(data);
            } else {
              strm.input = data;
            }

            strm.next_in = 0;
            strm.avail_in = strm.input.length;

            do {
              if (strm.avail_out === 0) {
                strm.output = new utils.Buf8(chunkSize);
                strm.next_out = 0;
                strm.avail_out = chunkSize;
              }

              status = zlib_inflate.inflate(
                strm,
                c.Z_NO_FLUSH
              ); /* no bad return value */

              if (status === c.Z_NEED_DICT && dictionary) {
                status = zlib_inflate.inflateSetDictionary(
                  this.strm,
                  dictionary
                );
              }

              if (status === c.Z_BUF_ERROR && allowBufError === true) {
                status = c.Z_OK;
                allowBufError = false;
              }

              if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
                this.onEnd(status);
                this.ended = true;
                return false;
              }

              if (strm.next_out) {
                if (
                  strm.avail_out === 0 ||
                  status === c.Z_STREAM_END ||
                  (strm.avail_in === 0 &&
                    (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))
                ) {
                  if (this.options.to === 'string') {
                    next_out_utf8 = strings.utf8border(
                      strm.output,
                      strm.next_out
                    );

                    tail = strm.next_out - next_out_utf8;
                    utf8str = strings.buf2string(strm.output, next_out_utf8);

                    // move tail
                    strm.next_out = tail;
                    strm.avail_out = chunkSize - tail;
                    if (tail) {
                      utils.arraySet(
                        strm.output,
                        strm.output,
                        next_out_utf8,
                        tail,
                        0
                      );
                    }

                    this.onData(utf8str);
                  } else {
                    this.onData(utils.shrinkBuf(strm.output, strm.next_out));
                  }
                }
              }

              // When no more input data, we should check that internal inflate buffers
              // are flushed. The only way to do it when avail_out = 0 - run one more
              // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.
              // Here we set flag to process this error properly.
              //
              // NOTE. Deflate does not return error in this case and does not needs such
              // logic.
              if (strm.avail_in === 0 && strm.avail_out === 0) {
                allowBufError = true;
              }
            } while (
              (strm.avail_in > 0 || strm.avail_out === 0) &&
              status !== c.Z_STREAM_END
            );

            if (status === c.Z_STREAM_END) {
              _mode = c.Z_FINISH;
            }

            // Finalize on the last chunk.
            if (_mode === c.Z_FINISH) {
              status = zlib_inflate.inflateEnd(this.strm);
              this.onEnd(status);
              this.ended = true;
              return status === c.Z_OK;
            }

            // callback interim results if Z_SYNC_FLUSH.
            if (_mode === c.Z_SYNC_FLUSH) {
              this.onEnd(c.Z_OK);
              strm.avail_out = 0;
              return true;
            }

            return true;
          };

          /**
           * Inflate#onData(chunk) -> Void
           * - chunk (Uint8Array|Array|String): output data. Type of array depends
           *   on js engine support. When string output requested, each chunk
           *   will be string.
           *
           * By default, stores data blocks in `chunks[]` property and glue
           * those in `onEnd`. Override this handler, if you need another behaviour.
           **/
          Inflate.prototype.onData = function (chunk) {
            this.chunks.push(chunk);
          };

          /**
           * Inflate#onEnd(status) -> Void
           * - status (Number): inflate status. 0 (Z_OK) on success,
           *   other if not.
           *
           * Called either after you tell inflate that the input stream is
           * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
           * or if an error happened. By default - join collected chunks,
           * free memory and fill `results` / `err` properties.
           **/
          Inflate.prototype.onEnd = function (status) {
            // On success - join
            if (status === c.Z_OK) {
              if (this.options.to === 'string') {
                // Glue & convert here, until we teach pako to send
                // utf8 aligned strings to onData
                this.result = this.chunks.join('');
              } else {
                this.result = utils.flattenChunks(this.chunks);
              }
            }
            this.chunks = [];
            this.err = status;
            this.msg = this.strm.msg;
          };

          /**
           * inflate(data[, options]) -> Uint8Array|Array|String
           * - data (Uint8Array|Array|String): input data to decompress.
           * - options (Object): zlib inflate options.
           *
           * Decompress `data` with inflate/ungzip and `options`. Autodetect
           * format via wrapper header by default. That's why we don't provide
           * separate `ungzip` method.
           *
           * Supported options are:
           *
           * - windowBits
           *
           * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
           * for more information.
           *
           * Sugar (options):
           *
           * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
           *   negative windowBits implicitly.
           * - `to` (String) - if equal to 'string', then result will be converted
           *   from utf8 to utf16 (javascript) string. When string output requested,
           *   chunk length can differ from `chunkSize`, depending on content.
           *
           *
           * ##### Example:
           *
           * ```javascript
           * var pako = require('pako')
           *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])
           *   , output;
           *
           * try {
           *   output = pako.inflate(input);
           * } catch (err)
           *   console.log(err);
           * }
           * ```
           **/
          function inflate(input, options) {
            var inflator = new Inflate(options);

            inflator.push(input, true);

            // That will never happens, if you don't cheat with options :)
            if (inflator.err) {
              throw inflator.msg || msg[inflator.err];
            }

            return inflator.result;
          }

          /**
           * inflateRaw(data[, options]) -> Uint8Array|Array|String
           * - data (Uint8Array|Array|String): input data to decompress.
           * - options (Object): zlib inflate options.
           *
           * The same as [[inflate]], but creates raw data, without wrapper
           * (header and adler32 crc).
           **/
          function inflateRaw(input, options) {
            options = options || {};
            options.raw = true;
            return inflate(input, options);
          }

          /**
           * ungzip(data[, options]) -> Uint8Array|Array|String
           * - data (Uint8Array|Array|String): input data to decompress.
           * - options (Object): zlib inflate options.
           *
           * Just shortcut to [[inflate]], because it autodetects format
           * by header.content. Done for convenience.
           **/

          exports.Inflate = Inflate;
          exports.inflate = inflate;
          exports.inflateRaw = inflateRaw;
          exports.ungzip = inflate;

          /***/
        },
        /* 87 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          var utils = __webpack_require__(7);
          var adler32 = __webpack_require__(41);
          var crc32 = __webpack_require__(42);
          var inflate_fast = __webpack_require__(88);
          var inflate_table = __webpack_require__(89);

          var CODES = 0;
          var LENS = 1;
          var DISTS = 2;

          /* Public constants ==========================================================*/
          /* ===========================================================================*/

          /* Allowed flush values; see deflate() and inflate() below for details */
          //var Z_NO_FLUSH      = 0;
          //var Z_PARTIAL_FLUSH = 1;
          //var Z_SYNC_FLUSH    = 2;
          //var Z_FULL_FLUSH    = 3;
          var Z_FINISH = 4;
          var Z_BLOCK = 5;
          var Z_TREES = 6;

          /* Return codes for the compression/decompression functions. Negative values
           * are errors, positive values are used for special but normal events.
           */
          var Z_OK = 0;
          var Z_STREAM_END = 1;
          var Z_NEED_DICT = 2;
          //var Z_ERRNO         = -1;
          var Z_STREAM_ERROR = -2;
          var Z_DATA_ERROR = -3;
          var Z_MEM_ERROR = -4;
          var Z_BUF_ERROR = -5;
          //var Z_VERSION_ERROR = -6;

          /* The deflate compression method */
          var Z_DEFLATED = 8;

          /* STATES ====================================================================*/
          /* ===========================================================================*/

          var HEAD = 1; /* i: waiting for magic header */
          var FLAGS = 2; /* i: waiting for method and flags (gzip) */
          var TIME = 3; /* i: waiting for modification time (gzip) */
          var OS = 4; /* i: waiting for extra flags and operating system (gzip) */
          var EXLEN = 5; /* i: waiting for extra length (gzip) */
          var EXTRA = 6; /* i: waiting for extra bytes (gzip) */
          var NAME = 7; /* i: waiting for end of file name (gzip) */
          var COMMENT = 8; /* i: waiting for end of comment (gzip) */
          var HCRC = 9; /* i: waiting for header crc (gzip) */
          var DICTID = 10; /* i: waiting for dictionary check value */
          var DICT = 11; /* waiting for inflateSetDictionary() call */
          var TYPE = 12; /* i: waiting for type bits, including last-flag bit */
          var TYPEDO = 13; /* i: same, but skip check to exit inflate on new block */
          var STORED = 14; /* i: waiting for stored size (length and complement) */
          var COPY_ = 15; /* i/o: same as COPY below, but only first time in */
          var COPY = 16; /* i/o: waiting for input or output to copy stored block */
          var TABLE = 17; /* i: waiting for dynamic block table lengths */
          var LENLENS = 18; /* i: waiting for code length code lengths */
          var CODELENS = 19; /* i: waiting for length/lit and distance code lengths */
          var LEN_ = 20; /* i: same as LEN below, but only first time in */
          var LEN = 21; /* i: waiting for length/lit/eob code */
          var LENEXT = 22; /* i: waiting for length extra bits */
          var DIST = 23; /* i: waiting for distance code */
          var DISTEXT = 24; /* i: waiting for distance extra bits */
          var MATCH = 25; /* o: waiting for output space to copy string */
          var LIT = 26; /* o: waiting for output space to write literal */
          var CHECK = 27; /* i: waiting for 32-bit check value */
          var LENGTH = 28; /* i: waiting for 32-bit length (gzip) */
          var DONE = 29; /* finished check, done -- remain here until reset */
          var BAD = 30; /* got a data error -- remain here until reset */
          var MEM = 31; /* got an inflate() memory error -- remain here until reset */
          var SYNC = 32; /* looking for synchronization bytes to restart inflate() */

          /* ===========================================================================*/

          var ENOUGH_LENS = 852;
          var ENOUGH_DISTS = 592;
          //var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

          var MAX_WBITS = 15;
          /* 32K LZ77 window */
          var DEF_WBITS = MAX_WBITS;

          function zswap32(q) {
            return (
              ((q >>> 24) & 0xff) +
              ((q >>> 8) & 0xff00) +
              ((q & 0xff00) << 8) +
              ((q & 0xff) << 24)
            );
          }

          function InflateState() {
            this.mode = 0; /* current inflate mode */
            this.last = false; /* true if processing last block */
            this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */
            this.havedict = false; /* true if dictionary provided */
            this.flags = 0; /* gzip header method and flags (0 if zlib) */
            this.dmax = 0; /* zlib header max distance (INFLATE_STRICT) */
            this.check = 0; /* protected copy of check value */
            this.total = 0; /* protected copy of output count */
            // TODO: may be {}
            this.head = null; /* where to save gzip header information */

            /* sliding window */
            this.wbits = 0; /* log base 2 of requested window size */
            this.wsize = 0; /* window size or zero if not using window */
            this.whave = 0; /* valid bytes in the window */
            this.wnext = 0; /* window write index */
            this.window = null; /* allocated sliding window, if needed */

            /* bit accumulator */
            this.hold = 0; /* input bit accumulator */
            this.bits = 0; /* number of bits in "in" */

            /* for string and stored block copying */
            this.length = 0; /* literal or length of data to copy */
            this.offset = 0; /* distance back to copy string from */

            /* for table and code decoding */
            this.extra = 0; /* extra bits needed */

            /* fixed and dynamic code tables */
            this.lencode = null; /* starting table for length/literal codes */
            this.distcode = null; /* starting table for distance codes */
            this.lenbits = 0; /* index bits for lencode */
            this.distbits = 0; /* index bits for distcode */

            /* dynamic table building */
            this.ncode = 0; /* number of code length code lengths */
            this.nlen = 0; /* number of length code lengths */
            this.ndist = 0; /* number of distance code lengths */
            this.have = 0; /* number of code lengths in lens[] */
            this.next = null; /* next available space in codes[] */

            this.lens = new utils.Buf16(
              320
            ); /* temporary storage for code lengths */
            this.work = new utils.Buf16(
              288
            ); /* work area for code table building */

            /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
            //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
            this.lendyn =
              null; /* dynamic table for length/literal codes (JS specific) */
            this.distdyn =
              null; /* dynamic table for distance codes (JS specific) */
            this.sane = 0; /* if false, allow invalid distance too far */
            this.back = 0; /* bits back of last unprocessed length/lit */
            this.was = 0; /* initial length of match */
          }

          function inflateResetKeep(strm) {
            var state;

            if (!strm || !strm.state) {
              return Z_STREAM_ERROR;
            }
            state = strm.state;
            strm.total_in = strm.total_out = state.total = 0;
            strm.msg = ''; /*Z_NULL*/
            if (state.wrap) {
              /* to support ill-conceived Java test suite */
              strm.adler = state.wrap & 1;
            }
            state.mode = HEAD;
            state.last = 0;
            state.havedict = 0;
            state.dmax = 32768;
            state.head = null /*Z_NULL*/;
            state.hold = 0;
            state.bits = 0;
            //state.lencode = state.distcode = state.next = state.codes;
            state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
            state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

            state.sane = 1;
            state.back = -1;
            //Tracev((stderr, "inflate: reset\n"));
            return Z_OK;
          }

          function inflateReset(strm) {
            var state;

            if (!strm || !strm.state) {
              return Z_STREAM_ERROR;
            }
            state = strm.state;
            state.wsize = 0;
            state.whave = 0;
            state.wnext = 0;
            return inflateResetKeep(strm);
          }

          function inflateReset2(strm, windowBits) {
            var wrap;
            var state;

            /* get the state */
            if (!strm || !strm.state) {
              return Z_STREAM_ERROR;
            }
            state = strm.state;

            /* extract wrap request from windowBits parameter */
            if (windowBits < 0) {
              wrap = 0;
              windowBits = -windowBits;
            } else {
              wrap = (windowBits >> 4) + 1;
              if (windowBits < 48) {
                windowBits &= 15;
              }
            }

            /* set number of window bits, free window if different */
            if (windowBits && (windowBits < 8 || windowBits > 15)) {
              return Z_STREAM_ERROR;
            }
            if (state.window !== null && state.wbits !== windowBits) {
              state.window = null;
            }

            /* update state and reset the rest of it */
            state.wrap = wrap;
            state.wbits = windowBits;
            return inflateReset(strm);
          }

          function inflateInit2(strm, windowBits) {
            var ret;
            var state;

            if (!strm) {
              return Z_STREAM_ERROR;
            }
            //strm.msg = Z_NULL;                 /* in case we return an error */

            state = new InflateState();

            //if (state === Z_NULL) return Z_MEM_ERROR;
            //Tracev((stderr, "inflate: allocated\n"));
            strm.state = state;
            state.window = null /*Z_NULL*/;
            ret = inflateReset2(strm, windowBits);
            if (ret !== Z_OK) {
              strm.state = null /*Z_NULL*/;
            }
            return ret;
          }

          function inflateInit(strm) {
            return inflateInit2(strm, DEF_WBITS);
          }

          /*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
          var virgin = true;

          var lenfix, distfix; // We have no pointers in JS, so keep tables separate

          function fixedtables(state) {
            /* build fixed huffman tables if first call (may not be thread safe) */
            if (virgin) {
              var sym;

              lenfix = new utils.Buf32(512);
              distfix = new utils.Buf32(32);

              /* literal/length table */
              sym = 0;
              while (sym < 144) {
                state.lens[sym++] = 8;
              }
              while (sym < 256) {
                state.lens[sym++] = 9;
              }
              while (sym < 280) {
                state.lens[sym++] = 7;
              }
              while (sym < 288) {
                state.lens[sym++] = 8;
              }

              inflate_table(LENS, state.lens, 0, 288, lenfix, 0, state.work, {
                bits: 9,
              });

              /* distance table */
              sym = 0;
              while (sym < 32) {
                state.lens[sym++] = 5;
              }

              inflate_table(DISTS, state.lens, 0, 32, distfix, 0, state.work, {
                bits: 5,
              });

              /* do this just once */
              virgin = false;
            }

            state.lencode = lenfix;
            state.lenbits = 9;
            state.distcode = distfix;
            state.distbits = 5;
          }

          /*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
          function updatewindow(strm, src, end, copy) {
            var dist;
            var state = strm.state;

            /* if it hasn't been done already, allocate space for the window */
            if (state.window === null) {
              state.wsize = 1 << state.wbits;
              state.wnext = 0;
              state.whave = 0;

              state.window = new utils.Buf8(state.wsize);
            }

            /* copy state->wsize or less output bytes into the circular window */
            if (copy >= state.wsize) {
              utils.arraySet(
                state.window,
                src,
                end - state.wsize,
                state.wsize,
                0
              );
              state.wnext = 0;
              state.whave = state.wsize;
            } else {
              dist = state.wsize - state.wnext;
              if (dist > copy) {
                dist = copy;
              }
              //zmemcpy(state->window + state->wnext, end - copy, dist);
              utils.arraySet(state.window, src, end - copy, dist, state.wnext);
              copy -= dist;
              if (copy) {
                //zmemcpy(state->window, end - copy, copy);
                utils.arraySet(state.window, src, end - copy, copy, 0);
                state.wnext = copy;
                state.whave = state.wsize;
              } else {
                state.wnext += dist;
                if (state.wnext === state.wsize) {
                  state.wnext = 0;
                }
                if (state.whave < state.wsize) {
                  state.whave += dist;
                }
              }
            }
            return 0;
          }

          function inflate(strm, flush) {
            var state;
            var input, output; // input/output buffers
            var next; /* next input INDEX */
            var put; /* next output INDEX */
            var have, left; /* available input and output */
            var hold; /* bit buffer */
            var bits; /* bits in bit buffer */
            var _in, _out; /* save starting available input and output */
            var copy; /* number of stored or match bytes to copy */
            var from; /* where to copy match bytes from */
            var from_source;
            var here = 0; /* current decoding table entry */
            var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
            //var last;                   /* parent table entry */
            var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
            var len; /* length to copy for repeats, bits to drop */
            var ret; /* return code */
            var hbuf = new utils.Buf8(
              4
            ); /* buffer for gzip header crc calculation */
            var opts;

            var n; // temporary var for NEED_BITS

            var order =
              /* permutation of code lengths */
              [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];

            if (
              !strm ||
              !strm.state ||
              !strm.output ||
              (!strm.input && strm.avail_in !== 0)
            ) {
              return Z_STREAM_ERROR;
            }

            state = strm.state;
            if (state.mode === TYPE) {
              state.mode = TYPEDO;
            } /* skip check */

            //--- LOAD() ---
            put = strm.next_out;
            output = strm.output;
            left = strm.avail_out;
            next = strm.next_in;
            input = strm.input;
            have = strm.avail_in;
            hold = state.hold;
            bits = state.bits;
            //---

            _in = have;
            _out = left;
            ret = Z_OK;

            // goto emulation
            inf_leave: for (;;) {
              switch (state.mode) {
                case HEAD:
                  if (state.wrap === 0) {
                    state.mode = TYPEDO;
                    break;
                  }
                  //=== NEEDBITS(16);
                  while (bits < 16) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  if (state.wrap & 2 && hold === 0x8b1f) {
                    /* gzip header */
                    state.check = 0 /*crc32(0L, Z_NULL, 0)*/;
                    //=== CRC2(state.check, hold);
                    hbuf[0] = hold & 0xff;
                    hbuf[1] = (hold >>> 8) & 0xff;
                    state.check = crc32(state.check, hbuf, 2, 0);
                    //===//

                    //=== INITBITS();
                    hold = 0;
                    bits = 0;
                    //===//
                    state.mode = FLAGS;
                    break;
                  }
                  state.flags = 0; /* expect zlib header */
                  if (state.head) {
                    state.head.done = false;
                  }
                  if (
                    !(state.wrap & 1) /* check if zlib header allowed */ ||
                    (((hold & 0xff) << /*BITS(8)*/ 8) + (hold >> 8)) % 31
                  ) {
                    strm.msg = 'incorrect header check';
                    state.mode = BAD;
                    break;
                  }
                  if ((hold & 0x0f) !== /*BITS(4)*/ Z_DEFLATED) {
                    strm.msg = 'unknown compression method';
                    state.mode = BAD;
                    break;
                  }
                  //--- DROPBITS(4) ---//
                  hold >>>= 4;
                  bits -= 4;
                  //---//
                  len = (hold & 0x0f) + /*BITS(4)*/ 8;
                  if (state.wbits === 0) {
                    state.wbits = len;
                  } else if (len > state.wbits) {
                    strm.msg = 'invalid window size';
                    state.mode = BAD;
                    break;
                  }
                  state.dmax = 1 << len;
                  //Tracev((stderr, "inflate:   zlib header ok\n"));
                  strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/;
                  state.mode = hold & 0x200 ? DICTID : TYPE;
                  //=== INITBITS();
                  hold = 0;
                  bits = 0;
                  //===//
                  break;
                case FLAGS:
                  //=== NEEDBITS(16); */
                  while (bits < 16) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  state.flags = hold;
                  if ((state.flags & 0xff) !== Z_DEFLATED) {
                    strm.msg = 'unknown compression method';
                    state.mode = BAD;
                    break;
                  }
                  if (state.flags & 0xe000) {
                    strm.msg = 'unknown header flags set';
                    state.mode = BAD;
                    break;
                  }
                  if (state.head) {
                    state.head.text = (hold >> 8) & 1;
                  }
                  if (state.flags & 0x0200) {
                    //=== CRC2(state.check, hold);
                    hbuf[0] = hold & 0xff;
                    hbuf[1] = (hold >>> 8) & 0xff;
                    state.check = crc32(state.check, hbuf, 2, 0);
                    //===//
                  }
                  //=== INITBITS();
                  hold = 0;
                  bits = 0;
                  //===//
                  state.mode = TIME;
                /* falls through */
                case TIME:
                  //=== NEEDBITS(32); */
                  while (bits < 32) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  if (state.head) {
                    state.head.time = hold;
                  }
                  if (state.flags & 0x0200) {
                    //=== CRC4(state.check, hold)
                    hbuf[0] = hold & 0xff;
                    hbuf[1] = (hold >>> 8) & 0xff;
                    hbuf[2] = (hold >>> 16) & 0xff;
                    hbuf[3] = (hold >>> 24) & 0xff;
                    state.check = crc32(state.check, hbuf, 4, 0);
                    //===
                  }
                  //=== INITBITS();
                  hold = 0;
                  bits = 0;
                  //===//
                  state.mode = OS;
                /* falls through */
                case OS:
                  //=== NEEDBITS(16); */
                  while (bits < 16) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  if (state.head) {
                    state.head.xflags = hold & 0xff;
                    state.head.os = hold >> 8;
                  }
                  if (state.flags & 0x0200) {
                    //=== CRC2(state.check, hold);
                    hbuf[0] = hold & 0xff;
                    hbuf[1] = (hold >>> 8) & 0xff;
                    state.check = crc32(state.check, hbuf, 2, 0);
                    //===//
                  }
                  //=== INITBITS();
                  hold = 0;
                  bits = 0;
                  //===//
                  state.mode = EXLEN;
                /* falls through */
                case EXLEN:
                  if (state.flags & 0x0400) {
                    //=== NEEDBITS(16); */
                    while (bits < 16) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    state.length = hold;
                    if (state.head) {
                      state.head.extra_len = hold;
                    }
                    if (state.flags & 0x0200) {
                      //=== CRC2(state.check, hold);
                      hbuf[0] = hold & 0xff;
                      hbuf[1] = (hold >>> 8) & 0xff;
                      state.check = crc32(state.check, hbuf, 2, 0);
                      //===//
                    }
                    //=== INITBITS();
                    hold = 0;
                    bits = 0;
                    //===//
                  } else if (state.head) {
                    state.head.extra = null /*Z_NULL*/;
                  }
                  state.mode = EXTRA;
                /* falls through */
                case EXTRA:
                  if (state.flags & 0x0400) {
                    copy = state.length;
                    if (copy > have) {
                      copy = have;
                    }
                    if (copy) {
                      if (state.head) {
                        len = state.head.extra_len - state.length;
                        if (!state.head.extra) {
                          // Use untyped array for more convenient processing later
                          state.head.extra = new Array(state.head.extra_len);
                        }
                        utils.arraySet(
                          state.head.extra,
                          input,
                          next,
                          // extra field is limited to 65536 bytes
                          // - no need for additional size check
                          copy,
                          /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                          len
                        );
                        //zmemcpy(state.head.extra + len, next,
                        //        len + copy > state.head.extra_max ?
                        //        state.head.extra_max - len : copy);
                      }
                      if (state.flags & 0x0200) {
                        state.check = crc32(state.check, input, copy, next);
                      }
                      have -= copy;
                      next += copy;
                      state.length -= copy;
                    }
                    if (state.length) {
                      break inf_leave;
                    }
                  }
                  state.length = 0;
                  state.mode = NAME;
                /* falls through */
                case NAME:
                  if (state.flags & 0x0800) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    copy = 0;
                    do {
                      // TODO: 2 or 1 bytes?
                      len = input[next + copy++];
                      /* use constant limit because in js we should not preallocate memory */
                      if (
                        state.head &&
                        len &&
                        state.length < 65536 /*state.head.name_max*/
                      ) {
                        state.head.name += String.fromCharCode(len);
                      }
                    } while (len && copy < have);

                    if (state.flags & 0x0200) {
                      state.check = crc32(state.check, input, copy, next);
                    }
                    have -= copy;
                    next += copy;
                    if (len) {
                      break inf_leave;
                    }
                  } else if (state.head) {
                    state.head.name = null;
                  }
                  state.length = 0;
                  state.mode = COMMENT;
                /* falls through */
                case COMMENT:
                  if (state.flags & 0x1000) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    copy = 0;
                    do {
                      len = input[next + copy++];
                      /* use constant limit because in js we should not preallocate memory */
                      if (
                        state.head &&
                        len &&
                        state.length < 65536 /*state.head.comm_max*/
                      ) {
                        state.head.comment += String.fromCharCode(len);
                      }
                    } while (len && copy < have);
                    if (state.flags & 0x0200) {
                      state.check = crc32(state.check, input, copy, next);
                    }
                    have -= copy;
                    next += copy;
                    if (len) {
                      break inf_leave;
                    }
                  } else if (state.head) {
                    state.head.comment = null;
                  }
                  state.mode = HCRC;
                /* falls through */
                case HCRC:
                  if (state.flags & 0x0200) {
                    //=== NEEDBITS(16); */
                    while (bits < 16) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    if (hold !== (state.check & 0xffff)) {
                      strm.msg = 'header crc mismatch';
                      state.mode = BAD;
                      break;
                    }
                    //=== INITBITS();
                    hold = 0;
                    bits = 0;
                    //===//
                  }
                  if (state.head) {
                    state.head.hcrc = (state.flags >> 9) & 1;
                    state.head.done = true;
                  }
                  strm.adler = state.check = 0;
                  state.mode = TYPE;
                  break;
                case DICTID:
                  //=== NEEDBITS(32); */
                  while (bits < 32) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  strm.adler = state.check = zswap32(hold);
                  //=== INITBITS();
                  hold = 0;
                  bits = 0;
                  //===//
                  state.mode = DICT;
                /* falls through */
                case DICT:
                  if (state.havedict === 0) {
                    //--- RESTORE() ---
                    strm.next_out = put;
                    strm.avail_out = left;
                    strm.next_in = next;
                    strm.avail_in = have;
                    state.hold = hold;
                    state.bits = bits;
                    //---
                    return Z_NEED_DICT;
                  }
                  strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/;
                  state.mode = TYPE;
                /* falls through */
                case TYPE:
                  if (flush === Z_BLOCK || flush === Z_TREES) {
                    break inf_leave;
                  }
                /* falls through */
                case TYPEDO:
                  if (state.last) {
                    //--- BYTEBITS() ---//
                    hold >>>= bits & 7;
                    bits -= bits & 7;
                    //---//
                    state.mode = CHECK;
                    break;
                  }
                  //=== NEEDBITS(3); */
                  while (bits < 3) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  state.last = hold & 0x01 /*BITS(1)*/;
                  //--- DROPBITS(1) ---//
                  hold >>>= 1;
                  bits -= 1;
                  //---//

                  switch (hold & 0x03) {
                    /*BITS(2)*/ case 0:
                      /* stored block */
                      //Tracev((stderr, "inflate:     stored block%s\n",
                      //        state.last ? " (last)" : ""));
                      state.mode = STORED;
                      break;
                    case 1:
                      /* fixed block */
                      fixedtables(state);
                      //Tracev((stderr, "inflate:     fixed codes block%s\n",
                      //        state.last ? " (last)" : ""));
                      state.mode = LEN_; /* decode codes */
                      if (flush === Z_TREES) {
                        //--- DROPBITS(2) ---//
                        hold >>>= 2;
                        bits -= 2;
                        //---//
                        break inf_leave;
                      }
                      break;
                    case 2:
                      /* dynamic block */
                      //Tracev((stderr, "inflate:     dynamic codes block%s\n",
                      //        state.last ? " (last)" : ""));
                      state.mode = TABLE;
                      break;
                    case 3:
                      strm.msg = 'invalid block type';
                      state.mode = BAD;
                  }
                  //--- DROPBITS(2) ---//
                  hold >>>= 2;
                  bits -= 2;
                  //---//
                  break;
                case STORED:
                  //--- BYTEBITS() ---// /* go to byte boundary */
                  hold >>>= bits & 7;
                  bits -= bits & 7;
                  //---//
                  //=== NEEDBITS(32); */
                  while (bits < 32) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
                    strm.msg = 'invalid stored block lengths';
                    state.mode = BAD;
                    break;
                  }
                  state.length = hold & 0xffff;
                  //Tracev((stderr, "inflate:       stored length %u\n",
                  //        state.length));
                  //=== INITBITS();
                  hold = 0;
                  bits = 0;
                  //===//
                  state.mode = COPY_;
                  if (flush === Z_TREES) {
                    break inf_leave;
                  }
                /* falls through */
                case COPY_:
                  state.mode = COPY;
                /* falls through */
                case COPY:
                  copy = state.length;
                  if (copy) {
                    if (copy > have) {
                      copy = have;
                    }
                    if (copy > left) {
                      copy = left;
                    }
                    if (copy === 0) {
                      break inf_leave;
                    }
                    //--- zmemcpy(put, next, copy); ---
                    utils.arraySet(output, input, next, copy, put);
                    //---//
                    have -= copy;
                    next += copy;
                    left -= copy;
                    put += copy;
                    state.length -= copy;
                    break;
                  }
                  //Tracev((stderr, "inflate:       stored end\n"));
                  state.mode = TYPE;
                  break;
                case TABLE:
                  //=== NEEDBITS(14); */
                  while (bits < 14) {
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                  }
                  //===//
                  state.nlen = (hold & 0x1f) + /*BITS(5)*/ 257;
                  //--- DROPBITS(5) ---//
                  hold >>>= 5;
                  bits -= 5;
                  //---//
                  state.ndist = (hold & 0x1f) + /*BITS(5)*/ 1;
                  //--- DROPBITS(5) ---//
                  hold >>>= 5;
                  bits -= 5;
                  //---//
                  state.ncode = (hold & 0x0f) + /*BITS(4)*/ 4;
                  //--- DROPBITS(4) ---//
                  hold >>>= 4;
                  bits -= 4;
                  //---//
                  //#ifndef PKZIP_BUG_WORKAROUND
                  if (state.nlen > 286 || state.ndist > 30) {
                    strm.msg = 'too many length or distance symbols';
                    state.mode = BAD;
                    break;
                  }
                  //#endif
                  //Tracev((stderr, "inflate:       table sizes ok\n"));
                  state.have = 0;
                  state.mode = LENLENS;
                /* falls through */
                case LENLENS:
                  while (state.have < state.ncode) {
                    //=== NEEDBITS(3);
                    while (bits < 3) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    state.lens[order[state.have++]] = hold & 0x07; //BITS(3);
                    //--- DROPBITS(3) ---//
                    hold >>>= 3;
                    bits -= 3;
                    //---//
                  }
                  while (state.have < 19) {
                    state.lens[order[state.have++]] = 0;
                  }
                  // We have separate tables & no pointers. 2 commented lines below not needed.
                  //state.next = state.codes;
                  //state.lencode = state.next;
                  // Switch to use dynamic table
                  state.lencode = state.lendyn;
                  state.lenbits = 7;

                  opts = { bits: state.lenbits };
                  ret = inflate_table(
                    CODES,
                    state.lens,
                    0,
                    19,
                    state.lencode,
                    0,
                    state.work,
                    opts
                  );
                  state.lenbits = opts.bits;

                  if (ret) {
                    strm.msg = 'invalid code lengths set';
                    state.mode = BAD;
                    break;
                  }
                  //Tracev((stderr, "inflate:       code lengths ok\n"));
                  state.have = 0;
                  state.mode = CODELENS;
                /* falls through */
                case CODELENS:
                  while (state.have < state.nlen + state.ndist) {
                    for (;;) {
                      here =
                        state.lencode[
                          hold & ((1 << state.lenbits) - 1)
                        ]; /*BITS(state.lenbits)*/
                      here_bits = here >>> 24;
                      here_op = (here >>> 16) & 0xff;
                      here_val = here & 0xffff;

                      if (here_bits <= bits) {
                        break;
                      }
                      //--- PULLBYTE() ---//
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                      //---//
                    }
                    if (here_val < 16) {
                      //--- DROPBITS(here.bits) ---//
                      hold >>>= here_bits;
                      bits -= here_bits;
                      //---//
                      state.lens[state.have++] = here_val;
                    } else {
                      if (here_val === 16) {
                        //=== NEEDBITS(here.bits + 2);
                        n = here_bits + 2;
                        while (bits < n) {
                          if (have === 0) {
                            break inf_leave;
                          }
                          have--;
                          hold += input[next++] << bits;
                          bits += 8;
                        }
                        //===//
                        //--- DROPBITS(here.bits) ---//
                        hold >>>= here_bits;
                        bits -= here_bits;
                        //---//
                        if (state.have === 0) {
                          strm.msg = 'invalid bit length repeat';
                          state.mode = BAD;
                          break;
                        }
                        len = state.lens[state.have - 1];
                        copy = 3 + (hold & 0x03); //BITS(2);
                        //--- DROPBITS(2) ---//
                        hold >>>= 2;
                        bits -= 2;
                        //---//
                      } else if (here_val === 17) {
                        //=== NEEDBITS(here.bits + 3);
                        n = here_bits + 3;
                        while (bits < n) {
                          if (have === 0) {
                            break inf_leave;
                          }
                          have--;
                          hold += input[next++] << bits;
                          bits += 8;
                        }
                        //===//
                        //--- DROPBITS(here.bits) ---//
                        hold >>>= here_bits;
                        bits -= here_bits;
                        //---//
                        len = 0;
                        copy = 3 + (hold & 0x07); //BITS(3);
                        //--- DROPBITS(3) ---//
                        hold >>>= 3;
                        bits -= 3;
                        //---//
                      } else {
                        //=== NEEDBITS(here.bits + 7);
                        n = here_bits + 7;
                        while (bits < n) {
                          if (have === 0) {
                            break inf_leave;
                          }
                          have--;
                          hold += input[next++] << bits;
                          bits += 8;
                        }
                        //===//
                        //--- DROPBITS(here.bits) ---//
                        hold >>>= here_bits;
                        bits -= here_bits;
                        //---//
                        len = 0;
                        copy = 11 + (hold & 0x7f); //BITS(7);
                        //--- DROPBITS(7) ---//
                        hold >>>= 7;
                        bits -= 7;
                        //---//
                      }
                      if (state.have + copy > state.nlen + state.ndist) {
                        strm.msg = 'invalid bit length repeat';
                        state.mode = BAD;
                        break;
                      }
                      while (copy--) {
                        state.lens[state.have++] = len;
                      }
                    }
                  }

                  /* handle error breaks in while */
                  if (state.mode === BAD) {
                    break;
                  }

                  /* check for end-of-block code (better have one) */
                  if (state.lens[256] === 0) {
                    strm.msg = 'invalid code -- missing end-of-block';
                    state.mode = BAD;
                    break;
                  }

                  /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
                  state.lenbits = 9;

                  opts = { bits: state.lenbits };
                  ret = inflate_table(
                    LENS,
                    state.lens,
                    0,
                    state.nlen,
                    state.lencode,
                    0,
                    state.work,
                    opts
                  );
                  // We have separate tables & no pointers. 2 commented lines below not needed.
                  // state.next_index = opts.table_index;
                  state.lenbits = opts.bits;
                  // state.lencode = state.next;

                  if (ret) {
                    strm.msg = 'invalid literal/lengths set';
                    state.mode = BAD;
                    break;
                  }

                  state.distbits = 6;
                  //state.distcode.copy(state.codes);
                  // Switch to use dynamic table
                  state.distcode = state.distdyn;
                  opts = { bits: state.distbits };
                  ret = inflate_table(
                    DISTS,
                    state.lens,
                    state.nlen,
                    state.ndist,
                    state.distcode,
                    0,
                    state.work,
                    opts
                  );
                  // We have separate tables & no pointers. 2 commented lines below not needed.
                  // state.next_index = opts.table_index;
                  state.distbits = opts.bits;
                  // state.distcode = state.next;

                  if (ret) {
                    strm.msg = 'invalid distances set';
                    state.mode = BAD;
                    break;
                  }
                  //Tracev((stderr, 'inflate:       codes ok\n'));
                  state.mode = LEN_;
                  if (flush === Z_TREES) {
                    break inf_leave;
                  }
                /* falls through */
                case LEN_:
                  state.mode = LEN;
                /* falls through */
                case LEN:
                  if (have >= 6 && left >= 258) {
                    //--- RESTORE() ---
                    strm.next_out = put;
                    strm.avail_out = left;
                    strm.next_in = next;
                    strm.avail_in = have;
                    state.hold = hold;
                    state.bits = bits;
                    //---
                    inflate_fast(strm, _out);
                    //--- LOAD() ---
                    put = strm.next_out;
                    output = strm.output;
                    left = strm.avail_out;
                    next = strm.next_in;
                    input = strm.input;
                    have = strm.avail_in;
                    hold = state.hold;
                    bits = state.bits;
                    //---

                    if (state.mode === TYPE) {
                      state.back = -1;
                    }
                    break;
                  }
                  state.back = 0;
                  for (;;) {
                    here =
                      state.lencode[
                        hold & ((1 << state.lenbits) - 1)
                      ]; /*BITS(state.lenbits)*/
                    here_bits = here >>> 24;
                    here_op = (here >>> 16) & 0xff;
                    here_val = here & 0xffff;

                    if (here_bits <= bits) {
                      break;
                    }
                    //--- PULLBYTE() ---//
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                    //---//
                  }
                  if (here_op && (here_op & 0xf0) === 0) {
                    last_bits = here_bits;
                    last_op = here_op;
                    last_val = here_val;
                    for (;;) {
                      here =
                        state.lencode[
                          last_val +
                            ((hold & ((1 << (last_bits + last_op)) - 1)) >>
                              /*BITS(last.bits + last.op)*/ last_bits)
                        ];
                      here_bits = here >>> 24;
                      here_op = (here >>> 16) & 0xff;
                      here_val = here & 0xffff;

                      if (last_bits + here_bits <= bits) {
                        break;
                      }
                      //--- PULLBYTE() ---//
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                      //---//
                    }
                    //--- DROPBITS(last.bits) ---//
                    hold >>>= last_bits;
                    bits -= last_bits;
                    //---//
                    state.back += last_bits;
                  }
                  //--- DROPBITS(here.bits) ---//
                  hold >>>= here_bits;
                  bits -= here_bits;
                  //---//
                  state.back += here_bits;
                  state.length = here_val;
                  if (here_op === 0) {
                    //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
                    //        "inflate:         literal '%c'\n" :
                    //        "inflate:         literal 0x%02x\n", here.val));
                    state.mode = LIT;
                    break;
                  }
                  if (here_op & 32) {
                    //Tracevv((stderr, "inflate:         end of block\n"));
                    state.back = -1;
                    state.mode = TYPE;
                    break;
                  }
                  if (here_op & 64) {
                    strm.msg = 'invalid literal/length code';
                    state.mode = BAD;
                    break;
                  }
                  state.extra = here_op & 15;
                  state.mode = LENEXT;
                /* falls through */
                case LENEXT:
                  if (state.extra) {
                    //=== NEEDBITS(state.extra);
                    n = state.extra;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    state.length +=
                      hold & ((1 << state.extra) - 1) /*BITS(state.extra)*/;
                    //--- DROPBITS(state.extra) ---//
                    hold >>>= state.extra;
                    bits -= state.extra;
                    //---//
                    state.back += state.extra;
                  }
                  //Tracevv((stderr, "inflate:         length %u\n", state.length));
                  state.was = state.length;
                  state.mode = DIST;
                /* falls through */
                case DIST:
                  for (;;) {
                    here =
                      state.distcode[
                        hold & ((1 << state.distbits) - 1)
                      ]; /*BITS(state.distbits)*/
                    here_bits = here >>> 24;
                    here_op = (here >>> 16) & 0xff;
                    here_val = here & 0xffff;

                    if (here_bits <= bits) {
                      break;
                    }
                    //--- PULLBYTE() ---//
                    if (have === 0) {
                      break inf_leave;
                    }
                    have--;
                    hold += input[next++] << bits;
                    bits += 8;
                    //---//
                  }
                  if ((here_op & 0xf0) === 0) {
                    last_bits = here_bits;
                    last_op = here_op;
                    last_val = here_val;
                    for (;;) {
                      here =
                        state.distcode[
                          last_val +
                            ((hold & ((1 << (last_bits + last_op)) - 1)) >>
                              /*BITS(last.bits + last.op)*/ last_bits)
                        ];
                      here_bits = here >>> 24;
                      here_op = (here >>> 16) & 0xff;
                      here_val = here & 0xffff;

                      if (last_bits + here_bits <= bits) {
                        break;
                      }
                      //--- PULLBYTE() ---//
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                      //---//
                    }
                    //--- DROPBITS(last.bits) ---//
                    hold >>>= last_bits;
                    bits -= last_bits;
                    //---//
                    state.back += last_bits;
                  }
                  //--- DROPBITS(here.bits) ---//
                  hold >>>= here_bits;
                  bits -= here_bits;
                  //---//
                  state.back += here_bits;
                  if (here_op & 64) {
                    strm.msg = 'invalid distance code';
                    state.mode = BAD;
                    break;
                  }
                  state.offset = here_val;
                  state.extra = here_op & 15;
                  state.mode = DISTEXT;
                /* falls through */
                case DISTEXT:
                  if (state.extra) {
                    //=== NEEDBITS(state.extra);
                    n = state.extra;
                    while (bits < n) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    state.offset +=
                      hold & ((1 << state.extra) - 1) /*BITS(state.extra)*/;
                    //--- DROPBITS(state.extra) ---//
                    hold >>>= state.extra;
                    bits -= state.extra;
                    //---//
                    state.back += state.extra;
                  }
                  //#ifdef INFLATE_STRICT
                  if (state.offset > state.dmax) {
                    strm.msg = 'invalid distance too far back';
                    state.mode = BAD;
                    break;
                  }
                  //#endif
                  //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
                  state.mode = MATCH;
                /* falls through */
                case MATCH:
                  if (left === 0) {
                    break inf_leave;
                  }
                  copy = _out - left;
                  if (state.offset > copy) {
                    /* copy from window */
                    copy = state.offset - copy;
                    if (copy > state.whave) {
                      if (state.sane) {
                        strm.msg = 'invalid distance too far back';
                        state.mode = BAD;
                        break;
                      }
                      // (!) This block is disabled in zlib defaults,
                      // don't enable it for binary compatibility
                      //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
                      //          Trace((stderr, "inflate.c too far\n"));
                      //          copy -= state.whave;
                      //          if (copy > state.length) { copy = state.length; }
                      //          if (copy > left) { copy = left; }
                      //          left -= copy;
                      //          state.length -= copy;
                      //          do {
                      //            output[put++] = 0;
                      //          } while (--copy);
                      //          if (state.length === 0) { state.mode = LEN; }
                      //          break;
                      //#endif
                    }
                    if (copy > state.wnext) {
                      copy -= state.wnext;
                      from = state.wsize - copy;
                    } else {
                      from = state.wnext - copy;
                    }
                    if (copy > state.length) {
                      copy = state.length;
                    }
                    from_source = state.window;
                  } else {
                    /* copy from output */
                    from_source = output;
                    from = put - state.offset;
                    copy = state.length;
                  }
                  if (copy > left) {
                    copy = left;
                  }
                  left -= copy;
                  state.length -= copy;
                  do {
                    output[put++] = from_source[from++];
                  } while (--copy);
                  if (state.length === 0) {
                    state.mode = LEN;
                  }
                  break;
                case LIT:
                  if (left === 0) {
                    break inf_leave;
                  }
                  output[put++] = state.length;
                  left--;
                  state.mode = LEN;
                  break;
                case CHECK:
                  if (state.wrap) {
                    //=== NEEDBITS(32);
                    while (bits < 32) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      // Use '|' instead of '+' to make sure that result is signed
                      hold |= input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    _out -= left;
                    strm.total_out += _out;
                    state.total += _out;
                    if (_out) {
                      strm.adler = state.check =
                        /*UPDATE(state.check, put - _out, _out);*/
                        state.flags
                          ? crc32(state.check, output, _out, put - _out)
                          : adler32(state.check, output, _out, put - _out);
                    }
                    _out = left;
                    // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
                    if ((state.flags ? hold : zswap32(hold)) !== state.check) {
                      strm.msg = 'incorrect data check';
                      state.mode = BAD;
                      break;
                    }
                    //=== INITBITS();
                    hold = 0;
                    bits = 0;
                    //===//
                    //Tracev((stderr, "inflate:   check matches trailer\n"));
                  }
                  state.mode = LENGTH;
                /* falls through */
                case LENGTH:
                  if (state.wrap && state.flags) {
                    //=== NEEDBITS(32);
                    while (bits < 32) {
                      if (have === 0) {
                        break inf_leave;
                      }
                      have--;
                      hold += input[next++] << bits;
                      bits += 8;
                    }
                    //===//
                    if (hold !== (state.total & 0xffffffff)) {
                      strm.msg = 'incorrect length check';
                      state.mode = BAD;
                      break;
                    }
                    //=== INITBITS();
                    hold = 0;
                    bits = 0;
                    //===//
                    //Tracev((stderr, "inflate:   length matches trailer\n"));
                  }
                  state.mode = DONE;
                /* falls through */
                case DONE:
                  ret = Z_STREAM_END;
                  break inf_leave;
                case BAD:
                  ret = Z_DATA_ERROR;
                  break inf_leave;
                case MEM:
                  return Z_MEM_ERROR;
                case SYNC:
                /* falls through */
                default:
                  return Z_STREAM_ERROR;
              }
            }

            // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

            /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

            //--- RESTORE() ---
            strm.next_out = put;
            strm.avail_out = left;
            strm.next_in = next;
            strm.avail_in = have;
            state.hold = hold;
            state.bits = bits;
            //---

            if (
              state.wsize ||
              (_out !== strm.avail_out &&
                state.mode < BAD &&
                (state.mode < CHECK || flush !== Z_FINISH))
            ) {
              if (
                updatewindow(
                  strm,
                  strm.output,
                  strm.next_out,
                  _out - strm.avail_out
                )
              ) {
                state.mode = MEM;
                return Z_MEM_ERROR;
              }
            }
            _in -= strm.avail_in;
            _out -= strm.avail_out;
            strm.total_in += _in;
            strm.total_out += _out;
            state.total += _out;
            if (state.wrap && _out) {
              strm.adler = state.check =
                /*UPDATE(state.check, strm.next_out - _out, _out);*/
                state.flags
                  ? crc32(state.check, output, _out, strm.next_out - _out)
                  : adler32(state.check, output, _out, strm.next_out - _out);
            }
            strm.data_type =
              state.bits +
              (state.last ? 64 : 0) +
              (state.mode === TYPE ? 128 : 0) +
              (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
            if (
              ((_in === 0 && _out === 0) || flush === Z_FINISH) &&
              ret === Z_OK
            ) {
              ret = Z_BUF_ERROR;
            }
            return ret;
          }

          function inflateEnd(strm) {
            if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
              return Z_STREAM_ERROR;
            }

            var state = strm.state;
            if (state.window) {
              state.window = null;
            }
            strm.state = null;
            return Z_OK;
          }

          function inflateGetHeader(strm, head) {
            var state;

            /* check state */
            if (!strm || !strm.state) {
              return Z_STREAM_ERROR;
            }
            state = strm.state;
            if ((state.wrap & 2) === 0) {
              return Z_STREAM_ERROR;
            }

            /* save header structure */
            state.head = head;
            head.done = false;
            return Z_OK;
          }

          function inflateSetDictionary(strm, dictionary) {
            var dictLength = dictionary.length;

            var state;
            var dictid;
            var ret;

            /* check state */
            if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) {
              return Z_STREAM_ERROR;
            }
            state = strm.state;

            if (state.wrap !== 0 && state.mode !== DICT) {
              return Z_STREAM_ERROR;
            }

            /* check for correct dictionary identifier */
            if (state.mode === DICT) {
              dictid = 1; /* adler32(0, null, 0)*/
              /* dictid = adler32(dictid, dictionary, dictLength); */
              dictid = adler32(dictid, dictionary, dictLength, 0);
              if (dictid !== state.check) {
                return Z_DATA_ERROR;
              }
            }
            /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
            ret = updatewindow(strm, dictionary, dictLength, dictLength);
            if (ret) {
              state.mode = MEM;
              return Z_MEM_ERROR;
            }
            state.havedict = 1;
            // Tracev((stderr, "inflate:   dictionary set\n"));
            return Z_OK;
          }

          exports.inflateReset = inflateReset;
          exports.inflateReset2 = inflateReset2;
          exports.inflateResetKeep = inflateResetKeep;
          exports.inflateInit = inflateInit;
          exports.inflateInit2 = inflateInit2;
          exports.inflate = inflate;
          exports.inflateEnd = inflateEnd;
          exports.inflateGetHeader = inflateGetHeader;
          exports.inflateSetDictionary = inflateSetDictionary;
          exports.inflateInfo = 'pako inflate (from Nodeca project)';

          /* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/

          /***/
        },
        /* 88 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          // See state defs from inflate.js

          var BAD = 30; /* got a data error -- remain here until reset */
          var TYPE = 12; /* i: waiting for type bits, including last-flag bit */

          /*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
          module.exports = function inflate_fast(strm, start) {
            var state;
            var _in; /* local strm.input */
            var last; /* have enough input while in < last */
            var _out; /* local strm.output */
            var beg; /* inflate()'s initial strm.output */
            var end; /* while out < end, enough space available */
            //#ifdef INFLATE_STRICT
            var dmax; /* maximum distance from zlib header */
            //#endif
            var wsize; /* window size or zero if not using window */
            var whave; /* valid bytes in the window */
            var wnext; /* window write index */
            // Use `s_window` instead `window`, avoid conflict with instrumentation tools
            var s_window; /* allocated sliding window, if wsize != 0 */
            var hold; /* local strm.hold */
            var bits; /* local strm.bits */
            var lcode; /* local strm.lencode */
            var dcode; /* local strm.distcode */
            var lmask; /* mask for first level of length codes */
            var dmask; /* mask for first level of distance codes */
            var here; /* retrieved table entry */
            var op; /* code bits, operation, extra bits, or */
            /*  window position, window bytes to copy */
            var len; /* match length, unused bytes */
            var dist; /* match distance */
            var from; /* where to copy match from */
            var from_source;

            var input, output; // JS specific, because we have no pointers

            /* copy state to local variables */
            state = strm.state;
            //here = state.here;
            _in = strm.next_in;
            input = strm.input;
            last = _in + (strm.avail_in - 5);
            _out = strm.next_out;
            output = strm.output;
            beg = _out - (start - strm.avail_out);
            end = _out + (strm.avail_out - 257);
            //#ifdef INFLATE_STRICT
            dmax = state.dmax;
            //#endif
            wsize = state.wsize;
            whave = state.whave;
            wnext = state.wnext;
            s_window = state.window;
            hold = state.hold;
            bits = state.bits;
            lcode = state.lencode;
            dcode = state.distcode;
            lmask = (1 << state.lenbits) - 1;
            dmask = (1 << state.distbits) - 1;

            /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

            top: do {
              if (bits < 15) {
                hold += input[_in++] << bits;
                bits += 8;
                hold += input[_in++] << bits;
                bits += 8;
              }

              here = lcode[hold & lmask];

              dolen: for (;;) {
                // Goto emulation
                op = here >>> 24 /*here.bits*/;
                hold >>>= op;
                bits -= op;
                op = (here >>> 16) & 0xff /*here.op*/;
                if (op === 0) {
                  /* literal */
                  //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
                  //        "inflate:         literal '%c'\n" :
                  //        "inflate:         literal 0x%02x\n", here.val));
                  output[_out++] = here & 0xffff /*here.val*/;
                } else if (op & 16) {
                  /* length base */
                  len = here & 0xffff /*here.val*/;
                  op &= 15; /* number of extra bits */
                  if (op) {
                    if (bits < op) {
                      hold += input[_in++] << bits;
                      bits += 8;
                    }
                    len += hold & ((1 << op) - 1);
                    hold >>>= op;
                    bits -= op;
                  }
                  //Tracevv((stderr, "inflate:         length %u\n", len));
                  if (bits < 15) {
                    hold += input[_in++] << bits;
                    bits += 8;
                    hold += input[_in++] << bits;
                    bits += 8;
                  }
                  here = dcode[hold & dmask];

                  dodist: for (;;) {
                    // goto emulation
                    op = here >>> 24 /*here.bits*/;
                    hold >>>= op;
                    bits -= op;
                    op = (here >>> 16) & 0xff /*here.op*/;

                    if (op & 16) {
                      /* distance base */
                      dist = here & 0xffff /*here.val*/;
                      op &= 15; /* number of extra bits */
                      if (bits < op) {
                        hold += input[_in++] << bits;
                        bits += 8;
                        if (bits < op) {
                          hold += input[_in++] << bits;
                          bits += 8;
                        }
                      }
                      dist += hold & ((1 << op) - 1);
                      //#ifdef INFLATE_STRICT
                      if (dist > dmax) {
                        strm.msg = 'invalid distance too far back';
                        state.mode = BAD;
                        break top;
                      }
                      //#endif
                      hold >>>= op;
                      bits -= op;
                      //Tracevv((stderr, "inflate:         distance %u\n", dist));
                      op = _out - beg; /* max distance in output */
                      if (dist > op) {
                        /* see if copy from window */
                        op = dist - op; /* distance back in window */
                        if (op > whave) {
                          if (state.sane) {
                            strm.msg = 'invalid distance too far back';
                            state.mode = BAD;
                            break top;
                          }

                          // (!) This block is disabled in zlib defaults,
                          // don't enable it for binary compatibility
                          //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
                          //                if (len <= op - whave) {
                          //                  do {
                          //                    output[_out++] = 0;
                          //                  } while (--len);
                          //                  continue top;
                          //                }
                          //                len -= op - whave;
                          //                do {
                          //                  output[_out++] = 0;
                          //                } while (--op > whave);
                          //                if (op === 0) {
                          //                  from = _out - dist;
                          //                  do {
                          //                    output[_out++] = output[from++];
                          //                  } while (--len);
                          //                  continue top;
                          //                }
                          //#endif
                        }
                        from = 0; // window index
                        from_source = s_window;
                        if (wnext === 0) {
                          /* very common case */
                          from += wsize - op;
                          if (op < len) {
                            /* some from window */
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = _out - dist; /* rest from output */
                            from_source = output;
                          }
                        } else if (wnext < op) {
                          /* wrap around window */
                          from += wsize + wnext - op;
                          op -= wnext;
                          if (op < len) {
                            /* some from end of window */
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = 0;
                            if (wnext < len) {
                              /* some from start of window */
                              op = wnext;
                              len -= op;
                              do {
                                output[_out++] = s_window[from++];
                              } while (--op);
                              from = _out - dist; /* rest from output */
                              from_source = output;
                            }
                          }
                        } else {
                          /* contiguous in window */
                          from += wnext - op;
                          if (op < len) {
                            /* some from window */
                            len -= op;
                            do {
                              output[_out++] = s_window[from++];
                            } while (--op);
                            from = _out - dist; /* rest from output */
                            from_source = output;
                          }
                        }
                        while (len > 2) {
                          output[_out++] = from_source[from++];
                          output[_out++] = from_source[from++];
                          output[_out++] = from_source[from++];
                          len -= 3;
                        }
                        if (len) {
                          output[_out++] = from_source[from++];
                          if (len > 1) {
                            output[_out++] = from_source[from++];
                          }
                        }
                      } else {
                        from = _out - dist; /* copy direct from output */
                        do {
                          /* minimum length is three */
                          output[_out++] = output[from++];
                          output[_out++] = output[from++];
                          output[_out++] = output[from++];
                          len -= 3;
                        } while (len > 2);
                        if (len) {
                          output[_out++] = output[from++];
                          if (len > 1) {
                            output[_out++] = output[from++];
                          }
                        }
                      }
                    } else if ((op & 64) === 0) {
                      /* 2nd level distance code */
                      here =
                        dcode[
                          (here & 0xffff) +
                            /*here.val*/ (hold & ((1 << op) - 1))
                        ];
                      continue dodist;
                    } else {
                      strm.msg = 'invalid distance code';
                      state.mode = BAD;
                      break top;
                    }

                    break; // need to emulate goto via "continue"
                  }
                } else if ((op & 64) === 0) {
                  /* 2nd level length code */
                  here =
                    lcode[
                      (here & 0xffff) + /*here.val*/ (hold & ((1 << op) - 1))
                    ];
                  continue dolen;
                } else if (op & 32) {
                  /* end-of-block */
                  //Tracevv((stderr, "inflate:         end of block\n"));
                  state.mode = TYPE;
                  break top;
                } else {
                  strm.msg = 'invalid literal/length code';
                  state.mode = BAD;
                  break top;
                }

                break; // need to emulate goto via "continue"
              }
            } while (_in < last && _out < end);

            /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
            len = bits >> 3;
            _in -= len;
            bits -= len << 3;
            hold &= (1 << bits) - 1;

            /* update state and return */
            strm.next_in = _in;
            strm.next_out = _out;
            strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);
            strm.avail_out =
              _out < end ? 257 + (end - _out) : 257 - (_out - end);
            state.hold = hold;
            state.bits = bits;
            return;
          };

          /***/
        },
        /* 89 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          var utils = __webpack_require__(7);

          var MAXBITS = 15;
          var ENOUGH_LENS = 852;
          var ENOUGH_DISTS = 592;
          //var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

          var CODES = 0;
          var LENS = 1;
          var DISTS = 2;

          var lbase = [
            /* Length codes 257..285 base */ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13,
            15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163,
            195, 227, 258, 0, 0,
          ];

          var lext = [
            /* Length codes 257..285 extra */ 16, 16, 16, 16, 16, 16, 16, 16,
            17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21,
            21, 21, 21, 16, 72, 78,
          ];

          var dbase = [
            /* Distance codes 0..29 base */ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33,
            49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073,
            4097, 6145, 8193, 12289, 16385, 24577, 0, 0,
          ];

          var dext = [
            /* Distance codes 0..29 extra */ 16, 16, 16, 16, 17, 17, 18, 18, 19,
            19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
            28, 28, 29, 29, 64, 64,
          ];

          module.exports = function inflate_table(
            type,
            lens,
            lens_index,
            codes,
            table,
            table_index,
            work,
            opts
          ) {
            var bits = opts.bits;
            //here = opts.here; /* table entry for duplication */

            var len = 0; /* a code's length in bits */
            var sym = 0; /* index of code symbols */
            var min = 0,
              max = 0; /* minimum and maximum code lengths */
            var root = 0; /* number of index bits for root table */
            var curr = 0; /* number of index bits for current table */
            var drop = 0; /* code bits to drop for sub-table */
            var left = 0; /* number of prefix codes available */
            var used = 0; /* code entries in table used */
            var huff = 0; /* Huffman code */
            var incr; /* for incrementing code, index */
            var fill; /* index for replicating entries */
            var low; /* low bits for current root entry */
            var mask; /* mask for low root bits */
            var next; /* next available space in table */
            var base = null; /* base value table to use */
            var base_index = 0;
            //  var shoextra;    /* extra bits table to use */
            var end; /* use base and extra for symbol > end */
            var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
            var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
            var extra = null;
            var extra_index = 0;

            var here_bits, here_op, here_val;

            /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.
    This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.
    The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.
    The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

            /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
            for (len = 0; len <= MAXBITS; len++) {
              count[len] = 0;
            }
            for (sym = 0; sym < codes; sym++) {
              count[lens[lens_index + sym]]++;
            }

            /* bound code lengths, force root to be within code lengths */
            root = bits;
            for (max = MAXBITS; max >= 1; max--) {
              if (count[max] !== 0) {
                break;
              }
            }
            if (root > max) {
              root = max;
            }
            if (max === 0) {
              /* no symbols to code at all */
              //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
              //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
              //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
              table[table_index++] = (1 << 24) | (64 << 16) | 0;

              //table.op[opts.table_index] = 64;
              //table.bits[opts.table_index] = 1;
              //table.val[opts.table_index++] = 0;
              table[table_index++] = (1 << 24) | (64 << 16) | 0;

              opts.bits = 1;
              return 0; /* no symbols, but wait for decoding to report error */
            }
            for (min = 1; min < max; min++) {
              if (count[min] !== 0) {
                break;
              }
            }
            if (root < min) {
              root = min;
            }

            /* check for an over-subscribed or incomplete set of lengths */
            left = 1;
            for (len = 1; len <= MAXBITS; len++) {
              left <<= 1;
              left -= count[len];
              if (left < 0) {
                return -1;
              } /* over-subscribed */
            }
            if (left > 0 && (type === CODES || max !== 1)) {
              return -1; /* incomplete set */
            }

            /* generate offsets into symbol table for each length for sorting */
            offs[1] = 0;
            for (len = 1; len < MAXBITS; len++) {
              offs[len + 1] = offs[len] + count[len];
            }

            /* sort symbols by length, by symbol order within each length */
            for (sym = 0; sym < codes; sym++) {
              if (lens[lens_index + sym] !== 0) {
                work[offs[lens[lens_index + sym]]++] = sym;
              }
            }

            /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.
    root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.
    When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.
    used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.
    sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

            /* set up for code type */
            // poor man optimization - use if-else instead of switch,
            // to avoid deopts in old v8
            if (type === CODES) {
              base = extra = work; /* dummy value--not used */
              end = 19;
            } else if (type === LENS) {
              base = lbase;
              base_index -= 257;
              extra = lext;
              extra_index -= 257;
              end = 256;
            } else {
              /* DISTS */
              base = dbase;
              extra = dext;
              end = -1;
            }

            /* initialize opts for loop */
            huff = 0; /* starting code */
            sym = 0; /* starting code symbol */
            len = min; /* starting code length */
            next = table_index; /* current table to fill in */
            curr = root; /* current table index bits */
            drop = 0; /* current bits to drop from code for index */
            low = -1; /* trigger new sub-table when len > root */
            used = 1 << root; /* use root table entries */
            mask = used - 1; /* mask for comparing low */

            /* check available table space */
            if (
              (type === LENS && used > ENOUGH_LENS) ||
              (type === DISTS && used > ENOUGH_DISTS)
            ) {
              return 1;
            }

            /* process all codes and make table entries */
            for (;;) {
              /* create table entry */
              here_bits = len - drop;
              if (work[sym] < end) {
                here_op = 0;
                here_val = work[sym];
              } else if (work[sym] > end) {
                here_op = extra[extra_index + work[sym]];
                here_val = base[base_index + work[sym]];
              } else {
                here_op = 32 + 64; /* end of block */
                here_val = 0;
              }

              /* replicate for those indices with low len bits equal to huff */
              incr = 1 << (len - drop);
              fill = 1 << curr;
              min = fill; /* save offset to next table */
              do {
                fill -= incr;
                table[next + (huff >> drop) + fill] =
                  (here_bits << 24) | (here_op << 16) | here_val | 0;
              } while (fill !== 0);

              /* backwards increment the len-bit code huff */
              incr = 1 << (len - 1);
              while (huff & incr) {
                incr >>= 1;
              }
              if (incr !== 0) {
                huff &= incr - 1;
                huff += incr;
              } else {
                huff = 0;
              }

              /* go to next symbol, update count, len */
              sym++;
              if (--count[len] === 0) {
                if (len === max) {
                  break;
                }
                len = lens[lens_index + work[sym]];
              }

              /* create new sub-table if needed */
              if (len > root && (huff & mask) !== low) {
                /* if first time, transition to sub-tables */
                if (drop === 0) {
                  drop = root;
                }

                /* increment past last table */
                next += min; /* here min is 1 << curr */

                /* determine length of next table */
                curr = len - drop;
                left = 1 << curr;
                while (curr + drop < max) {
                  left -= count[curr + drop];
                  if (left <= 0) {
                    break;
                  }
                  curr++;
                  left <<= 1;
                }

                /* check for enough space */
                used += 1 << curr;
                if (
                  (type === LENS && used > ENOUGH_LENS) ||
                  (type === DISTS && used > ENOUGH_DISTS)
                ) {
                  return 1;
                }

                /* point entry in root table to sub-table */
                low = huff & mask;
                /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
                table[low] =
                  (root << 24) | (curr << 16) | (next - table_index) | 0;
              }
            }

            /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
            if (huff !== 0) {
              //table.op[next + huff] = 64;            /* invalid code marker */
              //table.bits[next + huff] = len - drop;
              //table.val[next + huff] = 0;
              table[next + huff] = ((len - drop) << 24) | (64 << 16) | 0;
            }

            /* set return parameters */
            //opts.table_index += used;
            opts.bits = root;
            return 0;
          };

          /***/
        },
        /* 90 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          // (C) 1995-2013 Jean-loup Gailly and Mark Adler
          // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
          //
          // This software is provided 'as-is', without any express or implied
          // warranty. In no event will the authors be held liable for any damages
          // arising from the use of this software.
          //
          // Permission is granted to anyone to use this software for any purpose,
          // including commercial applications, and to alter it and redistribute it
          // freely, subject to the following restrictions:
          //
          // 1. The origin of this software must not be misrepresented; you must not
          //   claim that you wrote the original software. If you use this software
          //   in a product, an acknowledgment in the product documentation would be
          //   appreciated but is not required.
          // 2. Altered source versions must be plainly marked as such, and must not be
          //   misrepresented as being the original software.
          // 3. This notice may not be removed or altered from any source distribution.

          function GZheader() {
            /* true if compressed data believed to be text */
            this.text = 0;
            /* modification time */
            this.time = 0;
            /* extra flags (not used when writing a gzip file) */
            this.xflags = 0;
            /* operating system */
            this.os = 0;
            /* pointer to extra field or Z_NULL if none */
            this.extra = null;
            /* extra field length (valid if extra != Z_NULL) */
            this.extra_len = 0; // Actually, we don't need it in JS,
            // but leave for few code modifications

            //
            // Setup limits is not necessary because in js we should not preallocate memory
            // for inflate use constant limit in 65536 bytes
            //

            /* space at extra (only when reading header) */
            // this.extra_max  = 0;
            /* pointer to zero-terminated file name or Z_NULL */
            this.name = '';
            /* space at name (only when reading header) */
            // this.name_max   = 0;
            /* pointer to zero-terminated comment or Z_NULL */
            this.comment = '';
            /* space at comment (only when reading header) */
            // this.comm_max   = 0;
            /* true if there was or will be a header crc */
            this.hcrc = 0;
            /* true when done reading gzip header (not used when writing a gzip file) */
            this.done = false;
          }

          module.exports = GZheader;

          /***/
        },
        /* 91 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }

          var pako = __webpack_require__(40);
          var WebSocket = __webpack_require__(92);
          var HttpsProxyAgent = __webpack_require__(93);
          var url = __webpack_require__(12);

          var config = __webpack_require__(6);
          var StateEventDispatcher = __webpack_require__(23);
          var utils = __webpack_require__(5);

          var state = {
            CLOSED: 'closed',
            CLOSING: 'closing',
            CONNECTING: 'connecting',
            CHECKING_VERSION: 'version',
            STREAMING: 'streaming',
            AUTHENTICATING: 'authenticating',
            DONE: 'done',
          };

          function isInBrowser() {
            if (typeof window === 'undefined') {
              return false;
            } else {
              return true;
            }
          }

          function isBrowserWebSocketSupported() {
            if (window && typeof window.WebSocket !== 'undefined') return true;
            return false;
          }

          // states: closed, connecting, version, authentication, ready

          var HoundWebsocket = (function (_StateEventDispatcher) {
            _inherits(HoundWebsocket, _StateEventDispatcher);

            function HoundWebsocket(voiceRequest) {
              _classCallCheck(this, HoundWebsocket);

              var _this = _possibleConstructorReturn(
                this,
                (
                  HoundWebsocket.__proto__ ||
                  Object.getPrototypeOf(HoundWebsocket)
                ).call(this, state.CLOSED)
              );

              _this.voiceRequest = voiceRequest;
              _this.websocket = null;
              _this.buffer = [];
              _this.numBlobsInProgress = 0;
              _this.proxy = voiceRequest.proxy;
              return _this;
            }

            _createClass(HoundWebsocket, [
              {
                key: 'connect',
                value: function connect(requestInfo) {
                  var _this2 = this;

                  this.setState(state.CONNECTING);

                  this.close();

                  this.buffer = [];
                  this.endOfAudioSent = false;
                  if (this.proxy && this.proxy.url) {
                    // If you are running this in the browser, and the browser supports websocket,
                    // use the browser implementation.
                    if (isInBrowser() && isBrowserWebSocketSupported()) {
                      this.websocket = new window.WebSocket(
                        this.voiceRequest.endpoint,
                        {
                          agent: new HttpsProxyAgent(url.parse(this.proxy.url)),
                        }
                      );
                    }
                    // otherwise use the nodejs websocket implementation.
                    else {
                      this.websocket = new WebSocket(
                        this.voiceRequest.endpoint,
                        {
                          agent: new HttpsProxyAgent(url.parse(this.proxy.url)),
                        }
                      );
                    }
                  } else {
                    // same cases as above, except `this.proxy` is not defined.
                    if (isInBrowser() && isBrowserWebSocketSupported()) {
                      this.websocket = new window.WebSocket(
                        this.voiceRequest.endpoint
                      );
                    } else {
                      this.websocket = new WebSocket(
                        this.voiceRequest.endpoint
                      );
                    }
                  }

                  var websocket = this.websocket;

                  websocket.onopen = function (evt) {
                    try {
                      websocket.send(JSON.stringify({ version: '1.0' }));

                      utils.log(
                        'hound_websocket: connected, sending version 1.0...'
                      );
                      _this2.setState(state.CHECKING_VERSION);
                    } catch (err) {
                      _this2.fire('error', err);
                    }
                  };

                  websocket.onclose = function (evt) {
                    try {
                      utils.log('hound_websocket: disconnected');

                      if (
                        _this2.isState(state.STREAMING) &&
                        _this2.numBlobsInProgress
                      ) {
                        var _checkIfDone = function _checkIfDone() {
                          if (self.numBlobsInProgress != 0) return;
                          if (self.isState(state.STREAMING)) {
                            self.fire('error', {
                              type: 'CONNECTION',
                              exception: 'Connection terminated.',
                            });
                            self.setState(state.CLOSED);
                          }

                          self.off('message', _checkIfDone);
                        };

                        var self = _this2;

                        self.on('message', _checkIfDone);
                      } else if (_this2.isState(state.CHECKING_VERSION)) {
                        _this2.fire('error', {
                          type: 'PROTOCOL',
                          exception: 'Version error.',
                        });
                      } else if (_this2.isState(state.AUTHENTICATING)) {
                        _this2.fire('error', {
                          type: 'AUTHENTICATION',
                          exception: 'Signed token rejected.',
                        });
                      } else if (_this2.isState(state.STREAMING)) {
                        _this2.fire('error', {
                          type: 'CONNECTION',
                          exception: 'Connection terminated.',
                        });
                      }

                      _this2.setState(state.CLOSED);
                    } catch (err) {
                      _this2.fire('error', err);
                    }
                  };

                  websocket.onerror = function (err) {
                    try {
                      if (_this2.isState(state.CLOSING)) {
                        _this2.setState(state.CLOSED);
                      } else {
                        utils.log('hound_websocket: websocket error', err);
                        _this2.fire('error', {
                          type: 'CONNECTION',
                          exception: err,
                        });
                      }
                    } catch (err) {
                      _this2.fire('error', err);
                    }
                  };

                  websocket.onmessage = function (evt) {
                    try {
                      if (_this2.isState(state.CHECKING_VERSION)) {
                        var msgObject = JSON.parse(evt.data);
                        utils.log(
                          'hound_websocket: accepted message',
                          evt.data
                        );

                        if (msgObject['status'] !== 'ok') {
                          _this2.fire('error', {
                            type: 'PROTOCOL',
                            exception: 'Version error.',
                          });
                          _this2.close();
                          return;
                        }

                        if (!msgObject.hasOwnProperty('nonce')) {
                          _this2.fire('error', {
                            type: 'PROTOCOL',
                            exception: 'Missing nonce.',
                          });
                          _this2.close();
                          return;
                        }

                        //Sign nonce and send it to backend for authentication
                        utils.signToken(
                          msgObject['nonce'],
                          _this2.voiceRequest,
                          function (err, signature) {
                            if (err) {
                              _this2.fire('error', {
                                type: 'AUTHENTICATION',
                                exception: err,
                              });
                              _this2.close();
                              return;
                            }

                            var signedTokenMessage = {
                              access_id: _this2.voiceRequest.clientId,
                              signature: signature,
                            };

                            if (requestInfo['InputLanguageEnglishName'])
                              signedTokenMessage['language_english_name'] =
                                requestInfo['InputLanguageEnglishName'];
                            if (requestInfo['InputLanguageIETFTag'])
                              signedTokenMessage['language_ietf_tag'] =
                                requestInfo['InputLanguageIETFTag'];

                            websocket.send(JSON.stringify(signedTokenMessage));
                            utils.log(
                              'hound_websocket: sending message',
                              signedTokenMessage
                            );
                          }
                        );

                        utils.log(
                          'hound_websocket: version ok, authenticating...'
                        );
                        _this2.setState(state.AUTHENTICATING);
                      } else if (_this2.isState(state.AUTHENTICATING)) {
                        var msgObject = JSON.parse(evt.data);
                        utils.log(
                          'hound_websocket: accepted message',
                          evt.data
                        );

                        if (msgObject['status'] !== 'ok') {
                          _this2.fire('error', {
                            type: 'AUTHENTICATION',
                            exception: 'Signed token rejected.',
                          });
                          _this2.close();
                          return;
                        }

                        utils.log(
                          'hound_websocket: authentication ok, sending buffer...'
                        );
                        for (var bufIdx in _this2.buffer) {
                          websocket.send(_this2.buffer[bufIdx]);
                        }

                        utils.log('hound_websocket: buffer sent, streaming...');
                        _this2.setState(state.STREAMING);
                      } else {
                        try {
                          if (utils.isString(evt.data)) {
                            var msgObject = JSON.parse(evt.data);
                            _this2.fire('error', {
                              type: 'BAD_REQUEST',
                              exception: msgObject,
                            });
                            _this2.close();
                          } else if (utils.isBlob(evt.data)) {
                            new Response(evt.data)
                              .arrayBuffer()
                              .then(function (result) {
                                var uncompressed = pako.ungzip(result, {
                                  to: 'string',
                                });
                                _this2.fire('message', uncompressed);
                                _this2.numBlobsInProgress -= 1;
                              });

                            _this2.numBlobsInProgress += 1;
                          } else {
                            var uncompressed = pako.ungzip(
                              evt.data.toString('binary'),
                              { to: 'string' }
                            );
                            _this2.fire('message', uncompressed);
                          }
                        } catch (e) {
                          utils.log('hound_websocket', e);
                          _this2.fire('error', {
                            type: 'UNEXPECTED_MESSAGE',
                            exception: evt.data,
                          });
                          _this2.close();
                        }
                      }
                    } catch (err) {
                      _this2.fire('error', err);
                    }
                  };
                },
              },
              {
                key: 'send',
                value: function send(data) {
                  if (this.isState(state.CLOSED)) {
                    utils.log(
                      "hound_websocket: can't send data, connection closed."
                    );
                  } else if (!this.isState(state.STREAMING)) {
                    this.buffer.push(data);
                  } else if (this.isState(state.STREAMING)) {
                    this.websocket.send(data);
                  }
                },
              },
              {
                key: 'endOfAudio',
                value: function endOfAudio() {
                  if (!this.endOfAudioSent) {
                    utils.log('hound_websocket: sending endOfAudio');
                    this.send(JSON.stringify({ endOfAudio: true }));
                    this.endOfAudioSent = true;
                  }
                },
              },
              {
                key: 'done',
                value: function done() {
                  utils.log('hound_websocket: done');
                  //websocket is expected to close now
                  this.setState(state.DONE);
                },
              },
              {
                key: 'close',
                value: function close() {
                  if (this.isState(state.CLOSED)) return;
                  if (this.websocket) {
                    utils.log('hound_websocket: close');
                    //todo: check if we can use same state for DONE and CLOSING
                    this.setState(state.CLOSING);
                    this.websocket.onopen = null;
                    this.websocket.onmessage = null;
                    this.websocket.close();
                  }
                },
              },
              {
                key: 'isActive',
                value: function isActive() {
                  return !(
                    this.isState(state.CLOSING) || this.isState(state.CLOSED)
                  );
                },
              },
            ]);

            return HoundWebsocket;
          })(StateEventDispatcher);

          module.exports = HoundWebsocket;

          /***/
        },
        /* 92 */
        /***/ function (module, exports) {
          module.exports = __WEBPACK_EXTERNAL_MODULE_92__;

          /***/
        },
        /* 93 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (Buffer) {
            /**
             * Module dependencies.
             */

            var net = __webpack_require__(17);
            var tls = __webpack_require__(17);
            var url = __webpack_require__(12);
            var assert = __webpack_require__(99);
            var Agent = __webpack_require__(101);
            var inherits = __webpack_require__(22).inherits;
            var debug = __webpack_require__(112)('https-proxy-agent');

            /**
             * Module exports.
             */

            module.exports = HttpsProxyAgent;

            /**
             * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to the
             * specified "HTTP(s) proxy server" in order to proxy HTTPS requests.
             *
             * @api public
             */

            function HttpsProxyAgent(opts) {
              if (!(this instanceof HttpsProxyAgent))
                return new HttpsProxyAgent(opts);
              if ('string' == typeof opts) opts = url.parse(opts);
              if (!opts)
                throw new Error(
                  'an HTTP(S) proxy server `host` and `port` must be specified!'
                );
              debug('creating new HttpsProxyAgent instance: %o', opts);
              Agent.call(this, opts);

              var proxy = Object.assign({}, opts);

              // if `true`, then connect to the proxy server over TLS. defaults to `false`.
              this.secureProxy = proxy.protocol
                ? /^https:?$/i.test(proxy.protocol)
                : false;

              // prefer `hostname` over `host`, and set the `port` if needed
              proxy.host = proxy.hostname || proxy.host;
              proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);

              // ALPN is supported by Node.js >= v5.
              // attempt to negotiate http/1.1 for proxy servers that support http/2
              if (this.secureProxy && !('ALPNProtocols' in proxy)) {
                proxy.ALPNProtocols = ['http 1.1'];
              }

              if (proxy.host && proxy.path) {
                // if both a `host` and `path` are specified then it's most likely the
                // result of a `url.parse()` call... we need to remove the `path` portion so
                // that `net.connect()` doesn't attempt to open that as a unix socket file.
                delete proxy.path;
                delete proxy.pathname;
              }

              this.proxy = proxy;
              this.defaultPort = 443;
            }
            inherits(HttpsProxyAgent, Agent);

            /**
             * Called when the node-core HTTP client library is creating a new HTTP request.
             *
             * @api public
             */

            HttpsProxyAgent.prototype.callback = function connect(
              req,
              opts,
              fn
            ) {
              var proxy = this.proxy;

              // create a socket connection to the proxy server
              var socket;
              if (this.secureProxy) {
                socket = tls.connect(proxy);
              } else {
                socket = net.connect(proxy);
              }

              // we need to buffer any HTTP traffic that happens with the proxy before we get
              // the CONNECT response, so that if the response is anything other than an "200"
              // response code, then we can re-play the "data" events on the socket once the
              // HTTP parser is hooked up...
              var buffers = [];
              var buffersLength = 0;

              function read() {
                var b = socket.read();
                if (b) ondata(b);
                else socket.once('readable', read);
              }

              function cleanup() {
                socket.removeListener('end', onend);
                socket.removeListener('error', onerror);
                socket.removeListener('close', onclose);
                socket.removeListener('readable', read);
              }

              function onclose(err) {
                debug('onclose had error %o', err);
              }

              function onend() {
                debug('onend');
              }

              function onerror(err) {
                cleanup();
                fn(err);
              }

              function ondata(b) {
                buffers.push(b);
                buffersLength += b.length;
                var buffered = Buffer.concat(buffers, buffersLength);
                var str = buffered.toString('ascii');

                if (!~str.indexOf('\r\n\r\n')) {
                  // keep buffering
                  debug('have not received end of HTTP headers yet...');
                  read();
                  return;
                }

                var firstLine = str.substring(0, str.indexOf('\r\n'));
                var statusCode = +firstLine.split(' ')[1];
                debug('got proxy server response: %o', firstLine);

                if (200 == statusCode) {
                  // 200 Connected status code!
                  var sock = socket;

                  // nullify the buffered data since we won't be needing it
                  buffers = buffered = null;

                  if (opts.secureEndpoint) {
                    // since the proxy is connecting to an SSL server, we have
                    // to upgrade this socket connection to an SSL connection
                    debug(
                      'upgrading proxy-connected socket to TLS connection: %o',
                      opts.host
                    );
                    opts.socket = socket;
                    opts.servername = opts.servername || opts.host;
                    opts.host = null;
                    opts.hostname = null;
                    opts.port = null;
                    sock = tls.connect(opts);
                  }

                  cleanup();
                  req.once('socket', resume);
                  fn(null, sock);
                } else {
                  // some other status code that's not 200... need to re-play the HTTP header
                  // "data" events onto the socket once the HTTP machinery is attached so
                  // that the node core `http` can parse and handle the error status code
                  cleanup();

                  // the original socket is closed, and a new closed socket is
                  // returned instead, so that the proxy doesn't get the HTTP request
                  // written to it (which may contain `Authorization` headers or other
                  // sensitive data).
                  //
                  // See: https://hackerone.com/reports/541502
                  socket.destroy();
                  socket = new net.Socket();
                  socket.readable = true;

                  // save a reference to the concat'd Buffer for the `onsocket` callback
                  buffers = buffered;

                  // need to wait for the "socket" event to re-play the "data" events
                  req.once('socket', onsocket);

                  fn(null, socket);
                }
              }

              function onsocket(socket) {
                debug('replaying proxy buffer for failed request');
                assert(socket.listenerCount('data') > 0);

                // replay the "buffers" Buffer onto the `socket`, since at this point
                // the HTTP module machinery has been hooked up for the user
                socket.push(buffers);

                // nullify the cached Buffer instance
                buffers = null;
              }

              socket.on('error', onerror);
              socket.on('close', onclose);
              socket.on('end', onend);

              read();

              var hostname = opts.host + ':' + opts.port;
              var msg = 'CONNECT ' + hostname + ' HTTP/1.1\r\n';

              var headers = Object.assign({}, proxy.headers);
              if (proxy.auth) {
                headers['Proxy-Authorization'] =
                  'Basic ' + Buffer.from(proxy.auth).toString('base64');
              }

              // the Host header should only include the port
              // number when it is a non-standard port
              var host = opts.host;
              if (!isDefaultPort(opts.port, opts.secureEndpoint)) {
                host += ':' + opts.port;
              }
              headers['Host'] = host;

              headers['Connection'] = 'close';
              Object.keys(headers).forEach(function (name) {
                msg += name + ': ' + headers[name] + '\r\n';
              });

              socket.write(msg + '\r\n');
            };

            /**
             * Resumes a socket.
             *
             * @param {(net.Socket|tls.Socket)} socket The socket to resume
             * @api public
             */

            function resume(socket) {
              socket.resume();
            }

            function isDefaultPort(port, secure) {
              return Boolean(
                (!secure && port === 80) || (secure && port === 443)
              );
            }
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(4).Buffer);

          /***/
        },
        /* 94 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (module, global) {
            var __WEBPACK_AMD_DEFINE_RESULT__;

            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            /*! https://mths.be/punycode v1.4.1 by @mathias */
            (function (root) {
              /** Detect free variables */
              var freeExports =
                (false ? 'undefined' : _typeof(exports)) == 'object' &&
                exports &&
                !exports.nodeType &&
                exports;
              var freeModule =
                (false ? 'undefined' : _typeof(module)) == 'object' &&
                module &&
                !module.nodeType &&
                module;
              var freeGlobal =
                (typeof global === 'undefined'
                  ? 'undefined'
                  : _typeof(global)) == 'object' && global;
              if (
                freeGlobal.global === freeGlobal ||
                freeGlobal.window === freeGlobal ||
                freeGlobal.self === freeGlobal
              ) {
                root = freeGlobal;
              }

              /**
               * The `punycode` object.
               * @name punycode
               * @type Object
               */
              var punycode,
                /** Highest positive signed 32-bit float value */
                maxInt = 2147483647,
                // aka. 0x7FFFFFFF or 2^31-1

                /** Bootstring parameters */
                base = 36,
                tMin = 1,
                tMax = 26,
                skew = 38,
                damp = 700,
                initialBias = 72,
                initialN = 128,
                // 0x80
                delimiter = '-',
                // '\x2D'

                /** Regular expressions */
                regexPunycode = /^xn--/,
                regexNonASCII = /[^\x20-\x7E]/,
                // unprintable ASCII chars + non-ASCII chars
                regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
                // RFC 3490 separators

                /** Error messages */
                errors = {
                  overflow: 'Overflow: input needs wider integers to process',
                  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
                  'invalid-input': 'Invalid input',
                },
                /** Convenience shortcuts */
                baseMinusTMin = base - tMin,
                floor = Math.floor,
                stringFromCharCode = String.fromCharCode,
                /** Temporary variable */
                key;

              /*--------------------------------------------------------------------------*/

              /**
               * A generic error utility function.
               * @private
               * @param {String} type The error type.
               * @returns {Error} Throws a `RangeError` with the applicable error message.
               */
              function error(type) {
                throw new RangeError(errors[type]);
              }

              /**
               * A generic `Array#map` utility function.
               * @private
               * @param {Array} array The array to iterate over.
               * @param {Function} callback The function that gets called for every array
               * item.
               * @returns {Array} A new array of values returned by the callback function.
               */
              function map(array, fn) {
                var length = array.length;
                var result = [];
                while (length--) {
                  result[length] = fn(array[length]);
                }
                return result;
              }

              /**
               * A simple `Array#map`-like wrapper to work with domain name strings or email
               * addresses.
               * @private
               * @param {String} domain The domain name or email address.
               * @param {Function} callback The function that gets called for every
               * character.
               * @returns {Array} A new string of characters returned by the callback
               * function.
               */
              function mapDomain(string, fn) {
                var parts = string.split('@');
                var result = '';
                if (parts.length > 1) {
                  // In email addresses, only the domain name should be punycoded. Leave
                  // the local part (i.e. everything up to `@`) intact.
                  result = parts[0] + '@';
                  string = parts[1];
                }
                // Avoid `split(regex)` for IE8 compatibility. See #17.
                string = string.replace(regexSeparators, '\x2E');
                var labels = string.split('.');
                var encoded = map(labels, fn).join('.');
                return result + encoded;
              }

              /**
               * Creates an array containing the numeric code points of each Unicode
               * character in the string. While JavaScript uses UCS-2 internally,
               * this function will convert a pair of surrogate halves (each of which
               * UCS-2 exposes as separate characters) into a single code point,
               * matching UTF-16.
               * @see `punycode.ucs2.encode`
               * @see <https://mathiasbynens.be/notes/javascript-encoding>
               * @memberOf punycode.ucs2
               * @name decode
               * @param {String} string The Unicode input string (UCS-2).
               * @returns {Array} The new array of code points.
               */
              function ucs2decode(string) {
                var output = [],
                  counter = 0,
                  length = string.length,
                  value,
                  extra;
                while (counter < length) {
                  value = string.charCodeAt(counter++);
                  if (value >= 0xd800 && value <= 0xdbff && counter < length) {
                    // high surrogate, and there is a next character
                    extra = string.charCodeAt(counter++);
                    if ((extra & 0xfc00) == 0xdc00) {
                      // low surrogate
                      output.push(
                        ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000
                      );
                    } else {
                      // unmatched surrogate; only append this code unit, in case the next
                      // code unit is the high surrogate of a surrogate pair
                      output.push(value);
                      counter--;
                    }
                  } else {
                    output.push(value);
                  }
                }
                return output;
              }

              /**
               * Creates a string based on an array of numeric code points.
               * @see `punycode.ucs2.decode`
               * @memberOf punycode.ucs2
               * @name encode
               * @param {Array} codePoints The array of numeric code points.
               * @returns {String} The new Unicode string (UCS-2).
               */
              function ucs2encode(array) {
                return map(array, function (value) {
                  var output = '';
                  if (value > 0xffff) {
                    value -= 0x10000;
                    output += stringFromCharCode(
                      ((value >>> 10) & 0x3ff) | 0xd800
                    );
                    value = 0xdc00 | (value & 0x3ff);
                  }
                  output += stringFromCharCode(value);
                  return output;
                }).join('');
              }

              /**
               * Converts a basic code point into a digit/integer.
               * @see `digitToBasic()`
               * @private
               * @param {Number} codePoint The basic numeric code point value.
               * @returns {Number} The numeric value of a basic code point (for use in
               * representing integers) in the range `0` to `base - 1`, or `base` if
               * the code point does not represent a value.
               */
              function basicToDigit(codePoint) {
                if (codePoint - 48 < 10) {
                  return codePoint - 22;
                }
                if (codePoint - 65 < 26) {
                  return codePoint - 65;
                }
                if (codePoint - 97 < 26) {
                  return codePoint - 97;
                }
                return base;
              }

              /**
               * Converts a digit/integer into a basic code point.
               * @see `basicToDigit()`
               * @private
               * @param {Number} digit The numeric value of a basic code point.
               * @returns {Number} The basic code point whose value (when used for
               * representing integers) is `digit`, which needs to be in the range
               * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
               * used; else, the lowercase form is used. The behavior is undefined
               * if `flag` is non-zero and `digit` has no uppercase form.
               */
              function digitToBasic(digit, flag) {
                //  0..25 map to ASCII a..z or A..Z
                // 26..35 map to ASCII 0..9
                return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
              }

              /**
               * Bias adaptation function as per section 3.4 of RFC 3492.
               * https://tools.ietf.org/html/rfc3492#section-3.4
               * @private
               */
              function adapt(delta, numPoints, firstTime) {
                var k = 0;
                delta = firstTime ? floor(delta / damp) : delta >> 1;
                delta += floor(delta / numPoints);
                for (
                  ;
                  /* no initialization */ delta > (baseMinusTMin * tMax) >> 1;
                  k += base
                ) {
                  delta = floor(delta / baseMinusTMin);
                }
                return floor(
                  k + ((baseMinusTMin + 1) * delta) / (delta + skew)
                );
              }

              /**
               * Converts a Punycode string of ASCII-only symbols to a string of Unicode
               * symbols.
               * @memberOf punycode
               * @param {String} input The Punycode string of ASCII-only symbols.
               * @returns {String} The resulting string of Unicode symbols.
               */
              function decode(input) {
                // Don't use UCS-2
                var output = [],
                  inputLength = input.length,
                  out,
                  i = 0,
                  n = initialN,
                  bias = initialBias,
                  basic,
                  j,
                  index,
                  oldi,
                  w,
                  k,
                  digit,
                  t,
                  /** Cached calculation results */
                  baseMinusT;

                // Handle the basic code points: let `basic` be the number of input code
                // points before the last delimiter, or `0` if there is none, then copy
                // the first basic code points to the output.

                basic = input.lastIndexOf(delimiter);
                if (basic < 0) {
                  basic = 0;
                }

                for (j = 0; j < basic; ++j) {
                  // if it's not a basic code point
                  if (input.charCodeAt(j) >= 0x80) {
                    error('not-basic');
                  }
                  output.push(input.charCodeAt(j));
                }

                // Main decoding loop: start just after the last delimiter if any basic code
                // points were copied; start at the beginning otherwise.

                for (
                  index = basic > 0 ? basic + 1 : 0;
                  index < inputLength;

                ) /* no final expression */ {
                  // `index` is the index of the next character to be consumed.
                  // Decode a generalized variable-length integer into `delta`,
                  // which gets added to `i`. The overflow checking is easier
                  // if we increase `i` as we go, then subtract off its starting
                  // value at the end to obtain `delta`.
                  for (
                    oldi = i, w = 1, k = base;
                    ;
                    /* no condition */ k += base
                  ) {
                    if (index >= inputLength) {
                      error('invalid-input');
                    }

                    digit = basicToDigit(input.charCodeAt(index++));

                    if (digit >= base || digit > floor((maxInt - i) / w)) {
                      error('overflow');
                    }

                    i += digit * w;
                    t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

                    if (digit < t) {
                      break;
                    }

                    baseMinusT = base - t;
                    if (w > floor(maxInt / baseMinusT)) {
                      error('overflow');
                    }

                    w *= baseMinusT;
                  }

                  out = output.length + 1;
                  bias = adapt(i - oldi, out, oldi == 0);

                  // `i` was supposed to wrap around from `out` to `0`,
                  // incrementing `n` each time, so we'll fix that now:
                  if (floor(i / out) > maxInt - n) {
                    error('overflow');
                  }

                  n += floor(i / out);
                  i %= out;

                  // Insert `n` at position `i` of the output
                  output.splice(i++, 0, n);
                }

                return ucs2encode(output);
              }

              /**
               * Converts a string of Unicode symbols (e.g. a domain name label) to a
               * Punycode string of ASCII-only symbols.
               * @memberOf punycode
               * @param {String} input The string of Unicode symbols.
               * @returns {String} The resulting Punycode string of ASCII-only symbols.
               */
              function encode(input) {
                var n,
                  delta,
                  handledCPCount,
                  basicLength,
                  bias,
                  j,
                  m,
                  q,
                  k,
                  t,
                  currentValue,
                  output = [],
                  /** `inputLength` will hold the number of code points in `input`. */
                  inputLength,
                  /** Cached calculation results */
                  handledCPCountPlusOne,
                  baseMinusT,
                  qMinusT;

                // Convert the input in UCS-2 to Unicode
                input = ucs2decode(input);

                // Cache the length
                inputLength = input.length;

                // Initialize the state
                n = initialN;
                delta = 0;
                bias = initialBias;

                // Handle the basic code points
                for (j = 0; j < inputLength; ++j) {
                  currentValue = input[j];
                  if (currentValue < 0x80) {
                    output.push(stringFromCharCode(currentValue));
                  }
                }

                handledCPCount = basicLength = output.length;

                // `handledCPCount` is the number of code points that have been handled;
                // `basicLength` is the number of basic code points.

                // Finish the basic string - if it is not empty - with a delimiter
                if (basicLength) {
                  output.push(delimiter);
                }

                // Main encoding loop:
                while (handledCPCount < inputLength) {
                  // All non-basic code points < n have been handled already. Find the next
                  // larger one:
                  for (m = maxInt, j = 0; j < inputLength; ++j) {
                    currentValue = input[j];
                    if (currentValue >= n && currentValue < m) {
                      m = currentValue;
                    }
                  }

                  // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
                  // but guard against overflow
                  handledCPCountPlusOne = handledCPCount + 1;
                  if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                    error('overflow');
                  }

                  delta += (m - n) * handledCPCountPlusOne;
                  n = m;

                  for (j = 0; j < inputLength; ++j) {
                    currentValue = input[j];

                    if (currentValue < n && ++delta > maxInt) {
                      error('overflow');
                    }

                    if (currentValue == n) {
                      // Represent delta as a generalized variable-length integer
                      for (
                        q = delta, k = base;
                        ;
                        /* no condition */ k += base
                      ) {
                        t =
                          k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                        if (q < t) {
                          break;
                        }
                        qMinusT = q - t;
                        baseMinusT = base - t;
                        output.push(
                          stringFromCharCode(
                            digitToBasic(t + (qMinusT % baseMinusT), 0)
                          )
                        );
                        q = floor(qMinusT / baseMinusT);
                      }

                      output.push(stringFromCharCode(digitToBasic(q, 0)));
                      bias = adapt(
                        delta,
                        handledCPCountPlusOne,
                        handledCPCount == basicLength
                      );
                      delta = 0;
                      ++handledCPCount;
                    }
                  }

                  ++delta;
                  ++n;
                }
                return output.join('');
              }

              /**
               * Converts a Punycode string representing a domain name or an email address
               * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
               * it doesn't matter if you call it on a string that has already been
               * converted to Unicode.
               * @memberOf punycode
               * @param {String} input The Punycoded domain name or email address to
               * convert to Unicode.
               * @returns {String} The Unicode representation of the given Punycode
               * string.
               */
              function toUnicode(input) {
                return mapDomain(input, function (string) {
                  return regexPunycode.test(string)
                    ? decode(string.slice(4).toLowerCase())
                    : string;
                });
              }

              /**
               * Converts a Unicode string representing a domain name or an email address to
               * Punycode. Only the non-ASCII parts of the domain name will be converted,
               * i.e. it doesn't matter if you call it with a domain that's already in
               * ASCII.
               * @memberOf punycode
               * @param {String} input The domain name or email address to convert, as a
               * Unicode string.
               * @returns {String} The Punycode representation of the given domain name or
               * email address.
               */
              function toASCII(input) {
                return mapDomain(input, function (string) {
                  return regexNonASCII.test(string)
                    ? 'xn--' + encode(string)
                    : string;
                });
              }

              /*--------------------------------------------------------------------------*/

              /** Define the public API */
              punycode = {
                /**
                 * A string representing the current Punycode.js version number.
                 * @memberOf punycode
                 * @type String
                 */
                version: '1.4.1',
                /**
                 * An object of methods to convert from JavaScript's internal character
                 * representation (UCS-2) to Unicode code points, and back.
                 * @see <https://mathiasbynens.be/notes/javascript-encoding>
                 * @memberOf punycode
                 * @type Object
                 */
                ucs2: {
                  decode: ucs2decode,
                  encode: ucs2encode,
                },
                decode: decode,
                encode: encode,
                toASCII: toASCII,
                toUnicode: toUnicode,
              };

              /** Expose `punycode` */
              // Some AMD build optimizers, like r.js, check for specific condition patterns
              // like the following:
              if (
                'function' == 'function' &&
                _typeof(__webpack_require__(46)) == 'object' &&
                __webpack_require__(46)
              ) {
                !((__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                  return punycode;
                }.call(exports, __webpack_require__, exports, module)),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                  (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
              } else if (freeExports && freeModule) {
                if (module.exports == freeExports) {
                  // in Node.js, io.js, or RingoJS v0.8.0+
                  freeModule.exports = punycode;
                } else {
                  // in Narwhal or RingoJS v0.7.0-
                  for (key in punycode) {
                    punycode.hasOwnProperty(key) &&
                      (freeExports[key] = punycode[key]);
                  }
                }
              } else {
                // in Rhino or a web browser
                root.punycode = punycode;
              }
            })(undefined);
            /* WEBPACK VAR INJECTION */
          }).call(
            exports,
            __webpack_require__(20)(module),
            __webpack_require__(2)
          );

          /***/
        },
        /* 95 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          module.exports = {
            isString: function isString(arg) {
              return typeof arg === 'string';
            },
            isObject: function isObject(arg) {
              return (
                (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                  'object' && arg !== null
              );
            },
            isNull: function isNull(arg) {
              return arg === null;
            },
            isNullOrUndefined: function isNullOrUndefined(arg) {
              return arg == null;
            },
          };

          /***/
        },
        /* 96 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          exports.decode = exports.parse = __webpack_require__(97);
          exports.encode = exports.stringify = __webpack_require__(98);

          /***/
        },
        /* 97 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // If obj.hasOwnProperty has been overridden, then calling
          // obj.hasOwnProperty(prop) will break.
          // See: https://github.com/joyent/node/issues/1707

          function hasOwnProperty(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
          }

          module.exports = function (qs, sep, eq, options) {
            sep = sep || '&';
            eq = eq || '=';
            var obj = {};

            if (typeof qs !== 'string' || qs.length === 0) {
              return obj;
            }

            var regexp = /\+/g;
            qs = qs.split(sep);

            var maxKeys = 1000;
            if (options && typeof options.maxKeys === 'number') {
              maxKeys = options.maxKeys;
            }

            var len = qs.length;
            // maxKeys <= 0 means that we should not limit keys count
            if (maxKeys > 0 && len > maxKeys) {
              len = maxKeys;
            }

            for (var i = 0; i < len; ++i) {
              var x = qs[i].replace(regexp, '%20'),
                idx = x.indexOf(eq),
                kstr,
                vstr,
                k,
                v;

              if (idx >= 0) {
                kstr = x.substr(0, idx);
                vstr = x.substr(idx + 1);
              } else {
                kstr = x;
                vstr = '';
              }

              k = decodeURIComponent(kstr);
              v = decodeURIComponent(vstr);

              if (!hasOwnProperty(obj, k)) {
                obj[k] = v;
              } else if (isArray(obj[k])) {
                obj[k].push(v);
              } else {
                obj[k] = [obj[k], v];
              }
            }

            return obj;
          };

          var isArray =
            Array.isArray ||
            function (xs) {
              return Object.prototype.toString.call(xs) === '[object Array]';
            };

          /***/
        },
        /* 98 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var stringifyPrimitive = function stringifyPrimitive(v) {
            switch (typeof v === 'undefined' ? 'undefined' : _typeof(v)) {
              case 'string':
                return v;

              case 'boolean':
                return v ? 'true' : 'false';

              case 'number':
                return isFinite(v) ? v : '';

              default:
                return '';
            }
          };

          module.exports = function (obj, sep, eq, name) {
            sep = sep || '&';
            eq = eq || '=';
            if (obj === null) {
              obj = undefined;
            }

            if (
              (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) ===
              'object'
            ) {
              return map(objectKeys(obj), function (k) {
                var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
                if (isArray(obj[k])) {
                  return map(obj[k], function (v) {
                    return ks + encodeURIComponent(stringifyPrimitive(v));
                  }).join(sep);
                } else {
                  return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
                }
              }).join(sep);
            }

            if (!name) return '';
            return (
              encodeURIComponent(stringifyPrimitive(name)) +
              eq +
              encodeURIComponent(stringifyPrimitive(obj))
            );
          };

          var isArray =
            Array.isArray ||
            function (xs) {
              return Object.prototype.toString.call(xs) === '[object Array]';
            };

          function map(xs, f) {
            if (xs.map) return xs.map(f);
            var res = [];
            for (var i = 0; i < xs.length; i++) {
              res.push(f(xs[i], i));
            }
            return res;
          }

          var objectKeys =
            Object.keys ||
            function (obj) {
              var res = [];
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  res.push(key);
              }
              return res;
            };

          /***/
        },
        /* 99 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            // compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
            // original notice:

            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
             * @license  MIT
             */

            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            function compare(a, b) {
              if (a === b) {
                return 0;
              }

              var x = a.length;
              var y = b.length;

              for (var i = 0, len = Math.min(x, y); i < len; ++i) {
                if (a[i] !== b[i]) {
                  x = a[i];
                  y = b[i];
                  break;
                }
              }

              if (x < y) {
                return -1;
              }
              if (y < x) {
                return 1;
              }
              return 0;
            }
            function isBuffer(b) {
              if (
                global.Buffer &&
                typeof global.Buffer.isBuffer === 'function'
              ) {
                return global.Buffer.isBuffer(b);
              }
              return !!(b != null && b._isBuffer);
            }

            // based on node assert, original notice:

            // http://wiki.commonjs.org/wiki/Unit_Testing/1.0
            //
            // THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
            //
            // Originally from narwhal.js (http://narwhaljs.org)
            // Copyright (c) 2009 Thomas Robinson <280north.com>
            //
            // Permission is hereby granted, free of charge, to any person obtaining a copy
            // of this software and associated documentation files (the 'Software'), to
            // deal in the Software without restriction, including without limitation the
            // rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
            // sell copies of the Software, and to permit persons to whom the Software is
            // furnished to do so, subject to the following conditions:
            //
            // The above copyright notice and this permission notice shall be included in
            // all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
            // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
            // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
            // AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
            // ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
            // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

            var util = __webpack_require__(22);
            var hasOwn = Object.prototype.hasOwnProperty;
            var pSlice = Array.prototype.slice;
            var functionsHaveNames = (function () {
              return function foo() {}.name === 'foo';
            })();
            function pToString(obj) {
              return Object.prototype.toString.call(obj);
            }
            function isView(arrbuf) {
              if (isBuffer(arrbuf)) {
                return false;
              }
              if (typeof global.ArrayBuffer !== 'function') {
                return false;
              }
              if (typeof ArrayBuffer.isView === 'function') {
                return ArrayBuffer.isView(arrbuf);
              }
              if (!arrbuf) {
                return false;
              }
              if (arrbuf instanceof DataView) {
                return true;
              }
              if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
                return true;
              }
              return false;
            }
            // 1. The assert module provides functions that throw
            // AssertionError's when particular conditions are not met. The
            // assert module must conform to the following interface.

            var assert = (module.exports = ok);

            // 2. The AssertionError is defined in assert.
            // new assert.AssertionError({ message: message,
            //                             actual: actual,
            //                             expected: expected })

            var regex = /\s*function\s+([^\(\s]*)\s*/;
            // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
            function getName(func) {
              if (!util.isFunction(func)) {
                return;
              }
              if (functionsHaveNames) {
                return func.name;
              }
              var str = func.toString();
              var match = str.match(regex);
              return match && match[1];
            }
            assert.AssertionError = function AssertionError(options) {
              this.name = 'AssertionError';
              this.actual = options.actual;
              this.expected = options.expected;
              this.operator = options.operator;
              if (options.message) {
                this.message = options.message;
                this.generatedMessage = false;
              } else {
                this.message = getMessage(this);
                this.generatedMessage = true;
              }
              var stackStartFunction = options.stackStartFunction || fail;
              if (Error.captureStackTrace) {
                Error.captureStackTrace(this, stackStartFunction);
              } else {
                // non v8 browsers so we can have a stacktrace
                var err = new Error();
                if (err.stack) {
                  var out = err.stack;

                  // try to strip useless frames
                  var fn_name = getName(stackStartFunction);
                  var idx = out.indexOf('\n' + fn_name);
                  if (idx >= 0) {
                    // once we have located the function frame
                    // we need to strip out everything before it (and its line)
                    var next_line = out.indexOf('\n', idx + 1);
                    out = out.substring(next_line + 1);
                  }

                  this.stack = out;
                }
              }
            };

            // assert.AssertionError instanceof Error
            util.inherits(assert.AssertionError, Error);

            function truncate(s, n) {
              if (typeof s === 'string') {
                return s.length < n ? s : s.slice(0, n);
              } else {
                return s;
              }
            }
            function inspect(something) {
              if (functionsHaveNames || !util.isFunction(something)) {
                return util.inspect(something);
              }
              var rawname = getName(something);
              var name = rawname ? ': ' + rawname : '';
              return '[Function' + name + ']';
            }
            function getMessage(self) {
              return (
                truncate(inspect(self.actual), 128) +
                ' ' +
                self.operator +
                ' ' +
                truncate(inspect(self.expected), 128)
              );
            }

            // At present only the three keys mentioned above are used and
            // understood by the spec. Implementations or sub modules can pass
            // other keys to the AssertionError's constructor - they will be
            // ignored.

            // 3. All of the following functions must throw an AssertionError
            // when a corresponding condition is not met, with a message that
            // may be undefined if not provided.  All assertion methods provide
            // both the actual and expected values to the assertion error for
            // display purposes.

            function fail(
              actual,
              expected,
              message,
              operator,
              stackStartFunction
            ) {
              throw new assert.AssertionError({
                message: message,
                actual: actual,
                expected: expected,
                operator: operator,
                stackStartFunction: stackStartFunction,
              });
            }

            // EXTENSION! allows for well behaved errors defined elsewhere.
            assert.fail = fail;

            // 4. Pure assertion tests whether a value is truthy, as determined
            // by !!guard.
            // assert.ok(guard, message_opt);
            // This statement is equivalent to assert.equal(true, !!guard,
            // message_opt);. To test strictly for the value true, use
            // assert.strictEqual(true, guard, message_opt);.

            function ok(value, message) {
              if (!value) fail(value, true, message, '==', assert.ok);
            }
            assert.ok = ok;

            // 5. The equality assertion tests shallow, coercive equality with
            // ==.
            // assert.equal(actual, expected, message_opt);

            assert.equal = function equal(actual, expected, message) {
              if (actual != expected)
                fail(actual, expected, message, '==', assert.equal);
            };

            // 6. The non-equality assertion tests for whether two objects are not equal
            // with != assert.notEqual(actual, expected, message_opt);

            assert.notEqual = function notEqual(actual, expected, message) {
              if (actual == expected) {
                fail(actual, expected, message, '!=', assert.notEqual);
              }
            };

            // 7. The equivalence assertion tests a deep equality relation.
            // assert.deepEqual(actual, expected, message_opt);

            assert.deepEqual = function deepEqual(actual, expected, message) {
              if (!_deepEqual(actual, expected, false)) {
                fail(actual, expected, message, 'deepEqual', assert.deepEqual);
              }
            };

            assert.deepStrictEqual = function deepStrictEqual(
              actual,
              expected,
              message
            ) {
              if (!_deepEqual(actual, expected, true)) {
                fail(
                  actual,
                  expected,
                  message,
                  'deepStrictEqual',
                  assert.deepStrictEqual
                );
              }
            };

            function _deepEqual(actual, expected, strict, memos) {
              // 7.1. All identical values are equivalent, as determined by ===.
              if (actual === expected) {
                return true;
              } else if (isBuffer(actual) && isBuffer(expected)) {
                return compare(actual, expected) === 0;

                // 7.2. If the expected value is a Date object, the actual value is
                // equivalent if it is also a Date object that refers to the same time.
              } else if (util.isDate(actual) && util.isDate(expected)) {
                return actual.getTime() === expected.getTime();

                // 7.3 If the expected value is a RegExp object, the actual value is
                // equivalent if it is also a RegExp object with the same source and
                // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
              } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
                return (
                  actual.source === expected.source &&
                  actual.global === expected.global &&
                  actual.multiline === expected.multiline &&
                  actual.lastIndex === expected.lastIndex &&
                  actual.ignoreCase === expected.ignoreCase
                );

                // 7.4. Other pairs that do not both pass typeof value == 'object',
                // equivalence is determined by ==.
              } else if (
                (actual === null ||
                  (typeof actual === 'undefined'
                    ? 'undefined'
                    : _typeof(actual)) !== 'object') &&
                (expected === null ||
                  (typeof expected === 'undefined'
                    ? 'undefined'
                    : _typeof(expected)) !== 'object')
              ) {
                return strict ? actual === expected : actual == expected;

                // If both values are instances of typed arrays, wrap their underlying
                // ArrayBuffers in a Buffer each to increase performance
                // This optimization requires the arrays to have the same type as checked by
                // Object.prototype.toString (aka pToString). Never perform binary
                // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
                // bit patterns are not identical.
              } else if (
                isView(actual) &&
                isView(expected) &&
                pToString(actual) === pToString(expected) &&
                !(
                  actual instanceof Float32Array ||
                  actual instanceof Float64Array
                )
              ) {
                return (
                  compare(
                    new Uint8Array(actual.buffer),
                    new Uint8Array(expected.buffer)
                  ) === 0
                );

                // 7.5 For all other Object pairs, including Array objects, equivalence is
                // determined by having the same number of owned properties (as verified
                // with Object.prototype.hasOwnProperty.call), the same set of keys
                // (although not necessarily the same order), equivalent values for every
                // corresponding key, and an identical 'prototype' property. Note: this
                // accounts for both named and indexed properties on Arrays.
              } else if (isBuffer(actual) !== isBuffer(expected)) {
                return false;
              } else {
                memos = memos || { actual: [], expected: [] };

                var actualIndex = memos.actual.indexOf(actual);
                if (actualIndex !== -1) {
                  if (actualIndex === memos.expected.indexOf(expected)) {
                    return true;
                  }
                }

                memos.actual.push(actual);
                memos.expected.push(expected);

                return objEquiv(actual, expected, strict, memos);
              }
            }

            function isArguments(object) {
              return (
                Object.prototype.toString.call(object) == '[object Arguments]'
              );
            }

            function objEquiv(a, b, strict, actualVisitedObjects) {
              if (
                a === null ||
                a === undefined ||
                b === null ||
                b === undefined
              )
                return false;
              // if one is a primitive, the other must be same
              if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;
              if (
                strict &&
                Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)
              )
                return false;
              var aIsArgs = isArguments(a);
              var bIsArgs = isArguments(b);
              if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs)) return false;
              if (aIsArgs) {
                a = pSlice.call(a);
                b = pSlice.call(b);
                return _deepEqual(a, b, strict);
              }
              var ka = objectKeys(a);
              var kb = objectKeys(b);
              var key, i;
              // having the same number of owned properties (keys incorporates
              // hasOwnProperty)
              if (ka.length !== kb.length) return false;
              //the same set of keys (although not necessarily the same order),
              ka.sort();
              kb.sort();
              //~~~cheap key test
              for (i = ka.length - 1; i >= 0; i--) {
                if (ka[i] !== kb[i]) return false;
              }
              //equivalent values for every corresponding key, and
              //~~~possibly expensive deep test
              for (i = ka.length - 1; i >= 0; i--) {
                key = ka[i];
                if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
                  return false;
              }
              return true;
            }

            // 8. The non-equivalence assertion tests for any deep inequality.
            // assert.notDeepEqual(actual, expected, message_opt);

            assert.notDeepEqual = function notDeepEqual(
              actual,
              expected,
              message
            ) {
              if (_deepEqual(actual, expected, false)) {
                fail(
                  actual,
                  expected,
                  message,
                  'notDeepEqual',
                  assert.notDeepEqual
                );
              }
            };

            assert.notDeepStrictEqual = notDeepStrictEqual;
            function notDeepStrictEqual(actual, expected, message) {
              if (_deepEqual(actual, expected, true)) {
                fail(
                  actual,
                  expected,
                  message,
                  'notDeepStrictEqual',
                  notDeepStrictEqual
                );
              }
            }

            // 9. The strict equality assertion tests strict equality, as determined by ===.
            // assert.strictEqual(actual, expected, message_opt);

            assert.strictEqual = function strictEqual(
              actual,
              expected,
              message
            ) {
              if (actual !== expected) {
                fail(actual, expected, message, '===', assert.strictEqual);
              }
            };

            // 10. The strict non-equality assertion tests for strict inequality, as
            // determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

            assert.notStrictEqual = function notStrictEqual(
              actual,
              expected,
              message
            ) {
              if (actual === expected) {
                fail(actual, expected, message, '!==', assert.notStrictEqual);
              }
            };

            function expectedException(actual, expected) {
              if (!actual || !expected) {
                return false;
              }

              if (
                Object.prototype.toString.call(expected) == '[object RegExp]'
              ) {
                return expected.test(actual);
              }

              try {
                if (actual instanceof expected) {
                  return true;
                }
              } catch (e) {
                // Ignore.  The instanceof check doesn't work for arrow functions.
              }

              if (Error.isPrototypeOf(expected)) {
                return false;
              }

              return expected.call({}, actual) === true;
            }

            function _tryBlock(block) {
              var error;
              try {
                block();
              } catch (e) {
                error = e;
              }
              return error;
            }

            function _throws(shouldThrow, block, expected, message) {
              var actual;

              if (typeof block !== 'function') {
                throw new TypeError('"block" argument must be a function');
              }

              if (typeof expected === 'string') {
                message = expected;
                expected = null;
              }

              actual = _tryBlock(block);

              message =
                (expected && expected.name
                  ? ' (' + expected.name + ').'
                  : '.') + (message ? ' ' + message : '.');

              if (shouldThrow && !actual) {
                fail(actual, expected, 'Missing expected exception' + message);
              }

              var userProvidedMessage = typeof message === 'string';
              var isUnwantedException = !shouldThrow && util.isError(actual);
              var isUnexpectedException = !shouldThrow && actual && !expected;

              if (
                (isUnwantedException &&
                  userProvidedMessage &&
                  expectedException(actual, expected)) ||
                isUnexpectedException
              ) {
                fail(actual, expected, 'Got unwanted exception' + message);
              }

              if (
                (shouldThrow &&
                  actual &&
                  expected &&
                  !expectedException(actual, expected)) ||
                (!shouldThrow && actual)
              ) {
                throw actual;
              }
            }

            // 11. Expected to throw an error:
            // assert.throws(block, Error_opt, message_opt);

            assert.throws = function (
              block,
              /*optional*/ error,
              /*optional*/ message
            ) {
              _throws(true, block, error, message);
            };

            // EXTENSION! This is annoying to write outside this module.
            assert.doesNotThrow = function (
              block,
              /*optional*/ error,
              /*optional*/ message
            ) {
              _throws(false, block, error, message);
            };

            assert.ifError = function (err) {
              if (err) throw err;
            };

            var objectKeys =
              Object.keys ||
              function (obj) {
                var keys = [];
                for (var key in obj) {
                  if (hasOwn.call(obj, key)) keys.push(key);
                }
                return keys;
              };
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 100 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          module.exports = function isBuffer(arg) {
            return (
              arg &&
              (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) ===
                'object' &&
              typeof arg.copy === 'function' &&
              typeof arg.fill === 'function' &&
              typeof arg.readUInt8 === 'function'
            );
          };

          /***/
        },
        /* 101 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          __webpack_require__(102);
          var inherits = __webpack_require__(22).inherits;
          var promisify = __webpack_require__(109);
          var EventEmitter = __webpack_require__(14).EventEmitter;

          module.exports = Agent;

          function isAgent(v) {
            return v && typeof v.addRequest === 'function';
          }

          /**
           * Base `http.Agent` implementation.
           * No pooling/keep-alive is implemented by default.
           *
           * @param {Function} callback
           * @api public
           */
          function Agent(callback, _opts) {
            if (!(this instanceof Agent)) {
              return new Agent(callback, _opts);
            }

            EventEmitter.call(this);

            // The callback gets promisified if it has 3 parameters
            // (i.e. it has a callback function) lazily
            this._promisifiedCallback = false;

            var opts = _opts;
            if ('function' === typeof callback) {
              this.callback = callback;
            } else if (callback) {
              opts = callback;
            }

            // timeout for the socket to be returned from the callback
            this.timeout = (opts && opts.timeout) || null;

            this.options = opts;
          }
          inherits(Agent, EventEmitter);

          /**
           * Override this function in your subclass!
           */
          Agent.prototype.callback = function callback(req, opts) {
            throw new Error(
              '"agent-base" has no default implementation, you must subclass and override `callback()`'
            );
          };

          /**
           * Called by node-core's "_http_client.js" module when creating
           * a new HTTP request with this Agent instance.
           *
           * @api public
           */
          Agent.prototype.addRequest = function addRequest(req, _opts) {
            var ownOpts = Object.assign({}, _opts);

            // Set default `host` for HTTP to localhost
            if (null == ownOpts.host) {
              ownOpts.host = 'localhost';
            }

            // Set default `port` for HTTP if none was explicitly specified
            if (null == ownOpts.port) {
              ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;
            }

            var opts = Object.assign({}, this.options, ownOpts);

            if (opts.host && opts.path) {
              // If both a `host` and `path` are specified then it's most likely the
              // result of a `url.parse()` call... we need to remove the `path` portion so
              // that `net.connect()` doesn't attempt to open that as a unix socket file.
              delete opts.path;
            }

            delete opts.agent;
            delete opts.hostname;
            delete opts._defaultAgent;
            delete opts.defaultPort;
            delete opts.createConnection;

            // Hint to use "Connection: close"
            // XXX: non-documented `http` module API :(
            req._last = true;
            req.shouldKeepAlive = false;

            // Create the `stream.Duplex` instance
            var timeout = void 0;
            var timedOut = false;
            var timeoutMs = this.timeout;
            var freeSocket = this.freeSocket;

            function onerror(err) {
              if (req._hadError) return;
              req.emit('error', err);
              // For Safety. Some additional errors might fire later on
              // and we need to make sure we don't double-fire the error event.
              req._hadError = true;
            }

            function ontimeout() {
              timeout = null;
              timedOut = true;
              var err = new Error(
                'A "socket" was not created for HTTP request before ' +
                  timeoutMs +
                  'ms'
              );
              err.code = 'ETIMEOUT';
              onerror(err);
            }

            function callbackError(err) {
              if (timedOut) return;
              if (timeout != null) {
                clearTimeout(timeout);
                timeout = null;
              }
              onerror(err);
            }

            function onsocket(socket) {
              if (timedOut) return;
              if (timeout != null) {
                clearTimeout(timeout);
                timeout = null;
              }
              if (isAgent(socket)) {
                // `socket` is actually an http.Agent instance, so relinquish
                // responsibility for this `req` to the Agent from here on
                socket.addRequest(req, opts);
              } else if (socket) {
                var onfree = function onfree() {
                  freeSocket(socket, opts);
                };

                socket.on('free', onfree);
                req.onSocket(socket);
              } else {
                var err = new Error(
                  'no Duplex stream was returned to agent-base for `' +
                    req.method +
                    ' ' +
                    req.path +
                    '`'
                );
                onerror(err);
              }
            }

            if (!this._promisifiedCallback && this.callback.length >= 3) {
              // Legacy callback function - convert to a Promise
              this.callback = promisify(this.callback, this);
              this._promisifiedCallback = true;
            }

            if (timeoutMs > 0) {
              timeout = setTimeout(ontimeout, timeoutMs);
            }

            try {
              Promise.resolve(this.callback(req, opts)).then(
                onsocket,
                callbackError
              );
            } catch (err) {
              Promise.reject(err).catch(callbackError);
            }
          };

          Agent.prototype.freeSocket = function freeSocket(socket, opts) {
            // TODO reuse sockets
            socket.destroy();
          };

          /***/
        },
        /* 102 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var url = __webpack_require__(12);
          var https = __webpack_require__(103);

          /**
           * This currently needs to be applied to all Node.js versions
           * in order to determine if the `req` is an HTTP or HTTPS request.
           *
           * There is currently no PR attempting to move this property upstream.
           */
          var patchMarker = '__agent_base_https_request_patched__';
          if (!https.request[patchMarker]) {
            https.request = (function (request) {
              return function (_options, cb) {
                var options = void 0;
                if (typeof _options === 'string') {
                  options = url.parse(_options);
                } else {
                  options = Object.assign({}, _options);
                }
                if (null == options.port) {
                  options.port = 443;
                }
                options.secureEndpoint = true;
                return request.call(https, options, cb);
              };
            })(https.request);
            https.request[patchMarker] = true;
          }

          /**
           * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the
           * patched `https.request()`.
           *
           * Ref: https://github.com/nodejs/node/commit/5118f31
           */
          https.get = function (_url, _options, cb) {
            var options = void 0;
            if (
              typeof _url === 'string' &&
              _options &&
              typeof _options !== 'function'
            ) {
              options = Object.assign({}, url.parse(_url), _options);
            } else if (!_options && !cb) {
              options = _url;
            } else if (!cb) {
              options = _url;
              cb = _options;
            }

            var req = https.request(options, cb);
            req.end();
            return req;
          };

          /***/
        },
        /* 103 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var http = __webpack_require__(104);
          var url = __webpack_require__(12);

          var https = module.exports;

          for (var key in http) {
            if (http.hasOwnProperty(key)) https[key] = http[key];
          }

          https.request = function (params, cb) {
            params = validateParams(params);
            return http.request.call(this, params, cb);
          };

          https.get = function (params, cb) {
            params = validateParams(params);
            return http.get.call(this, params, cb);
          };

          function validateParams(params) {
            if (typeof params === 'string') {
              params = url.parse(params);
            }
            if (!params.protocol) {
              params.protocol = 'https:';
            }
            if (params.protocol !== 'https:') {
              throw new Error(
                'Protocol "' +
                  params.protocol +
                  '" not supported. Expected "https:"'
              );
            }
            return params;
          }

          /***/
        },
        /* 104 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            var ClientRequest = __webpack_require__(105);
            var response = __webpack_require__(48);
            var extend = __webpack_require__(107);
            var statusCodes = __webpack_require__(108);
            var url = __webpack_require__(12);

            var http = exports;

            http.request = function (opts, cb) {
              if (typeof opts === 'string') opts = url.parse(opts);
              else opts = extend(opts);

              // Normally, the page is loaded from http or https, so not specifying a protocol
              // will result in a (valid) protocol-relative url. However, this won't work if
              // the protocol is something else, like 'file:'
              var defaultProtocol =
                global.location.protocol.search(/^https?:$/) === -1
                  ? 'http:'
                  : '';

              var protocol = opts.protocol || defaultProtocol;
              var host = opts.hostname || opts.host;
              var port = opts.port;
              var path = opts.path || '/';

              // Necessary for IPv6 addresses
              if (host && host.indexOf(':') !== -1) host = '[' + host + ']';

              // This may be a relative url. The browser should always be able to interpret it correctly.
              opts.url =
                (host ? protocol + '//' + host : '') +
                (port ? ':' + port : '') +
                path;
              opts.method = (opts.method || 'GET').toUpperCase();
              opts.headers = opts.headers || {};

              // Also valid opts.auth, opts.mode

              var req = new ClientRequest(opts);
              if (cb) req.on('response', cb);
              return req;
            };

            http.get = function get(opts, cb) {
              var req = http.request(opts, cb);
              req.end();
              return req;
            };

            http.ClientRequest = ClientRequest;
            http.IncomingMessage = response.IncomingMessage;

            http.Agent = function () {};
            http.Agent.defaultMaxSockets = 4;

            http.globalAgent = new http.Agent();

            http.STATUS_CODES = statusCodes;

            http.METHODS = [
              'CHECKOUT',
              'CONNECT',
              'COPY',
              'DELETE',
              'GET',
              'HEAD',
              'LOCK',
              'M-SEARCH',
              'MERGE',
              'MKACTIVITY',
              'MKCOL',
              'MOVE',
              'NOTIFY',
              'OPTIONS',
              'PATCH',
              'POST',
              'PROPFIND',
              'PROPPATCH',
              'PURGE',
              'PUT',
              'REPORT',
              'SEARCH',
              'SUBSCRIBE',
              'TRACE',
              'UNLOCK',
              'UNSUBSCRIBE',
            ];
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 105 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (Buffer, global, process) {
            var capability = __webpack_require__(47);
            var inherits = __webpack_require__(0);
            var response = __webpack_require__(48);
            var stream = __webpack_require__(10);
            var toArrayBuffer = __webpack_require__(106);

            var IncomingMessage = response.IncomingMessage;
            var rStates = response.readyStates;

            function decideMode(preferBinary, useFetch) {
              if (capability.fetch && useFetch) {
                return 'fetch';
              } else if (capability.mozchunkedarraybuffer) {
                return 'moz-chunked-arraybuffer';
              } else if (capability.msstream) {
                return 'ms-stream';
              } else if (capability.arraybuffer && preferBinary) {
                return 'arraybuffer';
              } else if (capability.vbArray && preferBinary) {
                return 'text:vbarray';
              } else {
                return 'text';
              }
            }

            var ClientRequest = (module.exports = function (opts) {
              var self = this;
              stream.Writable.call(self);

              self._opts = opts;
              self._body = [];
              self._headers = {};
              if (opts.auth)
                self.setHeader(
                  'Authorization',
                  'Basic ' + new Buffer(opts.auth).toString('base64')
                );
              Object.keys(opts.headers).forEach(function (name) {
                self.setHeader(name, opts.headers[name]);
              });

              var preferBinary;
              var useFetch = true;
              if (
                opts.mode === 'disable-fetch' ||
                ('requestTimeout' in opts && !capability.abortController)
              ) {
                // If the use of XHR should be preferred. Not typically needed.
                useFetch = false;
                preferBinary = true;
              } else if (opts.mode === 'prefer-streaming') {
                // If streaming is a high priority but binary compatibility and
                // the accuracy of the 'content-type' header aren't
                preferBinary = false;
              } else if (opts.mode === 'allow-wrong-content-type') {
                // If streaming is more important than preserving the 'content-type' header
                preferBinary = !capability.overrideMimeType;
              } else if (
                !opts.mode ||
                opts.mode === 'default' ||
                opts.mode === 'prefer-fast'
              ) {
                // Use binary if text streaming may corrupt data or the content-type header, or for speed
                preferBinary = true;
              } else {
                throw new Error('Invalid value for opts.mode');
              }
              self._mode = decideMode(preferBinary, useFetch);
              self._fetchTimer = null;

              self.on('finish', function () {
                self._onFinish();
              });
            });

            inherits(ClientRequest, stream.Writable);

            ClientRequest.prototype.setHeader = function (name, value) {
              var self = this;
              var lowerName = name.toLowerCase();
              // This check is not necessary, but it prevents warnings from browsers about setting unsafe
              // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but
              // http-browserify did it, so I will too.
              if (unsafeHeaders.indexOf(lowerName) !== -1) return;

              self._headers[lowerName] = {
                name: name,
                value: value,
              };
            };

            ClientRequest.prototype.getHeader = function (name) {
              var header = this._headers[name.toLowerCase()];
              if (header) return header.value;
              return null;
            };

            ClientRequest.prototype.removeHeader = function (name) {
              var self = this;
              delete self._headers[name.toLowerCase()];
            };

            ClientRequest.prototype._onFinish = function () {
              var self = this;

              if (self._destroyed) return;
              var opts = self._opts;

              var headersObj = self._headers;
              var body = null;
              if (opts.method !== 'GET' && opts.method !== 'HEAD') {
                if (capability.arraybuffer) {
                  body = toArrayBuffer(Buffer.concat(self._body));
                } else if (capability.blobConstructor) {
                  body = new global.Blob(
                    self._body.map(function (buffer) {
                      return toArrayBuffer(buffer);
                    }),
                    {
                      type: (headersObj['content-type'] || {}).value || '',
                    }
                  );
                } else {
                  // get utf8 string
                  body = Buffer.concat(self._body).toString();
                }
              }

              // create flattened list of headers
              var headersList = [];
              Object.keys(headersObj).forEach(function (keyName) {
                var name = headersObj[keyName].name;
                var value = headersObj[keyName].value;
                if (Array.isArray(value)) {
                  value.forEach(function (v) {
                    headersList.push([name, v]);
                  });
                } else {
                  headersList.push([name, value]);
                }
              });

              if (self._mode === 'fetch') {
                var signal = null;
                var fetchTimer = null;
                if (capability.abortController) {
                  var controller = new AbortController();
                  signal = controller.signal;
                  self._fetchAbortController = controller;

                  if ('requestTimeout' in opts && opts.requestTimeout !== 0) {
                    self._fetchTimer = global.setTimeout(function () {
                      self.emit('requestTimeout');
                      if (self._fetchAbortController)
                        self._fetchAbortController.abort();
                    }, opts.requestTimeout);
                  }
                }

                global
                  .fetch(self._opts.url, {
                    method: self._opts.method,
                    headers: headersList,
                    body: body || undefined,
                    mode: 'cors',
                    credentials: opts.withCredentials
                      ? 'include'
                      : 'same-origin',
                    signal: signal,
                  })
                  .then(
                    function (response) {
                      self._fetchResponse = response;
                      self._connect();
                    },
                    function (reason) {
                      global.clearTimeout(self._fetchTimer);
                      if (!self._destroyed) self.emit('error', reason);
                    }
                  );
              } else {
                var xhr = (self._xhr = new global.XMLHttpRequest());
                try {
                  xhr.open(self._opts.method, self._opts.url, true);
                } catch (err) {
                  process.nextTick(function () {
                    self.emit('error', err);
                  });
                  return;
                }

                // Can't set responseType on really old browsers
                if ('responseType' in xhr)
                  xhr.responseType = self._mode.split(':')[0];

                if ('withCredentials' in xhr)
                  xhr.withCredentials = !!opts.withCredentials;

                if (self._mode === 'text' && 'overrideMimeType' in xhr)
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');

                if ('requestTimeout' in opts) {
                  xhr.timeout = opts.requestTimeout;
                  xhr.ontimeout = function () {
                    self.emit('requestTimeout');
                  };
                }

                headersList.forEach(function (header) {
                  xhr.setRequestHeader(header[0], header[1]);
                });

                self._response = null;
                xhr.onreadystatechange = function () {
                  switch (xhr.readyState) {
                    case rStates.LOADING:
                    case rStates.DONE:
                      self._onXHRProgress();
                      break;
                  }
                };
                // Necessary for streaming in Firefox, since xhr.response is ONLY defined
                // in onprogress, not in onreadystatechange with xhr.readyState = 3
                if (self._mode === 'moz-chunked-arraybuffer') {
                  xhr.onprogress = function () {
                    self._onXHRProgress();
                  };
                }

                xhr.onerror = function () {
                  if (self._destroyed) return;
                  self.emit('error', new Error('XHR error'));
                };

                try {
                  xhr.send(body);
                } catch (err) {
                  process.nextTick(function () {
                    self.emit('error', err);
                  });
                  return;
                }
              }
            };

            /**
             * Checks if xhr.status is readable and non-zero, indicating no error.
             * Even though the spec says it should be available in readyState 3,
             * accessing it throws an exception in IE8
             */
            function statusValid(xhr) {
              try {
                var status = xhr.status;
                return status !== null && status !== 0;
              } catch (e) {
                return false;
              }
            }

            ClientRequest.prototype._onXHRProgress = function () {
              var self = this;

              if (!statusValid(self._xhr) || self._destroyed) return;

              if (!self._response) self._connect();

              self._response._onXHRProgress();
            };

            ClientRequest.prototype._connect = function () {
              var self = this;

              if (self._destroyed) return;

              self._response = new IncomingMessage(
                self._xhr,
                self._fetchResponse,
                self._mode,
                self._fetchTimer
              );
              self._response.on('error', function (err) {
                self.emit('error', err);
              });

              self.emit('response', self._response);
            };

            ClientRequest.prototype._write = function (chunk, encoding, cb) {
              var self = this;

              self._body.push(chunk);
              cb();
            };

            ClientRequest.prototype.abort = ClientRequest.prototype.destroy =
              function () {
                var self = this;
                self._destroyed = true;
                global.clearTimeout(self._fetchTimer);
                if (self._response) self._response._destroyed = true;
                if (self._xhr) self._xhr.abort();
                else if (self._fetchAbortController)
                  self._fetchAbortController.abort();
              };

            ClientRequest.prototype.end = function (data, encoding, cb) {
              var self = this;
              if (typeof data === 'function') {
                cb = data;
                data = undefined;
              }

              stream.Writable.prototype.end.call(self, data, encoding, cb);
            };

            ClientRequest.prototype.flushHeaders = function () {};
            ClientRequest.prototype.setTimeout = function () {};
            ClientRequest.prototype.setNoDelay = function () {};
            ClientRequest.prototype.setSocketKeepAlive = function () {};

            // Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method
            var unsafeHeaders = [
              'accept-charset',
              'accept-encoding',
              'access-control-request-headers',
              'access-control-request-method',
              'connection',
              'content-length',
              'cookie',
              'cookie2',
              'date',
              'dnt',
              'expect',
              'host',
              'keep-alive',
              'origin',
              'referer',
              'te',
              'trailer',
              'transfer-encoding',
              'upgrade',
              'via',
            ];
            /* WEBPACK VAR INJECTION */
          }).call(
            exports,
            __webpack_require__(4).Buffer,
            __webpack_require__(2),
            __webpack_require__(3)
          );

          /***/
        },
        /* 106 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var Buffer = __webpack_require__(4).Buffer;

          module.exports = function (buf) {
            // If the buffer is backed by a Uint8Array, a faster version will work
            if (buf instanceof Uint8Array) {
              // If the buffer isn't a subarray, return the underlying ArrayBuffer
              if (
                buf.byteOffset === 0 &&
                buf.byteLength === buf.buffer.byteLength
              ) {
                return buf.buffer;
              } else if (typeof buf.buffer.slice === 'function') {
                // Otherwise we need to get a proper copy
                return buf.buffer.slice(
                  buf.byteOffset,
                  buf.byteOffset + buf.byteLength
                );
              }
            }

            if (Buffer.isBuffer(buf)) {
              // This is the slow version that will work with any Buffer
              // implementation (even in old browsers)
              var arrayCopy = new Uint8Array(buf.length);
              var len = buf.length;
              for (var i = 0; i < len; i++) {
                arrayCopy[i] = buf[i];
              }
              return arrayCopy.buffer;
            } else {
              throw new Error('Argument must be a Buffer');
            }
          };

          /***/
        },
        /* 107 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = extend;

          var hasOwnProperty = Object.prototype.hasOwnProperty;

          function extend() {
            var target = {};

            for (var i = 0; i < arguments.length; i++) {
              var source = arguments[i];

              for (var key in source) {
                if (hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }

            return target;
          }

          /***/
        },
        /* 108 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          module.exports = {
            100: 'Continue',
            101: 'Switching Protocols',
            102: 'Processing',
            200: 'OK',
            201: 'Created',
            202: 'Accepted',
            203: 'Non-Authoritative Information',
            204: 'No Content',
            205: 'Reset Content',
            206: 'Partial Content',
            207: 'Multi-Status',
            208: 'Already Reported',
            226: 'IM Used',
            300: 'Multiple Choices',
            301: 'Moved Permanently',
            302: 'Found',
            303: 'See Other',
            304: 'Not Modified',
            305: 'Use Proxy',
            307: 'Temporary Redirect',
            308: 'Permanent Redirect',
            400: 'Bad Request',
            401: 'Unauthorized',
            402: 'Payment Required',
            403: 'Forbidden',
            404: 'Not Found',
            405: 'Method Not Allowed',
            406: 'Not Acceptable',
            407: 'Proxy Authentication Required',
            408: 'Request Timeout',
            409: 'Conflict',
            410: 'Gone',
            411: 'Length Required',
            412: 'Precondition Failed',
            413: 'Payload Too Large',
            414: 'URI Too Long',
            415: 'Unsupported Media Type',
            416: 'Range Not Satisfiable',
            417: 'Expectation Failed',
            418: "I'm a teapot",
            421: 'Misdirected Request',
            422: 'Unprocessable Entity',
            423: 'Locked',
            424: 'Failed Dependency',
            425: 'Unordered Collection',
            426: 'Upgrade Required',
            428: 'Precondition Required',
            429: 'Too Many Requests',
            431: 'Request Header Fields Too Large',
            451: 'Unavailable For Legal Reasons',
            500: 'Internal Server Error',
            501: 'Not Implemented',
            502: 'Bad Gateway',
            503: 'Service Unavailable',
            504: 'Gateway Timeout',
            505: 'HTTP Version Not Supported',
            506: 'Variant Also Negotiates',
            507: 'Insufficient Storage',
            508: 'Loop Detected',
            509: 'Bandwidth Limit Exceeded',
            510: 'Not Extended',
            511: 'Network Authentication Required',
          };

          /***/
        },
        /* 109 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /* global module, require */

          module.exports = (function () {
            'use strict';

            // Get a promise object. This may be native, or it may be polyfilled

            var ES6Promise = __webpack_require__(110);

            /**
             * thatLooksLikeAPromiseToMe()
             *
             * Duck-types a promise.
             *
             * @param {object} o
             * @return {bool} True if this resembles a promise
             */
            function thatLooksLikeAPromiseToMe(o) {
              return (
                o &&
                typeof o.then === 'function' &&
                typeof o.catch === 'function'
              );
            }

            /**
             * promisify()
             *
             * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) -- into
             * an ES6-compatible Promise. Promisify provides a default callback of the form (error, result)
             * and rejects when `error` is truthy. You can also supply settings object as the second argument.
             *
             * @param {function} original - The function to promisify
             * @param {object} settings - Settings object
             * @param {object} settings.thisArg - A `this` context to use. If not set, assume `settings` _is_ `thisArg`
             * @param {bool} settings.multiArgs - Should multiple arguments be returned as an array?
             * @return {function} A promisified version of `original`
             */
            return function promisify(original, settings) {
              return function () {
                for (
                  var _len = arguments.length, args = Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  args[_key] = arguments[_key];
                }

                var returnMultipleArguments = settings && settings.multiArgs;

                var target = void 0;
                if (settings && settings.thisArg) {
                  target = settings.thisArg;
                } else if (settings) {
                  target = settings;
                }

                // Return the promisified function
                return new ES6Promise(function (resolve, reject) {
                  // Append the callback bound to the context
                  args.push(function callback(err) {
                    if (err) {
                      return reject(err);
                    }

                    for (
                      var _len2 = arguments.length,
                        values = Array(_len2 > 1 ? _len2 - 1 : 0),
                        _key2 = 1;
                      _key2 < _len2;
                      _key2++
                    ) {
                      values[_key2 - 1] = arguments[_key2];
                    }

                    if (false === !!returnMultipleArguments) {
                      return resolve(values[0]);
                    }

                    resolve(values);
                  });

                  // Call the function
                  var response = original.apply(target, args);

                  // If it looks like original already returns a promise,
                  // then just resolve with that promise. Hopefully, the callback function we added will just be ignored.
                  if (thatLooksLikeAPromiseToMe(response)) {
                    resolve(response);
                  }
                });
              };
            };
          })();

          /***/
        },
        /* 110 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (global) {
            /* global self, window, module, global, require */

            module.exports = (function () {
              'use strict';

              var globalObject = void 0;

              function isFunction(x) {
                return typeof x === 'function';
              }

              // Seek the global object
              if (global !== undefined) {
                globalObject = global;
              } else if (window !== undefined && window.document) {
                globalObject = window;
              } else {
                globalObject = self;
              }

              // Test for any native promise implementation, and if that
              // implementation appears to conform to the specificaton.
              // This code mostly nicked from the es6-promise module polyfill
              // and then fooled with.
              var hasPromiseSupport = (function () {
                // No promise object at all, and it's a non-starter
                if (!globalObject.hasOwnProperty('Promise')) {
                  return false;
                }

                // There is a Promise object. Does it conform to the spec?
                var P = globalObject.Promise;

                // Some of these methods are missing from
                // Firefox/Chrome experimental implementations
                if (
                  !P.hasOwnProperty('resolve') ||
                  !P.hasOwnProperty('reject')
                ) {
                  return false;
                }

                if (!P.hasOwnProperty('all') || !P.hasOwnProperty('race')) {
                  return false;
                }

                // Older version of the spec had a resolver object
                // as the arg rather than a function
                return (function () {
                  var resolve = void 0;

                  var p = new globalObject.Promise(function (r) {
                    resolve = r;
                  });

                  if (p) {
                    return isFunction(resolve);
                  }

                  return false;
                })();
              })();

              // Export the native Promise implementation if it
              // looks like it matches the spec
              if (hasPromiseSupport) {
                return globalObject.Promise;
              }

              //  Otherwise, return the es6-promise polyfill by @jaffathecake.
              return __webpack_require__(111).Promise;
            })();
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(2));

          /***/
        },
        /* 111 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (process, global) {
            var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;

            var _typeof =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            /*!
             * @overview es6-promise - a tiny implementation of Promises/A+.
             * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
             * @license   Licensed under MIT license
             *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
             * @version   v4.2.8+1e68dce6
             */

            (function (global, factory) {
              (false ? 'undefined' : _typeof(exports)) === 'object' &&
              typeof module !== 'undefined'
                ? (module.exports = factory())
                : true
                ? !((__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
                  (__WEBPACK_AMD_DEFINE_RESULT__ =
                    typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                      ? __WEBPACK_AMD_DEFINE_FACTORY__.call(
                          exports,
                          __webpack_require__,
                          exports,
                          module
                        )
                      : __WEBPACK_AMD_DEFINE_FACTORY__),
                  __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                    (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
                : (global.ES6Promise = factory());
            })(undefined, function () {
              'use strict';

              function objectOrFunction(x) {
                var type = typeof x === 'undefined' ? 'undefined' : _typeof(x);
                return x !== null && (type === 'object' || type === 'function');
              }

              function isFunction(x) {
                return typeof x === 'function';
              }

              var _isArray = void 0;
              if (Array.isArray) {
                _isArray = Array.isArray;
              } else {
                _isArray = function _isArray(x) {
                  return Object.prototype.toString.call(x) === '[object Array]';
                };
              }

              var isArray = _isArray;

              var len = 0;
              var vertxNext = void 0;
              var customSchedulerFn = void 0;

              var asap = function asap(callback, arg) {
                queue[len] = callback;
                queue[len + 1] = arg;
                len += 2;
                if (len === 2) {
                  // If len is 2, that means that we need to schedule an async flush.
                  // If additional callbacks are queued before the queue is flushed, they
                  // will be processed by this flush that we are scheduling.
                  if (customSchedulerFn) {
                    customSchedulerFn(flush);
                  } else {
                    scheduleFlush();
                  }
                }
              };

              function setScheduler(scheduleFn) {
                customSchedulerFn = scheduleFn;
              }

              function setAsap(asapFn) {
                asap = asapFn;
              }

              var browserWindow =
                typeof window !== 'undefined' ? window : undefined;
              var browserGlobal = browserWindow || {};
              var BrowserMutationObserver =
                browserGlobal.MutationObserver ||
                browserGlobal.WebKitMutationObserver;
              var isNode =
                typeof self === 'undefined' &&
                typeof process !== 'undefined' &&
                {}.toString.call(process) === '[object process]';

              // test for web worker but not in IE10
              var isWorker =
                typeof Uint8ClampedArray !== 'undefined' &&
                typeof importScripts !== 'undefined' &&
                typeof MessageChannel !== 'undefined';

              // node
              function useNextTick() {
                // node version 0.10.x displays a deprecation warning when nextTick is used recursively
                // see https://github.com/cujojs/when/issues/410 for details
                return function () {
                  return process.nextTick(flush);
                };
              }

              // vertx
              function useVertxTimer() {
                if (typeof vertxNext !== 'undefined') {
                  return function () {
                    vertxNext(flush);
                  };
                }

                return useSetTimeout();
              }

              function useMutationObserver() {
                var iterations = 0;
                var observer = new BrowserMutationObserver(flush);
                var node = document.createTextNode('');
                observer.observe(node, { characterData: true });

                return function () {
                  node.data = iterations = ++iterations % 2;
                };
              }

              // web worker
              function useMessageChannel() {
                var channel = new MessageChannel();
                channel.port1.onmessage = flush;
                return function () {
                  return channel.port2.postMessage(0);
                };
              }

              function useSetTimeout() {
                // Store setTimeout reference so es6-promise will be unaffected by
                // other code modifying setTimeout (like sinon.useFakeTimers())
                var globalSetTimeout = setTimeout;
                return function () {
                  return globalSetTimeout(flush, 1);
                };
              }

              var queue = new Array(1000);
              function flush() {
                for (var i = 0; i < len; i += 2) {
                  var callback = queue[i];
                  var arg = queue[i + 1];

                  callback(arg);

                  queue[i] = undefined;
                  queue[i + 1] = undefined;
                }

                len = 0;
              }

              function attemptVertx() {
                try {
                  var vertx = Function('return this')().require('vertx');
                  vertxNext = vertx.runOnLoop || vertx.runOnContext;
                  return useVertxTimer();
                } catch (e) {
                  return useSetTimeout();
                }
              }

              var scheduleFlush = void 0;
              // Decide what async method to use to triggering processing of queued callbacks:
              if (isNode) {
                scheduleFlush = useNextTick();
              } else if (BrowserMutationObserver) {
                scheduleFlush = useMutationObserver();
              } else if (isWorker) {
                scheduleFlush = useMessageChannel();
              } else if (
                browserWindow === undefined &&
                'function' === 'function'
              ) {
                scheduleFlush = attemptVertx();
              } else {
                scheduleFlush = useSetTimeout();
              }

              function then(onFulfillment, onRejection) {
                var parent = this;

                var child = new this.constructor(noop);

                if (child[PROMISE_ID] === undefined) {
                  makePromise(child);
                }

                var _state = parent._state;

                if (_state) {
                  var callback = arguments[_state - 1];
                  asap(function () {
                    return invokeCallback(
                      _state,
                      child,
                      callback,
                      parent._result
                    );
                  });
                } else {
                  subscribe(parent, child, onFulfillment, onRejection);
                }

                return child;
              }

              /**
    `Promise.resolve` returns a promise that will become resolved with the
    passed `value`. It is shorthand for the following:
  
    ```javascript
    let promise = new Promise(function(resolve, reject){
      resolve(1);
    });
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = Promise.resolve(1);
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    @method resolve
    @static
    @param {Any} value value that the returned promise will be resolved with
    Useful for tooling.
    @return {Promise} a promise that will become fulfilled with the given
    `value`
  */
              function resolve$1(object) {
                /*jshint validthis:true */
                var Constructor = this;

                if (
                  object &&
                  (typeof object === 'undefined'
                    ? 'undefined'
                    : _typeof(object)) === 'object' &&
                  object.constructor === Constructor
                ) {
                  return object;
                }

                var promise = new Constructor(noop);
                resolve(promise, object);
                return promise;
              }

              var PROMISE_ID = Math.random().toString(36).substring(2);

              function noop() {}

              var PENDING = void 0;
              var FULFILLED = 1;
              var REJECTED = 2;

              function selfFulfillment() {
                return new TypeError(
                  'You cannot resolve a promise with itself'
                );
              }

              function cannotReturnOwn() {
                return new TypeError(
                  'A promises callback cannot return that same promise.'
                );
              }

              function tryThen(
                then$$1,
                value,
                fulfillmentHandler,
                rejectionHandler
              ) {
                try {
                  then$$1.call(value, fulfillmentHandler, rejectionHandler);
                } catch (e) {
                  return e;
                }
              }

              function handleForeignThenable(promise, thenable, then$$1) {
                asap(function (promise) {
                  var sealed = false;
                  var error = tryThen(
                    then$$1,
                    thenable,
                    function (value) {
                      if (sealed) {
                        return;
                      }
                      sealed = true;
                      if (thenable !== value) {
                        resolve(promise, value);
                      } else {
                        fulfill(promise, value);
                      }
                    },
                    function (reason) {
                      if (sealed) {
                        return;
                      }
                      sealed = true;

                      reject(promise, reason);
                    },
                    'Settle: ' + (promise._label || ' unknown promise')
                  );

                  if (!sealed && error) {
                    sealed = true;
                    reject(promise, error);
                  }
                }, promise);
              }

              function handleOwnThenable(promise, thenable) {
                if (thenable._state === FULFILLED) {
                  fulfill(promise, thenable._result);
                } else if (thenable._state === REJECTED) {
                  reject(promise, thenable._result);
                } else {
                  subscribe(
                    thenable,
                    undefined,
                    function (value) {
                      return resolve(promise, value);
                    },
                    function (reason) {
                      return reject(promise, reason);
                    }
                  );
                }
              }

              function handleMaybeThenable(promise, maybeThenable, then$$1) {
                if (
                  maybeThenable.constructor === promise.constructor &&
                  then$$1 === then &&
                  maybeThenable.constructor.resolve === resolve$1
                ) {
                  handleOwnThenable(promise, maybeThenable);
                } else {
                  if (then$$1 === undefined) {
                    fulfill(promise, maybeThenable);
                  } else if (isFunction(then$$1)) {
                    handleForeignThenable(promise, maybeThenable, then$$1);
                  } else {
                    fulfill(promise, maybeThenable);
                  }
                }
              }

              function resolve(promise, value) {
                if (promise === value) {
                  reject(promise, selfFulfillment());
                } else if (objectOrFunction(value)) {
                  var then$$1 = void 0;
                  try {
                    then$$1 = value.then;
                  } catch (error) {
                    reject(promise, error);
                    return;
                  }
                  handleMaybeThenable(promise, value, then$$1);
                } else {
                  fulfill(promise, value);
                }
              }

              function publishRejection(promise) {
                if (promise._onerror) {
                  promise._onerror(promise._result);
                }

                publish(promise);
              }

              function fulfill(promise, value) {
                if (promise._state !== PENDING) {
                  return;
                }

                promise._result = value;
                promise._state = FULFILLED;

                if (promise._subscribers.length !== 0) {
                  asap(publish, promise);
                }
              }

              function reject(promise, reason) {
                if (promise._state !== PENDING) {
                  return;
                }
                promise._state = REJECTED;
                promise._result = reason;

                asap(publishRejection, promise);
              }

              function subscribe(parent, child, onFulfillment, onRejection) {
                var _subscribers = parent._subscribers;
                var length = _subscribers.length;

                parent._onerror = null;

                _subscribers[length] = child;
                _subscribers[length + FULFILLED] = onFulfillment;
                _subscribers[length + REJECTED] = onRejection;

                if (length === 0 && parent._state) {
                  asap(publish, parent);
                }
              }

              function publish(promise) {
                var subscribers = promise._subscribers;
                var settled = promise._state;

                if (subscribers.length === 0) {
                  return;
                }

                var child = void 0,
                  callback = void 0,
                  detail = promise._result;

                for (var i = 0; i < subscribers.length; i += 3) {
                  child = subscribers[i];
                  callback = subscribers[i + settled];

                  if (child) {
                    invokeCallback(settled, child, callback, detail);
                  } else {
                    callback(detail);
                  }
                }

                promise._subscribers.length = 0;
              }

              function invokeCallback(settled, promise, callback, detail) {
                var hasCallback = isFunction(callback),
                  value = void 0,
                  error = void 0,
                  succeeded = true;

                if (hasCallback) {
                  try {
                    value = callback(detail);
                  } catch (e) {
                    succeeded = false;
                    error = e;
                  }

                  if (promise === value) {
                    reject(promise, cannotReturnOwn());
                    return;
                  }
                } else {
                  value = detail;
                }

                if (promise._state !== PENDING) {
                  // noop
                } else if (hasCallback && succeeded) {
                  resolve(promise, value);
                } else if (succeeded === false) {
                  reject(promise, error);
                } else if (settled === FULFILLED) {
                  fulfill(promise, value);
                } else if (settled === REJECTED) {
                  reject(promise, value);
                }
              }

              function initializePromise(promise, resolver) {
                try {
                  resolver(
                    function resolvePromise(value) {
                      resolve(promise, value);
                    },
                    function rejectPromise(reason) {
                      reject(promise, reason);
                    }
                  );
                } catch (e) {
                  reject(promise, e);
                }
              }

              var id = 0;
              function nextId() {
                return id++;
              }

              function makePromise(promise) {
                promise[PROMISE_ID] = id++;
                promise._state = undefined;
                promise._result = undefined;
                promise._subscribers = [];
              }

              function validationError() {
                return new Error('Array Methods must be provided an Array');
              }

              var Enumerator = (function () {
                function Enumerator(Constructor, input) {
                  this._instanceConstructor = Constructor;
                  this.promise = new Constructor(noop);

                  if (!this.promise[PROMISE_ID]) {
                    makePromise(this.promise);
                  }

                  if (isArray(input)) {
                    this.length = input.length;
                    this._remaining = input.length;

                    this._result = new Array(this.length);

                    if (this.length === 0) {
                      fulfill(this.promise, this._result);
                    } else {
                      this.length = this.length || 0;
                      this._enumerate(input);
                      if (this._remaining === 0) {
                        fulfill(this.promise, this._result);
                      }
                    }
                  } else {
                    reject(this.promise, validationError());
                  }
                }

                Enumerator.prototype._enumerate = function _enumerate(input) {
                  for (
                    var i = 0;
                    this._state === PENDING && i < input.length;
                    i++
                  ) {
                    this._eachEntry(input[i], i);
                  }
                };

                Enumerator.prototype._eachEntry = function _eachEntry(
                  entry,
                  i
                ) {
                  var c = this._instanceConstructor;
                  var resolve$$1 = c.resolve;

                  if (resolve$$1 === resolve$1) {
                    var _then = void 0;
                    var error = void 0;
                    var didError = false;
                    try {
                      _then = entry.then;
                    } catch (e) {
                      didError = true;
                      error = e;
                    }

                    if (_then === then && entry._state !== PENDING) {
                      this._settledAt(entry._state, i, entry._result);
                    } else if (typeof _then !== 'function') {
                      this._remaining--;
                      this._result[i] = entry;
                    } else if (c === Promise$1) {
                      var promise = new c(noop);
                      if (didError) {
                        reject(promise, error);
                      } else {
                        handleMaybeThenable(promise, entry, _then);
                      }
                      this._willSettleAt(promise, i);
                    } else {
                      this._willSettleAt(
                        new c(function (resolve$$1) {
                          return resolve$$1(entry);
                        }),
                        i
                      );
                    }
                  } else {
                    this._willSettleAt(resolve$$1(entry), i);
                  }
                };

                Enumerator.prototype._settledAt = function _settledAt(
                  state,
                  i,
                  value
                ) {
                  var promise = this.promise;

                  if (promise._state === PENDING) {
                    this._remaining--;

                    if (state === REJECTED) {
                      reject(promise, value);
                    } else {
                      this._result[i] = value;
                    }
                  }

                  if (this._remaining === 0) {
                    fulfill(promise, this._result);
                  }
                };

                Enumerator.prototype._willSettleAt = function _willSettleAt(
                  promise,
                  i
                ) {
                  var enumerator = this;

                  subscribe(
                    promise,
                    undefined,
                    function (value) {
                      return enumerator._settledAt(FULFILLED, i, value);
                    },
                    function (reason) {
                      return enumerator._settledAt(REJECTED, i, reason);
                    }
                  );
                };

                return Enumerator;
              })();

              /**
    `Promise.all` accepts an array of promises, and returns a new promise which
    is fulfilled with an array of fulfillment values for the passed promises, or
    rejected with the reason of the first passed promise to be rejected. It casts all
    elements of the passed iterable to promises as it runs this algorithm.
  
    Example:
  
    ```javascript
    let promise1 = resolve(1);
    let promise2 = resolve(2);
    let promise3 = resolve(3);
    let promises = [ promise1, promise2, promise3 ];
  
    Promise.all(promises).then(function(array){
      // The array here would be [ 1, 2, 3 ];
    });
    ```
  
    If any of the `promises` given to `all` are rejected, the first promise
    that is rejected will be given as an argument to the returned promises's
    rejection handler. For example:
  
    Example:
  
    ```javascript
    let promise1 = resolve(1);
    let promise2 = reject(new Error("2"));
    let promise3 = reject(new Error("3"));
    let promises = [ promise1, promise2, promise3 ];
  
    Promise.all(promises).then(function(array){
      // Code here never runs because there are rejected promises!
    }, function(error) {
      // error.message === "2"
    });
    ```
  
    @method all
    @static
    @param {Array} entries array of promises
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled when all `promises` have been
    fulfilled, or rejected if any of them become rejected.
    @static
  */
              function all(entries) {
                return new Enumerator(this, entries).promise;
              }

              /**
    `Promise.race` returns a new promise which is settled in the same way as the
    first passed promise to settle.
  
    Example:
  
    ```javascript
    let promise1 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 2');
      }, 100);
    });
  
    Promise.race([promise1, promise2]).then(function(result){
      // result === 'promise 2' because it was resolved before promise1
      // was resolved.
    });
    ```
  
    `Promise.race` is deterministic in that only the state of the first
    settled promise matters. For example, even if other promises given to the
    `promises` array argument are resolved, but the first settled promise has
    become rejected before the other promises became fulfilled, the returned
    promise will become rejected:
  
    ```javascript
    let promise1 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new Promise(function(resolve, reject){
      setTimeout(function(){
        reject(new Error('promise 2'));
      }, 100);
    });
  
    Promise.race([promise1, promise2]).then(function(result){
      // Code here never runs
    }, function(reason){
      // reason.message === 'promise 2' because promise 2 became rejected before
      // promise 1 became fulfilled
    });
    ```
  
    An example real-world use case is implementing timeouts:
  
    ```javascript
    Promise.race([ajax('foo.json'), timeout(5000)])
    ```
  
    @method race
    @static
    @param {Array} promises array of promises to observe
    Useful for tooling.
    @return {Promise} a promise which settles in the same way as the first passed
    promise to settle.
  */
              function race(entries) {
                /*jshint validthis:true */
                var Constructor = this;

                if (!isArray(entries)) {
                  return new Constructor(function (_, reject) {
                    return reject(
                      new TypeError('You must pass an array to race.')
                    );
                  });
                } else {
                  return new Constructor(function (resolve, reject) {
                    var length = entries.length;
                    for (var i = 0; i < length; i++) {
                      Constructor.resolve(entries[i]).then(resolve, reject);
                    }
                  });
                }
              }

              /**
    `Promise.reject` returns a promise rejected with the passed `reason`.
    It is shorthand for the following:
  
    ```javascript
    let promise = new Promise(function(resolve, reject){
      reject(new Error('WHOOPS'));
    });
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = Promise.reject(new Error('WHOOPS'));
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    @method reject
    @static
    @param {Any} reason value that the returned promise will be rejected with.
    Useful for tooling.
    @return {Promise} a promise rejected with the given `reason`.
  */
              function reject$1(reason) {
                /*jshint validthis:true */
                var Constructor = this;
                var promise = new Constructor(noop);
                reject(promise, reason);
                return promise;
              }

              function needsResolver() {
                throw new TypeError(
                  'You must pass a resolver function as the first argument to the promise constructor'
                );
              }

              function needsNew() {
                throw new TypeError(
                  "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."
                );
              }

              /**
    Promise objects represent the eventual result of an asynchronous operation. The
    primary way of interacting with a promise is through its `then` method, which
    registers callbacks to receive either a promise's eventual value or the reason
    why the promise cannot be fulfilled.
  
    Terminology
    -----------
  
    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
    - `thenable` is an object or function that defines a `then` method.
    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
    - `exception` is a value that is thrown using the throw statement.
    - `reason` is a value that indicates why a promise was rejected.
    - `settled` the final resting state of a promise, fulfilled or rejected.
  
    A promise can be in one of three states: pending, fulfilled, or rejected.
  
    Promises that are fulfilled have a fulfillment value and are in the fulfilled
    state.  Promises that are rejected have a rejection reason and are in the
    rejected state.  A fulfillment value is never a thenable.
  
    Promises can also be said to *resolve* a value.  If this value is also a
    promise, then the original promise's settled state will match the value's
    settled state.  So a promise that *resolves* a promise that rejects will
    itself reject, and a promise that *resolves* a promise that fulfills will
    itself fulfill.
  
  
    Basic Usage:
    ------------
  
    ```js
    let promise = new Promise(function(resolve, reject) {
      // on success
      resolve(value);
  
      // on failure
      reject(reason);
    });
  
    promise.then(function(value) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Advanced Usage:
    ---------------
  
    Promises shine when abstracting away asynchronous interactions such as
    `XMLHttpRequest`s.
  
    ```js
    function getJSON(url) {
      return new Promise(function(resolve, reject){
        let xhr = new XMLHttpRequest();
  
        xhr.open('GET', url);
        xhr.onreadystatechange = handler;
        xhr.responseType = 'json';
        xhr.setRequestHeader('Accept', 'application/json');
        xhr.send();
  
        function handler() {
          if (this.readyState === this.DONE) {
            if (this.status === 200) {
              resolve(this.response);
            } else {
              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
            }
          }
        };
      });
    }
  
    getJSON('/posts.json').then(function(json) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Unlike callbacks, promises are great composable primitives.
  
    ```js
    Promise.all([
      getJSON('/posts'),
      getJSON('/comments')
    ]).then(function(values){
      values[0] // => postsJSON
      values[1] // => commentsJSON
  
      return values;
    });
    ```
  
    @class Promise
    @param {Function} resolver
    Useful for tooling.
    @constructor
  */

              var Promise$1 = (function () {
                function Promise(resolver) {
                  this[PROMISE_ID] = nextId();
                  this._result = this._state = undefined;
                  this._subscribers = [];

                  if (noop !== resolver) {
                    typeof resolver !== 'function' && needsResolver();
                    this instanceof Promise
                      ? initializePromise(this, resolver)
                      : needsNew();
                  }
                }

                /**
    The primary way of interacting with a promise is through its `then` method,
    which registers callbacks to receive either a promise's eventual value or the
    reason why the promise cannot be fulfilled.
     ```js
    findUser().then(function(user){
      // user is available
    }, function(reason){
      // user is unavailable, and you are given the reason why
    });
    ```
     Chaining
    --------
     The return value of `then` is itself a promise.  This second, 'downstream'
    promise is resolved with the return value of the first promise's fulfillment
    or rejection handler, or rejected if the handler throws an exception.
     ```js
    findUser().then(function (user) {
      return user.name;
    }, function (reason) {
      return 'default name';
    }).then(function (userName) {
      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
      // will be `'default name'`
    });
     findUser().then(function (user) {
      throw new Error('Found user, but still unhappy');
    }, function (reason) {
      throw new Error('`findUser` rejected and we're unhappy');
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
    });
    ```
    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
     ```js
    findUser().then(function (user) {
      throw new PedagogicalException('Upstream error');
    }).then(function (value) {
      // never reached
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // The `PedgagocialException` is propagated all the way down to here
    });
    ```
     Assimilation
    ------------
     Sometimes the value you want to propagate to a downstream promise can only be
    retrieved asynchronously. This can be achieved by returning a promise in the
    fulfillment or rejection handler. The downstream promise will then be pending
    until the returned promise is settled. This is called *assimilation*.
     ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // The user's comments are now available
    });
    ```
     If the assimliated promise rejects, then the downstream promise will also reject.
     ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // If `findCommentsByAuthor` fulfills, we'll have the value here
    }, function (reason) {
      // If `findCommentsByAuthor` rejects, we'll have the reason here
    });
    ```
     Simple Example
    --------------
     Synchronous Example
     ```javascript
    let result;
     try {
      result = findResult();
      // success
    } catch(reason) {
      // failure
    }
    ```
     Errback Example
     ```js
    findResult(function(result, err){
      if (err) {
        // failure
      } else {
        // success
      }
    });
    ```
     Promise Example;
     ```javascript
    findResult().then(function(result){
      // success
    }, function(reason){
      // failure
    });
    ```
     Advanced Example
    --------------
     Synchronous Example
     ```javascript
    let author, books;
     try {
      author = findAuthor();
      books  = findBooksByAuthor(author);
      // success
    } catch(reason) {
      // failure
    }
    ```
     Errback Example
     ```js
     function foundBooks(books) {
     }
     function failure(reason) {
     }
     findAuthor(function(author, err){
      if (err) {
        failure(err);
        // failure
      } else {
        try {
          findBoooksByAuthor(author, function(books, err) {
            if (err) {
              failure(err);
            } else {
              try {
                foundBooks(books);
              } catch(reason) {
                failure(reason);
              }
            }
          });
        } catch(error) {
          failure(err);
        }
        // success
      }
    });
    ```
     Promise Example;
     ```javascript
    findAuthor().
      then(findBooksByAuthor).
      then(function(books){
        // found books
    }).catch(function(reason){
      // something went wrong
    });
    ```
     @method then
    @param {Function} onFulfilled
    @param {Function} onRejected
    Useful for tooling.
    @return {Promise}
    */

                /**
    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
    as the catch block of a try/catch statement.
    ```js
    function findAuthor(){
    throw new Error('couldn't find that author');
    }
    // synchronous
    try {
    findAuthor();
    } catch(reason) {
    // something went wrong
    }
    // async with promises
    findAuthor().catch(function(reason){
    // something went wrong
    });
    ```
    @method catch
    @param {Function} onRejection
    Useful for tooling.
    @return {Promise}
    */

                Promise.prototype.catch = function _catch(onRejection) {
                  return this.then(null, onRejection);
                };

                /**
      `finally` will be invoked regardless of the promise's fate just as native
      try/catch/finally behaves
    
      Synchronous example:
    
      ```js
      findAuthor() {
        if (Math.random() > 0.5) {
          throw new Error();
        }
        return new Author();
      }
    
      try {
        return findAuthor(); // succeed or fail
      } catch(error) {
        return findOtherAuther();
      } finally {
        // always runs
        // doesn't affect the return value
      }
      ```
    
      Asynchronous example:
    
      ```js
      findAuthor().catch(function(reason){
        return findOtherAuther();
      }).finally(function(){
        // author was either found, or not
      });
      ```
    
      @method finally
      @param {Function} callback
      @return {Promise}
    */

                Promise.prototype.finally = function _finally(callback) {
                  var promise = this;
                  var constructor = promise.constructor;

                  if (isFunction(callback)) {
                    return promise.then(
                      function (value) {
                        return constructor
                          .resolve(callback())
                          .then(function () {
                            return value;
                          });
                      },
                      function (reason) {
                        return constructor
                          .resolve(callback())
                          .then(function () {
                            throw reason;
                          });
                      }
                    );
                  }

                  return promise.then(callback, callback);
                };

                return Promise;
              })();

              Promise$1.prototype.then = then;
              Promise$1.all = all;
              Promise$1.race = race;
              Promise$1.resolve = resolve$1;
              Promise$1.reject = reject$1;
              Promise$1._setScheduler = setScheduler;
              Promise$1._setAsap = setAsap;
              Promise$1._asap = asap;

              /*global self*/
              function polyfill() {
                var local = void 0;

                if (typeof global !== 'undefined') {
                  local = global;
                } else if (typeof self !== 'undefined') {
                  local = self;
                } else {
                  try {
                    local = Function('return this')();
                  } catch (e) {
                    throw new Error(
                      'polyfill failed because global object is unavailable in this environment'
                    );
                  }
                }

                var P = local.Promise;

                if (P) {
                  var promiseToString = null;
                  try {
                    promiseToString = Object.prototype.toString.call(
                      P.resolve()
                    );
                  } catch (e) {
                    // silently ignored
                  }

                  if (promiseToString === '[object Promise]' && !P.cast) {
                    return;
                  }
                }

                local.Promise = Promise$1;
              }

              // Strange compat..
              Promise$1.polyfill = polyfill;
              Promise$1.Promise = Promise$1;

              return Promise$1;
            });

            //# sourceMappingURL=es6-promise.map
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(3), __webpack_require__(2));

          /***/
        },
        /* 112 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';
          /* WEBPACK VAR INJECTION */ (function (process) {
            var _typeof2 =
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
                ? function (obj) {
                    return typeof obj;
                  }
                : function (obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : typeof obj;
                  };

            function _typeof(obj) {
              if (
                typeof Symbol === 'function' &&
                _typeof2(Symbol.iterator) === 'symbol'
              ) {
                _typeof = function _typeof(obj) {
                  return typeof obj === 'undefined'
                    ? 'undefined'
                    : _typeof2(obj);
                };
              } else {
                _typeof = function _typeof(obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj === 'undefined'
                    ? 'undefined'
                    : _typeof2(obj);
                };
              }
              return _typeof(obj);
            }

            /* eslint-env browser */

            /**
             * This is the web browser implementation of `debug()`.
             */
            exports.log = log;
            exports.formatArgs = formatArgs;
            exports.save = save;
            exports.load = load;
            exports.useColors = useColors;
            exports.storage = localstorage();
            /**
             * Colors.
             */

            exports.colors = [
              '#0000CC',
              '#0000FF',
              '#0033CC',
              '#0033FF',
              '#0066CC',
              '#0066FF',
              '#0099CC',
              '#0099FF',
              '#00CC00',
              '#00CC33',
              '#00CC66',
              '#00CC99',
              '#00CCCC',
              '#00CCFF',
              '#3300CC',
              '#3300FF',
              '#3333CC',
              '#3333FF',
              '#3366CC',
              '#3366FF',
              '#3399CC',
              '#3399FF',
              '#33CC00',
              '#33CC33',
              '#33CC66',
              '#33CC99',
              '#33CCCC',
              '#33CCFF',
              '#6600CC',
              '#6600FF',
              '#6633CC',
              '#6633FF',
              '#66CC00',
              '#66CC33',
              '#9900CC',
              '#9900FF',
              '#9933CC',
              '#9933FF',
              '#99CC00',
              '#99CC33',
              '#CC0000',
              '#CC0033',
              '#CC0066',
              '#CC0099',
              '#CC00CC',
              '#CC00FF',
              '#CC3300',
              '#CC3333',
              '#CC3366',
              '#CC3399',
              '#CC33CC',
              '#CC33FF',
              '#CC6600',
              '#CC6633',
              '#CC9900',
              '#CC9933',
              '#CCCC00',
              '#CCCC33',
              '#FF0000',
              '#FF0033',
              '#FF0066',
              '#FF0099',
              '#FF00CC',
              '#FF00FF',
              '#FF3300',
              '#FF3333',
              '#FF3366',
              '#FF3399',
              '#FF33CC',
              '#FF33FF',
              '#FF6600',
              '#FF6633',
              '#FF9900',
              '#FF9933',
              '#FFCC00',
              '#FFCC33',
            ];
            /**
             * Currently only WebKit-based Web Inspectors, Firefox >= v31,
             * and the Firebug extension (any Firefox version) are known
             * to support "%c" CSS customizations.
             *
             * TODO: add a `localStorage` variable to explicitly enable/disable colors
             */

            function useColors() {
              // NB: In an Electron preload script, document will be defined but not fully
              // initialized. Since we know we're in Chrome, we'll just detect this case
              // explicitly
              if (
                typeof window !== 'undefined' &&
                window.process &&
                (window.process.type === 'renderer' || window.process.__nwjs)
              ) {
                return true;
              } // Internet Explorer and Edge do not support colors.

              if (
                typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
              ) {
                return false;
              } // Is webkit? http://stackoverflow.com/a/16459606/376773
              // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632

              return (
                (typeof document !== 'undefined' &&
                  document.documentElement &&
                  document.documentElement.style &&
                  document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773
                (typeof window !== 'undefined' &&
                  window.console &&
                  (window.console.firebug ||
                    (window.console.exception && window.console.table))) || // Is firefox >= v31?
                // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                  parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
              );
            }
            /**
             * Colorize log arguments if enabled.
             *
             * @api public
             */

            function formatArgs(args) {
              args[0] =
                (this.useColors ? '%c' : '') +
                this.namespace +
                (this.useColors ? ' %c' : ' ') +
                args[0] +
                (this.useColors ? '%c ' : ' ') +
                '+' +
                module.exports.humanize(this.diff);

              if (!this.useColors) {
                return;
              }

              var c = 'color: ' + this.color;
              args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
              // arguments passed either before or after the %c, so we need to
              // figure out the correct index to insert the CSS into

              var index = 0;
              var lastC = 0;
              args[0].replace(/%[a-zA-Z%]/g, function (match) {
                if (match === '%%') {
                  return;
                }

                index++;

                if (match === '%c') {
                  // We only are interested in the *last* %c
                  // (the user may have provided their own)
                  lastC = index;
                }
              });
              args.splice(lastC, 0, c);
            }
            /**
             * Invokes `console.log()` when available.
             * No-op when `console.log` is not a "function".
             *
             * @api public
             */

            function log() {
              var _console;

              // This hackery is required for IE8/9, where
              // the `console.log` function doesn't have 'apply'
              return (
                (typeof console === 'undefined'
                  ? 'undefined'
                  : _typeof(console)) === 'object' &&
                console.log &&
                (_console = console).log.apply(_console, arguments)
              );
            }
            /**
             * Save `namespaces`.
             *
             * @param {String} namespaces
             * @api private
             */

            function save(namespaces) {
              try {
                if (namespaces) {
                  exports.storage.setItem('debug', namespaces);
                } else {
                  exports.storage.removeItem('debug');
                }
              } catch (error) {
                // Swallow
                // XXX (@Qix-) should we be logging these?
              }
            }
            /**
             * Load `namespaces`.
             *
             * @return {String} returns the previously persisted debug modes
             * @api private
             */

            function load() {
              var r;

              try {
                r = exports.storage.getItem('debug');
              } catch (error) {} // Swallow
              // XXX (@Qix-) should we be logging these?
              // If debug isn't set in LS, and we're in Electron, try to load $DEBUG

              if (!r && typeof process !== 'undefined' && 'env' in process) {
                r = process.env.DEBUG;
              }

              return r;
            }
            /**
             * Localstorage attempts to return the localstorage.
             *
             * This is necessary because safari throws
             * when a user disables cookies/localstorage
             * and you attempt to access it.
             *
             * @return {LocalStorage}
             * @api private
             */

            function localstorage() {
              try {
                // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
                // The Browser also has localStorage in the global context.
                return localStorage;
              } catch (error) {
                // Swallow
                // XXX (@Qix-) should we be logging these?
              }
            }

            module.exports = __webpack_require__(113)(exports);
            var formatters = module.exports.formatters;
            /**
             * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
             */

            formatters.j = function (v) {
              try {
                return JSON.stringify(v);
              } catch (error) {
                return '[UnexpectedJSONParseError]: ' + error.message;
              }
            };
            /* WEBPACK VAR INJECTION */
          }).call(exports, __webpack_require__(3));

          /***/
        },
        /* 113 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          /**
           * This is the common logic for both the Node.js and web browser
           * implementations of `debug()`.
           */

          function setup(env) {
            createDebug.debug = createDebug;
            createDebug.default = createDebug;
            createDebug.coerce = coerce;
            createDebug.disable = disable;
            createDebug.enable = enable;
            createDebug.enabled = enabled;
            createDebug.humanize = __webpack_require__(114);
            Object.keys(env).forEach(function (key) {
              createDebug[key] = env[key];
            });
            /**
             * Active `debug` instances.
             */

            createDebug.instances = [];
            /**
             * The currently active debug mode names, and names to skip.
             */

            createDebug.names = [];
            createDebug.skips = [];
            /**
             * Map of special "%n" handling functions, for the debug "format" argument.
             *
             * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
             */

            createDebug.formatters = {};
            /**
             * Selects a color for a debug namespace
             * @param {String} namespace The namespace string for the for the debug instance to be colored
             * @return {Number|String} An ANSI color code for the given namespace
             * @api private
             */

            function selectColor(namespace) {
              var hash = 0;

              for (var i = 0; i < namespace.length; i++) {
                hash = (hash << 5) - hash + namespace.charCodeAt(i);
                hash |= 0; // Convert to 32bit integer
              }

              return createDebug.colors[
                Math.abs(hash) % createDebug.colors.length
              ];
            }

            createDebug.selectColor = selectColor;
            /**
             * Create a debugger with the given `namespace`.
             *
             * @param {String} namespace
             * @return {Function}
             * @api public
             */

            function createDebug(namespace) {
              var prevTime;

              function debug() {
                // Disabled?
                if (!debug.enabled) {
                  return;
                }

                for (
                  var _len = arguments.length, args = new Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  args[_key] = arguments[_key];
                }

                var self = debug; // Set `diff` timestamp

                var curr = Number(new Date());
                var ms = curr - (prevTime || curr);
                self.diff = ms;
                self.prev = prevTime;
                self.curr = curr;
                prevTime = curr;
                args[0] = createDebug.coerce(args[0]);

                if (typeof args[0] !== 'string') {
                  // Anything else let's inspect with %O
                  args.unshift('%O');
                } // Apply any `formatters` transformations

                var index = 0;
                args[0] = args[0].replace(
                  /%([a-zA-Z%])/g,
                  function (match, format) {
                    // If we encounter an escaped % then don't increase the array index
                    if (match === '%%') {
                      return match;
                    }

                    index++;
                    var formatter = createDebug.formatters[format];

                    if (typeof formatter === 'function') {
                      var val = args[index];
                      match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

                      args.splice(index, 1);
                      index--;
                    }

                    return match;
                  }
                ); // Apply env-specific formatting (colors, etc.)

                createDebug.formatArgs.call(self, args);
                var logFn = self.log || createDebug.log;
                logFn.apply(self, args);
              }

              debug.namespace = namespace;
              debug.enabled = createDebug.enabled(namespace);
              debug.useColors = createDebug.useColors();
              debug.color = selectColor(namespace);
              debug.destroy = destroy;
              debug.extend = extend; // Debug.formatArgs = formatArgs;
              // debug.rawLog = rawLog;
              // env-specific initialization logic for debug instances

              if (typeof createDebug.init === 'function') {
                createDebug.init(debug);
              }

              createDebug.instances.push(debug);
              return debug;
            }

            function destroy() {
              var index = createDebug.instances.indexOf(this);

              if (index !== -1) {
                createDebug.instances.splice(index, 1);
                return true;
              }

              return false;
            }

            function extend(namespace, delimiter) {
              return createDebug(
                this.namespace +
                  (typeof delimiter === 'undefined' ? ':' : delimiter) +
                  namespace
              );
            }
            /**
             * Enables a debug mode by namespaces. This can include modes
             * separated by a colon and wildcards.
             *
             * @param {String} namespaces
             * @api public
             */

            function enable(namespaces) {
              createDebug.save(namespaces);
              createDebug.names = [];
              createDebug.skips = [];
              var i;
              var split = (
                typeof namespaces === 'string' ? namespaces : ''
              ).split(/[\s,]+/);
              var len = split.length;

              for (i = 0; i < len; i++) {
                if (!split[i]) {
                  // ignore empty strings
                  continue;
                }

                namespaces = split[i].replace(/\*/g, '.*?');

                if (namespaces[0] === '-') {
                  createDebug.skips.push(
                    new RegExp('^' + namespaces.substr(1) + '$')
                  );
                } else {
                  createDebug.names.push(new RegExp('^' + namespaces + '$'));
                }
              }

              for (i = 0; i < createDebug.instances.length; i++) {
                var instance = createDebug.instances[i];
                instance.enabled = createDebug.enabled(instance.namespace);
              }
            }
            /**
             * Disable debug output.
             *
             * @api public
             */

            function disable() {
              createDebug.enable('');
            }
            /**
             * Returns true if the given mode name is enabled, false otherwise.
             *
             * @param {String} name
             * @return {Boolean}
             * @api public
             */

            function enabled(name) {
              if (name[name.length - 1] === '*') {
                return true;
              }

              var i;
              var len;

              for (i = 0, len = createDebug.skips.length; i < len; i++) {
                if (createDebug.skips[i].test(name)) {
                  return false;
                }
              }

              for (i = 0, len = createDebug.names.length; i < len; i++) {
                if (createDebug.names[i].test(name)) {
                  return true;
                }
              }

              return false;
            }
            /**
             * Coerce `val`.
             *
             * @param {Mixed} val
             * @return {Mixed}
             * @api private
             */

            function coerce(val) {
              if (val instanceof Error) {
                return val.stack || val.message;
              }

              return val;
            }

            createDebug.enable(createDebug.load());
            return createDebug;
          }

          module.exports = setup;

          /***/
        },
        /* 114 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function (obj) {
                  return typeof obj;
                }
              : function (obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          /**
           * Helpers.
           */

          var s = 1000;
          var m = s * 60;
          var h = m * 60;
          var d = h * 24;
          var w = d * 7;
          var y = d * 365.25;

          /**
           * Parse or format the given `val`.
           *
           * Options:
           *
           *  - `long` verbose formatting [false]
           *
           * @param {String|Number} val
           * @param {Object} [options]
           * @throws {Error} throw an error if val is not a non-empty string or a number
           * @return {String|Number}
           * @api public
           */

          module.exports = function (val, options) {
            options = options || {};
            var type = typeof val === 'undefined' ? 'undefined' : _typeof(val);
            if (type === 'string' && val.length > 0) {
              return parse(val);
            } else if (type === 'number' && isNaN(val) === false) {
              return options.long ? fmtLong(val) : fmtShort(val);
            }
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(val)
            );
          };

          /**
           * Parse the given `str` and return milliseconds.
           *
           * @param {String} str
           * @return {Number}
           * @api private
           */

          function parse(str) {
            str = String(str);
            if (str.length > 100) {
              return;
            }
            var match =
              /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
                str
              );
            if (!match) {
              return;
            }
            var n = parseFloat(match[1]);
            var type = (match[2] || 'ms').toLowerCase();
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y;
              case 'weeks':
              case 'week':
              case 'w':
                return n * w;
              case 'days':
              case 'day':
              case 'd':
                return n * d;
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h;
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m;
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s;
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n;
              default:
                return undefined;
            }
          }

          /**
           * Short format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */

          function fmtShort(ms) {
            var msAbs = Math.abs(ms);
            if (msAbs >= d) {
              return Math.round(ms / d) + 'd';
            }
            if (msAbs >= h) {
              return Math.round(ms / h) + 'h';
            }
            if (msAbs >= m) {
              return Math.round(ms / m) + 'm';
            }
            if (msAbs >= s) {
              return Math.round(ms / s) + 's';
            }
            return ms + 'ms';
          }

          /**
           * Long format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */

          function fmtLong(ms) {
            var msAbs = Math.abs(ms);
            if (msAbs >= d) {
              return plural(ms, msAbs, d, 'day');
            }
            if (msAbs >= h) {
              return plural(ms, msAbs, h, 'hour');
            }
            if (msAbs >= m) {
              return plural(ms, msAbs, m, 'minute');
            }
            if (msAbs >= s) {
              return plural(ms, msAbs, s, 'second');
            }
            return ms + ' ms';
          }

          /**
           * Pluralization helper.
           */

          function plural(ms, msAbs, n, name) {
            var isPlural = msAbs >= n * 1.5;
            return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
          }

          /***/
        },
        /* 115 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }

          var config = __webpack_require__(6);
          var StateEventDispatcher = __webpack_require__(23);
          var xaudio = __webpack_require__(116);

          var Processor = (function (_StateEventDispatcher) {
            _inherits(Processor, _StateEventDispatcher);

            function Processor(sampleRate, speexInstance) {
              _classCallCheck(this, Processor);

              var _this = _possibleConstructorReturn(
                this,
                (Processor.__proto__ || Object.getPrototypeOf(Processor)).call(
                  this,
                  'ready'
                )
              );

              _this.speexInstance = speexInstance;

              _this.framePtr = 0;
              _this.sampleRate = sampleRate || 16000;
              _this.framesize =
                _this.sampleRate < 16000
                  ? _this.speexInstance.frameSizeNB
                  : _this.speexInstance.frameSizeWB;

              // Allocate the memory buffers for the incoming frames and the output bytes
              _this.frameHeapPtr =
                _this.sampleRate < 16000
                  ? _this.speexInstance.frameBufferNB
                  : _this.speexInstance.frameBufferWB;
              _this.outBytesHeapPtr = _this.speexInstance.outBytesBuffer;
              return _this;
            }

            _createClass(Processor, [
              {
                key: 'process',
                value: function process(buffer) {
                  try {
                    var isNarrowband = this.sampleRate < 16000;
                    var resampleControl = new xaudio.Resampler(
                      this.sampleRate,
                      isNarrowband ? 8000 : 16000,
                      1,
                      buffer.length,
                      true
                    );

                    var resampleLength = resampleControl.resampler(buffer);
                    var result = resampleControl.outputBuffer;

                    for (var i = 0; i < resampleLength; i++) {
                      // wait until we have FRAMESIZE samples and the process (encode) the data
                      if (this.framePtr == this.framesize) {
                        //reset framePtr
                        this.framePtr = 0;

                        // Encode FRAMESIZE samples into a single Speex frame and then send it in a Websocket message.
                        var nbytes = this.speexInstance.encodeFrame(
                          this.frameHeapPtr.byteOffset,
                          this.outBytesHeapPtr.byteOffset,
                          isNarrowband
                        );
                        var sliceStart = this.outBytesHeapPtr.byteOffset;
                        var sliceEnd =
                          this.outBytesHeapPtr.byteOffset + nbytes + 2;
                        var newBuffer = this.outBytesHeapPtr.buffer.slice(
                          sliceStart,
                          sliceEnd
                        );
                        var frame = new Uint8Array(newBuffer);

                        this.fire('frame', frame);
                      }

                      var isFloat32 = buffer.BYTES_PER_ELEMENT === 4;
                      this.frameHeapPtr[this.framePtr++] = isFloat32
                        ? result[i] * 0x8000
                        : result[i]; // convert Float32 to Int16
                    }
                  } catch (err) {
                    this.fire('error', err);
                  }
                },
              },
            ]);

            return Processor;
          })(StateEventDispatcher);

          module.exports = Processor;

          /***/
        },
        /* 116 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          //JavaScript Audio Resampler (c) 2011 - Grant Galitz
          function Resampler(
            fromSampleRate,
            toSampleRate,
            channels,
            outputBufferSize,
            noReturn
          ) {
            this.fromSampleRate = fromSampleRate;
            this.toSampleRate = toSampleRate;
            this.channels = channels | 0;
            this.outputBufferSize = outputBufferSize;
            this.noReturn = !!noReturn;
            this.initialize();
          }
          Resampler.prototype.initialize = function () {
            //Perform some checks:
            if (
              this.fromSampleRate > 0 &&
              this.toSampleRate > 0 &&
              this.channels > 0
            ) {
              if (this.fromSampleRate == this.toSampleRate) {
                //Setup a resampler bypass:
                this.resampler = this.bypassResampler; //Resampler just returns what was passed through.
                this.ratioWeight = 1;
              } else {
                //Setup the interpolation resampler:
                this.compileInterpolationFunction();
                this.resampler = this.interpolate; //Resampler is a custom quality interpolation algorithm.
                this.ratioWeight = this.fromSampleRate / this.toSampleRate;
                this.tailExists = false;
                this.lastWeight = 0;
                this.initializeBuffers();
              }
            } else {
              throw new Error('Invalid settings specified for the resampler.');
            }
          };
          Resampler.prototype.compileInterpolationFunction = function () {
            var toCompile =
              'var bufferLength = Math.min(buffer.length, this.outputBufferSize);\
	if ((bufferLength % ' +
              this.channels +
              ') == 0) {\
		if (bufferLength > 0) {\
			var ratioWeight = this.ratioWeight;\
			var weight = 0;';
            for (var channel = 0; channel < this.channels; ++channel) {
              toCompile += 'var output' + channel + ' = 0;';
            }
            toCompile +=
              'var actualPosition = 0;\
			var amountToNext = 0;\
			var alreadyProcessedTail = !this.tailExists;\
			this.tailExists = false;\
			var outputBuffer = this.outputBuffer;\
			var outputOffset = 0;\
			var currentPosition = 0;\
			do {\
				if (alreadyProcessedTail) {\
					weight = ratioWeight;';
            for (channel = 0; channel < this.channels; ++channel) {
              toCompile += 'output' + channel + ' = 0;';
            }
            toCompile +=
              '}\
				else {\
					weight = this.lastWeight;';
            for (channel = 0; channel < this.channels; ++channel) {
              toCompile +=
                'output' + channel + ' = this.lastOutput[' + channel + '];';
            }
            toCompile +=
              'alreadyProcessedTail = true;\
				}\
				while (weight > 0 && actualPosition < bufferLength) {\
					amountToNext = 1 + actualPosition - currentPosition;\
					if (weight >= amountToNext) {';
            for (channel = 0; channel < this.channels; ++channel) {
              toCompile +=
                'output' +
                channel +
                ' += buffer[actualPosition++] * amountToNext;';
            }
            toCompile +=
              'currentPosition = actualPosition;\
						weight -= amountToNext;\
					}\
					else {';
            for (channel = 0; channel < this.channels; ++channel) {
              toCompile +=
                'output' +
                channel +
                ' += buffer[actualPosition' +
                (channel > 0 ? ' + ' + channel : '') +
                '] * weight;';
            }
            toCompile +=
              'currentPosition += weight;\
						weight = 0;\
						break;\
					}\
				}\
				if (weight == 0) {';
            for (channel = 0; channel < this.channels; ++channel) {
              toCompile +=
                'outputBuffer[outputOffset++] = output' +
                channel +
                ' / ratioWeight;';
            }
            toCompile +=
              '}\
				else {\
					this.lastWeight = weight;';
            for (channel = 0; channel < this.channels; ++channel) {
              toCompile +=
                'this.lastOutput[' + channel + '] = output' + channel + ';';
            }
            toCompile +=
              'this.tailExists = true;\
					break;\
				}\
			} while (actualPosition < bufferLength);\
			return this.bufferSlice(outputOffset);\
		}\
		else {\
			return (this.noReturn) ? 0 : [];\
		}\
	}\
	else {\
		throw(new Error("Buffer was of incorrect sample length."));\
	}';
            this.interpolate = Function('buffer', toCompile);
          };
          Resampler.prototype.bypassResampler = function (buffer) {
            if (this.noReturn) {
              //Set the buffer passed as our own, as we don't need to resample it:
              this.outputBuffer = buffer;
              return buffer.length;
            } else {
              //Just return the buffer passsed:
              return buffer;
            }
          };
          Resampler.prototype.bufferSlice = function (sliceAmount) {
            if (this.noReturn) {
              //If we're going to access the properties directly from this object:
              return sliceAmount;
            } else {
              //Typed array and normal array buffer section referencing:
              try {
                return this.outputBuffer.subarray(0, sliceAmount);
              } catch (error) {
                try {
                  //Regular array pass:
                  this.outputBuffer.length = sliceAmount;
                  return this.outputBuffer;
                } catch (error) {
                  //Nightly Firefox 4 used to have the subarray function named as slice:
                  return this.outputBuffer.slice(0, sliceAmount);
                }
              }
            }
          };
          Resampler.prototype.initializeBuffers = function (generateTailCache) {
            //Initialize the internal buffer:
            try {
              this.outputBuffer = new Float32Array(this.outputBufferSize);
              this.lastOutput = new Float32Array(this.channels);
            } catch (error) {
              this.outputBuffer = [];
              this.lastOutput = [];
            }
          }; /*Initialize here first:
   Example:
   	Stereo audio with a sample rate of 70 khz, a minimum buffer of 15000 samples total, a maximum buffer of 25000 samples total and a neutral amplitude value of -1.
   		var parentObj = this;
   		this.audioHandle = new XAudioServer(2, 70000, 15000, 25000, function (sampleCount) {
   			return parentObj.audioUnderRun(sampleCount);
   		}, -1);
   
   The callback is passed the number of samples requested, while it can return any number of samples it wants back.
   */
          function XAudioServer(
            channels,
            sampleRate,
            minBufferSize,
            maxBufferSize,
            underRunCallback,
            defaultValue
          ) {
            this.audioChannels = channels == 2 ? 2 : 1;
            webAudioMono = this.audioChannels == 1;
            XAudioJSSampleRate =
              sampleRate > 0 && sampleRate <= 0xffffff ? sampleRate : 44100;
            webAudioMinBufferSize =
              minBufferSize >= samplesPerCallback << 1 &&
              minBufferSize < maxBufferSize
                ? minBufferSize & (webAudioMono ? 0xffffffff : 0xfffffffe)
                : samplesPerCallback << 1;
            webAudioMaxBufferSize =
              Math.floor(maxBufferSize) >
              webAudioMinBufferSize + this.audioChannels
                ? maxBufferSize & (webAudioMono ? 0xffffffff : 0xfffffffe)
                : minBufferSize << 1;
            this.underRunCallback =
              typeof underRunCallback == 'function'
                ? underRunCallback
                : function () {};
            defaultNeutralValue =
              defaultValue >= -1 && defaultValue <= 1 && defaultValue != 0
                ? defaultValue
                : 0;
            this.audioType = -1;
            this.mozAudioTail = [];
            this.audioHandleMoz = null;
            this.audioHandleFlash = null;
            this.flashInitialized = false;
            this.mozAudioFound = false;
            this.initializeAudio();
          }
          XAudioServer.prototype.MOZWriteAudio = function (buffer) {
            //mozAudio:
            this.MOZWriteAudioNoCallback(buffer);
            this.MOZExecuteCallback();
          };
          XAudioServer.prototype.MOZWriteAudioNoCallback = function (buffer) {
            //mozAudio:
            this.writeMozAudio(buffer);
          };
          XAudioServer.prototype.callbackBasedWriteAudio = function (buffer) {
            //Callback-centered audio APIs:
            this.callbackBasedWriteAudioNoCallback(buffer);
            this.callbackBasedExecuteCallback();
          };
          XAudioServer.prototype.callbackBasedWriteAudioNoCallback = function (
            buffer
          ) {
            //Callback-centered audio APIs:
            if (!buffer) {
              return;
            }

            var length = buffer.length;
            for (
              var bufferCounter = 0;
              bufferCounter < length && audioBufferSize < webAudioMaxBufferSize;

            ) {
              audioContextSampleBuffer[audioBufferSize++] =
                buffer[bufferCounter++];
            }
          };
          /*Pass your samples into here!
Pack your samples as a one-dimenional array
With the channel samplea packed uniformly.
examples:
    mono - [left, left, left, left]
    stereo - [left, right, left, right, left, right, left, right]
*/
          XAudioServer.prototype.writeAudio = function (buffer) {
            if (this.audioType == 0) {
              this.MOZWriteAudio(buffer);
            } else if (this.audioType == 1) {
              this.callbackBasedWriteAudio(buffer);
            } else if (this.audioType == 2) {
              if (this.checkFlashInit() || launchedContext) {
                this.callbackBasedWriteAudio(buffer);
              } else if (this.mozAudioFound) {
                this.MOZWriteAudio(buffer);
              }
            }
          };
          /*Pass your samples into here if you don't want automatic callback calling:
Pack your samples as a one-dimenional array
With the channel samplea packed uniformly.
examples:
    mono - [left, left, left, left]
    stereo - [left, right, left, right, left, right, left, right]
Useful in preventing infinite recursion issues with calling writeAudio inside your callback.
*/
          XAudioServer.prototype.writeAudioNoCallback = function (buffer) {
            if (this.audioType == 0) {
              this.MOZWriteAudioNoCallback(buffer);
            } else if (this.audioType == 1) {
              this.callbackBasedWriteAudioNoCallback(buffer);
            } else if (this.audioType == 2) {
              if (this.checkFlashInit() || launchedContext) {
                this.callbackBasedWriteAudioNoCallback(buffer);
              } else if (this.mozAudioFound) {
                this.MOZWriteAudioNoCallback(buffer);
              }
            }
          };
          //Developer can use this to see how many samples to write (example: minimum buffer allotment minus remaining samples left returned from this function to make sure maximum buffering is done...)
          //If -1 is returned, then that means metric could not be done.
          XAudioServer.prototype.remainingBuffer = function () {
            if (this.audioType == 0) {
              //mozAudio:
              return (
                this.samplesAlreadyWritten -
                this.audioHandleMoz.mozCurrentSampleOffset()
              );
            } else if (this.audioType == 1) {
              //WebKit Audio:
              return (
                (((resampledSamplesLeft() * resampleControl.ratioWeight) >>
                  (this.audioChannels - 1)) <<
                  (this.audioChannels - 1)) +
                audioBufferSize
              );
            } else if (this.audioType == 2) {
              if (this.checkFlashInit() || launchedContext) {
                //Webkit Audio / Flash Plugin Audio:
                return (
                  (((resampledSamplesLeft() * resampleControl.ratioWeight) >>
                    (this.audioChannels - 1)) <<
                    (this.audioChannels - 1)) +
                  audioBufferSize
                );
              } else if (this.mozAudioFound) {
                //mozAudio:
                return (
                  this.samplesAlreadyWritten -
                  this.audioHandleMoz.mozCurrentSampleOffset()
                );
              }
            }
            //Default return:
            return 0;
          };
          XAudioServer.prototype.MOZExecuteCallback = function () {
            //mozAudio:
            var samplesRequested =
              webAudioMinBufferSize - this.remainingBuffer();
            if (samplesRequested > 0) {
              this.writeMozAudio(this.underRunCallback(samplesRequested));
            }
          };
          XAudioServer.prototype.callbackBasedExecuteCallback = function () {
            //WebKit /Flash Audio:
            var samplesRequested =
              webAudioMinBufferSize - this.remainingBuffer();
            if (samplesRequested > 0) {
              this.callbackBasedWriteAudioNoCallback(
                this.underRunCallback(samplesRequested)
              );
            }
          };
          //If you just want your callback called for any possible refill (Execution of callback is still conditional):
          XAudioServer.prototype.executeCallback = function () {
            if (this.audioType == 0) {
              this.MOZExecuteCallback();
            } else if (this.audioType == 1) {
              this.callbackBasedExecuteCallback();
            } else if (this.audioType == 2) {
              if (this.checkFlashInit() || launchedContext) {
                this.callbackBasedExecuteCallback();
              } else if (this.mozAudioFound) {
                this.MOZExecuteCallback();
              }
            }
          };
          //DO NOT CALL THIS, the lib calls this internally!
          XAudioServer.prototype.initializeAudio = function () {
            try {
              this.preInitializeMozAudio();
              if (navigator.platform == 'Linux i686') {
                //Block out mozaudio usage for Linux Firefox due to moz bugs:
                throw new Error('');
              }
              this.initializeMozAudio();
            } catch (error) {
              try {
                this.initializeWebAudio();
              } catch (error) {
                try {
                  this.initializeFlashAudio();
                } catch (error) {
                  throw new Error(
                    'Browser does not support real time audio output.'
                  );
                }
              }
            }
          };
          XAudioServer.prototype.preInitializeMozAudio = function () {
            //mozAudio - Synchronous Audio API
            this.audioHandleMoz = new Audio();
            this.audioHandleMoz.mozSetup(
              this.audioChannels,
              XAudioJSSampleRate
            );
            this.samplesAlreadyWritten = 0;
            var emptySampleFrame = this.audioChannels == 2 ? [0, 0] : [0];
            var prebufferAmount = 0;
            if (
              navigator.platform != 'MacIntel' &&
              navigator.platform != 'MacPPC'
            ) {
              //Mac OS X doesn't experience this moz-bug!
              while (this.audioHandleMoz.mozCurrentSampleOffset() == 0) {
                //Mozilla Audio Bugginess Workaround (Firefox freaks out if we don't give it a prebuffer under certain OSes):
                prebufferAmount +=
                  this.audioHandleMoz.mozWriteAudio(emptySampleFrame);
              }
              var samplesToDoubleBuffer = prebufferAmount / this.audioChannels;
              //Double the prebuffering for windows:
              for (var index = 0; index < samplesToDoubleBuffer; index++) {
                this.samplesAlreadyWritten +=
                  this.audioHandleMoz.mozWriteAudio(emptySampleFrame);
              }
            }
            this.samplesAlreadyWritten += prebufferAmount;
            webAudioMinBufferSize += this.samplesAlreadyWritten;
            this.mozAudioFound = true;
          };
          XAudioServer.prototype.initializeMozAudio = function () {
            //Fill in our own buffering up to the minimum specified:
            this.writeMozAudio(getFloat32(webAudioMinBufferSize));
            this.audioType = 0;
          };
          XAudioServer.prototype.initializeWebAudio = function () {
            if (launchedContext) {
              resetCallbackAPIAudioBuffer(
                webAudioActualSampleRate,
                samplesPerCallback
              );
              this.audioType = 1;
            } else {
              throw new Error('');
            }
          };
          XAudioServer.prototype.initializeFlashAudio = function () {
            var existingFlashload = document.getElementById('XAudioJS');
            if (existingFlashload == null) {
              var thisObj = this;
              var mainContainerNode = document.createElement('div');
              mainContainerNode.setAttribute(
                'style',
                'position: fixed; bottom: 0px; right: 0px; margin: 0px; padding: 0px; border: none; width: 8px; height: 8px; overflow: hidden; z-index: -1000; '
              );
              var containerNode = document.createElement('div');
              containerNode.setAttribute(
                'style',
                'position: static; border: none; width: 0px; height: 0px; visibility: hidden; margin: 8px; padding: 0px;'
              );
              containerNode.setAttribute('id', 'XAudioJS');
              mainContainerNode.appendChild(containerNode);
              document
                .getElementsByTagName('body')[0]
                .appendChild(mainContainerNode);
              swfobject.embedSWF(
                'XAudioJS.swf',
                'XAudioJS',
                '8',
                '8',
                '9.0.0',
                '',
                {},
                { allowscriptaccess: 'always' },
                {
                  style:
                    'position: static; visibility: hidden; margin: 8px; padding: 0px; border: none',
                },
                function (event) {
                  if (event.success) {
                    thisObj.audioHandleFlash = event.ref;
                  } else {
                    thisObj.audioType = 1;
                  }
                }
              );
            } else {
              this.audioHandleFlash = existingFlashload;
            }
            this.audioType = 2;
          };
          //Moz Audio Buffer Writing Handler:
          XAudioServer.prototype.writeMozAudio = function (buffer) {
            if (!buffer) {
              return;
            }

            var length = this.mozAudioTail.length;
            if (length > 0) {
              var samplesAccepted = this.audioHandleMoz.mozWriteAudio(
                this.mozAudioTail
              );
              this.samplesAlreadyWritten += samplesAccepted;
              this.mozAudioTail.splice(0, samplesAccepted);
            }

            length = Math.min(
              buffer.length,
              webAudioMaxBufferSize -
                this.samplesAlreadyWritten +
                this.audioHandleMoz.mozCurrentSampleOffset()
            );
            var samplesAccepted = this.audioHandleMoz.mozWriteAudio(buffer);
            this.samplesAlreadyWritten += samplesAccepted;
            for (var index = 0; length > samplesAccepted; --length) {
              //Moz Audio wants us saving the tail:
              this.mozAudioTail.push(buffer[index++]);
            }
          };
          //Checks to see if the NPAPI Adobe Flash bridge is ready yet:
          XAudioServer.prototype.checkFlashInit = function () {
            if (
              !this.flashInitialized &&
              this.audioHandleFlash &&
              this.audioHandleFlash.initialize
            ) {
              this.flashInitialized = true;
              this.audioHandleFlash.initialize(
                this.audioChannels,
                defaultNeutralValue
              );
              resetCallbackAPIAudioBuffer(44100, samplesPerCallback);
            }
            return this.flashInitialized;
          };
          /////////END LIB
          function getFloat32(size) {
            try {
              var newBuffer = new Float32Array(size);
            } catch (error) {
              var newBuffer = new Array(size);
            }
            for (
              var audioSampleIndice = 0;
              audioSampleIndice < size;
              ++audioSampleIndice
            ) {
              //Create a gradual neutral position shift here to make sure we don't cause annoying clicking noises
              //when the developer set neutral position is not 0.
              newBuffer[audioSampleIndice] =
                defaultNeutralValue * (audioSampleIndice / size);
            }
            return newBuffer;
          }
          function getFloat32Flat(size) {
            try {
              var newBuffer = new Float32Array(size);
            } catch (error) {
              var newBuffer = new Array(size);
              var audioSampleIndice = 0;
              do {
                newBuffer[audioSampleIndice] = 0;
              } while (++audioSampleIndice < size);
            }
            return newBuffer;
          }
          //Flash NPAPI Event Handler:
          var samplesPerCallback = 2048; //Has to be between 2048 and 4096 (If over, then samples are ignored, if under then silence is added).
          var outputConvert = null;
          function audioOutputFlashEvent() {
            //The callback that flash calls...
            resampleRefill();
            return outputConvert();
          }
          function generateFlashStereoString() {
            //Convert the arrays to one long string for speed.
            var copyBinaryStringLeft = '';
            var copyBinaryStringRight = '';
            for (
              var index = 0;
              index < samplesPerCallback &&
              resampleBufferStart != resampleBufferEnd;
              ++index
            ) {
              //Sanitize the buffer:
              copyBinaryStringLeft += String.fromCharCode(
                ((Math.min(
                  Math.max(resampled[resampleBufferStart++] + 1, 0),
                  2
                ) *
                  0x3fff) |
                  0) +
                  0x3000
              );
              copyBinaryStringRight += String.fromCharCode(
                ((Math.min(
                  Math.max(resampled[resampleBufferStart++] + 1, 0),
                  2
                ) *
                  0x3fff) |
                  0) +
                  0x3000
              );
              if (resampleBufferStart == resampleBufferSize) {
                resampleBufferStart = 0;
              }
            }
            return copyBinaryStringLeft + copyBinaryStringRight;
          }
          function generateFlashMonoString() {
            //Convert the array to one long string for speed.
            var copyBinaryString = '';
            for (
              var index = 0;
              index < samplesPerCallback &&
              resampleBufferStart != resampleBufferEnd;
              ++index
            ) {
              //Sanitize the buffer:
              copyBinaryString += String.fromCharCode(
                ((Math.min(
                  Math.max(resampled[resampleBufferStart++] + 1, 0),
                  2
                ) *
                  0x3fff) |
                  0) +
                  0x3000
              );
              if (resampleBufferStart == resampleBufferSize) {
                resampleBufferStart = 0;
              }
            }
            return copyBinaryString;
          }
          //Audio API Event Handler:
          var audioContextHandle = null;
          var audioNode = null;
          var audioSource = null;
          var launchedContext = false;
          var audioContextSampleBuffer = [];
          var resampled = [];
          var webAudioMinBufferSize = 15000;
          var webAudioMaxBufferSize = 25000;
          var webAudioActualSampleRate = 44100;
          var XAudioJSSampleRate = 0;
          var webAudioMono = false;
          var defaultNeutralValue = 0;
          var resampleControl = null;
          var audioBufferSize = 0;
          var resampleBufferStart = 0;
          var resampleBufferEnd = 0;
          var resampleBufferSize = 2;
          function audioOutputEvent(event) {
            //Web Audio API callback...
            var index = 0;
            var buffer1 = event.outputBuffer.getChannelData(0);
            var buffer2 = event.outputBuffer.getChannelData(1);
            resampleRefill();
            if (!webAudioMono) {
              //STEREO:
              while (
                index < samplesPerCallback &&
                resampleBufferStart != resampleBufferEnd
              ) {
                buffer1[index] = resampled[resampleBufferStart++];
                buffer2[index++] = resampled[resampleBufferStart++];
                if (resampleBufferStart == resampleBufferSize) {
                  resampleBufferStart = 0;
                }
              }
            } else {
              //MONO:
              while (
                index < samplesPerCallback &&
                resampleBufferStart != resampleBufferEnd
              ) {
                buffer2[index] = buffer1[index] =
                  resampled[resampleBufferStart++];
                ++index;
                if (resampleBufferStart == resampleBufferSize) {
                  resampleBufferStart = 0;
                }
              }
            }
            //Pad with silence if we're underrunning:
            while (index < samplesPerCallback) {
              buffer2[index] = buffer1[index] = defaultNeutralValue;
              ++index;
            }
          }
          function resampleRefill() {
            if (audioBufferSize > 0) {
              //Resample a chunk of audio:
              var resampleLength = resampleControl.resampler(
                getBufferSamples()
              );
              var resampledResult = resampleControl.outputBuffer;
              for (var index2 = 0; index2 < resampleLength; ++index2) {
                resampled[resampleBufferEnd++] = resampledResult[index2];
                if (resampleBufferEnd == resampleBufferSize) {
                  resampleBufferEnd = 0;
                }
                if (resampleBufferStart == resampleBufferEnd) {
                  ++resampleBufferStart;
                  if (resampleBufferStart == resampleBufferSize) {
                    resampleBufferStart = 0;
                  }
                }
              }
              audioBufferSize = 0;
            }
          }
          function resampledSamplesLeft() {
            return (
              (resampleBufferStart <= resampleBufferEnd
                ? 0
                : resampleBufferSize) +
              resampleBufferEnd -
              resampleBufferStart
            );
          }
          function getBufferSamples() {
            //Typed array and normal array buffer section referencing:
            try {
              return audioContextSampleBuffer.subarray(0, audioBufferSize);
            } catch (error) {
              try {
                //Regular array pass:
                audioContextSampleBuffer.length = audioBufferSize;
                return audioContextSampleBuffer;
              } catch (error) {
                //Nightly Firefox 4 used to have the subarray function named as slice:
                return audioContextSampleBuffer.slice(0, audioBufferSize);
              }
            }
          }
          //Initialize WebKit Audio /Flash Audio Buffer:
          function resetCallbackAPIAudioBuffer(APISampleRate, bufferAlloc) {
            audioContextSampleBuffer = getFloat32(webAudioMaxBufferSize);
            audioBufferSize = webAudioMaxBufferSize;
            resampleBufferStart = 0;
            resampleBufferEnd = 0;
            resampleBufferSize =
              Math.max(
                webAudioMaxBufferSize *
                  Math.ceil(XAudioJSSampleRate / APISampleRate),
                samplesPerCallback
              ) << 1;
            if (webAudioMono) {
              //MONO Handling:
              resampled = getFloat32Flat(resampleBufferSize);
              resampleControl = new Resampler(
                XAudioJSSampleRate,
                APISampleRate,
                1,
                resampleBufferSize,
                true
              );
              outputConvert = generateFlashMonoString;
            } else {
              //STEREO Handling:
              resampleBufferSize <<= 1;
              resampled = getFloat32Flat(resampleBufferSize);
              resampleControl = new Resampler(
                XAudioJSSampleRate,
                APISampleRate,
                2,
                resampleBufferSize,
                true
              );
              outputConvert = generateFlashStereoString;
            }
          }
          //Initialize WebKit Audio:
          (function () {
            if (!launchedContext) {
              try {
                audioContextHandle = new AudioContext(); //Create a system audio context.
              } catch (error) {
                try {
                  audioContextHandle = new webkitAudioContext(); //Create a system audio context.
                } catch (error) {
                  return;
                }
              }
              try {
                audioSource = audioContextHandle.createBufferSource(); //We need to create a false input to get the chain started.
                audioSource.loop = false; //Keep this alive forever (Event handler will know when to ouput.)
                XAudioJSSampleRate = webAudioActualSampleRate =
                  audioContextHandle.sampleRate;
                audioSource.buffer = audioContextHandle.createBuffer(
                  1,
                  1,
                  webAudioActualSampleRate
                ); //Create a zero'd input buffer for the input to be valid.
                audioNode = audioContextHandle.createJavaScriptNode(
                  samplesPerCallback,
                  1,
                  2
                ); //Create 2 outputs and ignore the input buffer (Just copy buffer 1 over if mono)
                audioNode.onaudioprocess = audioOutputEvent; //Connect the audio processing event to a handling function so we can manipulate output
                audioSource.connect(audioNode); //Send and chain the input to the audio manipulation.
                audioNode.connect(audioContextHandle.destination); //Send and chain the output of the audio manipulation to the system audio output.
                audioSource.noteOn(0); //Start the loop!
              } catch (error) {
                return;
              }
              launchedContext = true;
            }
          })();

          /*** EXPORTS FROM exports-loader ***/
          exports['Resampler'] = Resampler;

          /***/
        },
        /* 117 */
        /***/ function (module, exports, __webpack_require__) {
          'use strict';

          var _createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }

          var config = __webpack_require__(6);
          var StateEventDispatcher = __webpack_require__(23);
          var utils = __webpack_require__(5);

          var state = {
            READY: 'ready',
            RECORDING: 'recording',
          };

          var error_messages = {
            WEB_AUDIO_API: 'Web Audio API is not supported by your browser.',
            WEB_AUDIO_RECORDING:
              'HTML5 audio recording is not supported by your browser.',
            PERMISSION_DENIED: 'Permission to access microphone denied.',
          };

          var AudioRecorder = (function (_StateEventDispatcher) {
            _inherits(AudioRecorder, _StateEventDispatcher);

            function AudioRecorder(opts) {
              _classCallCheck(this, AudioRecorder);

              var _this = _possibleConstructorReturn(
                this,
                (
                  AudioRecorder.__proto__ ||
                  Object.getPrototypeOf(AudioRecorder)
                ).call(this, state.READY)
              );

              try {
                try {
                  _this.audioCtx = config.audioCtx || new AudioContext();
                } catch (e) {
                  _this.audioCtx = config.audioCtx || new webkitAudioContext();
                }
                config.audioCtx = _this.audioCtx;
              } catch (e) {
                utils.log(e);
                return _possibleConstructorReturn(_this);
              }

              _this.source = null; // media stream source
              _this.stream = null; // media stream
              _this.bufferSize = (opts && opts['bufferSize']) || 4096;
              _this.sampleRate = _this.audioCtx.sampleRate;

              _this.constraints = (opts && opts.constraints) || {
                audio: {
                  channelCount: 1,
                },
                video: false,
              };

              //audio processing
              _this.scriptNode = _this.audioCtx.createScriptProcessor(
                _this.bufferSize,
                1,
                1
              );
              _this.scriptNode.onaudioprocess = function (e) {
                var buffer = e.inputBuffer.getChannelData(0);
                _this.fire('data', buffer.slice());
              };
              return _this;
            }

            _createClass(AudioRecorder, [
              {
                key: 'start',
                value: function start() {
                  var _this2 = this;

                  setTimeout(function () {
                    if (!_this2.isState(state.READY)) return;

                    if (!_this2.audioCtx) {
                      _this2.fire('error', error_messages.WEB_AUDIO_API);
                      utils.log('audio_recorder: web audio api not supported');
                      return;
                    }

                    // Fixed for Chrome on 20190222 by Haochuan:
                    // If an AudioContext is created prior to the document receiving a user gesture,
                    // it will be created in the "suspended" state,
                    // and you will need to call resume() after a user gesture is received.
                    if (_this2.audioCtx.state === 'suspended') {
                      _this2.audioCtx.resume();
                    }

                    var onSuccess = function onSuccess(ms) {
                      utils.log(
                        'audio_recorder: acquired access to html5 audio recording'
                      );

                      //create media source and connect to scriptNode (start processing)
                      _this2.stream = ms;
                      _this2.source = _this2.audioCtx.createMediaStreamSource(
                        _this2.stream
                      );
                      _this2.source.connect(_this2.scriptNode);
                      _this2.scriptNode.connect(_this2.audioCtx.destination);

                      _this2.setStateSilent(state.RECORDING);
                      utils.log('audio_recorder: recording audio');

                      _this2.fire('start');
                    };

                    var onError = function onError(e) {
                      _this2.fire('error', error_messages.PERMISSION_DENIED);
                      utils.log('audio_recorder: error ' + e.name);
                      return;
                    };

                    if (_this2.stream) {
                      onSuccess(_this2.stream);
                      return;
                    }

                    var constraints = _this2.constraints;

                    // initializing stream, getting access to user media
                    if (
                      navigator.mediaDevices &&
                      navigator.mediaDevices.getUserMedia
                    ) {
                      navigator.mediaDevices
                        .getUserMedia(constraints)
                        .then(onSuccess)
                        .catch(onError);
                    } else {
                      navigator.getUserMedia =
                        navigator.getUserMedia ||
                        navigator.webkitGetUserMedia ||
                        navigator.mozGetUserMedia;

                      if (!navigator.getUserMedia) {
                        // Not supported in Safari
                        _this2.fire(
                          'error',
                          error_messages.WEB_AUDIO_RECORDING
                        );
                        utils.log(
                          'audio_recorder: html5 audio recording not supported'
                        );
                        return;
                      }

                      navigator.getUserMedia(constraints, onSuccess, onError);
                    }
                  }, 0);
                },
              },
              {
                key: 'stop',
                value: function stop(keepStream) {
                  if (!this.isState(state.RECORDING)) return;

                  if (!keepStream) {
                    //stop media stream
                    var msTrack = this.stream.getTracks()[0];
                    msTrack.stop();
                    this.stream = null;
                  }

                  if (this.source) {
                    //stop media stream source and disconnect scriptNode (stop processing)
                    this.source.disconnect(this.scriptNode);
                    this.scriptNode.disconnect(this.audioCtx.destination);
                    this.source = null;
                  }

                  this.setStateSilent(state.READY);
                  utils.log('audio_recorder: stopped');

                  this.fire('end');
                },
              },
              {
                key: 'pause',
                value: function pause() {
                  this.stop(true);
                },
              },
              {
                key: 'isRecording',
                value: function isRecording() {
                  return this.isState(state.RECORDING);
                },
              },
            ]);

            return AudioRecorder;
          })(StateEventDispatcher);

          module.exports = AudioRecorder;

          /***/
        },
        /******/
      ]
    );
  }
);
